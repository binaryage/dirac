{"version":3,"file":"configuration.js","sourceRoot":"","sources":["../../src/api/configuration.ts"],"names":[],"mappings":"","sourcesContent":["import * as acorn from \"acorn\";\nimport * as ts from \"typescript\";\n\nimport { Transform } from \"./transforms\";\n\nexport interface KarmaTypescriptConfig {\n    [key: string]: any;\n    bundlerOptions?: BundlerOptions;\n    compilerDelay?: number;\n    compilerOptions?: any;\n    coverageOptions?: CoverageOptions;\n    exclude?: string[] | Extendable;\n    include?: string[] | Extendable;\n    remapOptions?: RemapOptions;\n    reports?: Reports;\n    transformPath?: (filepath: string) => string;\n    tsconfig?: string;\n}\n\nexport interface BundlerOptions {\n    acornOptions?: acorn.Options;\n    addNodeGlobals?: boolean;\n    constants?: { [key: string]: any };\n    entrypoints?: RegExp;\n    exclude?: string[];\n    ignore?: string[];\n    noParse?: string[];\n    resolve?: Resolve;\n    sourceMap?: boolean;\n    transforms?: Transform[];\n    validateSyntax?: boolean;\n}\n\nexport interface Extendable {\n    mode: \"merge\" | \"replace\";\n    values: string[];\n}\n\nexport interface Resolve {\n    alias?: {\n        [key: string]: string;\n    };\n    extensions?: string[];\n    directories?: string[];\n}\n\nexport interface CompilerOptions extends ts.CompilerOptions {\n    [key: string]: any;\n}\n\nexport interface ThresholdOptions {\n    file?: {\n        branches?: number;\n        excludes?: string[];\n        functions?: number;\n        lines?: number;\n        overrides?: {\n            [key: string]: {\n                branches?: number;\n                functions?: number;\n                lines?: number;\n                statements: number;\n            }\n        },\n        statements?: number;\n    };\n    global?: {\n        branches?: number;\n        excludes?: string[];\n        functions?: number;\n        lines?: number;\n        statements?: number;\n    };\n}\n\nexport interface CoverageOptions {\n    instrumentation?: boolean;\n    exclude?: RegExp | RegExp[];\n    threshold?: ThresholdOptions;\n}\n\nexport interface RemapOptions {\n    exclude?: RegExp;\n    readFile?: (filepath: string) => string;\n    sources?: any;\n    warn?: () => void;\n}\n\nexport interface Reports {\n    clover?: string | Destination;\n    cobertura?: string | Destination;\n    html?: string | Destination;\n    \"json-summary\"?: string | Destination;\n    json?: string | Destination;\n    lcovonly?: string | Destination;\n    teamcity?: string | Destination;\n    \"text-lcov\"?: string | Destination;\n    \"text-summary\"?: string | Destination;\n    text?: string | Destination;\n}\n\nexport interface Destination {\n    directory?: string;\n    filename?: string;\n    subdirectory?: string | (() => void);\n}\n"]}