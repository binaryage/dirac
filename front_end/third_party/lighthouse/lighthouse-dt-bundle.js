// lighthouse, browserified. 6.0.0 (7e4fa5587f4290be6e7a103fef6ca13a23e41806)
// @ts-nocheck
require=function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o;}return r;}()({"../audits/accessibility/accesskeys":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[accesskey]` values are unique',

failureTitle:'`[accesskey]` values are not unique',

description:'Access keys let users quickly focus a part of the page. For proper '+
'navigation, each access key must be unique. '+
'[Learn more](https://web.dev/accesskeys/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class Accesskeys extends AxeAudit{



static get meta(){
return{
id:'accesskeys',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=Accesskeys;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/accesskeys.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-allowed-attr":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[aria-*]` attributes match their roles',

failureTitle:'`[aria-*]` attributes do not match their roles',

description:'Each ARIA `role` supports a specific subset of `aria-*` attributes. '+
'Mismatching these invalidates the `aria-*` attributes. [Learn '+
'more](https://web.dev/aria-allowed-attr/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ARIAAllowedAttr extends AxeAudit{



static get meta(){
return{
id:'aria-allowed-attr',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ARIAAllowedAttr;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-allowed-attr.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-hidden-body":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[aria-hidden="true"]` is not present on the document `<body>`',

failureTitle:'`[aria-hidden="true"]` is present on the document `<body>`',

description:'Assistive technologies, like screen readers, work inconsistently when `aria-hidden="true"` is set on the document `<body>`. [Learn more](https://web.dev/aria-hidden-body/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AriaHiddenBody extends AxeAudit{



static get meta(){
return{
id:'aria-hidden-body',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=AriaHiddenBody;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-hidden-body.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-hidden-focus":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[aria-hidden="true"]` elements do not contain focusable descendents',

failureTitle:'`[aria-hidden="true"]` elements contain focusable descendents',

description:'Focusable descendents within an `[aria-hidden="true"]` element prevent those interactive elements from being available to users of assistive technologies like screen readers. [Learn more](https://web.dev/aria-hidden-focus/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AriaHiddenFocus extends AxeAudit{



static get meta(){
return{
id:'aria-hidden-focus',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=AriaHiddenFocus;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-hidden-focus.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-input-field-name":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'ARIA input fields have accessible names',

failureTitle:'ARIA input fields do not have accessible names',

description:'When an input field doesn\'t have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. [Learn more](https://web.dev/aria-input-field-name/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AriaInputFieldName extends AxeAudit{



static get meta(){
return{
id:'aria-input-field-name',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=AriaInputFieldName;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-input-field-name.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-required-attr":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[role]`s have all required `[aria-*]` attributes',

failureTitle:'`[role]`s do not have all required `[aria-*]` attributes',

description:'Some ARIA roles have required attributes that describe the state '+
'of the element to screen readers. [Learn more](https://web.dev/aria-required-attr/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ARIARequiredAttr extends AxeAudit{



static get meta(){
return{
id:'aria-required-attr',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ARIARequiredAttr;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-required-attr.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-required-children":[function(require,module,exports){
(function(__filename){





'use strict';







const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Elements with an ARIA `[role]` that require children to contain a specific '+
'`[role]` have all required children.',

failureTitle:'Elements with an ARIA `[role]` that require children to contain a specific '+
'`[role]` are missing some or all of those required children.',

description:'Some ARIA parent roles must contain specific child roles to perform '+
'their intended accessibility functions. '+
'[Learn more](https://web.dev/aria-required-children/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AriaRequiredChildren extends AxeAudit{



static get meta(){
return{
id:'aria-required-children',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=AriaRequiredChildren;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-required-children.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-required-parent":[function(require,module,exports){
(function(__filename){





'use strict';







const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[role]`s are contained by their required parent element',

failureTitle:'`[role]`s are not contained by their required parent element',

description:'Some ARIA child roles must be contained by specific parent roles to '+
'properly perform their intended accessibility functions. '+
'[Learn more](https://web.dev/aria-required-parent/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AriaRequiredParent extends AxeAudit{



static get meta(){
return{
id:'aria-required-parent',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=AriaRequiredParent;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-required-parent.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-roles":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[role]` values are valid',

failureTitle:'`[role]` values are not valid',

description:'ARIA roles must have valid values in order to perform their '+
'intended accessibility functions. '+
'[Learn more](https://web.dev/aria-roles/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AriaRoles extends AxeAudit{



static get meta(){
return{
id:'aria-roles',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=AriaRoles;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-roles.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-toggle-field-name":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'ARIA toggle fields have accessible names',

failureTitle:'ARIA toggle fields do not have accessible names',

description:'When a toggle field doesn\'t have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. [Learn more](https://web.dev/aria-toggle-field-name/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AriaToggleFieldName extends AxeAudit{



static get meta(){
return{
id:'aria-toggle-field-name',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=AriaToggleFieldName;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-toggle-field-name.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-valid-attr-value":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[aria-*]` attributes have valid values',

failureTitle:'`[aria-*]` attributes do not have valid values',

description:'Assistive technologies, like screen readers, can\'t interpret ARIA '+
'attributes with invalid values. [Learn '+
'more](https://web.dev/aria-valid-attr-value/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ARIAValidAttr extends AxeAudit{



static get meta(){
return{
id:'aria-valid-attr-value',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ARIAValidAttr;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-valid-attr-value.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/aria-valid-attr":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[aria-*]` attributes are valid and not misspelled',

failureTitle:'`[aria-*]` attributes are not valid or misspelled',

description:'Assistive technologies, like screen readers, can\'t interpret ARIA '+
'attributes with invalid names. [Learn '+
'more](https://web.dev/aria-valid-attr/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ARIAValidAttr extends AxeAudit{



static get meta(){
return{
id:'aria-valid-attr',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ARIAValidAttr;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/aria-valid-attr.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/button-name":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Buttons have an accessible name',

failureTitle:'Buttons do not have an accessible name',

description:'When a button doesn\'t have an accessible name, screen readers announce it '+
'as "button", making it unusable for users who rely on screen readers. '+
'[Learn more](https://web.dev/button-name/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ButtonName extends AxeAudit{



static get meta(){
return{
id:'button-name',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ButtonName;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/button-name.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/bypass":[function(require,module,exports){
(function(__filename){





'use strict';







const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'The page contains a heading, skip link, or landmark region',

failureTitle:'The page does not contain a heading, skip link, or landmark region',

description:'Adding ways to bypass repetitive content lets keyboard users navigate the '+
'page more efficiently. '+
'[Learn more](https://web.dev/bypass/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class Bypass extends AxeAudit{



static get meta(){
return{
id:'bypass',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=Bypass;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/bypass.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/color-contrast":[function(require,module,exports){
(function(__filename){





'use strict';







const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Background and foreground colors have a sufficient contrast ratio',

failureTitle:'Background and foreground colors do not have a '+
'sufficient contrast ratio.',

description:'Low-contrast text is difficult or impossible for many users to read. '+
'[Learn more](https://web.dev/color-contrast/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ColorContrast extends AxeAudit{



static get meta(){
return{
id:'color-contrast',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ColorContrast;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/color-contrast.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/definition-list":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<dl>`\'s contain only properly-ordered `<dt>` and `<dd>` groups, `<script>`, '+
'`<template>` or `<div>` elements.',

failureTitle:'`<dl>`\'s do not contain only properly-ordered `<dt>` and `<dd>` '+
'groups, `<script>`, `<template>` or `<div>` elements.',

description:'When definition lists are not properly marked up, screen readers may produce '+
'confusing or inaccurate output. '+
'[Learn more](https://web.dev/definition-list/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class DefinitionList extends AxeAudit{



static get meta(){
return{
id:'definition-list',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=DefinitionList;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/definition-list.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/dlitem":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Definition list items are wrapped in `<dl>` elements',

failureTitle:'Definition list items are not wrapped in `<dl>` elements',

description:'Definition list items (`<dt>` and `<dd>`) must be wrapped in a '+
'parent `<dl>` element to ensure that screen readers can properly announce them. '+
'[Learn more](https://web.dev/dlitem/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class DLItem extends AxeAudit{



static get meta(){
return{
id:'dlitem',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=DLItem;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/dlitem.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/document-title":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Document has a `<title>` element',

failureTitle:'Document doesn\'t have a `<title>` element',

description:'The title gives screen reader users an overview of the page, and search '+
'engine users rely on it heavily to determine if a page is relevant to their search. '+
'[Learn more](https://web.dev/document-title/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class DocumentTitle extends AxeAudit{



static get meta(){
return{
id:'document-title',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=DocumentTitle;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/document-title.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/duplicate-id-active":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[id]` attributes on active, focusable elements are unique',

failureTitle:'`[id]` attributes on active, focusable elements are not unique',

description:'All focusable elements must have a unique `id` to ensure that they\'re visible to assistive technologies. [Learn more](https://web.dev/duplicate-id-active/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class DuplicateIdActive extends AxeAudit{



static get meta(){
return{
id:'duplicate-id-active',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=DuplicateIdActive;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/duplicate-id-active.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/duplicate-id-aria":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'ARIA IDs are unique',

failureTitle:'ARIA IDs are not unique',

description:'The value of an ARIA ID must be unique to prevent other instances from being overlooked by assistive technologies. [Learn more](https://web.dev/duplicate-id-aria/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class DuplicateIdAria extends AxeAudit{



static get meta(){
return{
id:'duplicate-id-aria',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=DuplicateIdAria;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/duplicate-id-aria.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/form-field-multiple-labels":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'No form fields have multiple labels',

failureTitle:'Form fields have multiple labels',

description:'Form fields with multiple labels can be confusingly announced by assistive technologies like screen readers which use either the first, the last, or all of the labels. [Learn more](https://web.dev/form-field-multiple-labels/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class FormFieldMultipleLabels extends AxeAudit{



static get meta(){
return{
id:'form-field-multiple-labels',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
scoreDisplayMode:AxeAudit.SCORING_MODES.INFORMATIVE,
requiredArtifacts:['Accessibility']};

}}


module.exports=FormFieldMultipleLabels;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/form-field-multiple-labels.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/frame-title":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<frame>` or `<iframe>` elements have a title',

failureTitle:'`<frame>` or `<iframe>` elements do not have a title',

description:'Screen reader users rely on frame titles to describe the contents of frames. '+
'[Learn more](https://web.dev/frame-title/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class FrameTitle extends AxeAudit{



static get meta(){
return{
id:'frame-title',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=FrameTitle;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/frame-title.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/heading-order":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Heading elements appear in a sequentially-descending order',

failureTitle:'Heading elements are not in a sequentially-descending order',

description:'Properly ordered headings that do not skip levels convey the semantic structure of the page, making it easier to navigate and understand when using assistive technologies. [Learn more](https://web.dev/heading-order/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class HeadingOrder extends AxeAudit{



static get meta(){
return{
id:'heading-order',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=HeadingOrder;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/heading-order.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/html-has-lang":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<html>` element has a `[lang]` attribute',

failureTitle:'`<html>` element does not have a `[lang]` attribute',

description:'If a page doesn\'t specify a lang attribute, a screen reader assumes '+
'that the page is in the default language that the user chose when setting up the '+
'screen reader. If the page isn\'t actually in the default language, then the screen '+
'reader might not announce the page\'s text correctly. '+
'[Learn more](https://web.dev/html-has-lang/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class HTMLHasLang extends AxeAudit{



static get meta(){
return{
id:'html-has-lang',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=HTMLHasLang;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/html-has-lang.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/html-lang-valid":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<html>` element has a valid value for its `[lang]` attribute',

failureTitle:'`<html>` element does not have a valid value for '+
'its `[lang]` attribute.',

description:'Specifying a valid [BCP 47 language](https://www.w3.org/International/questions/qa-choosing-language-tags#question) '+
'helps screen readers announce text properly. '+
'[Learn more](https://web.dev/html-lang-valid/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class HTMLLangValid extends AxeAudit{



static get meta(){
return{
id:'html-lang-valid',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=HTMLLangValid;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/html-lang-valid.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/image-alt":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Image elements have `[alt]` attributes',

failureTitle:'Image elements do not have `[alt]` attributes',

description:'Informative elements should aim for short, descriptive alternate text. '+
'Decorative elements can be ignored with an empty alt attribute. '+
'[Learn more](https://web.dev/image-alt/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ImageAlt extends AxeAudit{



static get meta(){
return{
id:'image-alt',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ImageAlt;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/image-alt.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/input-image-alt":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<input type="image">` elements have `[alt]` text',

failureTitle:'`<input type="image">` elements do not have `[alt]` text',

description:'When an image is being used as an `<input>` button, providing alternative '+
'text can help screen reader users understand the purpose of the button. '+
'[Learn more](https://web.dev/input-image-alt/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class InputImageAlt extends AxeAudit{



static get meta(){
return{
id:'input-image-alt',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=InputImageAlt;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/input-image-alt.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/label":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Form elements have associated labels',

failureTitle:'Form elements do not have associated labels',

description:'Labels ensure that form controls are announced properly by assistive '+
'technologies, like screen readers. [Learn '+
'more](https://web.dev/label/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class Label extends AxeAudit{



static get meta(){
return{
id:'label',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=Label;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/label.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/layout-table":[function(require,module,exports){
(function(__filename){





'use strict';







const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Presentational `<table>` elements avoid using `<th>`, `<caption>` or the '+
'`[summary]` attribute.',

failureTitle:'Presentational `<table>` elements do not avoid using `<th>`, '+
'`<caption>` or the `[summary]` attribute.',

description:'A table being used for layout purposes should not include data elements, '+
'such as the th or caption elements or the summary attribute, because this can '+
'create a confusing experience for screen reader users. '+
'[Learn more](https://web.dev/layout-table/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class LayoutTable extends AxeAudit{



static get meta(){
return{
id:'layout-table',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=LayoutTable;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/layout-table.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/link-name":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Links have a discernible name',

failureTitle:'Links do not have a discernible name',

description:'Link text (and alternate text for images, when used as links) that is '+
'discernible, unique, and focusable improves the navigation experience for '+
'screen reader users. '+
'[Learn more](https://web.dev/link-name/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class LinkName extends AxeAudit{



static get meta(){
return{
id:'link-name',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=LinkName;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/link-name.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/listitem":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'List items (`<li>`) are contained within `<ul>` or `<ol>` parent elements',

failureTitle:'List items (`<li>`) are not contained within `<ul>` '+
'or `<ol>` parent elements.',

description:'Screen readers require list items (`<li>`) to be contained within a '+
'parent `<ul>` or `<ol>` to be announced properly. '+
'[Learn more](https://web.dev/listitem/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ListItem extends AxeAudit{



static get meta(){
return{
id:'listitem',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ListItem;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/listitem.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/list":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Lists contain only `<li>` elements and script supporting elements '+
'(`<script>` and `<template>`).',

failureTitle:'Lists do not contain only `<li>` elements and script '+
'supporting elements (`<script>` and `<template>`).',

description:'Screen readers have a specific way of announcing lists. Ensuring proper list '+
'structure aids screen reader output. '+
'[Learn more](https://web.dev/list/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class List extends AxeAudit{



static get meta(){
return{
id:'list',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=List;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/list.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/manual/custom-controls-labels":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class CustomControlsLabels extends ManualAudit{



static get meta(){
return Object.assign({
id:'custom-controls-labels',
description:'Custom interactive controls have associated labels, provided by aria-label or aria-labelledby. [Learn more](https://web.dev/custom-controls-labels/).',
title:'Custom controls have associated labels'},
super.partialMeta);
}}


module.exports=CustomControlsLabels;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/custom-controls-roles":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class CustomControlsRoles extends ManualAudit{



static get meta(){
return Object.assign({
id:'custom-controls-roles',
description:'Custom interactive controls have appropriate ARIA roles. [Learn more](https://web.dev/custom-control-roles/).',
title:'Custom controls have ARIA roles'},
super.partialMeta);
}}


module.exports=CustomControlsRoles;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/focus-traps":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class FocusTraps extends ManualAudit{



static get meta(){
return Object.assign({
id:'focus-traps',
description:'A user can tab into and out of any control or region without accidentally trapping their focus. [Learn more](https://web.dev/focus-traps/).',
title:'User focus is not accidentally trapped in a region'},
super.partialMeta);
}}


module.exports=FocusTraps;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/focusable-controls":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class FocusableControls extends ManualAudit{



static get meta(){
return Object.assign({
id:'focusable-controls',
description:'Custom interactive controls are keyboard focusable and display a focus indicator. [Learn more](https://web.dev/focusable-controls/).',
title:'Interactive controls are keyboard focusable'},
super.partialMeta);
}}


module.exports=FocusableControls;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/interactive-element-affordance":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class InteractiveElementAffordance extends ManualAudit{



static get meta(){
return Object.assign({
id:'interactive-element-affordance',
description:'Interactive elements, such as links and buttons, should indicate their state and be distinguishable from non-interactive elements. [Learn more](https://web.dev/interactive-element-affordance/).',
title:'Interactive elements indicate their purpose and state'},
super.partialMeta);
}}


module.exports=InteractiveElementAffordance;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/logical-tab-order":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class LogicalTabOrder extends ManualAudit{



static get meta(){
return Object.assign({
id:'logical-tab-order',
description:'Tabbing through the page follows the visual layout. Users cannot focus elements that are offscreen. [Learn more](https://web.dev/logical-tab-order/).',
title:'The page has a logical tab order'},
super.partialMeta);
}}


module.exports=LogicalTabOrder;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/managed-focus":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class ManagedFocus extends ManualAudit{



static get meta(){
return Object.assign({
id:'managed-focus',
description:'If new content, such as a dialog, is added to the page, the user\'s focus is directed to it. [Learn more](https://web.dev/managed-focus/).',
title:'The user\'s focus is directed to new content added to the page'},
super.partialMeta);
}}


module.exports=ManagedFocus;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/offscreen-content-hidden":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');






class OffscreenContentHidden extends ManualAudit{



static get meta(){
return Object.assign({
id:'offscreen-content-hidden',
description:'Offscreen content is hidden with display: none or aria-hidden=true. [Learn more](https://web.dev/offscreen-content-hidden/).',
title:'Offscreen content is hidden from assistive technology'},
super.partialMeta);
}}


module.exports=OffscreenContentHidden;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/use-landmarks":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class UseLandmarks extends ManualAudit{



static get meta(){
return Object.assign({
id:'use-landmarks',
description:'Landmark elements (<main>, <nav>, etc.) are used to improve the keyboard navigation of the page for assistive technology. [Learn more](https://web.dev/use-landmarks/).',
title:'HTML5 landmark elements are used to improve navigation'},
super.partialMeta);
}}


module.exports=UseLandmarks;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/manual/visual-order-follows-dom":[function(require,module,exports){






'use strict';

const ManualAudit=require('../../manual/manual-audit.js');





class VisualOrderFollowsDOM extends ManualAudit{



static get meta(){
return Object.assign({
id:'visual-order-follows-dom',
description:'DOM order matches the visual order, improving navigation for assistive technology. [Learn more](https://web.dev/visual-order-follows-dom/).',
title:'Visual order on the page follows DOM order'},
super.partialMeta);
}}


module.exports=VisualOrderFollowsDOM;

},{"../../manual/manual-audit.js":5}],"../audits/accessibility/meta-refresh":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'The document does not use `<meta http-equiv="refresh">`',

failureTitle:'The document uses `<meta http-equiv="refresh">`',

description:'Users do not expect a page to refresh automatically, and doing so will move '+
'focus back to the top of the page. This may create a frustrating or '+
'confusing experience. '+
'[Learn more](https://web.dev/meta-refresh/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class MetaRefresh extends AxeAudit{



static get meta(){
return{
id:'meta-refresh',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=MetaRefresh;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/meta-refresh.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/meta-viewport":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[user-scalable="no"]` is not used in the `<meta name="viewport">` '+
'element and the `[maximum-scale]` attribute is not less than 5.',

failureTitle:'`[user-scalable="no"]` is used in the `<meta name="viewport">` '+
'element or the `[maximum-scale]` attribute is less than 5.',

description:'Disabling zooming is problematic for users with low vision who rely on '+
'screen magnification to properly see the contents of a web page. '+
'[Learn more](https://web.dev/meta-viewport/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class MetaViewport extends AxeAudit{



static get meta(){
return{
id:'meta-viewport',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=MetaViewport;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/meta-viewport.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/object-alt":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<object>` elements have `[alt]` text',

failureTitle:'`<object>` elements do not have `[alt]` text',

description:'Screen readers cannot translate non-text content. Adding alt text to '+
'`<object>` elements helps screen readers convey meaning to users. '+
'[Learn more](https://web.dev/object-alt/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ObjectAlt extends AxeAudit{



static get meta(){
return{
id:'object-alt',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ObjectAlt;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/object-alt.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/tabindex":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'No element has a `[tabindex]` value greater than 0',

failureTitle:'Some elements have a `[tabindex]` value greater than 0',

description:'A value greater than 0 implies an explicit navigation ordering. '+
'Although technically valid, this often creates frustrating experiences '+
'for users who rely on assistive technologies. [Learn more](https://web.dev/tabindex/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class TabIndex extends AxeAudit{



static get meta(){
return{
id:'tabindex',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=TabIndex;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/tabindex.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/td-headers-attr":[function(require,module,exports){
(function(__filename){





'use strict';







const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Cells in a `<table>` element that use the `[headers]` attribute refer '+
'to table cells within the same table.',

failureTitle:'Cells in a `<table>` element that use the `[headers]` attribute refer '+
'to an element `id` not found within the same table.',

description:'Screen readers have features to make navigating tables easier. Ensuring '+
'`<td>` cells using the `[headers]` attribute only refer to other cells in the same '+
'table may improve the experience for screen reader users. '+
'[Learn more](https://web.dev/td-headers-attr/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class TDHeadersAttr extends AxeAudit{



static get meta(){
return{
id:'td-headers-attr',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=TDHeadersAttr;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/td-headers-attr.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/th-has-data-cells":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<th>` elements and elements with `[role="columnheader"/"rowheader"]` have '+
'data cells they describe.',

failureTitle:'`<th>` elements and elements with '+
'`[role="columnheader"/"rowheader"]` do not have data cells they describe.',

description:'Screen readers have features to make navigating tables easier. Ensuring '+
'table headers always refer to some set of cells may improve the experience for screen '+
'reader users. '+
'[Learn more](https://web.dev/th-has-data-cells/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class THHasDataCells extends AxeAudit{



static get meta(){
return{
id:'th-has-data-cells',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=THHasDataCells;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/th-has-data-cells.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/valid-lang":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`[lang]` attributes have a valid value',

failureTitle:'`[lang]` attributes do not have a valid value',

description:'Specifying a valid [BCP 47 language](https://www.w3.org/International/questions/qa-choosing-language-tags#question) '+
'on elements helps ensure that text is pronounced correctly by a screen reader. '+
'[Learn more](https://web.dev/valid-lang/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ValidLang extends AxeAudit{



static get meta(){
return{
id:'valid-lang',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=ValidLang;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/valid-lang.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/video-caption":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<video>` elements contain a `<track>` element with `[kind="captions"]`',

failureTitle:'`<video>` elements do not contain a `<track>` element '+
'with `[kind="captions"]`.',

description:'When a video provides a caption it is easier for deaf and hearing impaired '+
'users to access its information. '+
'[Learn more](https://web.dev/video-caption/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class VideoCaption extends AxeAudit{



static get meta(){
return{
id:'video-caption',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=VideoCaption;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/video-caption.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/accessibility/video-description":[function(require,module,exports){
(function(__filename){





'use strict';






const AxeAudit=require('./axe-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'`<video>` elements contain a `<track>` element with `[kind="description"]`',

failureTitle:'`<video>` elements do not contain a `<track>` element with '+
'`[kind="description"]`.',

description:'Audio descriptions provide relevant information for videos that dialogue '+
'cannot, such as facial expressions and scenes. '+
'[Learn more](https://web.dev/video-description/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class VideoDescription extends AxeAudit{



static get meta(){
return{
id:'video-description',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Accessibility']};

}}


module.exports=VideoDescription;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/video-description.js");
},{"../../lib/i18n/i18n.js":77,"./axe-audit.js":2}],"../audits/apple-touch-icon":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');





const UIStrings={

title:'Provides a valid `apple-touch-icon`',

failureTitle:'Does not provide a valid `apple-touch-icon`',

description:'For ideal appearance on iOS when users add a progressive web app to the home '+
'screen, define an `apple-touch-icon`. It must point to a non-transparent 192px (or 180px) '+
'square PNG. [Learn More](https://web.dev/apple-touch-icon/).',

precomposedWarning:'`apple-touch-icon-precomposed` is out of date; '+
'`apple-touch-icon` is preferred.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AppleTouchIcon extends Audit{



static get meta(){
return{
id:'apple-touch-icon',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['LinkElements']};

}





static audit(artifacts){
const appleTouchIcons=artifacts.LinkElements.
filter(el=>el.rel==='apple-touch-icon'||el.rel==='apple-touch-icon-precomposed').
filter(el=>!!el.href);


const passed=appleTouchIcons.length!==0;

const warnings=[];
if(appleTouchIcons.filter(el=>el.rel==='apple-touch-icon-precomposed').length!==0&&
appleTouchIcons.filter(el=>el.rel==='apple-touch-icon').length===0){
warnings.push(str_(UIStrings.precomposedWarning));
}

return{
score:passed?1:0,
warnings};

}}


module.exports=AppleTouchIcon;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/apple-touch-icon.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/bootup-time":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const NetworkRequest=require('../lib/network-request.js');
const{taskGroups}=require('../lib/tracehouse/task-groups.js');
const i18n=require('../lib/i18n/i18n.js');
const NetworkRecords=require('../computed/network-records.js');
const MainThreadTasks=require('../computed/main-thread-tasks.js');

const UIStrings={

title:'JavaScript execution time',

failureTitle:'Reduce JavaScript execution time',

description:'Consider reducing the time spent parsing, compiling, and executing JS. '+
'You may find delivering smaller JS payloads helps with this. [Learn '+
'more](https://web.dev/bootup-time).',

columnTotal:'Total CPU Time',

columnScriptEval:'Script Evaluation',

columnScriptParse:'Script Parse',

chromeExtensionsWarning:'Chrome extensions negatively affected this page\'s load performance. '+
'Try auditing the page in incognito mode or from a Chrome profile without extensions.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


const BROWSER_TASK_NAMES_SET=new Set([
'CpuProfiler::StartProfiling']);



const BROWSER_GC_TASK_NAMES_SET=new Set([
'V8.GCCompactor',
'MajorGC',
'MinorGC']);


class BootupTime extends Audit{



static get meta(){
return{
id:'bootup-time',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs']};

}




static get defaultOptions(){
return{


p10:1282,
median:3500,
thresholdInMs:50};

}




static getJavaScriptURLs(records){

const urls=new Set();
for(const record of records){
if(record.resourceType===NetworkRequest.TYPES.Script){
urls.add(record.url);
}
}

return urls;
}






static getAttributableURLForTask(task,jsURLs){
const jsURL=task.attributableURLs.find(url=>jsURLs.has(url));
const fallbackURL=task.attributableURLs[0];
let attributableURL=jsURL||fallbackURL;


if(!attributableURL||attributableURL==='about:blank'){
if(BROWSER_TASK_NAMES_SET.has(task.event.name))attributableURL='Browser';else
if(BROWSER_GC_TASK_NAMES_SET.has(task.event.name))attributableURL='Browser GC';else
attributableURL='Unattributable';
}

return attributableURL;
}






static getExecutionTimingsByURL(tasks,jsURLs){

const result=new Map();

for(const task of tasks){
const attributableURL=BootupTime.getAttributableURLForTask(task,jsURLs);
const timingByGroupId=result.get(attributableURL)||{};
const originalTime=timingByGroupId[task.group.id]||0;
timingByGroupId[task.group.id]=originalTime+task.selfTime;
result.set(attributableURL,timingByGroupId);
}

return result;
}






static async audit(artifacts,context){
const settings=context.settings||{};
const trace=artifacts.traces[BootupTime.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[BootupTime.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const tasks=await MainThreadTasks.request(trace,context);
const multiplier=settings.throttlingMethod==='simulate'?
settings.throttling.cpuSlowdownMultiplier:1;

const jsURLs=BootupTime.getJavaScriptURLs(networkRecords);
const executionTimings=BootupTime.getExecutionTimingsByURL(tasks,jsURLs);

let hadExcessiveChromeExtension=false;
let totalBootupTime=0;
const results=Array.from(executionTimings).
map(([url,timingByGroupId])=>{

let totalExecutionTimeForURL=0;
for(const[groupId,timespanMs]of Object.entries(timingByGroupId)){
timingByGroupId[groupId]=timespanMs*multiplier;
totalExecutionTimeForURL+=timespanMs*multiplier;
}

const scriptingTotal=timingByGroupId[taskGroups.scriptEvaluation.id]||0;
const parseCompileTotal=timingByGroupId[taskGroups.scriptParseCompile.id]||0;


if(totalExecutionTimeForURL>=context.options.thresholdInMs){
totalBootupTime+=scriptingTotal+parseCompileTotal;
}

hadExcessiveChromeExtension=hadExcessiveChromeExtension||
url.startsWith('chrome-extension:')&&scriptingTotal>100;

return{
url:url,
total:totalExecutionTimeForURL,

scripting:scriptingTotal,
scriptParseCompile:parseCompileTotal};

}).
filter(result=>result.total>=context.options.thresholdInMs).
sort((a,b)=>b.total-a.total);



let runWarnings;
if(hadExcessiveChromeExtension){
runWarnings=[str_(UIStrings.chromeExtensionsWarning)];
}

const summary={wastedMs:totalBootupTime};


const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'total',granularity:1,itemType:'ms',text:str_(UIStrings.columnTotal)},
{key:'scripting',granularity:1,itemType:'ms',text:str_(UIStrings.columnScriptEval)},
{key:'scriptParseCompile',granularity:1,itemType:'ms',
text:str_(UIStrings.columnScriptParse)}];


const details=BootupTime.makeTableDetails(headings,results,summary);

const score=Audit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
totalBootupTime);


return{
score,
numericValue:totalBootupTime,
numericUnit:'millisecond',
displayValue:totalBootupTime>0?
str_(i18n.UIStrings.seconds,{timeInMs:totalBootupTime}):'',
details,
runWarnings};

}}


module.exports=BootupTime;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/bootup-time.js");
},{"../computed/main-thread-tasks.js":13,"../computed/network-records.js":39,"../lib/i18n/i18n.js":77,"../lib/network-request.js":86,"../lib/tracehouse/task-groups.js":95,"./audit.js":3}],"../audits/byte-efficiency/duplicated-javascript":[function(require,module,exports){
(function(__filename){





'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const ModuleDuplication=require('../../computed/module-duplication.js');
const NetworkAnalyzer=require('../../lib/dependency-graph/simulator/network-analyzer.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Remove duplicate modules in JavaScript bundles',

description:'Remove large, duplicate JavaScript modules from bundles '+
'to reduce unnecessary bytes consumed by network activity. '};




const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const IGNORE_THRESHOLD_IN_BYTES=1024;






function indexOfOrEnd(haystack,needle,startPosition=0){
const index=haystack.indexOf(needle,startPosition);
return index===-1?haystack.length:index;
}

class DuplicatedJavascript extends ByteEfficiencyAudit{



static get meta(){
return{
id:'duplicated-javascript',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['devtoolsLogs','traces','SourceMaps','ScriptElements','URL']};

}




static _getNodeModuleName(source){
const sourceSplit=source.split('node_modules/');
source=sourceSplit[sourceSplit.length-1];

const indexFirstSlash=indexOfOrEnd(source,'/');
if(source[0]==='@'){
return source.slice(0,indexOfOrEnd(source,'/',indexFirstSlash+1));
}

return source.slice(0,indexFirstSlash);
}





static async _getDuplicationGroupedByNodeModules(artifacts,context){
const duplication=await ModuleDuplication.request(artifacts,context);


const groupedDuplication=new Map();
for(const[source,sourceDatas]of duplication.entries()){
if(!source.includes('node_modules')){
groupedDuplication.set(source,sourceDatas);
continue;
}

const normalizedSource='node_modules/'+DuplicatedJavascript._getNodeModuleName(source);
const aggregatedSourceDatas=groupedDuplication.get(normalizedSource)||[];
for(const{scriptUrl,size}of sourceDatas){
let sourceData=aggregatedSourceDatas.find(d=>d.scriptUrl===scriptUrl);
if(!sourceData){
sourceData={scriptUrl,size:0};
aggregatedSourceDatas.push(sourceData);
}
sourceData.size+=size;
}
groupedDuplication.set(normalizedSource,aggregatedSourceDatas);
}

for(const sourceDatas of duplication.values()){
sourceDatas.sort((a,b)=>b.size-a.size);
}

return groupedDuplication;
}












static async audit_(artifacts,networkRecords,context){
const ignoreThresholdInBytes=
context.options&&context.options.ignoreThresholdInBytes||IGNORE_THRESHOLD_IN_BYTES;

const duplication=
await DuplicatedJavascript._getDuplicationGroupedByNodeModules(artifacts,context);












const items=[];


const wastedBytesByUrl=new Map();
for(const[source,sourceDatas]of duplication.entries()){







const urls=[];
const bytesValues=[];
let wastedBytesTotal=0;
for(let i=0;i<sourceDatas.length;i++){
const sourceData=sourceDatas[i];
const url=sourceData.scriptUrl;
urls.push(url);
bytesValues.push(sourceData.size);
if(i===0)continue;
wastedBytesTotal+=sourceData.size;
wastedBytesByUrl.set(url,(wastedBytesByUrl.get(url)||0)+sourceData.size);
}

items.push({
source,
wastedBytes:wastedBytesTotal,

url:'',

totalBytes:0,
urls,
sourceBytes:bytesValues});

}


const otherItem={
source:'Other',
wastedBytes:0,
url:'',
totalBytes:0,
urls:[],
sourceBytes:[]};

for(const item of items.filter(item=>item.wastedBytes<=ignoreThresholdInBytes)){
otherItem.wastedBytes+=item.wastedBytes;
for(let i=0;i<item.urls.length;i++){
const url=item.urls[i];
if(!otherItem.urls.includes(url)){
otherItem.urls.push(url);
}
}
items.splice(items.indexOf(item),1);
}
if(otherItem.wastedBytes>ignoreThresholdInBytes){
items.push(otherItem);
}


const mainDocumentRecord=await NetworkAnalyzer.findMainDocument(networkRecords);
for(const[url,bytes]of wastedBytesByUrl.entries()){
const networkRecord=url===artifacts.URL.finalUrl?
mainDocumentRecord:
networkRecords.find(n=>n.url===url);
const script=artifacts.ScriptElements.find(script=>script.src===url);
if(!script||script.content===null){

continue;
}
if(!networkRecord){


continue;
}

const contentLength=script.content.length;
const transferSize=
ByteEfficiencyAudit.estimateTransferSize(networkRecord,contentLength,'Script');
const transferRatio=transferSize/contentLength;
wastedBytesByUrl.set(url,bytes*transferRatio);
}


const headings=[

{key:'source',valueType:'code',subRows:{key:'urls',valueType:'url'},label:str_(i18n.UIStrings.columnSource)},
{key:'_',valueType:'bytes',subRows:{key:'sourceBytes'},granularity:0.05,label:str_(i18n.UIStrings.columnSize)},
{key:'wastedBytes',valueType:'bytes',granularity:0.05,label:str_(i18n.UIStrings.columnWastedBytes)}];




return{
items,
headings,
wastedBytesByUrl};

}}


module.exports=DuplicatedJavascript;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/duplicated-javascript.js");
},{"../../computed/module-duplication.js":37,"../../lib/dependency-graph/simulator/network-analyzer.js":73,"../../lib/i18n/i18n.js":77,"./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/efficient-animated-content":[function(require,module,exports){
(function(__filename){








'use strict';

const NetworkRequest=require('../../lib/network-request.js');
const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Use video formats for animated content',

description:'Large GIFs are inefficient for delivering animated content. Consider using '+
'MPEG4/WebM videos for animations and PNG/WebP for static images instead of GIF to save '+
'network bytes. [Learn more](https://web.dev/efficient-animated-content)'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);



const GIF_BYTE_THRESHOLD=100*1024;

class EfficientAnimatedContent extends ByteEfficiencyAudit{



static get meta(){
return{
id:'efficient-animated-content',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['devtoolsLogs','traces']};

}







static getPercentSavings(bytes){
return Math.round(29.1*Math.log10(bytes)-100.7)/100;
}






static audit_(artifacts,networkRecords){
const unoptimizedContent=networkRecords.filter(
record=>record.mimeType==='image/gif'&&
record.resourceType===NetworkRequest.TYPES.Image&&
(record.resourceSize||0)>GIF_BYTE_THRESHOLD);



const items=unoptimizedContent.map(record=>{
const resourceSize=record.resourceSize||0;
return{
url:record.url,
totalBytes:resourceSize,
wastedBytes:Math.round(resourceSize*
EfficientAnimatedContent.getPercentSavings(resourceSize))};

});


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnResourceSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{
items,
headings};

}}


module.exports=EfficientAnimatedContent;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/efficient-animated-content.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/network-request.js":86,"./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/offscreen-images":[function(require,module,exports){
(function(__filename){









'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const Sentry=require('../../lib/sentry.js');
const URL=require('../../lib/url-shim.js');
const i18n=require('../../lib/i18n/i18n.js');
const Interactive=require('../../computed/metrics/interactive.js');
const TraceOfTab=require('../../computed/trace-of-tab.js');

const UIStrings={

title:'Defer offscreen images',

description:
'Consider lazy-loading offscreen and hidden images after all critical resources have '+
'finished loading to lower time to interactive. '+
'[Learn more](https://web.dev/offscreen-images).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


const ALLOWABLE_OFFSCREEN_IN_PX=100;
const ALLOWABLE_OFFSCREEN_BOTTOM_IN_VIEWPORTS=3;

const IGNORE_THRESHOLD_IN_BYTES=2048;
const IGNORE_THRESHOLD_IN_PERCENT=75;
const IGNORE_THRESHOLD_IN_MS=50;



class OffscreenImages extends ByteEfficiencyAudit{



static get meta(){
return{
id:'offscreen-images',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['ImageElements','ViewportDimensions','devtoolsLogs','traces']};

}






static computeVisiblePixels(imageRect,viewportDimensions){
const innerWidth=viewportDimensions.innerWidth;
const innerHeight=viewportDimensions.innerHeight;
const allowableOffscreenBottomInPx=ALLOWABLE_OFFSCREEN_BOTTOM_IN_VIEWPORTS*
viewportDimensions.innerHeight;

const top=Math.max(imageRect.top,-1*ALLOWABLE_OFFSCREEN_IN_PX);
const right=Math.min(imageRect.right,innerWidth+ALLOWABLE_OFFSCREEN_IN_PX);
const bottom=Math.min(imageRect.bottom,innerHeight+allowableOffscreenBottomInPx);
const left=Math.max(imageRect.left,-1*ALLOWABLE_OFFSCREEN_IN_PX);

return Math.max(right-left,0)*Math.max(bottom-top,0);
}







static computeWaste(image,viewportDimensions,networkRecords){
const networkRecord=networkRecords.find(record=>record.url===image.src);

if(!image.resourceSize||!networkRecord)return null;

if(image.loading==='lazy'||image.loading==='eager')return null;

const url=URL.elideDataURI(image.src);
const totalPixels=image.displayedWidth*image.displayedHeight;
const visiblePixels=this.computeVisiblePixels(image.clientRect,viewportDimensions);

const wastedRatio=totalPixels===0?1:1-visiblePixels/totalPixels;
const totalBytes=image.resourceSize;
const wastedBytes=Math.round(totalBytes*wastedRatio);

if(!Number.isFinite(wastedRatio)){
return new Error(`Invalid image sizing information ${url}`);
}

return{
url,
requestStartTime:networkRecord.startTime,
totalBytes,
wastedBytes,
wastedPercent:100*wastedRatio};

}







static filterLanternResults(images,lanternMetricData){
const nodeTimings=lanternMetricData.pessimisticEstimate.nodeTimings;


let lastLongTaskStartTime=0;


const startTimesByURL=new Map();
for(const[node,timing]of nodeTimings){
if(node.type==='cpu'&&timing.duration>=50){
lastLongTaskStartTime=Math.max(lastLongTaskStartTime,timing.startTime);
}else if(node.type==='network'){
const networkNode=node;
startTimesByURL.set(networkNode.record.url,timing.startTime);
}
}

return images.filter(image=>{

if(image.wastedBytes<IGNORE_THRESHOLD_IN_BYTES)return false;
if(image.wastedPercent<IGNORE_THRESHOLD_IN_PERCENT)return false;

const imageRequestStartTime=startTimesByURL.get(image.url)||0;
return imageRequestStartTime<lastLongTaskStartTime-IGNORE_THRESHOLD_IN_MS;
});
}







static filterObservedResults(images,interactiveTimestamp){
return images.filter(image=>{
if(image.wastedBytes<IGNORE_THRESHOLD_IN_BYTES)return false;
if(image.wastedPercent<IGNORE_THRESHOLD_IN_PERCENT)return false;
return image.requestStartTime<interactiveTimestamp/1e6-IGNORE_THRESHOLD_IN_MS/1000;
});
}











static computeWasteWithTTIGraph(results,graph,simulator){
return super.computeWasteWithTTIGraph(results,graph,simulator,
{includeLoad:false});
}







static async audit_(artifacts,networkRecords,context){
const images=artifacts.ImageElements;
const viewportDimensions=artifacts.ViewportDimensions;
const trace=artifacts.traces[ByteEfficiencyAudit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[ByteEfficiencyAudit.DEFAULT_PASS];


const warnings=[];
const resultsMap=images.reduce((results,image)=>{
const processed=OffscreenImages.computeWaste(image,viewportDimensions,networkRecords);
if(processed===null){
return results;
}

if(processed instanceof Error){
warnings.push(processed.message);
Sentry.captureException(processed,{tags:{audit:this.meta.id},level:'warning'});
return results;
}


const existing=results.get(processed.url);
if(!existing||existing.wastedBytes>processed.wastedBytes){
results.set(processed.url,processed);
}

return results;
},new Map());

const settings=context.settings;

let items;
const unfilteredResults=Array.from(resultsMap.values());

try{
const interactive=await Interactive.request({trace,devtoolsLog,settings},context);


const lanternInteractive=interactive;

items=context.settings.throttlingMethod==='simulate'?
OffscreenImages.filterLanternResults(unfilteredResults,lanternInteractive):

OffscreenImages.filterObservedResults(unfilteredResults,interactive.timestamp);
}catch(err){

if(context.settings.throttlingMethod==='simulate'){
throw err;
}

items=OffscreenImages.filterObservedResults(unfilteredResults,(
await TraceOfTab.request(trace,context).then(tot=>tot.timestamps.traceEnd)));
}


const headings=[
{key:'url',valueType:'thumbnail',label:''},
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnResourceSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{
warnings,
items,
headings};

}}


module.exports=OffscreenImages;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/offscreen-images.js");
},{"../../computed/metrics/interactive.js":20,"../../computed/trace-of-tab.js":44,"../../lib/i18n/i18n.js":77,"../../lib/sentry.js":89,"../../lib/url-shim.js":"url","./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/render-blocking-resources":[function(require,module,exports){
(function(__filename){









'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const BaseNode=require('../../lib/dependency-graph/base-node.js');
const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const UnusedCSS=require('../../computed/unused-css.js');
const NetworkRequest=require('../../lib/network-request.js');
const TraceOfTab=require('../../computed/trace-of-tab.js');
const LoadSimulator=require('../../computed/load-simulator.js');
const FirstContentfulPaint=require('../../computed/metrics/first-contentful-paint.js');









const MINIMUM_WASTED_MS=50;

const UIStrings={

title:'Eliminate render-blocking resources',

description:'Resources are blocking the first paint of your page. Consider '+
'delivering critical JS/CSS inline and deferring all non-critical '+
'JS/styles. [Learn more](https://web.dev/render-blocking-resources).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);






function getNodesAndTimingByUrl(nodeTimings){

const urlMap={};
const nodes=Array.from(nodeTimings.keys());
nodes.forEach(node=>{
if(node.type!=='network')return;
const nodeTiming=nodeTimings.get(node);
if(!nodeTiming)return;

urlMap[node.record.url]={node,nodeTiming};
});

return urlMap;
}

class RenderBlockingResources extends Audit{



static get meta(){
return{
id:'render-blocking-resources',
title:str_(UIStrings.title),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
description:str_(UIStrings.description),


requiredArtifacts:['URL','TagsBlockingFirstPaint','traces','devtoolsLogs','CSSUsage']};

}






static async computeResults(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const simulatorData={devtoolsLog,settings:context.settings};
const traceOfTab=await TraceOfTab.request(trace,context);
const simulator=await LoadSimulator.request(simulatorData,context);
const wastedCssBytes=await RenderBlockingResources.computeWastedCSSBytes(artifacts,context);

const metricSettings={throttlingMethod:'simulate'};
const metricComputationData={trace,devtoolsLog,simulator,settings:metricSettings};

const fcpSimulation=await FirstContentfulPaint.request(metricComputationData,context);
const fcpTsInMs=traceOfTab.timestamps.firstContentfulPaint/1000;

const nodesByUrl=getNodesAndTimingByUrl(fcpSimulation.optimisticEstimate.nodeTimings);

const results=[];
const deferredNodeIds=new Set();
for(const resource of artifacts.TagsBlockingFirstPaint){

if(resource.endTime*1000>fcpTsInMs)continue;

if(!nodesByUrl[resource.tag.url])continue;

const{node,nodeTiming}=nodesByUrl[resource.tag.url];


node.traverse(node=>deferredNodeIds.add(node.id));


const wastedMs=Math.round(nodeTiming.duration);
if(wastedMs<MINIMUM_WASTED_MS)continue;

results.push({
url:resource.tag.url,
totalBytes:resource.transferSize,
wastedMs});

}

if(!results.length){
return{results,wastedMs:0};
}

const wastedMs=RenderBlockingResources.estimateSavingsWithGraphs(
simulator,
fcpSimulation.optimisticGraph,
deferredNodeIds,
wastedCssBytes);


return{results,wastedMs};
}

















static estimateSavingsWithGraphs(simulator,fcpGraph,deferredIds,wastedCssBytesByUrl){
const originalEstimate=simulator.simulate(fcpGraph).timeInMs;

let totalChildNetworkBytes=0;
const minimalFCPGraph=fcpGraph.cloneWithRelationships(node=>{

const canDeferRequest=deferredIds.has(node.id);
if(node.type!==BaseNode.TYPES.NETWORK)return!canDeferRequest;

const isStylesheet=
node.record.resourceType===NetworkRequest.TYPES.Stylesheet;
if(canDeferRequest&&isStylesheet){

const wastedBytes=wastedCssBytesByUrl.get(node.record.url)||0;
totalChildNetworkBytes+=(node.record.transferSize||0)-wastedBytes;
}
return!canDeferRequest;
});


const originalTransferSize=minimalFCPGraph.record.transferSize;
const safeTransferSize=originalTransferSize||0;
minimalFCPGraph.record.transferSize=safeTransferSize+totalChildNetworkBytes;
const estimateAfterInline=simulator.simulate(minimalFCPGraph).timeInMs;
minimalFCPGraph.record.transferSize=originalTransferSize;
return Math.round(Math.max(originalEstimate-estimateAfterInline,0));
}






static async computeWastedCSSBytes(artifacts,context){
const wastedBytesByUrl=new Map();
try{
const unusedCssItems=await UnusedCSS.request({
CSSUsage:artifacts.CSSUsage,
URL:artifacts.URL,
devtoolsLog:artifacts.devtoolsLogs[Audit.DEFAULT_PASS]},
context);
for(const item of unusedCssItems){
wastedBytesByUrl.set(item.url,item.wastedBytes);
}
}catch(_){}

return wastedBytesByUrl;
}






static async audit(artifacts,context){
const{results,wastedMs}=await RenderBlockingResources.computeResults(artifacts,context);

let displayValue='';
if(results.length>0){
displayValue=str_(i18n.UIStrings.displayValueMsSavings,{wastedMs});
}


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnTransferSize)},
{key:'wastedMs',valueType:'timespanMs',label:str_(i18n.UIStrings.columnWastedMs)}];


const details=Audit.makeOpportunityDetails(headings,results,wastedMs);

return{
displayValue,
score:ByteEfficiencyAudit.scoreForWastedMs(wastedMs),
numericValue:wastedMs,
numericUnit:'millisecond',
details};

}}


module.exports=RenderBlockingResources;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/render-blocking-resources.js");
},{"../../computed/load-simulator.js":11,"../../computed/metrics/first-contentful-paint.js":17,"../../computed/trace-of-tab.js":44,"../../computed/unused-css.js":45,"../../lib/dependency-graph/base-node.js":68,"../../lib/i18n/i18n.js":77,"../../lib/network-request.js":86,"../audit.js":3,"./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/total-byte-weight":[function(require,module,exports){
(function(__filename){





'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const NetworkRecords=require('../../computed/network-records.js');

const UIStrings={

title:'Avoids enormous network payloads',

failureTitle:'Avoid enormous network payloads',

description:
'Large network payloads cost users real money and are highly correlated with '+
'long load times. [Learn '+
'more](https://web.dev/total-byte-weight).',

displayValue:'Total size was {totalBytes, number, bytes}\xa0KB'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class TotalByteWeight extends ByteEfficiencyAudit{



static get meta(){
return{
id:'total-byte-weight',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['devtoolsLogs','traces']};

}




static get defaultOptions(){
return{



p10:2667*1024,
median:4000*1024};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[ByteEfficiencyAudit.DEFAULT_PASS];
const records=await NetworkRecords.request(devtoolsLog,context);

let totalBytes=0;

let results=[];
records.forEach(record=>{


if(record.parsedURL.scheme==='data'||!record.finished)return;

const result={
url:record.url,
totalBytes:record.transferSize};


totalBytes+=result.totalBytes;
results.push(result);
});
const totalCompletedRequests=results.length;
results=results.sort((itemA,itemB)=>{
return itemB.totalBytes-itemA.totalBytes||
itemA.url.localeCompare(itemB.url);
}).slice(0,10);

const score=ByteEfficiencyAudit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
totalBytes);



const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',itemType:'bytes',text:str_(i18n.UIStrings.columnTransferSize)}];


const tableDetails=ByteEfficiencyAudit.makeTableDetails(headings,results);

return{
score,
numericValue:totalBytes,
numericUnit:'byte',
displayValue:str_(UIStrings.displayValue,{totalBytes}),
extendedInfo:{
value:{
results,
totalCompletedRequests}},


details:tableDetails};

}}


module.exports=TotalByteWeight;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/total-byte-weight.js");
},{"../../computed/network-records.js":39,"../../lib/i18n/i18n.js":77,"./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/unminified-css":[function(require,module,exports){
(function(__filename){





'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const UnusedCSS=require('../../computed/unused-css.js');
const i18n=require('../../lib/i18n/i18n.js');
const computeTokenLength=require('../../lib/minification-estimator.js').computeCSSTokenLength;

const UIStrings={

title:'Minify CSS',

description:'Minifying CSS files can reduce network payload sizes. '+
'[Learn more](https://web.dev/unminified-css).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const IGNORE_THRESHOLD_IN_PERCENT=5;
const IGNORE_THRESHOLD_IN_BYTES=2048;




class UnminifiedCSS extends ByteEfficiencyAudit{



static get meta(){
return{
id:'unminified-css',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['CSSUsage','devtoolsLogs','traces','URL']};

}







static computeTokenLength(content){
return computeTokenLength(content);
}







static computeWaste(stylesheet,networkRecord,pageUrl){
const content=stylesheet.content;
const totalTokenLength=UnminifiedCSS.computeTokenLength(content);

let url=stylesheet.header.sourceURL;
if(!url||url===pageUrl){
const contentPreview=UnusedCSS.determineContentPreview(stylesheet.content);
url=contentPreview;
}

const totalBytes=ByteEfficiencyAudit.estimateTransferSize(networkRecord,content.length,
'Stylesheet');
const wastedRatio=1-totalTokenLength/content.length;
const wastedBytes=Math.round(totalBytes*wastedRatio);

return{
url,
totalBytes,
wastedBytes,
wastedPercent:100*wastedRatio};

}






static audit_(artifacts,networkRecords){
const pageUrl=artifacts.URL.finalUrl;
const items=[];
for(const stylesheet of artifacts.CSSUsage.stylesheets){
const networkRecord=networkRecords.
find(record=>record.url===stylesheet.header.sourceURL);
if(!stylesheet.content)continue;

const result=UnminifiedCSS.computeWaste(stylesheet,networkRecord,pageUrl);



if(result.wastedPercent<IGNORE_THRESHOLD_IN_PERCENT||
result.wastedBytes<IGNORE_THRESHOLD_IN_BYTES||
!Number.isFinite(result.wastedBytes))continue;
items.push(result);
}


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnTransferSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{items,headings};
}}


module.exports=UnminifiedCSS;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/unminified-css.js");
},{"../../computed/unused-css.js":45,"../../lib/i18n/i18n.js":77,"../../lib/minification-estimator.js":84,"./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/unminified-javascript":[function(require,module,exports){
(function(__filename){





'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const computeTokenLength=require('../../lib/minification-estimator.js').computeJSTokenLength;

const UIStrings={

title:'Minify JavaScript',

description:'Minifying JavaScript files can reduce payload sizes and script parse time. '+
'[Learn more](https://web.dev/unminified-javascript).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const IGNORE_THRESHOLD_IN_PERCENT=10;
const IGNORE_THRESHOLD_IN_BYTES=2048;











class UnminifiedJavaScript extends ByteEfficiencyAudit{



static get meta(){
return{
id:'unminified-javascript',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['ScriptElements','devtoolsLogs','traces']};

}







static computeWaste(scriptContent,displayUrl,networkRecord){
const contentLength=scriptContent.length;
const totalTokenLength=computeTokenLength(scriptContent);

const totalBytes=ByteEfficiencyAudit.estimateTransferSize(networkRecord,contentLength,
'Script');
const wastedRatio=1-totalTokenLength/contentLength;
const wastedBytes=Math.round(totalBytes*wastedRatio);

return{
url:displayUrl,
totalBytes,
wastedBytes,
wastedPercent:100*wastedRatio};

}






static audit_(artifacts,networkRecords){

const items=[];
const warnings=[];
for(const{requestId,src,content}of artifacts.ScriptElements){
if(!content)continue;

const networkRecord=networkRecords.find(record=>record.requestId===requestId);
const displayUrl=!src||!networkRecord?
`inline: ${content.substr(0,40)}...`:
networkRecord.url;
try{
const result=UnminifiedJavaScript.computeWaste(content,displayUrl,networkRecord);


if(result.wastedPercent<IGNORE_THRESHOLD_IN_PERCENT||
result.wastedBytes<IGNORE_THRESHOLD_IN_BYTES||
!Number.isFinite(result.wastedBytes))continue;
items.push(result);
}catch(err){
const url=networkRecord?networkRecord.url:'?';
warnings.push(`Unable to process script ${url}: ${err.message}`);
}
}


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnTransferSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{
items,
warnings,
headings};

}}


module.exports=UnminifiedJavaScript;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/unminified-javascript.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/minification-estimator.js":84,"./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/unused-css-rules":[function(require,module,exports){
(function(__filename){





'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const UnusedCSS=require('../../computed/unused-css.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Remove unused CSS',

description:'Remove dead rules from stylesheets and defer the loading of CSS not used for '+
'above-the-fold content to reduce unnecessary bytes consumed by network activity. '+
'[Learn more](https://web.dev/unused-css-rules).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);



const IGNORE_THRESHOLD_IN_BYTES=10*1024;

class UnusedCSSRules extends ByteEfficiencyAudit{



static get meta(){
return{
id:'unused-css-rules',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['CSSUsage','URL','devtoolsLogs','traces']};

}







static async audit_(artifacts,_,context){
const unusedCssItems=await UnusedCSS.request({
CSSUsage:artifacts.CSSUsage,
URL:artifacts.URL,
devtoolsLog:artifacts.devtoolsLogs[ByteEfficiencyAudit.DEFAULT_PASS]},
context);
const items=unusedCssItems.
filter(sheet=>sheet&&sheet.wastedBytes>IGNORE_THRESHOLD_IN_BYTES);


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnTransferSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{
items,
headings};

}}


module.exports=UnusedCSSRules;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/unused-css-rules.js");
},{"../../computed/unused-css.js":45,"../../lib/i18n/i18n.js":77,"./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/unused-javascript":[function(require,module,exports){
(function(__filename){





'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const UnusedJavaScriptSummary=require('../../computed/unused-javascript-summary.js');
const JsBundles=require('../../computed/js-bundles.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Remove unused JavaScript',

description:'Remove unused JavaScript to reduce bytes consumed by network activity. '+
'[Learn more](https://web.dev/remove-unused-code/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const IGNORE_THRESHOLD_IN_BYTES=2048;
const IGNORE_BUNDLE_SOURCE_THRESHOLD_IN_BYTES=512;




function commonPrefix(strings){
if(!strings.length){
return'';
}

const maxWord=strings.reduce((a,b)=>a>b?a:b);
let prefix=strings.reduce((a,b)=>a>b?b:a);
while(!maxWord.startsWith(prefix)){
prefix=prefix.slice(0,-1);
}

return prefix;
}






function trimCommonPrefix(strings,commonPrefix){
if(!commonPrefix)return strings;
return strings.map(s=>s.startsWith(commonPrefix)?'…'+s.slice(commonPrefix.length):s);
}








class UnusedJavaScript extends ByteEfficiencyAudit{



static get meta(){
return{
id:'unused-javascript',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['JsUsage','ScriptElements','devtoolsLogs','traces'],
__internalOptionalArtifacts:['SourceMaps']};

}







static async audit_(artifacts,networkRecords,context){
const bundles=artifacts.SourceMaps?await JsBundles.request(artifacts,context):[];
const{bundleSourceUnusedThreshold=IGNORE_BUNDLE_SOURCE_THRESHOLD_IN_BYTES}=
context.options||{};

const items=[];
for(const[url,scriptCoverages]of Object.entries(artifacts.JsUsage)){
const networkRecord=networkRecords.find(record=>record.url===url);
if(!networkRecord)continue;
const bundle=bundles.find(b=>b.script.src===url);
const unusedJsSummary=
await UnusedJavaScriptSummary.request({url,scriptCoverages,bundle},context);

const transfer=ByteEfficiencyAudit.
estimateTransferSize(networkRecord,unusedJsSummary.totalBytes,'Script');
const transferRatio=transfer/unusedJsSummary.totalBytes;
const item={
url:unusedJsSummary.url,
totalBytes:Math.round(transferRatio*unusedJsSummary.totalBytes),
wastedBytes:Math.round(transferRatio*unusedJsSummary.wastedBytes),
wastedPercent:unusedJsSummary.wastedPercent};


if(item.wastedBytes<=IGNORE_THRESHOLD_IN_BYTES)continue;


if(bundle&&unusedJsSummary.sourcesWastedBytes){
const topUnusedSourceSizes=Object.entries(unusedJsSummary.sourcesWastedBytes).
sort((a,b)=>b[1]-a[1]).
slice(0,5).
map(([source,unused])=>{
const total=
source==='(unmapped)'?bundle.sizes.unmappedBytes:bundle.sizes.files[source];
return{
source,
unused:Math.round(unused*transferRatio),
total:Math.round(total*transferRatio)};

}).
filter(d=>d.unused>=bundleSourceUnusedThreshold);

const commonSourcePrefix=commonPrefix([...bundle.map._sourceInfos.keys()]);
Object.assign(item,{
sources:trimCommonPrefix(topUnusedSourceSizes.map(d=>d.source),commonSourcePrefix),
sourceBytes:topUnusedSourceSizes.map(d=>d.total),
sourceWastedBytes:topUnusedSourceSizes.map(d=>d.unused)});

}

items.push(item);
}

return{
items,
headings:[

{key:'url',valueType:'url',subRows:{key:'sources',valueType:'code'},label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',subRows:{key:'sourceBytes'},label:str_(i18n.UIStrings.columnTransferSize)},
{key:'wastedBytes',valueType:'bytes',subRows:{key:'sourceWastedBytes'},label:str_(i18n.UIStrings.columnWastedBytes)}]};



}}


module.exports=UnusedJavaScript;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/unused-javascript.js");
},{"../../computed/js-bundles.js":10,"../../computed/unused-javascript-summary.js":46,"../../lib/i18n/i18n.js":77,"./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/uses-long-cache-ttl":[function(require,module,exports){
(function(__filename){





'use strict';

const parseCacheControl=require('parse-cache-control');
const Audit=require('../audit.js');
const NetworkRequest=require('../../lib/network-request.js');
const URL=require('../../lib/url-shim.js');
const linearInterpolation=require('../../lib/statistics.js').linearInterpolation;
const i18n=require('../../lib/i18n/i18n.js');
const NetworkRecords=require('../../computed/network-records.js');

const UIStrings={

title:'Uses efficient cache policy on static assets',

failureTitle:'Serve static assets with an efficient cache policy',

description:
'A long cache lifetime can speed up repeat visits to your page. '+
'[Learn more](https://web.dev/uses-long-cache-ttl).',

displayValue:`{itemCount, plural,
    =1 {1 resource found}
    other {# resources found}
    }`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


const IGNORE_THRESHOLD_IN_PERCENT=0.925;

class CacheHeaders extends Audit{



static get meta(){
return{
id:'uses-long-cache-ttl',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['devtoolsLogs','traces']};

}




static get defaultOptions(){
return{



p10:28*1024,
median:128*1024};

}







static getCacheHitProbability(maxAgeInSeconds){





const RESOURCE_AGE_IN_HOURS_DECILES=[0,0.2,1,3,8,12,24,48,72,168,8760,Infinity];
if(RESOURCE_AGE_IN_HOURS_DECILES.length!==12){
throw new Error('deciles 0-10 and 1 for overflow');
}

const maxAgeInHours=maxAgeInSeconds/3600;
const upperDecileIndex=RESOURCE_AGE_IN_HOURS_DECILES.findIndex(
decile=>decile>=maxAgeInHours);



if(upperDecileIndex===RESOURCE_AGE_IN_HOURS_DECILES.length-1)return 1;
if(upperDecileIndex===0)return 0;


const upperDecileValue=RESOURCE_AGE_IN_HOURS_DECILES[upperDecileIndex];
const lowerDecileValue=RESOURCE_AGE_IN_HOURS_DECILES[upperDecileIndex-1];
const upperDecile=upperDecileIndex/10;
const lowerDecile=(upperDecileIndex-1)/10;


return linearInterpolation(
lowerDecileValue,
lowerDecile,
upperDecileValue,
upperDecile,
maxAgeInHours);

}







static computeCacheLifetimeInSeconds(headers,cacheControl){
if(cacheControl&&cacheControl['max-age']!==undefined){
return cacheControl['max-age'];
}

const expiresHeaders=headers.get('expires');
if(expiresHeaders){
const expires=new Date(expiresHeaders).getTime();

if(!expires)return 0;
return Math.ceil((expires-Date.now())/1000);
}

return null;
}
















static isCacheableAsset(record){
const CACHEABLE_STATUS_CODES=new Set([200,203,206]);


const STATIC_RESOURCE_TYPES=new Set([
NetworkRequest.TYPES.Font,
NetworkRequest.TYPES.Image,
NetworkRequest.TYPES.Media,
NetworkRequest.TYPES.Script,
NetworkRequest.TYPES.Stylesheet]);



if(URL.NON_NETWORK_PROTOCOLS.includes(record.protocol))return false;

return(
CACHEABLE_STATUS_CODES.has(record.statusCode)&&
STATIC_RESOURCE_TYPES.has(record.resourceType||'Other'));

}







static shouldSkipRecord(headers,cacheControl){

if(!cacheControl&&(headers.get('pragma')||'').includes('no-cache')){
return true;
}


if(cacheControl&&(

cacheControl['must-revalidate']||
cacheControl['no-cache']||
cacheControl['no-store']||
cacheControl['private'])){
return true;
}

return false;
}






static audit(artifacts,context){
const devtoolsLogs=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
return NetworkRecords.request(devtoolsLogs,context).then(records=>{
const results=[];
let queryStringCount=0;
let totalWastedBytes=0;

for(const record of records){
if(!CacheHeaders.isCacheableAsset(record))continue;


const headers=new Map();
for(const header of record.responseHeaders||[]){
if(headers.has(header.name.toLowerCase())){
const previousHeaderValue=headers.get(header.name.toLowerCase());
headers.set(header.name.toLowerCase(),
`${previousHeaderValue}, ${header.value}`);
}else{
headers.set(header.name.toLowerCase(),header.value);
}
}

const cacheControl=parseCacheControl(headers.get('cache-control'));
if(this.shouldSkipRecord(headers,cacheControl)){
continue;
}


let cacheLifetimeInSeconds=CacheHeaders.computeCacheLifetimeInSeconds(
headers,cacheControl);
if(cacheLifetimeInSeconds!==null&&(
!Number.isFinite(cacheLifetimeInSeconds)||cacheLifetimeInSeconds<=0)){
continue;
}
cacheLifetimeInSeconds=cacheLifetimeInSeconds||0;


const cacheHitProbability=CacheHeaders.getCacheHitProbability(cacheLifetimeInSeconds);
if(cacheHitProbability>IGNORE_THRESHOLD_IN_PERCENT)continue;

const url=URL.elideDataURI(record.url);
const totalBytes=record.transferSize||0;
const wastedBytes=(1-cacheHitProbability)*totalBytes;

totalWastedBytes+=wastedBytes;
if(url.includes('?'))queryStringCount++;



let debugData;
if(cacheControl){
debugData={
type:'debugdata',
...cacheControl};

}

results.push({
url,
debugData,
cacheLifetimeMs:cacheLifetimeInSeconds*1000,
cacheHitProbability,
totalBytes,
wastedBytes});

}

results.sort((a,b)=>{
return a.cacheLifetimeMs-b.cacheLifetimeMs||
b.totalBytes-a.totalBytes||
a.url.localeCompare(b.url);
});

const score=Audit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
totalWastedBytes);



const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},

{key:'cacheLifetimeMs',itemType:'ms',text:str_(i18n.UIStrings.columnCacheTTL),
displayUnit:'duration'},
{key:'totalBytes',itemType:'bytes',text:str_(i18n.UIStrings.columnTransferSize),
displayUnit:'kb',granularity:1}];


const summary={wastedBytes:totalWastedBytes};
const details=Audit.makeTableDetails(headings,results,summary);

return{
score,
numericValue:totalWastedBytes,
numericUnit:'byte',
displayValue:str_(UIStrings.displayValue,{itemCount:results.length}),
extendedInfo:{
value:{
results,
queryStringCount}},


details};

});
}}


module.exports=CacheHeaders;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl.js");
},{"../../computed/network-records.js":39,"../../lib/i18n/i18n.js":77,"../../lib/network-request.js":86,"../../lib/statistics.js":92,"../../lib/url-shim.js":"url","../audit.js":3,"parse-cache-control":167}],"../audits/byte-efficiency/uses-optimized-images":[function(require,module,exports){
(function(__filename){









'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const URL=require('../../lib/url-shim.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Efficiently encode images',

description:'Optimized images load faster and consume less cellular data. '+
'[Learn more](https://web.dev/uses-optimized-images).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const IGNORE_THRESHOLD_IN_BYTES=4096;

class UsesOptimizedImages extends ByteEfficiencyAudit{



static get meta(){
return{
id:'uses-optimized-images',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['OptimizedImages','ImageElements','devtoolsLogs','traces','URL']};

}





static computeSavings(image){
const bytes=image.originalSize-image.jpegSize;
const percent=100*bytes/image.originalSize;
return{bytes,percent};
}





static estimateJPEGSizeFromDimensions(imageElement){
const totalPixels=imageElement.naturalWidth*imageElement.naturalHeight;




const expectedBytesPerPixel=2*1/8;
return Math.round(totalPixels*expectedBytesPerPixel);
}





static audit_(artifacts){
const pageURL=artifacts.URL.finalUrl;
const images=artifacts.OptimizedImages;
const imageElements=artifacts.ImageElements;

const imageElementsByURL=new Map();
imageElements.forEach(img=>imageElementsByURL.set(img.src,img));


const items=[];
const warnings=[];
for(const image of images){
if(image.failed){
warnings.push(`Unable to decode ${URL.getURLDisplayName(image.url)}`);
continue;
}else if(/(jpeg|bmp)/.test(image.mimeType)===false){
continue;
}

let jpegSize=image.jpegSize;
let fromProtocol=true;

if(typeof jpegSize==='undefined'){
const imageElement=imageElementsByURL.get(image.url);
if(!imageElement){
warnings.push(`Unable to locate resource ${URL.getURLDisplayName(image.url)}`);
continue;
}

jpegSize=UsesOptimizedImages.estimateJPEGSizeFromDimensions(imageElement);
fromProtocol=false;
}

if(image.originalSize<jpegSize+IGNORE_THRESHOLD_IN_BYTES)continue;

const url=URL.elideDataURI(image.url);
const isCrossOrigin=!URL.originsMatch(pageURL,image.url);
const jpegSavings=UsesOptimizedImages.computeSavings({...image,jpegSize});

items.push({
url,
fromProtocol,
isCrossOrigin,
totalBytes:image.originalSize,
wastedBytes:jpegSavings.bytes});

}


const headings=[
{key:'url',valueType:'thumbnail',label:''},
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnResourceSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{
warnings,
items,
headings};

}}


module.exports=UsesOptimizedImages;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/uses-optimized-images.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/uses-responsive-images":[function(require,module,exports){
(function(__filename){













'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const Sentry=require('../../lib/sentry.js');
const URL=require('../../lib/url-shim.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Properly size images',

description:
'Serve images that are appropriately-sized to save cellular data '+
'and improve load time. '+
'[Learn more](https://web.dev/uses-responsive-images).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const IGNORE_THRESHOLD_IN_BYTES=2048;

class UsesResponsiveImages extends ByteEfficiencyAudit{



static get meta(){
return{
id:'uses-responsive-images',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['ImageElements','ViewportDimensions','devtoolsLogs','traces']};

}






static computeWaste(image,ViewportDimensions){

if(!image.resourceSize){
return null;
}

let usedPixels=image.displayedWidth*image.displayedHeight*
Math.pow(ViewportDimensions.devicePixelRatio,2);


if(!usedPixels){
const viewportWidth=ViewportDimensions.innerWidth;
const viewportHeight=ViewportDimensions.innerHeight*2;
const imageAspectRatio=image.naturalWidth/image.naturalHeight;
const viewportAspectRatio=viewportWidth/viewportHeight;
let usedViewportWidth=viewportWidth;
let usedViewportHeight=viewportHeight;
if(imageAspectRatio>viewportAspectRatio){
usedViewportHeight=viewportWidth/imageAspectRatio;
}else{
usedViewportWidth=viewportHeight*imageAspectRatio;
}

usedPixels=usedViewportWidth*usedViewportHeight*
Math.pow(ViewportDimensions.devicePixelRatio,2);
}

const url=URL.elideDataURI(image.src);
const actualPixels=image.naturalWidth*image.naturalHeight;
const wastedRatio=1-usedPixels/actualPixels;
const totalBytes=image.resourceSize;
const wastedBytes=Math.round(totalBytes*wastedRatio);

if(!Number.isFinite(wastedRatio)){
return new Error(`Invalid image sizing information ${url}`);
}

return{
url,
totalBytes,
wastedBytes,
wastedPercent:100*wastedRatio};

}





static audit_(artifacts){
const images=artifacts.ImageElements;
const ViewportDimensions=artifacts.ViewportDimensions;


const warnings=[];

const resultsMap=new Map();
for(const image of images){




if(!image.resourceSize||image.mimeType==='image/svg+xml'||image.isCss){
continue;
}

const processed=UsesResponsiveImages.computeWaste(image,ViewportDimensions);
if(!processed)continue;

if(processed instanceof Error){
warnings.push(processed.message);
Sentry.captureException(processed,{tags:{audit:this.meta.id},level:'warning'});
continue;
}


const existing=resultsMap.get(processed.url);
if(!existing||existing.wastedBytes>processed.wastedBytes){
resultsMap.set(processed.url,processed);
}
}

const items=Array.from(resultsMap.values()).
filter(item=>item.wastedBytes>IGNORE_THRESHOLD_IN_BYTES);


const headings=[
{key:'url',valueType:'thumbnail',label:''},
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnResourceSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{
warnings,
items,
headings};

}}


module.exports=UsesResponsiveImages;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/uses-responsive-images.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/sentry.js":89,"../../lib/url-shim.js":"url","./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/uses-text-compression":[function(require,module,exports){
(function(__filename){









'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const URL=require('../../lib/url-shim.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Enable text compression',

description:'Text-based resources should be served with compression (gzip, deflate or'+
' brotli) to minimize total network bytes.'+
' [Learn more](https://web.dev/uses-text-compression).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const IGNORE_THRESHOLD_IN_BYTES=1400;
const IGNORE_THRESHOLD_IN_PERCENT=0.1;

class ResponsesAreCompressed extends ByteEfficiencyAudit{



static get meta(){
return{
id:'uses-text-compression',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['ResponseCompression','devtoolsLogs','traces']};

}





static audit_(artifacts){
const uncompressedResponses=artifacts.ResponseCompression;


const items=[];
uncompressedResponses.forEach(record=>{

if(!record.gzipSize||record.gzipSize<0)return;

const originalSize=record.resourceSize;
const gzipSize=record.gzipSize;
const gzipSavings=originalSize-gzipSize;



if(1-gzipSize/originalSize<IGNORE_THRESHOLD_IN_PERCENT||
gzipSavings<IGNORE_THRESHOLD_IN_BYTES||
record.transferSize<gzipSize)
{
return;
}


const url=URL.elideDataURI(record.url);
const isDuplicate=items.find(item=>item.url===url&&
item.totalBytes===record.resourceSize);
if(isDuplicate){
return;
}

items.push({
url,
totalBytes:originalSize,
wastedBytes:gzipSavings});

});


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnTransferSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{
items,
headings};

}}


module.exports=ResponsesAreCompressed;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/uses-text-compression.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","./byte-efficiency-audit.js":4}],"../audits/byte-efficiency/uses-webp-images":[function(require,module,exports){
(function(__filename){








'use strict';

const ByteEfficiencyAudit=require('./byte-efficiency-audit.js');
const URL=require('../../lib/url-shim.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Serve images in next-gen formats',

description:'Image formats like JPEG 2000, JPEG XR, and WebP often provide better '+
'compression than PNG or JPEG, which means faster downloads and less data consumption. '+
'[Learn more](https://web.dev/uses-webp-images).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const IGNORE_THRESHOLD_IN_BYTES=8192;

class UsesWebPImages extends ByteEfficiencyAudit{



static get meta(){
return{
id:'uses-webp-images',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,
requiredArtifacts:['OptimizedImages','devtoolsLogs','traces','URL','ImageElements']};

}





static computeSavings(image){
const bytes=image.originalSize-image.webpSize;
const percent=100*bytes/image.originalSize;
return{bytes,percent};
}





static estimateWebPSizeFromDimensions(imageElement){
const totalPixels=imageElement.naturalWidth*imageElement.naturalHeight;





const expectedBytesPerPixel=2*1/10;
return Math.round(totalPixels*expectedBytesPerPixel);
}





static audit_(artifacts){
const pageURL=artifacts.URL.finalUrl;
const images=artifacts.OptimizedImages;
const imageElements=artifacts.ImageElements;

const imageElementsByURL=new Map();
imageElements.forEach(img=>imageElementsByURL.set(img.src,img));


const items=[];
const warnings=[];
for(const image of images){
if(image.failed){
warnings.push(`Unable to decode ${URL.getURLDisplayName(image.url)}`);
continue;
}

let webpSize=image.webpSize;
let fromProtocol=true;

if(typeof webpSize==='undefined'){
const imageElement=imageElementsByURL.get(image.url);
if(!imageElement){
warnings.push(`Unable to locate resource ${URL.getURLDisplayName(image.url)}`);
continue;
}

webpSize=UsesWebPImages.estimateWebPSizeFromDimensions(imageElement);
fromProtocol=false;
}

if(image.originalSize<webpSize+IGNORE_THRESHOLD_IN_BYTES)continue;

const url=URL.elideDataURI(image.url);
const isCrossOrigin=!URL.originsMatch(pageURL,image.url);
const webpSavings=UsesWebPImages.computeSavings({...image,webpSize:webpSize});

items.push({
url,
fromProtocol,
isCrossOrigin,
totalBytes:image.originalSize,
wastedBytes:webpSavings.bytes});

}


const headings=[
{key:'url',valueType:'thumbnail',label:''},
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'totalBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnResourceSize)},
{key:'wastedBytes',valueType:'bytes',label:str_(i18n.UIStrings.columnWastedBytes)}];


return{
warnings,
items,
headings};

}}


module.exports=UsesWebPImages;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/byte-efficiency/uses-webp-images.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","./byte-efficiency-audit.js":4}],"../audits/content-width":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Content is sized correctly for the viewport',

failureTitle:'Content is not sized correctly for the viewport',

description:'If the width of your app\'s content doesn\'t match the width '+
'of the viewport, your app might not be optimized for mobile screens. '+
'[Learn more](https://web.dev/content-width).',





explanation:'The viewport size of {innerWidth}px does not match the window '+
'size of {outerWidth}px.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ContentWidth extends Audit{



static get meta(){
return{
id:'content-width',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ViewportDimensions','TestedAsMobileDevice']};

}





static audit(artifacts){
const IsMobile=artifacts.TestedAsMobileDevice;
const viewportWidth=artifacts.ViewportDimensions.innerWidth;
const windowWidth=artifacts.ViewportDimensions.outerWidth;
const widthsMatch=viewportWidth===windowWidth;

if(!IsMobile){
return{
score:1,
notApplicable:true};

}

let explanation='';
if(!widthsMatch){
explanation=str_(UIStrings.explanation,
{innerWidth:artifacts.ViewportDimensions.innerWidth,
outerWidth:artifacts.ViewportDimensions.outerWidth});
}

return{
score:Number(widthsMatch),
explanation};

}}


module.exports=ContentWidth;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/content-width.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/critical-request-chains":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');
const ComputedChains=require('../computed/critical-request-chains.js');

const UIStrings={

title:'Avoid chaining critical requests',

description:'The Critical Request Chains below show you what resources are '+
'loaded with a high priority. Consider reducing '+
'the length of chains, reducing the download size of resources, or '+
'deferring the download of unnecessary resources to improve page load. '+
'[Learn more](https://web.dev/critical-request-chains).',

displayValue:`{itemCount, plural,
    =1 {1 chain found}
    other {# chains found}
    }`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class CriticalRequestChains extends Audit{



static get meta(){
return{
id:'critical-request-chains',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
requiredArtifacts:['devtoolsLogs','URL']};

}







static _traverse(tree,cb){






function walk(node,depth,startTime,transferSize=0){
const children=Object.keys(node);
if(children.length===0){
return;
}
children.forEach(id=>{
const child=node[id];
if(!startTime){
startTime=child.request.startTime;
}


cb({
depth,
id,
node:child,
chainDuration:(child.request.endTime-startTime)*1000,
chainTransferSize:transferSize+child.request.transferSize});



if(child.children){
walk(child.children,depth+1,startTime);
}
},'');
}

walk(tree,0);
}






static _getLongestChain(tree){
const longest={
duration:0,
length:0,
transferSize:0};

CriticalRequestChains._traverse(tree,opts=>{
const duration=opts.chainDuration;
if(duration>longest.duration){
longest.duration=duration;
longest.transferSize=opts.chainTransferSize;
longest.length=opts.depth;
}
});

longest.length++;
return longest;
}





static flattenRequests(tree){

const flattendChains={};

const chainMap=new Map();


function flatten(opts){
const request=opts.node.request;
const simpleRequest={
url:request.url,
startTime:request.startTime,
endTime:request.endTime,
responseReceivedTime:request.responseReceivedTime,
transferSize:request.transferSize};


let chain=chainMap.get(opts.id);
if(chain){
chain.request=simpleRequest;
}else{
chain={
request:simpleRequest};

flattendChains[opts.id]=chain;
}

if(opts.node.children){
for(const chainId of Object.keys(opts.node.children)){

const childChain={
request:{}};

chainMap.set(chainId,childChain);
if(!chain.children){
chain.children={};
}
chain.children[chainId]=childChain;
}
}
chainMap.set(opts.id,chain);
}

CriticalRequestChains._traverse(tree,flatten);

return flattendChains;
}







static audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const URL=artifacts.URL;
return ComputedChains.request({devtoolsLog,URL},context).then(chains=>{
let chainCount=0;




function walk(node,depth){
const childIds=Object.keys(node);

childIds.forEach(id=>{
const child=node[id];
if(child.children){
walk(child.children,depth+1);
}else{

chainCount++;
}
},'');
}

const flattenedChains=CriticalRequestChains.flattenRequests(chains);


const initialNavKey=Object.keys(flattenedChains)[0];
const initialNavChildren=initialNavKey&&flattenedChains[initialNavKey].children;
if(initialNavChildren&&Object.keys(initialNavChildren).length>0){
walk(initialNavChildren,0);
}

const longestChain=CriticalRequestChains._getLongestChain(flattenedChains);

return{
score:Number(chainCount===0),
notApplicable:chainCount===0,
displayValue:chainCount?str_(UIStrings.displayValue,{itemCount:chainCount}):'',
extendedInfo:{
value:{
chains:flattenedChains,
longestChain}},


details:{
type:'criticalrequestchain',
chains:flattenedChains,
longestChain}};


});
}}


module.exports=CriticalRequestChains;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/critical-request-chains.js");
},{"../computed/critical-request-chains.js":9,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/deprecations":[function(require,module,exports){
(function(__filename){





'use strict';







const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Avoids deprecated APIs',

failureTitle:'Uses deprecated APIs',

description:'Deprecated APIs will eventually be removed from the browser. '+
'[Learn more](https://web.dev/deprecations).',

displayValue:`{itemCount, plural,
    =1 {1 warning found}
    other {# warnings found}
    }`,

columnDeprecate:'Deprecation / Warning',

columnLine:'Line'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class Deprecations extends Audit{



static get meta(){
return{
id:'deprecations',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ConsoleMessages']};

}





static audit(artifacts){
const entries=artifacts.ConsoleMessages;

const deprecations=entries.filter(log=>log.entry.source==='deprecation').map(log=>{


let source;
if(log.entry.url){


const topCallFrame=log.entry.stackTrace&&log.entry.stackTrace.callFrames[0];
const line=log.entry.lineNumber||0;
const column=topCallFrame?topCallFrame.columnNumber:0;
source={
type:'source-location',
url:log.entry.url,
urlProvider:'network',
line,
column};

}
return{
value:log.entry.text,
source};

});


const headings=[
{key:'value',itemType:'text',text:str_(UIStrings.columnDeprecate)},
{key:'source',itemType:'source-location',text:str_(i18n.UIStrings.columnURL)}];

const details=Audit.makeTableDetails(headings,deprecations);

let displayValue='';
if(deprecations.length>0){
displayValue=str_(UIStrings.displayValue,{itemCount:deprecations.length});
}

return{
score:Number(deprecations.length===0),
displayValue,
extendedInfo:{
value:deprecations},

details};

}}


module.exports=Deprecations;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/deprecations.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/diagnostics":[function(require,module,exports){





'use strict';

const Audit=require('./audit.js');
const MainThreadTasksComputed=require('../computed/main-thread-tasks.js');
const NetworkRecordsComputed=require('../computed/network-records.js');
const NetworkAnalysisComputed=require('../computed/network-analysis.js');
const NetworkAnalyzer=require('../lib/dependency-graph/simulator/network-analyzer.js');

class Diagnostics extends Audit{



static get meta(){
return{
id:'diagnostics',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
title:'Diagnostics',
description:'Collection of useful page vitals.',
requiredArtifacts:['traces','devtoolsLogs']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const tasks=await MainThreadTasksComputed.request(trace,context);
const records=await NetworkRecordsComputed.request(devtoolsLog,context);
const analysis=await NetworkAnalysisComputed.request(devtoolsLog,context);

const toplevelTasks=tasks.filter(t=>!t.parent);
const mainDocumentTransferSize=NetworkAnalyzer.findMainDocument(records).transferSize;
const totalByteWeight=records.reduce((sum,r)=>sum+(r.transferSize||0),0);
const totalTaskTime=toplevelTasks.reduce((sum,t)=>sum+(t.duration||0),0);
const maxRtt=Math.max(...analysis.additionalRttByOrigin.values())+analysis.rtt;
const maxServerLatency=Math.max(...analysis.serverResponseTimeByOrigin.values());

const diagnostics={
numRequests:records.length,
numScripts:records.filter(r=>r.resourceType==='Script').length,
numStylesheets:records.filter(r=>r.resourceType==='Stylesheet').length,
numFonts:records.filter(r=>r.resourceType==='Font').length,
numTasks:toplevelTasks.length,
numTasksOver10ms:toplevelTasks.filter(t=>t.duration>10).length,
numTasksOver25ms:toplevelTasks.filter(t=>t.duration>25).length,
numTasksOver50ms:toplevelTasks.filter(t=>t.duration>50).length,
numTasksOver100ms:toplevelTasks.filter(t=>t.duration>100).length,
numTasksOver500ms:toplevelTasks.filter(t=>t.duration>500).length,
rtt:analysis.rtt,
throughput:analysis.throughput,
maxRtt,
maxServerLatency,
totalByteWeight,
totalTaskTime,
mainDocumentTransferSize};


return{
score:1,
details:{
type:'debugdata',

items:[diagnostics]}};


}}


module.exports=Diagnostics;

},{"../computed/main-thread-tasks.js":13,"../computed/network-analysis.js":38,"../computed/network-records.js":39,"../lib/dependency-graph/simulator/network-analyzer.js":73,"./audit.js":3}],"../audits/dobetterweb/appcache-manifest":[function(require,module,exports){
(function(__filename){










'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Avoids Application Cache',

failureTitle:'Uses Application Cache',

description:'Application Cache is deprecated. '+
'[Learn more](https://web.dev/appcache-manifest).',




displayValue:'Found "{AppCacheManifest}"'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AppCacheManifestAttr extends Audit{



static get meta(){
return{
id:'appcache-manifest',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['AppCacheManifest']};

}





static audit(artifacts){

if(artifacts.AppCacheManifest!==null){
return{
score:0,
displayValue:str_(UIStrings.displayValue,{AppCacheManifest:artifacts.AppCacheManifest})};

}

return{
score:1};

}}


module.exports=AppCacheManifestAttr;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/appcache-manifest.js");
},{"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/dobetterweb/charset":[function(require,module,exports){
(function(__filename){












'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const MainResource=require('../../computed/main-resource.js');

const UIStrings={

title:'Properly defines charset',

failureTitle:'Charset declaration is missing or occurs too late in the HTML',

description:'A character encoding declaration is required. It can be done with a <meta> tag '+
'in the first 1024 bytes of the HTML or in the Content-Type HTTP response header. '+
'[Learn more](https://web.dev/charset).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const CONTENT_TYPE_HEADER='content-type';

const IANA_REGEX=/^[a-zA-Z0-9-_:.()]{2,}$/;
const CHARSET_HTML_REGEX=/<meta[^>]+charset[^<]+>/i;
const CHARSET_HTTP_REGEX=/charset\s*=\s*[a-zA-Z0-9-_:.()]{2,}/i;

class CharsetDefined extends Audit{



static get meta(){
return{
id:'charset',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['MainDocumentContent','URL','devtoolsLogs','MetaElements']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const mainResource=await MainResource.request({devtoolsLog,URL:artifacts.URL},context);
let isCharsetSet=false;

if(mainResource.responseHeaders){
const contentTypeHeader=mainResource.responseHeaders.
find(header=>header.name.toLowerCase()===CONTENT_TYPE_HEADER);

if(contentTypeHeader){
isCharsetSet=CHARSET_HTTP_REGEX.test(contentTypeHeader.value);
}
}


const BOM_FIRSTCHAR=0xFEFF;
isCharsetSet=isCharsetSet||artifacts.MainDocumentContent.charCodeAt(0)===BOM_FIRSTCHAR;


if(CHARSET_HTML_REGEX.test(artifacts.MainDocumentContent.slice(0,1024))){

isCharsetSet=isCharsetSet||artifacts.MetaElements.some(meta=>{
return meta.charset&&IANA_REGEX.test(meta.charset)||
meta.httpEquiv==='content-type'&&
meta.content&&
CHARSET_HTTP_REGEX.test(meta.content);
});
}

return{
score:Number(isCharsetSet)};

}}


module.exports=CharsetDefined;
module.exports.UIStrings=UIStrings;
module.exports.CHARSET_HTML_REGEX=CHARSET_HTML_REGEX;
module.exports.CHARSET_HTTP_REGEX=CHARSET_HTTP_REGEX;
module.exports.IANA_REGEX=IANA_REGEX;

}).call(this,"/lighthouse-core/audits/dobetterweb/charset.js");
},{"../../computed/main-resource.js":12,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/dobetterweb/doctype":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Page has the HTML doctype',

failureTitle:'Page lacks the HTML doctype, thus triggering quirks-mode',

description:'Specifying a doctype prevents the browser '+
'from switching to quirks-mode. '+
'[Learn more](https://web.dev/doctype).',

explanationNoDoctype:'Document must contain a doctype',

explanationPublicId:'Expected publicId to be an empty string',

explanationSystemId:'Expected systemId to be an empty string',

explanationBadDoctype:'Doctype name must be the lowercase string `html`'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class Doctype extends Audit{



static get meta(){
return{
id:'doctype',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Doctype']};

}





static audit(artifacts){
if(!artifacts.Doctype){
return{
score:0,
explanation:str_(UIStrings.explanationNoDoctype)};

}


const doctypeName=artifacts.Doctype.name.trim();
const doctypePublicId=artifacts.Doctype.publicId;
const doctypeSystemId=artifacts.Doctype.systemId;

if(doctypePublicId!==''){
return{
score:0,
explanation:str_(UIStrings.explanationPublicId)};

}

if(doctypeSystemId!==''){
return{
score:0,
explanation:str_(UIStrings.explanationSystemId)};

}




if(doctypeName==='html'){
return{
score:1};

}else{
return{
score:0,
explanation:str_(UIStrings.explanationBadDoctype)};

}
}}


module.exports=Doctype;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/doctype.js");
},{"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/dobetterweb/dom-size":[function(require,module,exports){
(function(__filename){












'use strict';

const Audit=require('../audit.js');
const I18n=require('../../report/html/renderer/i18n.js');
const i18n_=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Avoids an excessive DOM size',

failureTitle:'Avoid an excessive DOM size',

description:'A large DOM will increase memory usage, cause longer '+
'[style calculations](https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations), '+
'and produce costly [layout reflows](https://developers.google.com/speed/articles/reflow). [Learn more](https://web.dev/dom-size).',

columnStatistic:'Statistic',

columnValue:'Value',

displayValue:`{itemCount, plural,
    =1 {1 element}
    other {# elements}
    }`,

statisticDOMElements:'Total DOM Elements',

statisticDOMDepth:'Maximum DOM Depth',

statisticDOMWidth:'Maximum Child Elements'};


const str_=i18n_.createMessageInstanceIdFn(__filename,UIStrings);

class DOMSize extends Audit{



static get meta(){
return{
id:'dom-size',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['DOMStats']};

}




static get defaultOptions(){
return{


p10:818,
median:1400};

}







static audit(artifacts,context){
const stats=artifacts.DOMStats;

const score=Audit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
stats.totalBodyElements);



const headings=[
{key:'statistic',itemType:'text',text:str_(UIStrings.columnStatistic)},
{key:'element',itemType:'code',text:str_(i18n_.UIStrings.columnElement)},
{key:'value',itemType:'numeric',text:str_(UIStrings.columnValue)}];


const i18n=new I18n(context.settings.locale);


const items=[
{
statistic:str_(UIStrings.statisticDOMElements),
element:'',

value:i18n.formatNumber(stats.totalBodyElements)},

{
statistic:str_(UIStrings.statisticDOMDepth),
element:{
type:'code',
value:stats.depth.snippet},

value:i18n.formatNumber(stats.depth.max)},

{
statistic:str_(UIStrings.statisticDOMWidth),
element:{
type:'code',
value:stats.width.snippet},

value:i18n.formatNumber(stats.width.max)}];



return{
score,
numericValue:stats.totalBodyElements,
numericUnit:'element',
displayValue:str_(UIStrings.displayValue,{itemCount:stats.totalBodyElements}),
extendedInfo:{
value:items},

details:Audit.makeTableDetails(headings,items)};

}}


module.exports=DOMSize;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/dom-size.js");
},{"../../lib/i18n/i18n.js":77,"../../report/html/renderer/i18n.js":98,"../audit.js":3}],"../audits/dobetterweb/external-anchors-use-rel-noopener":[function(require,module,exports){
(function(__filename){





'use strict';

const URL=require('../../lib/url-shim.js');
const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Links to cross-origin destinations are safe',

failureTitle:'Links to cross-origin destinations are unsafe',

description:'Add `rel="noopener"` or `rel="noreferrer"` to any external links to improve '+
'performance and prevent security vulnerabilities. '+
'[Learn more](https://web.dev/external-anchors-use-rel-noopener).',




warning:'Unable to determine the destination for anchor ({anchorHTML}). '+
'If not used as a hyperlink, consider removing target=_blank.',

columnFailingAnchors:'Failing Anchors'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ExternalAnchorsUseRelNoopenerAudit extends Audit{



static get meta(){
return{
id:'external-anchors-use-rel-noopener',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['URL','AnchorElements']};

}





static audit(artifacts){

const warnings=[];
const pageHost=new URL(artifacts.URL.finalUrl).host;
const failingAnchors=artifacts.AnchorElements.
filter(anchor=>anchor.target==='_blank'&&!anchor.rel.includes('noopener')&&
!anchor.rel.includes('noreferrer')).

filter(anchor=>{
try{
return new URL(anchor.href).host!==pageHost;
}catch(err){
warnings.push(str_(UIStrings.warning,{anchorHTML:anchor.outerHTML}));
return true;
}
}).
filter(anchor=>{
return!anchor.href||anchor.href.toLowerCase().startsWith('http');
}).
map(anchor=>{
return{
node:{
type:'node',
path:anchor.devtoolsNodePath||'',
selector:anchor.selector||'',
nodeLabel:anchor.nodeLabel||'',
snippet:anchor.outerHTML||''},

href:anchor.href||'Unknown',
target:anchor.target||'',
rel:anchor.rel||'',
outerHTML:anchor.outerHTML||''};

});


const headings=[
{key:'node',itemType:'node',text:str_(UIStrings.columnFailingAnchors)}];


const details=Audit.makeTableDetails(headings,failingAnchors);

return{
score:Number(failingAnchors.length===0),
extendedInfo:{
value:failingAnchors},

details,
warnings};

}}


module.exports=ExternalAnchorsUseRelNoopenerAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/external-anchors-use-rel-noopener.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","../audit.js":3}],"../audits/dobetterweb/geolocation-on-start":[function(require,module,exports){
(function(__filename){











'use strict';

const ViolationAudit=require('../violation-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Avoids requesting the geolocation permission on page load',

failureTitle:'Requests the geolocation permission on page load',

description:'Users are mistrustful of or confused by sites that request their '+
'location without context. Consider tying the request to a user action instead. '+
'[Learn more](https://web.dev/geolocation-on-start).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class GeolocationOnStart extends ViolationAudit{



static get meta(){
return{
id:'geolocation-on-start',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ConsoleMessages']};

}





static audit(artifacts){

const results=ViolationAudit.getViolationResults(artifacts,/geolocation/);


const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'label',itemType:'text',text:str_(i18n.UIStrings.columnLocation)}];



const details=ViolationAudit.makeTableDetails(headings,results);

return{
score:Number(results.length===0),
extendedInfo:{
value:results},

details};

}}


module.exports=GeolocationOnStart;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/geolocation-on-start.js");
},{"../../lib/i18n/i18n.js":77,"../violation-audit.js":7}],"../audits/dobetterweb/js-libraries":[function(require,module,exports){
(function(__filename){










'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Detected JavaScript libraries',

description:'All front-end JavaScript libraries detected on the page. [Learn more](https://web.dev/js-libraries).',

columnVersion:'Version'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class JsLibrariesAudit extends Audit{



static get meta(){
return{
id:'js-libraries',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
requiredArtifacts:['Stacks']};

}





static audit(artifacts){
const libDetails=artifacts.Stacks.
filter(stack=>stack.detector==='js').

filter(stack=>!stack.id.endsWith('-fast')).
map(stack=>({
name:stack.name,
version:stack.version,
npm:stack.npm}));



const headings=[
{key:'name',itemType:'text',text:str_(i18n.UIStrings.columnName)},
{key:'version',itemType:'text',text:str_(UIStrings.columnVersion)}];

const details=Audit.makeTableDetails(headings,libDetails,{});

const debugData={
type:'debugdata',
stacks:artifacts.Stacks.map(stack=>{
return{
id:stack.id,
version:stack.version};

})};


return{
score:1,
details:{
...details,
debugData}};


}}


module.exports=JsLibrariesAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/js-libraries.js");
},{"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/dobetterweb/no-document-write":[function(require,module,exports){
(function(__filename){




























'use strict';

const ViolationAudit=require('../violation-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Avoids `document.write()`',

failureTitle:'Avoid `document.write()`',

description:'For users on slow connections, external scripts dynamically injected via '+
'`document.write()` can delay page load by tens of seconds. '+
'[Learn more](https://web.dev/no-document-write).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class NoDocWriteAudit extends ViolationAudit{



static get meta(){
return{
id:'no-document-write',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ConsoleMessages']};

}





static audit(artifacts){
const results=ViolationAudit.getViolationResults(artifacts,/document\.write/);


const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'label',itemType:'text',text:str_(i18n.UIStrings.columnLocation)}];


const details=ViolationAudit.makeTableDetails(headings,results);

return{
score:Number(results.length===0),
extendedInfo:{
value:results},

details};

}}


module.exports=NoDocWriteAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/no-document-write.js");
},{"../../lib/i18n/i18n.js":77,"../violation-audit.js":7}],"../audits/dobetterweb/no-vulnerable-libraries":[function(require,module,exports){
(function(__filename){












'use strict';

const Audit=require('../audit.js');
const Sentry=require('../../lib/sentry.js');
const semver=require('semver');
const snykDatabase=require('../../../third-party/snyk/snapshot.json');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Avoids front-end JavaScript libraries'+
' with known security vulnerabilities',

failureTitle:'Includes front-end JavaScript libraries'+
' with known security vulnerabilities',

description:'Some third-party scripts may contain known security vulnerabilities '+
'that are easily identified and exploited by attackers. '+
'[Learn more](https://web.dev/no-vulnerable-libraries).',

displayValue:`{itemCount, plural,
    =1 {1 vulnerability detected}
    other {# vulnerabilities detected}
    }`,

columnVersion:'Library Version',

columnVuln:'Vulnerability Count',

columnSeverity:'Highest Severity',

rowSeverityLow:'Low',

rowSeverityMedium:'Medium',

rowSeverityHigh:'High'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const SEMVER_REGEX=/^(\d+\.\d+\.\d+)[^-0-9]+/;


const rowMap={
'low':str_(UIStrings.rowSeverityLow),
'medium':str_(UIStrings.rowSeverityMedium),
'high':str_(UIStrings.rowSeverityHigh)};





class NoVulnerableLibrariesAudit extends Audit{



static get meta(){
return{
id:'no-vulnerable-libraries',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Stacks']};

}




static get snykDB(){
return snykDatabase;
}




static get severityMap(){
return{
high:3,
medium:2,
low:1};

}






static normalizeVersion(version){
if(!version)return version;
if(semver.valid(version))return version;


if(/^\d+\.\d+$/.test(version))return`${version}.0`;

const versionMatch=version.match(SEMVER_REGEX);
if(versionMatch)return versionMatch[1];

return version;
}







static getVulnerabilities(normalizedVersion,lib,snykDB){
if(!lib.npm||!snykDB.npm[lib.npm]){
return[];
}


try{
semver.satisfies(normalizedVersion,'*');
}catch(err){
err.pkgName=lib.npm;

Sentry.captureException(err,{level:'warning'});
return[];
}


const vulnCandidatesForLib=snykDB.npm[lib.npm];
const matchingVulns=vulnCandidatesForLib.filter(vulnCandidate=>{


const hasMatchingVersion=vulnCandidate.semver.vulnerable.some(vulnSemverRange=>
semver.satisfies(normalizedVersion,vulnSemverRange));

return hasMatchingVersion;
});

const vulns=matchingVulns.map(vuln=>{
return{
severity:rowMap[vuln.severity],
numericSeverity:this.severityMap[vuln.severity],
library:`${lib.name}@${normalizedVersion}`,
url:'https://snyk.io/vuln/'+vuln.id};

});

return vulns;
}





static highestSeverity(vulnerabilities){
const sortedVulns=vulnerabilities.
sort((a,b)=>b.numericSeverity-a.numericSeverity);
return sortedVulns[0].severity;
}





static audit(artifacts){
const foundLibraries=artifacts.Stacks.filter(stack=>stack.detector==='js');
const snykDB=NoVulnerableLibrariesAudit.snykDB;

if(!foundLibraries.length){
return{
score:1};

}

let totalVulns=0;

const vulnerabilityResults=[];

const libraryVulns=foundLibraries.map(lib=>{
const version=this.normalizeVersion(lib.version)||'';
const vulns=this.getVulnerabilities(version,lib,snykDB);
const vulnCount=vulns.length;
totalVulns+=vulnCount;

let highestSeverity;
if(vulns.length>0){
highestSeverity=this.highestSeverity(vulns);

vulnerabilityResults.push({
highestSeverity,
vulnCount,
detectedLib:{
text:lib.name+'@'+version,
url:`https://snyk.io/vuln/npm:${lib.npm}?lh=${version}&utm_source=lighthouse&utm_medium=ref&utm_campaign=audit`,
type:'link'}});


}

return{
name:lib.name,
npmPkgName:lib.npm,
version,
vulns,
highestSeverity};

});

let displayValue='';
if(totalVulns>0){
displayValue=str_(UIStrings.displayValue,{itemCount:totalVulns});
}


const headings=[
{key:'detectedLib',itemType:'link',text:str_(UIStrings.columnVersion)},
{key:'vulnCount',itemType:'text',text:str_(UIStrings.columnVuln)},
{key:'highestSeverity',itemType:'text',text:str_(UIStrings.columnSeverity)}];

const details=Audit.makeTableDetails(headings,vulnerabilityResults,{});

return{
score:Number(totalVulns===0),
displayValue,
extendedInfo:{
jsLibs:libraryVulns,
vulnerabilities:vulnerabilityResults},

details};

}}


module.exports=NoVulnerableLibrariesAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js");
},{"../../../third-party/snyk/snapshot.json":212,"../../lib/i18n/i18n.js":77,"../../lib/sentry.js":89,"../audit.js":3,"semver":191}],"../audits/dobetterweb/notification-on-start":[function(require,module,exports){
(function(__filename){











'use strict';

const ViolationAudit=require('../violation-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Avoids requesting the notification permission on page load',

failureTitle:'Requests the notification permission on page load',

description:'Users are mistrustful of or confused by sites that request to send '+
'notifications without context. Consider tying the request to user gestures '+
'instead. [Learn more](https://web.dev/notification-on-start).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class NotificationOnStart extends ViolationAudit{



static get meta(){
return{
id:'notification-on-start',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ConsoleMessages']};

}





static audit(artifacts){
const results=ViolationAudit.getViolationResults(artifacts,/notification permission/);


const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'label',itemType:'text',text:str_(i18n.UIStrings.columnLocation)}];


const details=ViolationAudit.makeTableDetails(headings,results);

return{
score:Number(results.length===0),
extendedInfo:{
value:results},

details};

}}


module.exports=NotificationOnStart;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/notification-on-start.js");
},{"../../lib/i18n/i18n.js":77,"../violation-audit.js":7}],"../audits/dobetterweb/password-inputs-can-be-pasted-into":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Allows users to paste into password fields',

failureTitle:'Prevents users to paste into password fields',

description:'Preventing password pasting undermines good security policy. '+
'[Learn more](https://web.dev/password-inputs-can-be-pasted-into).',

columnFailingElem:'Failing Elements'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class PasswordInputsCanBePastedIntoAudit extends Audit{



static get meta(){
return{
id:'password-inputs-can-be-pasted-into',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['PasswordInputsWithPreventedPaste']};

}





static audit(artifacts){
const passwordInputsWithPreventedPaste=artifacts.PasswordInputsWithPreventedPaste;


const items=[];
passwordInputsWithPreventedPaste.forEach(input=>{
items.push({
node:{type:'node',snippet:input.snippet}});

});


const headings=[
{key:'node',itemType:'node',text:str_(UIStrings.columnFailingElem)}];


return{
score:Number(passwordInputsWithPreventedPaste.length===0),
extendedInfo:{
value:passwordInputsWithPreventedPaste},

details:Audit.makeTableDetails(headings,items)};

}}


module.exports=PasswordInputsCanBePastedIntoAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/password-inputs-can-be-pasted-into.js");
},{"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/dobetterweb/uses-http2":[function(require,module,exports){
(function(__filename){











'use strict';

const URL=require('../../lib/url-shim.js');
const Audit=require('../audit.js');
const NetworkRecords=require('../../computed/network-records.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Uses HTTP/2 for its own resources',

failureTitle:'Does not use HTTP/2 for all of its resources',

description:'HTTP/2 offers many benefits over HTTP/1.1, including binary headers, '+
'multiplexing, and server push. [Learn more](https://web.dev/uses-http2).',

displayValue:`{itemCount, plural,
    =1 {1 request not served via HTTP/2}
    other {# requests not served via HTTP/2}
    }`,

columnProtocol:'Protocol'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class UsesHTTP2Audit extends Audit{



static get meta(){
return{
id:'uses-http2',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['URL','devtoolsLogs']};

}






static audit(artifacts,context){
const devtoolsLogs=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
return NetworkRecords.request(devtoolsLogs,context).then(networkRecords=>{
const finalHost=new URL(artifacts.URL.finalUrl).host;

const seenURLs=new Set();

const resources=networkRecords.filter(record=>{


if(record.fetchedViaServiceWorker)return false;

const isOldHttp=/HTTP\/[01][.\d]?/i.test(record.protocol);
if(!isOldHttp)return false;
const requestHost=new URL(record.url).host;
return requestHost===finalHost;
}).map(record=>{
return{
protocol:record.protocol,
url:record.url};

}).filter(record=>{
if(seenURLs.has(record.url))return false;
seenURLs.add(record.url);
return true;
});

let displayValue='';
if(resources.length>0){
displayValue=str_(UIStrings.displayValue,{itemCount:resources.length});
}


const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'protocol',itemType:'text',text:str_(UIStrings.columnProtocol)}];

const details=Audit.makeTableDetails(headings,resources);

return{
score:Number(resources.length===0),
displayValue:displayValue,
extendedInfo:{
value:{
results:resources}},


details};

});
}}


module.exports=UsesHTTP2Audit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/uses-http2.js");
},{"../../computed/network-records.js":39,"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","../audit.js":3}],"../audits/dobetterweb/uses-passive-event-listeners":[function(require,module,exports){
(function(__filename){











'use strict';

const ViolationAudit=require('../violation-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Uses passive listeners to improve scrolling performance',

failureTitle:'Does not use passive listeners to improve scrolling performance',

description:'Consider marking your touch and wheel event listeners as `passive` '+
'to improve your page\'s scroll performance. '+
'[Learn more](https://web.dev/uses-passive-event-listeners).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class PassiveEventsAudit extends ViolationAudit{



static get meta(){
return{
id:'uses-passive-event-listeners',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ConsoleMessages']};

}





static audit(artifacts){
const results=ViolationAudit.getViolationResults(artifacts,/passive event listener/);


const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'label',itemType:'text',text:str_(i18n.UIStrings.columnLocation)}];


const details=ViolationAudit.makeTableDetails(headings,results);

return{
score:Number(results.length===0),
extendedInfo:{
value:results},

details};

}}


module.exports=PassiveEventsAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/dobetterweb/uses-passive-event-listeners.js");
},{"../../lib/i18n/i18n.js":77,"../violation-audit.js":7}],"../audits/errors-in-console":[function(require,module,exports){
(function(__filename){





'use strict';






const log=require('lighthouse-logger');
const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'No browser errors logged to the console',

failureTitle:'Browser errors were logged to the console',

description:'Errors logged to the console indicate unresolved problems. '+
'They can come from network request failures and other browser concerns. '+
'[Learn more](https://web.dev/errors-in-console)',

columnDesc:'Description'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);



class ErrorLogs extends Audit{



static get meta(){
return{
id:'errors-in-console',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ConsoleMessages','RuntimeExceptions']};

}


static defaultOptions(){
return{};
}








static filterAccordingToOptions(items,options){
const{ignoredPatterns,...restOfOptions}=options;
const otherOptionKeys=Object.keys(restOfOptions);
if(otherOptionKeys.length)log.warn(this.meta.id,'Unrecognized options',otherOptionKeys);
if(!ignoredPatterns)return items;

return items.filter(({description})=>{
if(!description)return true;
for(const pattern of ignoredPatterns){
if(pattern instanceof RegExp&&pattern.test(description))return false;
if(typeof pattern==='string'&&description.includes(pattern))return false;
}

return true;
});
}






static audit(artifacts,context){
const auditOptions=context.options;

const consoleEntries=artifacts.ConsoleMessages;
const runtimeExceptions=artifacts.RuntimeExceptions;

const consoleRows=
consoleEntries.filter(log=>log.entry&&log.entry.level==='error').
map(item=>{
return{
source:item.entry.source,
description:item.entry.text,
url:item.entry.url};

});

const runtimeExRows=
runtimeExceptions.filter(entry=>entry.exceptionDetails!==undefined).
map(entry=>{
const description=entry.exceptionDetails.exception?
entry.exceptionDetails.exception.description:entry.exceptionDetails.text;

return{
source:'Runtime.exception',
description,
url:entry.exceptionDetails.url};

});

const tableRows=ErrorLogs.filterAccordingToOptions(
consoleRows.concat(runtimeExRows),
auditOptions).
sort((a,b)=>(a.description||'').localeCompare(b.description||''));


const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'description',itemType:'code',text:str_(UIStrings.columnDesc)}];


const details=Audit.makeTableDetails(headings,tableRows);
const numErrors=tableRows.length;

return{
score:Number(numErrors===0),
details};

}}


module.exports=ErrorLogs;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/errors-in-console.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3,"lighthouse-logger":135}],"../audits/final-screenshot":[function(require,module,exports){





'use strict';

const Audit=require('./audit.js');
const LHError=require('../lib/lh-error.js');
const TraceOfTab=require('../computed/trace-of-tab.js');
const Screenshots=require('../computed/screenshots.js');

class FinalScreenshot extends Audit{



static get meta(){
return{
id:'final-screenshot',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
title:'Final Screenshot',
description:'The last screenshot captured of the pageload.',
requiredArtifacts:['traces']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const traceOfTab=await TraceOfTab.request(trace,context);
const screenshots=await Screenshots.request(trace,context);
const{navigationStart}=traceOfTab.timestamps;
const finalScreenshot=screenshots[screenshots.length-1];

if(!finalScreenshot){
throw new LHError(LHError.errors.NO_SCREENSHOTS);
}

return{
score:1,
details:{
type:'screenshot',
timing:Math.round((finalScreenshot.timestamp-navigationStart)/1000),
timestamp:finalScreenshot.timestamp,
data:finalScreenshot.datauri}};


}}


module.exports=FinalScreenshot;

},{"../computed/screenshots.js":42,"../computed/trace-of-tab.js":44,"../lib/lh-error.js":82,"./audit.js":3}],"../audits/font-display":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const URL=require('../lib/url-shim.js');
const PASSING_FONT_DISPLAY_REGEX=/^(block|fallback|optional|swap)$/;
const CSS_URL_REGEX=/url\((.*?)\)/;
const CSS_URL_GLOBAL_REGEX=new RegExp(CSS_URL_REGEX,'g');
const i18n=require('../lib/i18n/i18n.js');
const Sentry=require('../lib/sentry.js');
const NetworkRecords=require('../computed/network-records.js');

const UIStrings={

title:'All text remains visible during webfont loads',

failureTitle:'Ensure text remains visible during webfont load',

description:
'Leverage the font-display CSS feature to ensure text is user-visible while '+
'webfonts are loading. '+
'[Learn more](https://web.dev/font-display).',




undeclaredFontURLWarning:'Lighthouse was unable to automatically check the font-display value '+
'for the following URL: {fontURL}.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class FontDisplay extends Audit{



static get meta(){
return{
id:'font-display',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','CSSUsage','URL']};

}





static findFontDisplayDeclarations(artifacts){

const passingURLs=new Set();

const failingURLs=new Set();


for(const stylesheet of artifacts.CSSUsage.stylesheets){

const newlinesStripped=stylesheet.content.replace(/(\r|\n)+/g,' ');

const fontFaceDeclarations=newlinesStripped.match(/@font-face\s*{(.*?)}/g)||[];

for(const declaration of fontFaceDeclarations){

const rawFontURLs=declaration.match(CSS_URL_GLOBAL_REGEX);

if(!rawFontURLs)continue;


const fontDisplayMatch=declaration.match(/font-display\s*:\s*(\w+)\s*(;|\})/);
const rawFontDisplay=fontDisplayMatch&&fontDisplayMatch[1]||'';
const hasPassingFontDisplay=PASSING_FONT_DISPLAY_REGEX.test(rawFontDisplay);
const targetURLSet=hasPassingFontDisplay?passingURLs:failingURLs;


const relativeURLs=rawFontURLs.

map(s=>s.match(CSS_URL_REGEX)[1].trim()).
map(s=>{

if(/^('|").*\1$/.test(s)){
return s.substr(1,s.length-2);
}

return s;
});


for(const relativeURL of relativeURLs){
try{
const relativeRoot=URL.isValid(stylesheet.header.sourceURL)?
stylesheet.header.sourceURL:artifacts.URL.finalUrl;
const absoluteURL=new URL(relativeURL,relativeRoot);
targetURLSet.add(absoluteURL.href);
}catch(err){
Sentry.captureException(err,{tags:{audit:this.meta.id}});
}
}
}
}

return{passingURLs,failingURLs};
}






static async audit(artifacts,context){
const devtoolsLogs=artifacts.devtoolsLogs[this.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLogs,context);
const{passingURLs,failingURLs}=FontDisplay.findFontDisplayDeclarations(artifacts);

const warningURLs=[];

const results=networkRecords.

filter(record=>record.resourceType==='Font').

filter(record=>!/^data:/.test(record.url)).
filter(record=>!/^blob:/.test(record.url)).

filter(record=>{

if(failingURLs.has(record.url))return true;

if(!passingURLs.has(record.url))warningURLs.push(record.url);
return false;
}).
map(record=>{


const wastedMs=Math.min((record.endTime-record.startTime)*1000,3000);

return{
url:record.url,
wastedMs};

});


const headings=[
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'wastedMs',itemType:'ms',text:str_(i18n.UIStrings.columnWastedMs)}];


const details=Audit.makeTableDetails(headings,results);

return{
score:Number(results.length===0),
details,
warnings:warningURLs.map(fontURL=>str_(UIStrings.undeclaredFontURLWarning,{fontURL}))};

}}


module.exports=FontDisplay;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/font-display.js");
},{"../computed/network-records.js":39,"../lib/i18n/i18n.js":77,"../lib/sentry.js":89,"../lib/url-shim.js":"url","./audit.js":3}],"../audits/image-aspect-ratio":[function(require,module,exports){
(function(__filename){











'use strict';

const Audit=require('./audit.js');
const URL=require('../lib/url-shim.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Displays images with correct aspect ratio',

failureTitle:'Displays images with incorrect aspect ratio',

description:'Image display dimensions should match natural aspect ratio. '+
'[Learn more](https://web.dev/image-aspect-ratio).',




warningCompute:'Invalid image sizing information {url}',

columnDisplayed:'Aspect Ratio (Displayed)',

columnActual:'Aspect Ratio (Actual)'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const THRESHOLD_PX=2;



class ImageAspectRatio extends Audit{



static get meta(){
return{
id:'image-aspect-ratio',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ImageElements']};

}





static computeAspectRatios(image){
const url=URL.elideDataURI(image.src);
const actualAspectRatio=image.naturalWidth/image.naturalHeight;
const displayedAspectRatio=image.displayedWidth/image.displayedHeight;

const targetDisplayHeight=image.displayedWidth/actualAspectRatio;
const doRatiosMatch=Math.abs(targetDisplayHeight-image.displayedHeight)<THRESHOLD_PX;

if(!Number.isFinite(actualAspectRatio)||
!Number.isFinite(displayedAspectRatio)){
return new Error(str_(UIStrings.warningCompute,{url}));
}

return{
url,
displayedAspectRatio:`${image.displayedWidth} x ${image.displayedHeight}
        (${displayedAspectRatio.toFixed(2)})`,
actualAspectRatio:`${image.naturalWidth} x ${image.naturalHeight}
        (${actualAspectRatio.toFixed(2)})`,
doRatiosMatch};

}





static audit(artifacts){
const images=artifacts.ImageElements;


const warnings=[];

const results=[];
images.filter(image=>{





return!image.isCss&&
image.mimeType&&
image.mimeType!=='image/svg+xml'&&
image.naturalHeight>5&&
image.naturalWidth>5&&
image.displayedWidth&&
image.displayedHeight&&
!image.usesObjectFit;
}).forEach(image=>{
const wellDefinedImage=image;
const processed=ImageAspectRatio.computeAspectRatios(wellDefinedImage);
if(processed instanceof Error){
warnings.push(processed.message);
return;
}

if(!processed.doRatiosMatch)results.push(processed);
});


const headings=[
{key:'url',itemType:'thumbnail',text:''},
{key:'url',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'displayedAspectRatio',itemType:'text',text:str_(UIStrings.columnDisplayed)},
{key:'actualAspectRatio',itemType:'text',text:str_(UIStrings.columnActual)}];


return{
score:Number(results.length===0),
warnings,
details:Audit.makeTableDetails(headings,results)};

}}


module.exports=ImageAspectRatio;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/image-aspect-ratio.js");
},{"../lib/i18n/i18n.js":77,"../lib/url-shim.js":"url","./audit.js":3}],"../audits/image-size-responsive":[function(require,module,exports){
(function(__filename){










'use strict';

const Audit=require('./audit.js');
const URL=require('../lib/url-shim.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Displays images with appropriate size',

failureTitle:'Displays images with inappropriate size',

description:'Image natural dimensions should be proportional to the display size and the '+
'pixel ratio to maximize image clarity. [Learn more](https://web.dev/image-size-responsive).',

columnDisplayed:'Displayed size',

columnActual:'Actual size',

columnExpected:'Expected size'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





const SMALL_IMAGE_FACTOR=1.0;
const LARGE_IMAGE_FACTOR=0.75;



const SMALL_IMAGE_THRESHOLD=64;








function isVisible(imageRect,viewportDimensions){
return(
(imageRect.bottom-imageRect.top)*(imageRect.right-imageRect.left)>0&&
imageRect.top<=viewportDimensions.innerHeight&&
imageRect.bottom>=0&&
imageRect.left<=viewportDimensions.innerWidth&&
imageRect.right>=0);

}





function isCandidate(image){
if(image.displayedWidth<=1||image.displayedHeight<=1){
return false;
}
if(image.naturalWidth===0||image.naturalHeight===0){
return false;
}
if(image.mimeType==='image/svg+xml'){
return false;
}
if(image.isCss){
return false;
}
if(image.usesObjectFit){
return false;
}
if(image.usesPixelArtScaling){
return false;
}
if(image.usesSrcSetDensityDescriptor){
return false;
}
return true;
}






function imageHasRightSize(image,DPR){
const[expectedWidth,expectedHeight]=
allowedImageSize(image.displayedWidth,image.displayedHeight,DPR);
return image.naturalWidth>=expectedWidth&&image.naturalHeight>=expectedHeight;
}






function getResult(image,DPR){
const[expectedWidth,expectedHeight]=
expectedImageSize(image.displayedWidth,image.displayedHeight,DPR);
return{
url:image.src,
elidedUrl:URL.elideDataURI(image.src),
displayedSize:`${image.displayedWidth} x ${image.displayedHeight}`,
actualSize:`${image.naturalWidth} x ${image.naturalHeight}`,
actualPixels:image.naturalWidth*image.naturalHeight,
expectedSize:`${expectedWidth} x ${expectedHeight}`,
expectedPixels:expectedWidth*expectedHeight};

}














function allowedImageSize(displayedWidth,displayedHeight,DPR){
let factor=SMALL_IMAGE_FACTOR;
if(displayedWidth>SMALL_IMAGE_THRESHOLD||displayedHeight>SMALL_IMAGE_THRESHOLD){
factor=LARGE_IMAGE_FACTOR;
}
const width=Math.ceil(factor*DPR*displayedWidth);
const height=Math.ceil(factor*DPR*displayedHeight);
return[width,height];
}









function expectedImageSize(displayedWidth,displayedHeight,DPR){
const width=Math.ceil(DPR*displayedWidth);
const height=Math.ceil(DPR*displayedHeight);
return[width,height];
}









function deduplicateResultsByUrl(results){
results.sort((a,b)=>a.url===b.url?0:a.url<b.url?-1:1);
const deduplicated=[];
for(const r of results){
const previousResult=deduplicated[deduplicated.length-1];
if(previousResult&&previousResult.url===r.url){

if(previousResult.expectedPixels<r.expectedPixels){
deduplicated[deduplicated.length-1]=r;
}
}else{
deduplicated.push(r);
}
}
return deduplicated;
}







function sortResultsBySizeDelta(results){
return results.sort(
(a,b)=>b.expectedPixels-b.actualPixels-(a.expectedPixels-a.actualPixels));
}

class ImageSizeResponsive extends Audit{



static get meta(){
return{
id:'image-size-responsive',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ImageElements','ViewportDimensions']};

}





static audit(artifacts){
const DPR=artifacts.ViewportDimensions.devicePixelRatio;
const results=Array.
from(artifacts.ImageElements).
filter(isCandidate).
filter(image=>!imageHasRightSize(image,DPR)).
filter(image=>isVisible(image.clientRect,artifacts.ViewportDimensions)).
map(image=>getResult(image,DPR));


const headings=[
{key:'url',itemType:'thumbnail',text:''},
{key:'elidedUrl',itemType:'url',text:str_(i18n.UIStrings.columnURL)},
{key:'displayedSize',itemType:'text',text:str_(UIStrings.columnDisplayed)},
{key:'actualSize',itemType:'text',text:str_(UIStrings.columnActual)},
{key:'expectedSize',itemType:'text',text:str_(UIStrings.columnExpected)}];


const finalResults=sortResultsBySizeDelta(deduplicateResultsByUrl(results));

return{
score:Number(results.length===0),
details:Audit.makeTableDetails(headings,finalResults)};

}}


module.exports=ImageSizeResponsive;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/image-size-responsive.js");
},{"../lib/i18n/i18n.js":77,"../lib/url-shim.js":"url","./audit.js":3}],"../audits/installable-manifest":[function(require,module,exports){
(function(__filename){





'use strict';

const MultiCheckAudit=require('./multi-check-audit.js');
const ManifestValues=require('../computed/manifest-values.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Web app manifest meets the installability requirements',

failureTitle:'Web app manifest does not meet the installability requirements',

description:'Browsers can proactively prompt users to add your app to their homescreen, '+
'which can lead to higher engagement. '+
'[Learn more](https://web.dev/installable-manifest).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);















class InstallableManifest extends MultiCheckAudit{



static get meta(){
return{
id:'installable-manifest',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['URL','WebAppManifest','InstallabilityErrors']};

}





static assessManifest(manifestValues){
if(manifestValues.isParseFailure&&manifestValues.parseFailureReason){
return[manifestValues.parseFailureReason];
}


const failures=[];
const bannerCheckIds=[
'hasName',






'hasShortName',
'hasStartUrl',
'hasPWADisplayValue',
'hasIconsAtLeast144px',
'fetchesIcon'];

manifestValues.allChecks.
filter(item=>bannerCheckIds.includes(item.id)).
forEach(item=>{
if(!item.passing){
failures.push(item.failureText);
}
});

return failures;
}






static async audit_(artifacts,context){
const manifestValues=await ManifestValues.request(artifacts,context);
const manifestFailures=InstallableManifest.assessManifest(manifestValues);

return{
failures:[
...manifestFailures],

manifestValues};

}}


module.exports=InstallableManifest;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/installable-manifest.js");
},{"../computed/manifest-values.js":14,"../lib/i18n/i18n.js":77,"./multi-check-audit.js":6}],"../audits/is-on-https":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const URL=require('../lib/url-shim.js');
const NetworkRecords=require('../computed/network-records.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Uses HTTPS',

failureTitle:'Does not use HTTPS',

description:'All sites should be protected with HTTPS, even ones that don\'t handle '+
'sensitive data. This includes avoiding [mixed content](https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content), '+
'where some resources are loaded over HTTP despite the initial request being served'+
'over HTTPS. HTTPS prevents intruders from tampering with or passively listening '+
'in on the communications between your app and your users, and is a prerequisite for '+
'HTTP/2 and many new web platform APIs. '+
'[Learn more](https://web.dev/is-on-https).',

displayValue:`{itemCount, plural,
    =1 {1 insecure request found}
    other {# insecure requests found}
    }`,

columnInsecureURL:'Insecure URL'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const SECURE_SCHEMES=['data','https','wss','blob','chrome','chrome-extension','about',
'filesystem'];
const SECURE_DOMAINS=['localhost','127.0.0.1'];

class HTTPS extends Audit{



static get meta(){
return{
id:'is-on-https',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs']};

}





static isSecureRecord(record){
return SECURE_SCHEMES.includes(record.parsedURL.scheme)||
SECURE_SCHEMES.includes(record.protocol)||
SECURE_DOMAINS.includes(record.parsedURL.host);
}






static audit(artifacts,context){
const devtoolsLogs=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
return NetworkRecords.request(devtoolsLogs,context).then(networkRecords=>{
const insecureURLs=networkRecords.
filter(record=>!HTTPS.isSecureRecord(record)).
map(record=>URL.elideDataURI(record.url));

const items=Array.from(new Set(insecureURLs)).map(url=>({url}));

let displayValue='';
if(items.length>0){
displayValue=str_(UIStrings.displayValue,{itemCount:items.length});
}


const headings=[
{key:'url',itemType:'url',text:str_(UIStrings.columnInsecureURL)}];


return{
score:Number(items.length===0),
displayValue,
extendedInfo:{
value:items},

details:Audit.makeTableDetails(headings,items)};

});
}}


module.exports=HTTPS;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/is-on-https.js");
},{"../computed/network-records.js":39,"../lib/i18n/i18n.js":77,"../lib/url-shim.js":"url","./audit.js":3}],"../audits/largest-contentful-paint-element":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Largest Contentful Paint element',

description:'This is the element that was identified as the Largest Contentful Paint. '+
'[Learn More](https://web.dev/lighthouse-largest-contentful-paint)',

displayValue:`{itemCount, plural,
    =1 {1 element found}
    other {# elements found}
    }`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class LargestContentfulPaintElement extends Audit{



static get meta(){
return{
id:'largest-contentful-paint-element',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
requiredArtifacts:['traces','TraceElements']};

}





static audit(artifacts){
const lcpElement=
artifacts.TraceElements.find(element=>element.metricName==='largest-contentful-paint');
const lcpElementDetails=[];
if(lcpElement){
lcpElementDetails.push({
node:{
type:'node',
path:lcpElement.devtoolsNodePath,
selector:lcpElement.selector,
nodeLabel:lcpElement.nodeLabel,
snippet:lcpElement.snippet}});


}


const headings=[
{key:'node',itemType:'node',text:str_(i18n.UIStrings.columnElement)}];


const details=Audit.makeTableDetails(headings,lcpElementDetails);

const displayValue=str_(UIStrings.displayValue,{itemCount:lcpElementDetails.length});

return{
score:1,
displayValue,
details};

}}


module.exports=LargestContentfulPaintElement;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/largest-contentful-paint-element.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/layout-shift-elements":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Avoid large layout shifts',

description:'These DOM elements contribute most to the CLS of the page.',

displayValue:`{nodeCount, plural,
    =0 {No elements found}
    =1 {1 element found}
    other {# elements found}
    }`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class LayoutShiftElements extends Audit{



static get meta(){
return{
id:'layout-shift-elements',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
requiredArtifacts:['TraceElements']};

}





static audit(artifacts){
const clsElements=
artifacts.TraceElements.filter(element=>element.metricName==='cumulative-layout-shift');

const clsElementData=clsElements.map(element=>{
return{
node:{
type:'node',
path:element.devtoolsNodePath,
selector:element.selector,
nodeLabel:element.nodeLabel,
snippet:element.snippet}};


});


const headings=[
{key:'node',itemType:'node',text:str_(i18n.UIStrings.columnElement)}];


const details=Audit.makeTableDetails(headings,clsElementData);
const displayValue=str_(UIStrings.displayValue,{nodeCount:clsElementData.length});

return{
score:1,
displayValue,
details};

}}


module.exports=LayoutShiftElements;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/layout-shift-elements.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/legacy-javascript":[function(require,module,exports){
(function(__filename){





'use strict';











const Audit=require('./audit.js');
const NetworkRecords=require('../computed/network-records.js');
const MainResource=require('../computed/main-resource.js');
const JSBundles=require('../computed/js-bundles.js');
const URL=require('../lib/url-shim.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Legacy JavaScript',



description:'Polyfills and transforms enable legacy browsers to use new JavaScript features. However, many aren\'t necessary for modern browsers. For your bundled JavaScript, adopt a modern script deployment strategy using module/nomodule feature detection to reduce the amount of code shipped to modern browsers, while retaining support for legacy browsers. [Learn More](https://philipwalton.com/articles/deploying-es2015-code-in-production-today/)'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





class CodePatternMatcher{



constructor(patterns){
const patternsExpression=patterns.map(pattern=>`(${pattern.expression})`).join('|');
this.re=new RegExp(`(^\r\n|\r|\n)|${patternsExpression}`,'g');
this.patterns=patterns;
}





match(code){

this.re.lastIndex=0;

const seen=new Set();

const matches=[];

let result;
let line=0;
let lineBeginsAtIndex=0;


while((result=this.re.exec(code))!==null){

const captureGroups=result.slice(1);



const[isNewline,...patternExpressionMatches]=captureGroups;
if(isNewline){
line++;
lineBeginsAtIndex=result.index+1;
continue;
}
const pattern=this.patterns[patternExpressionMatches.findIndex(Boolean)];





if(seen.has(pattern)){
continue;
}
seen.add(pattern);

matches.push({
name:pattern.name,
line,
column:result.index-lineBeginsAtIndex});

}

return matches;
}}


class LegacyJavascript extends Audit{



static get meta(){
return{
id:'legacy-javascript',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
description:str_(UIStrings.description),
title:str_(UIStrings.title),
requiredArtifacts:['devtoolsLogs','ScriptElements','SourceMaps','URL']};

}





static buildPolyfillExpression(object,property){
const qt=token=>
`['"]${token}['"]`;

let expression='';

if(object){

expression+=`${object}\\.${property}\\s?=[^=]`;
}else{



expression+=`(?:window\\.|[\\s;]+)${property}\\s?=[^=]`;
}


if(object){
expression+=`|${object}\\[${qt(property)}\\]\\s?=[^=]`;
}


expression+=`|defineProperty\\(${object||'window'},\\s?${qt(property)}`;


if(object){
const objectWithoutPrototype=object.replace('.prototype','');








expression+=`|\\$export\\([^,]+,${qt(objectWithoutPrototype)},{${property}:`;
}else{

expression+=`|function ${property}\\(`;
}

return expression;
}

static getPolyfillData(){
return[

{module:'es6.array.fill',name:'Array.prototype.fill'},
{module:'es6.array.filter',name:'Array.prototype.filter'},
{module:'es6.array.find',name:'Array.prototype.find'},
{module:'es6.array.find-index',name:'Array.prototype.findIndex'},
{module:'es6.array.for-each',name:'Array.prototype.forEach'},
{module:'es6.array.from',name:'Array.from'},
{module:'es6.array.is-array',name:'Array.isArray'},
{module:'es6.array.last-index-of',name:'Array.prototype.lastIndexOf'},
{module:'es6.array.map',name:'Array.prototype.map'},
{module:'es6.array.of',name:'Array.of'},
{module:'es6.array.reduce',name:'Array.prototype.reduce'},
{module:'es6.array.reduce-right',name:'Array.prototype.reduceRight'},
{module:'es6.array.some',name:'Array.prototype.some'},
{module:'es6.date.now',name:'Date.now'},
{module:'es6.date.to-iso-string',name:'Date.prototype.toISOString'},
{module:'es6.date.to-json',name:'Date.prototype.toJSON'},
{module:'es6.date.to-string',name:'Date.prototype.toString'},
{module:'es6.function.name',name:'Function.prototype.name'},
{module:'es6.map',name:'Map'},
{module:'es6.number.is-integer',name:'Number.isInteger'},
{module:'es6.number.is-safe-integer',name:'Number.isSafeInteger'},
{module:'es6.number.parse-float',name:'Number.parseFloat'},
{module:'es6.number.parse-int',name:'Number.parseInt'},
{module:'es6.object.assign',name:'Object.assign'},
{module:'es6.object.create',name:'Object.create'},
{module:'es6.object.define-properties',name:'Object.defineProperties'},
{module:'es6.object.define-property',name:'Object.defineProperty'},
{module:'es6.object.freeze',name:'Object.freeze'},
{module:'es6.object.get-own-property-descriptor',name:'Object.getOwnPropertyDescriptor'},
{module:'es6.object.get-own-property-names',name:'Object.getOwnPropertyNames'},
{module:'es6.object.get-prototype-of',name:'Object.getPrototypeOf'},
{module:'es6.object.is-extensible',name:'Object.isExtensible'},
{module:'es6.object.is-frozen',name:'Object.isFrozen'},
{module:'es6.object.is-sealed',name:'Object.isSealed'},
{module:'es6.object.keys',name:'Object.keys'},
{module:'es6.object.prevent-extensions',name:'Object.preventExtensions'},
{module:'es6.object.seal',name:'Object.seal'},
{module:'es6.object.set-prototype-of',name:'Object.setPrototypeOf'},
{module:'es6.promise',name:'Promise'},
{module:'es6.reflect.apply',name:'Reflect.apply'},
{module:'es6.reflect.construct',name:'Reflect.construct'},
{module:'es6.reflect.define-property',name:'Reflect.defineProperty'},
{module:'es6.reflect.delete-property',name:'Reflect.deleteProperty'},
{module:'es6.reflect.get',name:'Reflect.get'},
{module:'es6.reflect.get-own-property-descriptor',name:'Reflect.getOwnPropertyDescriptor'},
{module:'es6.reflect.get-prototype-of',name:'Reflect.getPrototypeOf'},
{module:'es6.reflect.has',name:'Reflect.has'},
{module:'es6.reflect.is-extensible',name:'Reflect.isExtensible'},
{module:'es6.reflect.own-keys',name:'Reflect.ownKeys'},
{module:'es6.reflect.prevent-extensions',name:'Reflect.preventExtensions'},
{module:'es6.reflect.set',name:'Reflect.set'},
{module:'es6.reflect.set-prototype-of',name:'Reflect.setPrototypeOf'},
{module:'es6.set',name:'Set'},
{module:'es6.string.code-point-at',name:'String.prototype.codePointAt'},
{module:'es6.string.ends-with',name:'String.prototype.endsWith'},
{module:'es6.string.from-code-point',name:'String.fromCodePoint'},
{module:'es6.string.includes',name:'String.prototype.includes'},
{module:'es6.string.raw',name:'String.raw'},
{module:'es6.string.repeat',name:'String.prototype.repeat'},
{module:'es6.string.starts-with',name:'String.prototype.startsWith'},
{module:'es6.string.trim',name:'String.prototype.trim'},
{module:'es6.typed.array-buffer',name:'ArrayBuffer'},
{module:'es6.typed.data-view',name:'DataView'},
{module:'es6.typed.float32-array',name:'Float32Array'},
{module:'es6.typed.float64-array',name:'Float64Array'},
{module:'es6.typed.int16-array',name:'Int16Array'},
{module:'es6.typed.int32-array',name:'Int32Array'},
{module:'es6.typed.int8-array',name:'Int8Array'},
{module:'es6.typed.uint16-array',name:'Uint16Array'},
{module:'es6.typed.uint32-array',name:'Uint32Array'},
{module:'es6.typed.uint8-array',name:'Uint8Array'},
{module:'es6.typed.uint8-clamped-array',name:'Uint8ClampedArray'},
{module:'es6.weak-map',name:'WeakMap'},
{module:'es6.weak-set',name:'WeakSet'},
{module:'es7.array.includes',name:'Array.prototype.includes'},
{module:'es7.object.entries',name:'Object.entries'},
{module:'es7.object.get-own-property-descriptors',name:'Object.getOwnPropertyDescriptors'},
{module:'es7.object.values',name:'Object.values'},
{module:'es7.string.pad-end',name:'String.prototype.padEnd'},
{module:'es7.string.pad-start',name:'String.prototype.padStart'}];


}




static getPolyfillPatterns(){
return this.getPolyfillData().map(({name})=>{
const parts=name.split('.');
const object=parts.length>1?parts.slice(0,parts.length-1).join('.'):null;
const property=parts[parts.length-1];
return{
name,
expression:this.buildPolyfillExpression(object,property)};

});
}




static getTransformPatterns(){
return[
{
name:'@babel/plugin-transform-classes',
expression:'Cannot call a class as a function'},

{
name:'@babel/plugin-transform-regenerator',
expression:/regeneratorRuntime\.a?wrap/.source},

{
name:'@babel/plugin-transform-spread',
expression:/\.apply\(void 0,\s?_toConsumableArray/.source}];


}










static detectAcrossScripts(matcher,scripts,networkRecords,bundles){

const urlToMatchResults=new Map();
const polyfillData=this.getPolyfillData();

for(const{requestId,content}of Object.values(scripts)){
if(!content)continue;
const networkRecord=networkRecords.find(record=>record.requestId===requestId);
if(!networkRecord)continue;


const matches=matcher.match(content);


const bundle=bundles.find(b=>b.script.src===networkRecord.url);
if(bundle){
for(const{module,name}of polyfillData){

if(matches.some(m=>m.name===name))continue;

const source=bundle.rawMap.sources.find(source=>source.endsWith(`${module}.js`));
if(!source)continue;

const mapping=bundle.map.mappings().find(m=>m.sourceURL===source);
if(mapping){
matches.push({name,line:mapping.lineNumber,column:mapping.columnNumber});
}else{
matches.push({name,line:0,column:0});
}
}
}

if(!matches.length)continue;
urlToMatchResults.set(networkRecord.url,matches);
}

return urlToMatchResults;
}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[LegacyJavascript.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const mainResource=await MainResource.request({
URL:artifacts.URL,
devtoolsLog},
context);
const bundles=await JSBundles.request(artifacts,context);


const tableRows=[];
let signalCount=0;


const matcher=new CodePatternMatcher([
...this.getPolyfillPatterns(),
...this.getTransformPatterns()]);


const urlToMatchResults=
this.detectAcrossScripts(matcher,artifacts.ScriptElements,networkRecords,bundles);
urlToMatchResults.forEach((matches,url)=>{

const row={url,signals:[],locations:[]};
for(const match of matches){
const{name,line,column}=match;
row.signals.push(name);
row.locations.push({
type:'source-location',
url,
line,
column,
urlProvider:'network'});

}
tableRows.push(row);
signalCount+=row.signals.length;
});


const headings=[

{key:'url',itemType:'url',subRows:{key:'locations',itemType:'source-location'},text:str_(i18n.UIStrings.columnURL)},
{key:null,itemType:'code',subRows:{key:'signals'},text:''}];


const details=Audit.makeTableDetails(headings,tableRows);



const foundSignalInFirstPartyCode=tableRows.some(row=>{
return URL.rootDomainsMatch(row.url,mainResource.url);
});
return{
score:foundSignalInFirstPartyCode?0:1,
notApplicable:!foundSignalInFirstPartyCode,
extendedInfo:{
signalCount},

details};

}}


module.exports=LegacyJavascript;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/legacy-javascript.js");
},{"../computed/js-bundles.js":10,"../computed/main-resource.js":12,"../computed/network-records.js":39,"../lib/i18n/i18n.js":77,"../lib/url-shim.js":"url","./audit.js":3}],"../audits/load-fast-enough-for-pwa":[function(require,module,exports){
(function(__filename){





'use strict';







const isDeepEqual=require('lodash.isequal');
const Audit=require('./audit.js');
const mobileThrottling=require('../config/constants.js').throttling.mobileSlow4G;
const Interactive=require('../computed/metrics/interactive.js');
const i18n=require('../lib/i18n/i18n.js');



const MAXIMUM_TTI=10*1000;

const UIStrings={

title:'Page load is fast enough on mobile networks',

failureTitle:'Page load is not fast enough on mobile networks',

description:'A fast page load over a cellular network ensures a good mobile user experience. [Learn more](https://web.dev/load-fast-enough-for-pwa).',

displayValueText:'Interactive at {timeInMs, number, seconds}\xa0s',

displayValueTextWithOverride:'Interactive on simulated mobile network at '+
'{timeInMs, number, seconds}\xa0s',

explanationLoadSlow:'Your page loads too slowly and is not interactive within 10 seconds. '+
'Look at the opportunities and diagnostics in the "Performance" section to learn how to '+
'improve.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class LoadFastEnough4Pwa extends Audit{



static get meta(){
return{
id:'load-fast-enough-for-pwa',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['traces','devtoolsLogs']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];



const settingOverrides={throttlingMethod:'simulate',throttling:mobileThrottling};



const override=context.settings.throttlingMethod==='provided'||
!isDeepEqual(context.settings.throttling,mobileThrottling);

const displayValueTemplate=override?
UIStrings.displayValueTextWithOverride:UIStrings.displayValueText;

const settings=override?Object.assign({},context.settings,settingOverrides):
context.settings;

const metricComputationData={trace,devtoolsLog,settings};
const tti=await Interactive.request(metricComputationData,context);

const score=Number(tti.timing<MAXIMUM_TTI);


let displayValue;

let explanation;
if(!score){
displayValue=str_(displayValueTemplate,{timeInMs:tti.timing});
explanation=str_(UIStrings.explanationLoadSlow);
}

return{
score,
displayValue,
explanation,
numericValue:tti.timing,
numericUnit:'millisecond'};

}}


module.exports=LoadFastEnough4Pwa;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/load-fast-enough-for-pwa.js");
},{"../computed/metrics/interactive.js":20,"../config/constants.js":53,"../lib/i18n/i18n.js":77,"./audit.js":3,"lodash.isequal":154}],"../audits/main-thread-tasks":[function(require,module,exports){





'use strict';

const Audit=require('./audit.js');
const MainThreadTasksComputed=require('../computed/main-thread-tasks.js');

class MainThreadTasks extends Audit{



static get meta(){
return{
id:'main-thread-tasks',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
title:'Tasks',
description:'Lists the toplevel main thread tasks that executed during page load.',
requiredArtifacts:['traces']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const tasks=await MainThreadTasksComputed.request(trace,context);

const results=tasks.

filter(task=>task.duration>5&&!task.parent).
map(task=>{
return{
duration:task.duration,
startTime:task.startTime};

});


const headings=[
{key:'startTime',itemType:'ms',granularity:1,text:'Start Time'},
{key:'duration',itemType:'ms',granularity:1,text:'End Time'}];


const tableDetails=Audit.makeTableDetails(headings,results);

return{
score:1,
details:tableDetails};

}}


module.exports=MainThreadTasks;

},{"../computed/main-thread-tasks.js":13,"./audit.js":3}],"../audits/mainthread-work-breakdown":[function(require,module,exports){
(function(__filename){










'use strict';

const Audit=require('./audit.js');
const{taskGroups}=require('../lib/tracehouse/task-groups.js');
const i18n=require('../lib/i18n/i18n.js');
const MainThreadTasks=require('../computed/main-thread-tasks.js');

const UIStrings={

title:'Minimizes main-thread work',

failureTitle:'Minimize main-thread work',

description:'Consider reducing the time spent parsing, compiling and executing JS. '+
'You may find delivering smaller JS payloads helps with this. '+
'[Learn more](https://web.dev/mainthread-work-breakdown)',

columnCategory:'Category'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);



class MainThreadWorkBreakdown extends Audit{



static get meta(){
return{
id:'mainthread-work-breakdown',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces']};

}




static get defaultOptions(){
return{

p10:2017,
median:4000};

}





static getExecutionTimingsByGroup(tasks){

const result=new Map();

for(const task of tasks){
const originalTime=result.get(task.group.id)||0;
result.set(task.group.id,originalTime+task.selfTime);
}

return result;
}






static async audit(artifacts,context){
const settings=context.settings||{};
const trace=artifacts.traces[MainThreadWorkBreakdown.DEFAULT_PASS];

const tasks=await MainThreadTasks.request(trace,context);
const multiplier=settings.throttlingMethod==='simulate'?
settings.throttling.cpuSlowdownMultiplier:1;

const executionTimings=MainThreadWorkBreakdown.getExecutionTimingsByGroup(tasks);

let totalExecutionTime=0;

const categoryTotals={};
const results=Array.from(executionTimings).map(([groupId,rawDuration])=>{
const duration=rawDuration*multiplier;
totalExecutionTime+=duration;

const categoryTotal=categoryTotals[groupId]||0;
categoryTotals[groupId]=categoryTotal+duration;

return{
group:groupId,
groupLabel:taskGroups[groupId].label,
duration:duration};

});


const headings=[
{key:'groupLabel',itemType:'text',text:str_(UIStrings.columnCategory)},
{key:'duration',itemType:'ms',granularity:1,text:str_(i18n.UIStrings.columnTimeSpent)}];


results.sort((a,b)=>categoryTotals[b.group]-categoryTotals[a.group]);
const tableDetails=MainThreadWorkBreakdown.makeTableDetails(headings,results);

const score=Audit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
totalExecutionTime);


return{
score,
numericValue:totalExecutionTime,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.seconds,{timeInMs:totalExecutionTime}),
details:tableDetails};

}}


module.exports=MainThreadWorkBreakdown;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/mainthread-work-breakdown.js");
},{"../computed/main-thread-tasks.js":13,"../lib/i18n/i18n.js":77,"../lib/tracehouse/task-groups.js":95,"./audit.js":3}],"../audits/manual/pwa-cross-browser":[function(require,module,exports){
(function(__filename){






'use strict';

const ManualAudit=require('./manual-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Site works cross-browser',

description:'To reach the most number of users, sites should work across '+
'every major browser. [Learn more](https://web.dev/pwa-cross-browser).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





class PWACrossBrowser extends ManualAudit{



static get meta(){
return Object.assign({
id:'pwa-cross-browser',
title:str_(UIStrings.title),
description:str_(UIStrings.description)},
super.partialMeta);
}}


module.exports=PWACrossBrowser;
module.exports.UIStrings=UIStrings;


}).call(this,"/lighthouse-core/audits/manual/pwa-cross-browser.js");
},{"../../lib/i18n/i18n.js":77,"./manual-audit.js":5}],"../audits/manual/pwa-each-page-has-url":[function(require,module,exports){
(function(__filename){





'use strict';

const ManualAudit=require('./manual-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Each page has a URL',

description:'Ensure individual pages are deep linkable via URL and that URLs are '+
'unique for the purpose of shareability on social media. [Learn more](https://web.dev/pwa-each-page-has-url).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





class PWAEachPageHasURL extends ManualAudit{



static get meta(){
return Object.assign({
id:'pwa-each-page-has-url',
title:str_(UIStrings.title),
description:str_(UIStrings.description)},
super.partialMeta);
}}


module.exports=PWAEachPageHasURL;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/manual/pwa-each-page-has-url.js");
},{"../../lib/i18n/i18n.js":77,"./manual-audit.js":5}],"../audits/manual/pwa-page-transitions":[function(require,module,exports){
(function(__filename){





'use strict';

const ManualAudit=require('./manual-audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Page transitions don\'t feel like they block on the network',

description:'Transitions should feel snappy as you tap around, even on a slow network. '+
'This experience is key to a user\'s perception of performance. [Learn more](https://web.dev/pwa-page-transitions).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





class PWAPageTransitions extends ManualAudit{



static get meta(){
return Object.assign({
id:'pwa-page-transitions',
title:str_(UIStrings.title),
description:str_(UIStrings.description)},
super.partialMeta);
}}


module.exports=PWAPageTransitions;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/manual/pwa-page-transitions.js");
},{"../../lib/i18n/i18n.js":77,"./manual-audit.js":5}],"../audits/maskable-icon":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const ManifestValues=require('../computed/manifest-values.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Manifest has a maskable icon',

failureTitle:'Manifest doesn\'t have a maskable icon',

description:'A maskable icon ensures that the image fills the entire '+
'shape without being letterboxed when installing '+
'the app on a device. [Learn more](https://web.dev/maskable-icon-audit/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);











class MaskableIcon extends Audit{



static get meta(){
return{
id:'maskable-icon',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['WebAppManifest','InstallabilityErrors']};

}






static async audit(artifacts,context){
const manifestValues=await ManifestValues.request(artifacts,context);
if(manifestValues.isParseFailure){
return{
score:0,
explanation:manifestValues.parseFailureReason};

}
const maskableIconCheck=manifestValues.allChecks.find(i=>i.id==='hasMaskableIcon');
return{
score:maskableIconCheck&&maskableIconCheck.passing?1:0};

}}


module.exports=MaskableIcon;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/maskable-icon.js");
},{"../computed/manifest-values.js":14,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/metrics/cumulative-layout-shift":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const ComputedCLS=require('../../computed/metrics/cumulative-layout-shift.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

description:'Cumulative Layout Shift measures the movement of visible '+
'elements within the viewport. [Learn more](https://web.dev/cls).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




class CumulativeLayoutShift extends Audit{



static get meta(){
return{
id:'cumulative-layout-shift',
title:str_(i18n.UIStrings.cumulativeLayoutShiftMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces']};

}




static get defaultOptions(){
return{



p10:0.1,
median:0.25};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const metricResult=await ComputedCLS.request(trace,context);


const details={
type:'debugdata',
items:[metricResult.debugInfo]};


return{
score:Audit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
metricResult.value),

numericValue:metricResult.value,
numericUnit:'unitless',
displayValue:metricResult.value.toLocaleString(context.settings.locale),
details};

}}


module.exports=CumulativeLayoutShift;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/cumulative-layout-shift.js");
},{"../../computed/metrics/cumulative-layout-shift.js":15,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/estimated-input-latency":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const ComputedEil=require('../../computed/metrics/estimated-input-latency.js');

const UIStrings={

description:'Estimated Input Latency is an estimate of how long your app takes to respond to '+
'user input, in milliseconds, during the busiest 5s window of page load. If your '+
'latency is higher than 50 ms, users may perceive your app as laggy. '+
'[Learn more](https://web.dev/estimated-input-latency).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class EstimatedInputLatency extends Audit{



static get meta(){
return{
id:'estimated-input-latency',
title:str_(i18n.UIStrings.estimatedInputLatencyMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs']};

}




static get defaultOptions(){
return{

p10:58,
median:100};

}









static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await ComputedEil.request(metricComputationData,context);

return{
score:Audit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.ms,{timeInMs:metricResult.timing})};

}}


module.exports=EstimatedInputLatency;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/estimated-input-latency.js");
},{"../../computed/metrics/estimated-input-latency.js":16,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/first-contentful-paint-3g":[function(require,module,exports){





'use strict';

const Audit=require('../audit.js');
const regular3G=require('../../config/constants.js').throttling.mobileRegluar3G;
const ComputedFcp=require('../../computed/metrics/first-contentful-paint.js');

class FirstContentfulPaint3G extends Audit{



static get meta(){
return{
id:'first-contentful-paint-3g',
title:'First Contentful Paint (3G)',
description:'First Contentful Paint 3G marks the time at which the first text or image is '+
`painted while on a 3G network. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/first-contentful-paint).`,
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs']};

}




static get defaultOptions(){
return{




p10:3504,
median:6000};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];

const settings={...context.settings,throttlingMethod:'simulate',throttling:regular3G};
const metricComputationData={trace,devtoolsLog,settings};
const metricResult=await ComputedFcp.request(metricComputationData,context);

return{
score:Audit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:`${metricResult.timing}\xa0ms`};

}}


module.exports=FirstContentfulPaint3G;

},{"../../computed/metrics/first-contentful-paint.js":17,"../../config/constants.js":53,"../audit.js":3}],"../audits/metrics/first-contentful-paint":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const ComputedFcp=require('../../computed/metrics/first-contentful-paint.js');

const UIStrings={

description:'First Contentful Paint marks the time at which the first text or image is '+
`painted. [Learn more](https://web.dev/first-contentful-paint).`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class FirstContentfulPaint extends Audit{



static get meta(){
return{
id:'first-contentful-paint',
title:str_(i18n.UIStrings.firstContentfulPaintMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs','TestedAsMobileDevice']};

}




static get defaultOptions(){
return{
mobile:{



scoring:{
p10:2336,
median:4000}},


desktop:{

scoring:{
p10:934,
median:1600}}};



}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await ComputedFcp.request(metricComputationData,context);
const isDesktop=artifacts.TestedAsMobileDevice===false;
const options=isDesktop?context.options.desktop:context.options.mobile;

return{
score:Audit.computeLogNormalScore(
options.scoring,
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.seconds,{timeInMs:metricResult.timing})};

}}


module.exports=FirstContentfulPaint;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/first-contentful-paint.js");
},{"../../computed/metrics/first-contentful-paint.js":17,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/first-cpu-idle":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const ComputedFci=require('../../computed/metrics/first-cpu-idle.js');

const UIStrings={

description:'First CPU Idle marks the first time at which the page\'s main thread is '+
'quiet enough to handle input.  [Learn more](https://web.dev/first-cpu-idle).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class FirstCPUIdle extends Audit{



static get meta(){
return{
id:'first-cpu-idle',
title:str_(i18n.UIStrings.firstCPUIdleMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs','TestedAsMobileDevice']};

}




static get defaultOptions(){
return{
mobile:{



scoring:{
p10:3572,
median:6500}},


desktop:{

scoring:{
p10:2468,
median:4500}}};



}









static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await ComputedFci.request(metricComputationData,context);
const isDesktop=artifacts.TestedAsMobileDevice===false;
const options=isDesktop?context.options.desktop:context.options.mobile;

return{
score:Audit.computeLogNormalScore(
options.scoring,
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.seconds,{timeInMs:metricResult.timing})};

}}


module.exports=FirstCPUIdle;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/first-cpu-idle.js");
},{"../../computed/metrics/first-cpu-idle.js":18,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/first-meaningful-paint":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const ComputedFmp=require('../../computed/metrics/first-meaningful-paint.js');

const UIStrings={

description:'First Meaningful Paint measures when the primary content of a page is '+
'visible. [Learn more](https://web.dev/first-meaningful-paint).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class FirstMeaningfulPaint extends Audit{



static get meta(){
return{
id:'first-meaningful-paint',
title:str_(i18n.UIStrings.firstMeaningfulPaintMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs','TestedAsMobileDevice']};

}




static get defaultOptions(){
return{
mobile:{



scoring:{
p10:2336,
median:4000}},


desktop:{

scoring:{
p10:934,
median:1600}}};



}









static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await ComputedFmp.request(metricComputationData,context);
const isDesktop=artifacts.TestedAsMobileDevice===false;
const options=isDesktop?context.options.desktop:context.options.mobile;

return{
score:Audit.computeLogNormalScore(
options.scoring,
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.seconds,{timeInMs:metricResult.timing})};

}}


module.exports=FirstMeaningfulPaint;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/first-meaningful-paint.js");
},{"../../computed/metrics/first-meaningful-paint.js":19,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/interactive":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const Interactive=require('../../computed/metrics/interactive.js');

const UIStrings={

description:'Time to interactive is the amount of time it takes for the page to become fully '+
'interactive. [Learn more](https://web.dev/interactive).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);







class InteractiveMetric extends Audit{



static get meta(){
return{
id:'interactive',
title:str_(i18n.UIStrings.interactiveMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs','TestedAsMobileDevice']};

}




static get defaultOptions(){
return{
mobile:{



scoring:{
p10:3785,
median:7300}},


desktop:{

scoring:{
p10:2468,
median:4500}}};



}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await Interactive.request(metricComputationData,context);
const timeInMs=metricResult.timing;
const isDesktop=artifacts.TestedAsMobileDevice===false;
const options=isDesktop?context.options.desktop:context.options.mobile;
const extendedInfo={
timeInMs,
timestamp:metricResult.timestamp,

optimistic:metricResult.optimisticEstimate&&metricResult.optimisticEstimate.timeInMs,

pessimistic:metricResult.pessimisticEstimate&&metricResult.pessimisticEstimate.timeInMs};


return{
score:Audit.computeLogNormalScore(
options.scoring,
timeInMs),

numericValue:timeInMs,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.seconds,{timeInMs}),
extendedInfo:{
value:extendedInfo}};


}}


module.exports=InteractiveMetric;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/interactive.js");
},{"../../computed/metrics/interactive.js":20,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/largest-contentful-paint":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const ComputedLcp=require('../../computed/metrics/largest-contentful-paint.js');

const UIStrings={

description:'Largest Contentful Paint marks the time at which the largest text or image is '+
`painted. [Learn More](https://web.dev/lighthouse-largest-contentful-paint)`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class LargestContentfulPaint extends Audit{



static get meta(){
return{
id:'largest-contentful-paint',
title:str_(i18n.UIStrings.largestContentfulPaintMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs','TestedAsMobileDevice']};

}




static get defaultOptions(){
return{
mobile:{




scoring:{
p10:2500,
median:4000}},


desktop:{








scoring:{
p10:1200,
median:2400}}};



}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await ComputedLcp.request(metricComputationData,context);

const isDesktop=artifacts.TestedAsMobileDevice===false;
const options=isDesktop?context.options.desktop:context.options.mobile;

return{
score:Audit.computeLogNormalScore(
options.scoring,
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.seconds,{timeInMs:metricResult.timing})};

}}


module.exports=LargestContentfulPaint;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/largest-contentful-paint.js");
},{"../../computed/metrics/largest-contentful-paint.js":31,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/max-potential-fid":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const ComputedFid=require('../../computed/metrics/max-potential-fid.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

description:'The maximum potential First Input Delay that your users could experience is the '+
'duration of the longest task. [Learn more](https://web.dev/lighthouse-max-potential-fid).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);






class MaxPotentialFID extends Audit{



static get meta(){
return{
id:'max-potential-fid',
title:str_(i18n.UIStrings.maxPotentialFIDMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs']};

}




static get defaultOptions(){
return{

p10:130,
median:250};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await ComputedFid.request(metricComputationData,context);

return{
score:Audit.computeLogNormalScore(
{p10:context.options.p10,median:context.options.median},
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.ms,{timeInMs:metricResult.timing})};

}}


module.exports=MaxPotentialFID;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/max-potential-fid.js");
},{"../../computed/metrics/max-potential-fid.js":32,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/speed-index":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');
const ComputedSi=require('../../computed/metrics/speed-index.js');

const UIStrings={

description:'Speed Index shows how quickly the contents of a page are visibly populated. '+
'[Learn more](https://web.dev/speed-index).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class SpeedIndex extends Audit{



static get meta(){
return{
id:'speed-index',
title:str_(i18n.UIStrings.speedIndexMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs','TestedAsMobileDevice']};

}




static get defaultOptions(){
return{
mobile:{



scoring:{
p10:3387,
median:5800}},


desktop:{

scoring:{
p10:1311,
median:2300}}};



}








static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await ComputedSi.request(metricComputationData,context);
const isDesktop=artifacts.TestedAsMobileDevice===false;
const options=isDesktop?context.options.desktop:context.options.mobile;

return{
score:Audit.computeLogNormalScore(
options.scoring,
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.seconds,{timeInMs:metricResult.timing})};

}}


module.exports=SpeedIndex;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/speed-index.js");
},{"../../computed/metrics/speed-index.js":34,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics/total-blocking-time":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const ComputedTBT=require('../../computed/metrics/total-blocking-time.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

description:'Sum of all time periods between FCP and Time to Interactive, '+
'when task length exceeded 50ms, expressed in milliseconds. [Learn more](https://web.dev/lighthouse-total-blocking-time).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class TotalBlockingTime extends Audit{



static get meta(){
return{
id:'total-blocking-time',
title:str_(i18n.UIStrings.totalBlockingTimeMetric),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs','TestedAsMobileDevice']};

}




static get defaultOptions(){
return{
mobile:{






scoring:{
p10:287,
median:600}},


desktop:{








scoring:{
p10:150,
median:350}}};



}













static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const metricResult=await ComputedTBT.request(metricComputationData,context);

const isDesktop=artifacts.TestedAsMobileDevice===false;
const options=isDesktop?context.options.desktop:context.options.mobile;

return{
score:Audit.computeLogNormalScore(
options.scoring,
metricResult.timing),

numericValue:metricResult.timing,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.ms,{timeInMs:metricResult.timing})};

}}


module.exports=TotalBlockingTime;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/metrics/total-blocking-time.js");
},{"../../computed/metrics/total-blocking-time.js":36,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/metrics":[function(require,module,exports){





'use strict';

const Audit=require('./audit.js');
const ComputedTimingSummary=require('../computed/metrics/timing-summary.js');


const DECIMAL_METRIC_KEYS=new Set([
'cumulativeLayoutShift',
'observedCumulativeLayoutShift']);


class Metrics extends Audit{



static get meta(){
return{
id:'metrics',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
title:'Metrics',
description:'Collects all available metrics.',
requiredArtifacts:['traces','devtoolsLogs']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const summary=await ComputedTimingSummary.
request({trace,devtoolsLog},context);
const metrics=summary.metrics;
const debugInfo=summary.debugInfo;

for(const[name,value]of Object.entries(metrics)){
const key=name;
if(typeof value==='number'&&!DECIMAL_METRIC_KEYS.has(key)){
metrics[key]=Math.round(value);
}
}


const details={
type:'debugdata',

items:[metrics,debugInfo]};


return{
score:1,
numericValue:metrics.interactive||0,
numericUnit:'millisecond',
details};

}}


module.exports=Metrics;

},{"../computed/metrics/timing-summary.js":35,"./audit.js":3}],"../audits/network-requests":[function(require,module,exports){





'use strict';

const Audit=require('./audit.js');
const URL=require('../lib/url-shim.js');
const NetworkRecords=require('../computed/network-records.js');

class NetworkRequests extends Audit{



static get meta(){
return{
id:'network-requests',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
title:'Network Requests',
description:'Lists the network requests that were made during page load.',
requiredArtifacts:['devtoolsLogs']};

}






static audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
return NetworkRecords.request(devtoolsLog,context).then(records=>{
const earliestStartTime=records.reduce(
(min,record)=>Math.min(min,record.startTime),
Infinity);



const timeToMs=time=>time<earliestStartTime||!Number.isFinite(time)?
undefined:(time-earliestStartTime)*1000;

const results=records.map(record=>{
const endTimeDeltaMs=record.lrStatistics&&record.lrStatistics.endTimeDeltaMs;
const TCPMs=record.lrStatistics&&record.lrStatistics.TCPMs;
const requestMs=record.lrStatistics&&record.lrStatistics.requestMs;
const responseMs=record.lrStatistics&&record.lrStatistics.responseMs;

return{
url:URL.elideDataURI(record.url),
startTime:timeToMs(record.startTime),
endTime:timeToMs(record.endTime),
finished:record.finished,
transferSize:record.transferSize,
resourceSize:record.resourceSize,
statusCode:record.statusCode,
mimeType:record.mimeType,
resourceType:record.resourceType,
lrEndTimeDeltaMs:endTimeDeltaMs,
lrTCPMs:TCPMs,
lrRequestMs:requestMs,
lrResponseMs:responseMs};

});



const headings=[
{key:'url',itemType:'url',text:'URL'},
{key:'startTime',itemType:'ms',granularity:1,text:'Start Time'},
{key:'endTime',itemType:'ms',granularity:1,text:'End Time'},
{
key:'transferSize',
itemType:'bytes',
displayUnit:'kb',
granularity:1,
text:'Transfer Size'},

{
key:'resourceSize',
itemType:'bytes',
displayUnit:'kb',
granularity:1,
text:'Resource Size'},

{key:'statusCode',itemType:'text',text:'Status Code'},
{key:'mimeType',itemType:'text',text:'MIME Type'},
{key:'resourceType',itemType:'text',text:'Resource Type'}];


const tableDetails=Audit.makeTableDetails(headings,results);

return{
score:1,
details:tableDetails};

});
}}


module.exports=NetworkRequests;

},{"../computed/network-records.js":39,"../lib/url-shim.js":"url","./audit.js":3}],"../audits/network-rtt":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');
const NetworkAnalysisComputed=require('../computed/network-analysis.js');

const UIStrings={

title:'Network Round Trip Times',

description:'Network round trip times (RTT) have a large impact on performance. '+
'If the RTT to an origin is high, it\'s an indication that servers closer to the user could '+
'improve performance. [Learn more](https://hpbn.co/primer-on-latency-and-bandwidth/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class NetworkRTT extends Audit{



static get meta(){
return{
id:'network-rtt',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
title:str_(UIStrings.title),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const analysis=await NetworkAnalysisComputed.request(devtoolsLog,context);


let maxRtt=0;
const baseRtt=analysis.rtt;

const results=[];
for(const[origin,additionalRtt]of analysis.additionalRttByOrigin.entries()){

if(!origin.startsWith('http'))continue;

const rtt=additionalRtt+baseRtt;
results.push({origin,rtt});
maxRtt=Number.isFinite(rtt)?Math.max(rtt,maxRtt):maxRtt;
}

results.sort((a,b)=>b.rtt-a.rtt);


const headings=[
{key:'origin',itemType:'text',text:str_(i18n.UIStrings.columnURL)},
{key:'rtt',itemType:'ms',granularity:1,text:str_(i18n.UIStrings.columnTimeSpent)}];


const tableDetails=Audit.makeTableDetails(headings,results);

return{
score:1,
numericValue:maxRtt,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.ms,{timeInMs:maxRtt}),
details:tableDetails};

}}


module.exports=NetworkRTT;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/network-rtt.js");
},{"../computed/network-analysis.js":38,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/network-server-latency":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');
const NetworkAnalysisComputed=require('../computed/network-analysis.js');

const UIStrings={

title:'Server Backend Latencies',

description:'Server latencies can impact web performance. '+
'If the server latency of an origin is high, it\'s an indication the server is overloaded '+
'or has poor backend performance. [Learn more](https://hpbn.co/primer-on-web-performance/#analyzing-the-resource-waterfall).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class NetworkServerLatency extends Audit{



static get meta(){
return{
id:'network-server-latency',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
title:str_(UIStrings.title),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const analysis=await NetworkAnalysisComputed.request(devtoolsLog,context);


let maxLatency=0;

const results=[];
for(const[origin,serverResponseTime]of analysis.serverResponseTimeByOrigin.entries()){

if(!origin.startsWith('http'))continue;

maxLatency=Math.max(serverResponseTime,maxLatency);
results.push({origin,serverResponseTime});
}

results.sort((a,b)=>b.serverResponseTime-a.serverResponseTime);


const headings=[
{key:'origin',itemType:'text',text:str_(i18n.UIStrings.columnURL)},
{key:'serverResponseTime',itemType:'ms',granularity:1,
text:str_(i18n.UIStrings.columnTimeSpent)}];


const tableDetails=Audit.makeTableDetails(headings,results);

return{
score:Math.max(1-maxLatency/500,0),
numericValue:maxLatency,
numericUnit:'millisecond',
displayValue:str_(i18n.UIStrings.ms,{timeInMs:maxLatency}),
details:tableDetails};

}}


module.exports=NetworkServerLatency;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/network-server-latency.js");
},{"../computed/network-analysis.js":38,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/offline-start-url":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'`start_url` responds with a 200 when offline',

failureTitle:'`start_url` does not respond with a 200 when offline',

description:'A service worker enables your web app to be reliable in unpredictable '+
'network conditions. [Learn more](https://web.dev/offline-start-url).',




warningCantStart:'Lighthouse couldn\'t read the `start_url` from the manifest. As a result, '+
'the `start_url` was assumed to be the document\'s URL. Error message: \'{manifestWarning}\'.',





errorLoading:'Error loading {url} in Service Worker, got status code {statusCode}'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class OfflineStartUrl extends Audit{



static get meta(){
return{
id:'offline-start-url',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['WebAppManifest','StartUrl']};

}





static audit(artifacts){


const warnings=[];
const manifest=artifacts.WebAppManifest;
if(manifest&&manifest.value&&manifest.value.start_url.warning){
const manifestWarning=manifest.value.start_url.warning;
warnings.push(str_(UIStrings.warningCantStart,{manifestWarning}));
}

const hasOfflineStartUrl=artifacts.StartUrl.statusCode===200;




let explanation=artifacts.StartUrl.explanation;
if(!explanation&&artifacts.StartUrl.statusCode!==-1&&!hasOfflineStartUrl){
explanation=str_(UIStrings.errorLoading,{
url:artifacts.StartUrl.url||'',
statusCode:artifacts.StartUrl.statusCode});

}

return{
score:Number(hasOfflineStartUrl),
explanation,
warnings};

}}


module.exports=OfflineStartUrl;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/offline-start-url.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/performance-budget":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const ResourceSummary=require('../computed/resource-summary.js');
const MainResource=require('../computed/main-resource.js');
const Budget=require('../config/budget.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Performance budget',

description:'Keep the quantity and size of network requests under the targets '+
'set by the provided performance budget. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/budgets).',

requestCountOverBudget:`{count, plural,
    =1 {1 request}
    other {# requests}
   }`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




class ResourceBudget extends Audit{



static get meta(){
return{
id:'performance-budget',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
requiredArtifacts:['devtoolsLogs','URL']};

}





static getRowLabel(resourceType){

const strMappings={
'total':i18n.UIStrings.totalResourceType,
'document':i18n.UIStrings.documentResourceType,
'script':i18n.UIStrings.scriptResourceType,
'stylesheet':i18n.UIStrings.stylesheetResourceType,
'image':i18n.UIStrings.imageResourceType,
'media':i18n.UIStrings.mediaResourceType,
'font':i18n.UIStrings.fontResourceType,
'other':i18n.UIStrings.otherResourceType,
'third-party':i18n.UIStrings.thirdPartyResourceType};

return strMappings[resourceType];
}






static tableItems(budget,summary){
const resourceTypes=Object.keys(summary);
return resourceTypes.map(resourceType=>{
const label=str_(this.getRowLabel(resourceType));
const requestCount=summary[resourceType].count;
const transferSize=summary[resourceType].transferSize;

let sizeOverBudget;
let countOverBudget;

if(budget.resourceSizes){
const sizeBudget=budget.resourceSizes.find(b=>b.resourceType===resourceType);
if(sizeBudget&&transferSize>sizeBudget.budget*1024){
sizeOverBudget=transferSize-sizeBudget.budget*1024;
}
}
if(budget.resourceCounts){
const countBudget=budget.resourceCounts.find(b=>b.resourceType===resourceType);
if(countBudget&&requestCount>countBudget.budget){
const requestDifference=requestCount-countBudget.budget;
countOverBudget=str_(UIStrings.requestCountOverBudget,{count:requestDifference});
}
}
return{
resourceType,
label,
requestCount,
transferSize,
countOverBudget,
sizeOverBudget};

}).filter(row=>{

if(budget.resourceSizes){
if(budget.resourceSizes.some(b=>b.resourceType===row.resourceType))return true;
}
if(budget.resourceCounts){
if(budget.resourceCounts.some(b=>b.resourceType===row.resourceType))return true;
}
return false;
}).sort((a,b)=>{
return(b.sizeOverBudget||0)-(a.sizeOverBudget||0);
});
}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const summary=await ResourceSummary.request({devtoolsLog,URL:artifacts.URL},context);
const mainResource=await MainResource.request({URL:artifacts.URL,devtoolsLog},context);
const budget=Budget.getMatchingBudget(context.settings.budgets,mainResource.url);

if(!budget){
return{
score:0,
notApplicable:true};

}


const headers=[
{key:'label',itemType:'text',text:str_(i18n.UIStrings.columnResourceType)},
{key:'requestCount',itemType:'numeric',text:str_(i18n.UIStrings.columnRequests)},
{key:'transferSize',itemType:'bytes',text:str_(i18n.UIStrings.columnTransferSize)},
{key:'countOverBudget',itemType:'text',text:''},
{key:'sizeOverBudget',itemType:'bytes',text:str_(i18n.UIStrings.columnOverBudget)}];


return{
details:Audit.makeTableDetails(headers,
this.tableItems(budget,summary)),
score:1};

}}


module.exports=ResourceBudget;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/performance-budget.js");
},{"../computed/main-resource.js":12,"../computed/resource-summary.js":41,"../config/budget.js":49,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/predictive-perf":[function(require,module,exports){





'use strict';

const Audit=require('./audit.js');
const I18n=require('../report/html/renderer/i18n.js');

const LanternFcp=require('../computed/metrics/lantern-first-contentful-paint.js');
const LanternFmp=require('../computed/metrics/lantern-first-meaningful-paint.js');
const LanternInteractive=require('../computed/metrics/lantern-interactive.js');
const LanternFirstCPUIdle=require('../computed/metrics/lantern-first-cpu-idle.js');
const LanternSpeedIndex=require('../computed/metrics/lantern-speed-index.js');
const LanternEil=require('../computed/metrics/lantern-estimated-input-latency.js');
const LanternLcp=require('../computed/metrics/lantern-largest-contentful-paint.js');



const SCORING_P10=3651;
const SCORING_MEDIAN=10000;

class PredictivePerf extends Audit{



static get meta(){
return{
id:'predictive-perf',
title:'Predicted Performance (beta)',
description:
'Predicted performance evaluates how your site will perform under '+
'a cellular connection on a mobile device.',
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['traces','devtoolsLogs']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];


const settings={};
const fcp=await LanternFcp.request({trace,devtoolsLog,settings},context);
const fmp=await LanternFmp.request({trace,devtoolsLog,settings},context);
const tti=await LanternInteractive.request({trace,devtoolsLog,settings},context);
const ttfcpui=await LanternFirstCPUIdle.request({trace,devtoolsLog,settings},context);
const si=await LanternSpeedIndex.request({trace,devtoolsLog,settings},context);
const eil=await LanternEil.request({trace,devtoolsLog,settings},context);
const lcp=await LanternLcp.request({trace,devtoolsLog,settings},context);

const values={
roughEstimateOfFCP:fcp.timing,
optimisticFCP:fcp.optimisticEstimate.timeInMs,
pessimisticFCP:fcp.pessimisticEstimate.timeInMs,

roughEstimateOfFMP:fmp.timing,
optimisticFMP:fmp.optimisticEstimate.timeInMs,
pessimisticFMP:fmp.pessimisticEstimate.timeInMs,

roughEstimateOfTTI:tti.timing,
optimisticTTI:tti.optimisticEstimate.timeInMs,
pessimisticTTI:tti.pessimisticEstimate.timeInMs,

roughEstimateOfTTFCPUI:ttfcpui.timing,
optimisticTTFCPUI:ttfcpui.optimisticEstimate.timeInMs,
pessimisticTTFCPUI:ttfcpui.pessimisticEstimate.timeInMs,

roughEstimateOfSI:si.timing,
optimisticSI:si.optimisticEstimate.timeInMs,
pessimisticSI:si.pessimisticEstimate.timeInMs,

roughEstimateOfEIL:eil.timing,
optimisticEIL:eil.optimisticEstimate.timeInMs,
pessimisticEIL:eil.pessimisticEstimate.timeInMs,

roughEstimateOfLCP:lcp.timing,
optimisticLCP:lcp.optimisticEstimate.timeInMs,
pessimisticLCP:lcp.pessimisticEstimate.timeInMs};


const score=Audit.computeLogNormalScore(
{p10:SCORING_P10,median:SCORING_MEDIAN},
values.roughEstimateOfTTI);


const i18n=new I18n(context.settings.locale);

return{
score,
numericValue:values.roughEstimateOfTTI,
numericUnit:'millisecond',
displayValue:i18n.formatMilliseconds(values.roughEstimateOfTTI),
details:{
type:'debugdata',

items:[values]}};


}}


module.exports=PredictivePerf;

},{"../computed/metrics/lantern-estimated-input-latency.js":21,"../computed/metrics/lantern-first-contentful-paint.js":22,"../computed/metrics/lantern-first-cpu-idle.js":23,"../computed/metrics/lantern-first-meaningful-paint.js":24,"../computed/metrics/lantern-interactive.js":25,"../computed/metrics/lantern-largest-contentful-paint.js":26,"../computed/metrics/lantern-speed-index.js":29,"../report/html/renderer/i18n.js":98,"./audit.js":3}],"../audits/redirects-http":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Redirects HTTP traffic to HTTPS',

failureTitle:'Does not redirect HTTP traffic to HTTPS',

description:'If you\'ve already set up HTTPS, make sure that you redirect all HTTP '+
'traffic to HTTPS in order to enable secure web features for all your users. [Learn more](https://web.dev/redirects-http).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class RedirectsHTTP extends Audit{



static get meta(){
return{
id:'redirects-http',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['HTTPRedirect']};

}





static audit(artifacts){
return{
score:Number(artifacts.HTTPRedirect.value)};

}}


module.exports=RedirectsHTTP;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/redirects-http.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/redirects":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const UnusedBytes=require('./byte-efficiency/byte-efficiency-audit.js');
const i18n=require('../lib/i18n/i18n.js');
const TraceOfTab=require('../computed/trace-of-tab.js');
const NetworkRecords=require('../computed/network-records.js');
const MainResource=require('../computed/main-resource.js');
const LanternInteractive=require('../computed/metrics/lantern-interactive.js');

const UIStrings={

title:'Avoid multiple page redirects',

description:'Redirects introduce additional delays before the page can be loaded. [Learn more](https://web.dev/redirects).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class Redirects extends Audit{



static get meta(){
return{
id:'redirects',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['URL','devtoolsLogs','traces']};

}






static async audit(artifacts,context){
const settings=context.settings;
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];

const traceOfTab=await TraceOfTab.request(trace,context);
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const mainResource=await MainResource.request({URL:artifacts.URL,devtoolsLog},context);

const metricComputationData={trace,devtoolsLog,traceOfTab,networkRecords,settings};
const metricResult=await LanternInteractive.request(metricComputationData,context);


const nodeTimingsByUrl=new Map();
for(const[node,timing]of metricResult.pessimisticEstimate.nodeTimings.entries()){
if(node.type==='network'){
const networkNode=node;
nodeTimingsByUrl.set(networkNode.record.url,timing);
}
}


const redirectRequests=Array.from(mainResource.redirects||[]);


redirectRequests.push(mainResource);

let totalWastedMs=0;
const pageRedirects=[];


if(redirectRequests.length>1){
pageRedirects.push({
url:`(Initial: ${redirectRequests[0].url})`,
wastedMs:0});

}

for(let i=1;i<redirectRequests.length;i++){
const initialRequest=redirectRequests[i-1];
const redirectedRequest=redirectRequests[i];

const initialTiming=nodeTimingsByUrl.get(initialRequest.url);
const redirectedTiming=nodeTimingsByUrl.get(redirectedRequest.url);
if(!initialTiming||!redirectedTiming){
throw new Error('Could not find redirects in graph');
}

const wastedMs=redirectedTiming.startTime-initialTiming.startTime;
totalWastedMs+=wastedMs;

pageRedirects.push({
url:redirectedRequest.url,
wastedMs});

}


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'wastedMs',valueType:'timespanMs',label:str_(i18n.UIStrings.columnTimeSpent)}];

const details=Audit.makeOpportunityDetails(headings,pageRedirects,totalWastedMs);

return{

score:redirectRequests.length<=2?1:UnusedBytes.scoreForWastedMs(totalWastedMs),
numericValue:totalWastedMs,
numericUnit:'millisecond',
displayValue:totalWastedMs?
str_(i18n.UIStrings.displayValueMsSavings,{wastedMs:totalWastedMs}):
'',
extendedInfo:{
value:{
wastedMs:totalWastedMs}},


details};

}}


module.exports=Redirects;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/redirects.js");
},{"../computed/main-resource.js":12,"../computed/metrics/lantern-interactive.js":25,"../computed/network-records.js":39,"../computed/trace-of-tab.js":44,"../lib/i18n/i18n.js":77,"./audit.js":3,"./byte-efficiency/byte-efficiency-audit.js":4}],"../audits/resource-summary":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const ComputedResourceSummary=require('../computed/resource-summary.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Keep request counts low and transfer sizes small',

description:'To set budgets for the quantity and size of page resources,'+
' add a budget.json file. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/budgets).',

displayValue:`{requestCount, plural, `+
`=1 {1 request • {byteCount, number, bytes} KB} `+
`other {# requests • {byteCount, number, bytes} KB}}`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ResourceSummary extends Audit{



static get meta(){
return{
id:'resource-summary',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
requiredArtifacts:['devtoolsLogs','URL']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const summary=await ComputedResourceSummary.
request({devtoolsLog,URL:artifacts.URL},context);


const headings=[
{key:'label',itemType:'text',text:str_(i18n.UIStrings.columnResourceType)},
{key:'requestCount',itemType:'numeric',text:str_(i18n.UIStrings.columnRequests)},
{key:'transferSize',itemType:'bytes',text:str_(i18n.UIStrings.columnTransferSize)}];




const strMappings={
'total':str_(i18n.UIStrings.totalResourceType),
'document':str_(i18n.UIStrings.documentResourceType),
'script':str_(i18n.UIStrings.scriptResourceType),
'stylesheet':str_(i18n.UIStrings.stylesheetResourceType),
'image':str_(i18n.UIStrings.imageResourceType),
'media':str_(i18n.UIStrings.mediaResourceType),
'font':str_(i18n.UIStrings.fontResourceType),
'other':str_(i18n.UIStrings.otherResourceType),
'third-party':str_(i18n.UIStrings.thirdPartyResourceType)};


const types=Object.keys(summary);
const rows=types.map(type=>{
return{


resourceType:type,
label:strMappings[type],
requestCount:summary[type].count,
transferSize:summary[type].transferSize};

});

const thirdPartyRow=rows.find(r=>r.resourceType==='third-party')||[];
const otherRows=rows.filter(r=>r.resourceType!=='third-party').
sort((a,b)=>{
return b.transferSize-a.transferSize;
});
const tableItems=otherRows.concat(thirdPartyRow);

const tableDetails=Audit.makeTableDetails(headings,tableItems);

return{
details:tableDetails,
score:1,
displayValue:str_(UIStrings.displayValue,{
requestCount:summary.total.count,
byteCount:summary.total.transferSize})};


}}


module.exports=ResourceSummary;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/resource-summary.js");
},{"../computed/resource-summary.js":41,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/screenshot-thumbnails":[function(require,module,exports){





'use strict';

const Audit=require('./audit.js');
const LHError=require('../lib/lh-error.js');
const jpeg=require('jpeg-js');
const Speedline=require('../computed/speedline.js');
const Interactive=require('../computed/metrics/interactive.js');

const NUMBER_OF_THUMBNAILS=10;
const THUMBNAIL_WIDTH=120;



class ScreenshotThumbnails extends Audit{



static get meta(){
return{
id:'screenshot-thumbnails',
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
title:'Screenshot Thumbnails',
description:'This is what the load of your site looked like.',
requiredArtifacts:['traces','devtoolsLogs']};

}








static scaleImageToThumbnail(imageData){
const scaledWidth=THUMBNAIL_WIDTH;
const scaleFactor=imageData.width/scaledWidth;
const scaledHeight=Math.floor(imageData.height/scaleFactor);

const outPixels=new Uint8Array(scaledWidth*scaledHeight*4);

for(let i=0;i<scaledWidth;i++){
for(let j=0;j<scaledHeight;j++){
const origX=Math.floor(i*scaleFactor);
const origY=Math.floor(j*scaleFactor);

const origPos=(origY*imageData.width+origX)*4;
const outPos=(j*scaledWidth+i)*4;

outPixels[outPos]=imageData.data[origPos];
outPixels[outPos+1]=imageData.data[origPos+1];
outPixels[outPos+2]=imageData.data[origPos+2];
outPixels[outPos+3]=imageData.data[origPos+3];
}
}

return{
width:scaledWidth,
height:scaledHeight,
data:outPixels};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];

const cachedThumbnails=new Map();

const speedline=await Speedline.request(trace,context);


let minimumTimelineDuration=context.options.minimumTimelineDuration||3000;

if(context.settings.throttlingMethod!=='simulate'){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricComputationData={trace,devtoolsLog,settings:context.settings};
const tti=Interactive.request(metricComputationData,context);
try{
minimumTimelineDuration=Math.max((await tti).timing,minimumTimelineDuration);
}catch(_){}
}

const thumbnails=[];
const analyzedFrames=speedline.frames.filter(frame=>!frame.isProgressInterpolated());
const maxFrameTime=
speedline.complete||
Math.max(...speedline.frames.map(frame=>frame.getTimeStamp()-speedline.beginning));
const timelineEnd=Math.max(maxFrameTime,minimumTimelineDuration);

if(!analyzedFrames.length||!Number.isFinite(timelineEnd)){
throw new LHError(LHError.errors.INVALID_SPEEDLINE);
}

for(let i=1;i<=NUMBER_OF_THUMBNAILS;i++){
const targetTimestamp=speedline.beginning+timelineEnd*i/NUMBER_OF_THUMBNAILS;



let frameForTimestamp=null;
if(i===NUMBER_OF_THUMBNAILS){
frameForTimestamp=analyzedFrames[analyzedFrames.length-1];
}else{
analyzedFrames.forEach(frame=>{
if(frame.getTimeStamp()<=targetTimestamp){
frameForTimestamp=frame;
}
});
}

let base64Data;
const cachedThumbnail=cachedThumbnails.get(frameForTimestamp);
if(cachedThumbnail){
base64Data=cachedThumbnail;
}else{
const imageData=frameForTimestamp.getParsedImage();
const thumbnailImageData=ScreenshotThumbnails.scaleImageToThumbnail(imageData);
base64Data=jpeg.encode(thumbnailImageData,90).data.toString('base64');
cachedThumbnails.set(frameForTimestamp,base64Data);
}
thumbnails.push({
timing:Math.round(targetTimestamp-speedline.beginning),
timestamp:targetTimestamp*1000,
data:`data:image/jpeg;base64,${base64Data}`});

}

return{
score:1,
details:{
type:'filmstrip',
scale:timelineEnd,
items:thumbnails}};


}}


module.exports=ScreenshotThumbnails;

},{"../computed/metrics/interactive.js":20,"../computed/speedline.js":43,"../lib/lh-error.js":82,"./audit.js":3,"jpeg-js":132}],"../audits/seo/canonical":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const URL=require('../../lib/url-shim.js');
const MainResource=require('../../computed/main-resource.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Document has a valid `rel=canonical`',

failureTitle:'Document does not have a valid `rel=canonical`',

description:'Canonical links suggest which URL to show in search results. '+
'[Learn more](https://web.dev/canonical).',




explanationConflict:'Multiple conflicting URLs ({urlList})',




explanationInvalid:'Invalid URL ({url})',




explanationRelative:'Relative URL ({url})',




explanationPointsElsewhere:'Points to another `hreflang` location ({url})',




explanationDifferentDomain:'Points to a different domain ({url})',

explanationRoot:'Points to the domain\'s root URL (the homepage), '+
'instead of an equivalent page of content'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);









class Canonical extends Audit{



static get meta(){
return{
id:'canonical',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['LinkElements','URL','devtoolsLogs']};

}





static collectCanonicalURLs(linkElements){

const uniqueCanonicalURLs=new Set();

const hreflangURLs=new Set();


let invalidCanonicalLink;

let relativeCanonicallink;
for(const link of linkElements){


if(link.source==='body')continue;

if(link.rel==='canonical'){

if(!link.hrefRaw)continue;


if(!link.href)invalidCanonicalLink=link;else

if(!URL.isValid(link.hrefRaw))relativeCanonicallink=link;else

uniqueCanonicalURLs.add(link.href);
}else if(link.rel==='alternate'){
if(link.href&&link.hreflang)hreflangURLs.add(link.href);
}
}

return{uniqueCanonicalURLs,hreflangURLs,invalidCanonicalLink,relativeCanonicallink};
}





static findInvalidCanonicalURLReason(canonicalURLData){
const{uniqueCanonicalURLs,invalidCanonicalLink,relativeCanonicallink}=canonicalURLData;


if(invalidCanonicalLink){
return{
score:0,
explanation:str_(UIStrings.explanationInvalid,{url:invalidCanonicalLink.hrefRaw})};

}


if(relativeCanonicallink){
return{
score:0,
explanation:str_(UIStrings.explanationRelative,{url:relativeCanonicallink.hrefRaw})};

}


const canonicalURLs=Array.from(uniqueCanonicalURLs);


if(canonicalURLs.length===0){
return{
score:1,
notApplicable:true};

}


if(canonicalURLs.length>1){
return{
score:0,
explanation:str_(UIStrings.explanationConflict,{urlList:canonicalURLs.join(', ')})};

}
}







static findCommonCanonicalURLMistakes(canonicalURLData,canonicalURL,baseURL){
const{hreflangURLs}=canonicalURLData;


if(
hreflangURLs.has(baseURL.href)&&
hreflangURLs.has(canonicalURL.href)&&
baseURL.href!==canonicalURL.href)
{
return{
score:0,
explanation:str_(UIStrings.explanationPointsElsewhere,{url:baseURL.href})};

}



if(!URL.rootDomainsMatch(canonicalURL,baseURL)){
return{
score:0,
explanation:str_(UIStrings.explanationDifferentDomain,{url:canonicalURL.href})};

}


if(
canonicalURL.origin===baseURL.origin&&
canonicalURL.pathname==='/'&&
baseURL.pathname!=='/')
{
return{
score:0,
explanation:str_(UIStrings.explanationRoot)};

}
}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];

const mainResource=await MainResource.request({devtoolsLog,URL:artifacts.URL},context);
const baseURL=new URL(mainResource.url);
const canonicalURLData=Canonical.collectCanonicalURLs(artifacts.LinkElements);


const invalidURLAuditProduct=Canonical.findInvalidCanonicalURLReason(canonicalURLData);
if(invalidURLAuditProduct)return invalidURLAuditProduct;


const canonicalURL=new URL([...canonicalURLData.uniqueCanonicalURLs][0]);
const mistakeAuditProduct=Canonical.findCommonCanonicalURLMistakes(
canonicalURLData,
canonicalURL,
baseURL);


if(mistakeAuditProduct)return mistakeAuditProduct;

return{
score:1};

}}


module.exports=Canonical;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/canonical.js");
},{"../../computed/main-resource.js":12,"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","../audit.js":3}],"../audits/seo/font-size":[function(require,module,exports){
(function(__filename){





'use strict';



const i18n=require('../../lib/i18n/i18n.js');
const Audit=require('../audit.js');
const ComputedViewportMeta=require('../../computed/viewport-meta.js');
const MINIMAL_PERCENTAGE_OF_LEGIBLE_TEXT=60;

const UIStrings={

title:'Document uses legible font sizes',

failureTitle:'Document doesn\'t use legible font sizes',

description:'Font sizes less than 12px are too small to be legible and require mobile visitors to “pinch to zoom” in order to read. Strive to have >60% of page text ≥12px. [Learn more](https://web.dev/font-size).',

displayValue:'{decimalProportion, number, extendedPercent} legible text',

explanationViewport:'Text is illegible because there\'s no viewport meta tag optimized '+
'for mobile screens.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





function getUniqueFailingRules(fontSizeArtifact){

const failingRules=new Map();

fontSizeArtifact.forEach(({cssRule,fontSize,textLength,node})=>{
const artifactId=getFontArtifactId(cssRule,node);
const failingRule=failingRules.get(artifactId);

if(!failingRule){
failingRules.set(artifactId,{
node,
cssRule,
fontSize,
textLength});

}else{
failingRule.textLength+=textLength;
}
});

return[...failingRules.values()];
}





function getAttributeMap(attributes=[]){
const map=new Map();

for(let i=0;i<attributes.length;i+=2){
const name=attributes[i].toLowerCase();
const value=attributes[i+1].trim();

if(value){
map.set(name,value);
}
}

return map;
}






function getSelector(node){
const attributeMap=getAttributeMap(node.attributes);

if(attributeMap.has('id')){
return'#'+attributeMap.get('id');
}else{
const attrClass=attributeMap.get('class');
if(attrClass){
return'.'+attrClass.split(/\s+/).join('.');
}
}

return node.localName.toLowerCase();
}





function nodeToTableNode(node){
const attributes=node.attributes||[];
const attributesString=attributes.map((value,idx)=>
idx%2===0?` ${value}`:`="${value}"`).
join('');

return{
type:'node',
selector:node.parentNode?getSelector(node.parentNode):'',
snippet:`<${node.localName}${attributesString}>`};

}







function findStyleRuleSource(baseURL,styleDeclaration,node){
if(!styleDeclaration||
styleDeclaration.type==='Attributes'||
styleDeclaration.type==='Inline')
{
return{
source:{type:'url',value:baseURL},
selector:nodeToTableNode(node)};

}

if(styleDeclaration.parentRule&&
styleDeclaration.parentRule.origin==='user-agent'){
return{
source:{type:'code',value:'User Agent Stylesheet'},
selector:styleDeclaration.parentRule.selectors.map(item=>item.text).join(', ')};

}



let selector='';
if(styleDeclaration.parentRule){
const rule=styleDeclaration.parentRule;
selector=rule.selectors.map(item=>item.text).join(', ');
}

if(styleDeclaration.stylesheet&&!styleDeclaration.stylesheet.sourceURL){

return{
source:{type:'code',value:'dynamic'},
selector};

}




if(styleDeclaration.stylesheet&&styleDeclaration.range){
const{range,stylesheet}=styleDeclaration;




const urlProvider=stylesheet.hasSourceURL?'comment':'network';

let line=range.startLine;
let column=range.startColumn;







const addHtmlLocationOffset=stylesheet.isInline&&urlProvider!=='comment';
if(addHtmlLocationOffset){
line+=stylesheet.startLine;

if(range.startLine===0){
column+=stylesheet.startColumn;
}
}

const url=stylesheet.sourceURL;
return{
source:{type:'source-location',url,urlProvider,line,column},
selector};

}



return{
selector,
source:{type:'code',value:'Unknown'}};

}






function getFontArtifactId(styleDeclaration,node){
if(styleDeclaration&&styleDeclaration.type==='Regular'){
const startLine=styleDeclaration.range?styleDeclaration.range.startLine:0;
const startColumn=styleDeclaration.range?styleDeclaration.range.startColumn:0;
return`${styleDeclaration.styleSheetId}@${startLine}:${startColumn}`;
}else{
return`node_${node.nodeId}`;
}
}

class FontSize extends Audit{



static get meta(){
return{
id:'font-size',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['FontSize','URL','MetaElements','TestedAsMobileDevice']};

}






static async audit(artifacts,context){
if(!artifacts.TestedAsMobileDevice){

return{
score:1,
notApplicable:true};

}

const viewportMeta=await ComputedViewportMeta.request(artifacts.MetaElements,context);
if(!viewportMeta.isMobileOptimized){
return{
score:0,
explanation:str_(UIStrings.explanationViewport)};

}

const{
analyzedFailingNodesData,
analyzedFailingTextLength,
failingTextLength,
totalTextLength}=
artifacts.FontSize;

if(totalTextLength===0){
return{
score:1};

}

const failingRules=getUniqueFailingRules(analyzedFailingNodesData);
const percentageOfPassingText=
(totalTextLength-failingTextLength)/totalTextLength*100;
const pageUrl=artifacts.URL.finalUrl;


const headings=[
{key:'source',itemType:'source-location',text:'Source'},
{key:'selector',itemType:'code',text:'Selector'},
{key:'coverage',itemType:'text',text:'% of Page Text'},
{key:'fontSize',itemType:'text',text:'Font Size'}];


const tableData=failingRules.sort((a,b)=>b.textLength-a.textLength).
map(({cssRule,textLength,fontSize,node})=>{
const percentageOfAffectedText=textLength/totalTextLength*100;
const origin=findStyleRuleSource(pageUrl,cssRule,node);

return{
source:origin.source,
selector:origin.selector,
coverage:`${percentageOfAffectedText.toFixed(2)}%`,
fontSize:`${fontSize}px`};

});


if(analyzedFailingTextLength<failingTextLength){
const percentageOfUnanalyzedFailingText=
(failingTextLength-analyzedFailingTextLength)/totalTextLength*100;

tableData.push({

source:{type:'code',value:'Add\'l illegible text'},
selector:'',
coverage:`${percentageOfUnanalyzedFailingText.toFixed(2)}%`,
fontSize:'< 12px'});

}

if(percentageOfPassingText>0){
tableData.push({

source:{type:'code',value:'Legible text'},
selector:'',
coverage:`${percentageOfPassingText.toFixed(2)}%`,
fontSize:'≥ 12px'});

}

const decimalProportion=percentageOfPassingText/100;
const displayValue=str_(UIStrings.displayValue,{decimalProportion});
const details=Audit.makeTableDetails(headings,tableData);
const passed=percentageOfPassingText>=MINIMAL_PERCENTAGE_OF_LEGIBLE_TEXT;

return{
score:Number(passed),
details,
displayValue};

}}


module.exports=FontSize;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/font-size.js");
},{"../../computed/viewport-meta.js":48,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/seo/hreflang":[function(require,module,exports){
(function(global,__filename){





'use strict';

const Audit=require('../audit.js');
const VALID_LANGS=importValidLangs();
const NO_LANGUAGE='x-default';
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Document has a valid `hreflang`',

failureTitle:'Document doesn\'t have a valid `hreflang`',

description:'hreflang links tell search engines what version of a page they should '+
'list in search results for a given language or region. [Learn more]'+
'(https://web.dev/hreflang).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);







function importValidLangs(){

const axeCache=global.axe;

global.axe={utils:{}};

require('axe-core/lib/core/utils/valid-langs.js');

const validLangs=global.axe.utils.validLangs();

global.axe=axeCache;

return validLangs;
}





function isValidHreflang(hreflang){
if(hreflang.toLowerCase()===NO_LANGUAGE){
return true;
}


const[lang]=hreflang.split('-');
return VALID_LANGS.includes(lang.toLowerCase());
}

class Hreflang extends Audit{



static get meta(){
return{
id:'hreflang',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['LinkElements','URL']};

}





static audit(artifacts){

const invalidHreflangs=[];

for(const link of artifacts.LinkElements){
if(link.rel!=='alternate')continue;
if(!link.hreflang||isValidHreflang(link.hreflang))continue;
if(link.source==='body')continue;

if(link.source==='head'){
invalidHreflangs.push({
source:{
type:'node',
snippet:`<link rel="alternate" hreflang="${link.hreflang}" href="${link.href}" />`}});


}else if(link.source==='headers'){
invalidHreflangs.push({
source:`Link: <${link.href}>; rel="alternate"; hreflang="${link.hreflang}"`});

}
}


const headings=[
{key:'source',itemType:'code',text:'Source'}];

const details=Audit.makeTableDetails(headings,invalidHreflangs);

return{
score:Number(invalidHreflangs.length===0),
details};

}}


module.exports=Hreflang;
module.exports.UIStrings=UIStrings;

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},"/lighthouse-core/audits/seo/hreflang.js");
},{"../../lib/i18n/i18n.js":77,"../audit.js":3,"axe-core/lib/core/utils/valid-langs.js":108}],"../audits/seo/http-status-code":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const MainResource=require('../../computed/main-resource.js');
const HTTP_UNSUCCESSFUL_CODE_LOW=400;
const HTTP_UNSUCCESSFUL_CODE_HIGH=599;
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Page has successful HTTP status code',

failureTitle:'Page has unsuccessful HTTP status code',

description:'Pages with unsuccessful HTTP status codes may not be indexed properly. '+
'[Learn more](https://web.dev/http-status-code).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class HTTPStatusCode extends Audit{



static get meta(){
return{
id:'http-status-code',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','URL']};

}






static audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const URL=artifacts.URL;

return MainResource.request({devtoolsLog,URL},context).
then(mainResource=>{
const statusCode=mainResource.statusCode;

if(statusCode>=HTTP_UNSUCCESSFUL_CODE_LOW&&
statusCode<=HTTP_UNSUCCESSFUL_CODE_HIGH){
return{
score:0,
displayValue:`${statusCode}`};

}

return{
score:1};

});
}}


module.exports=HTTPStatusCode;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/http-status-code.js");
},{"../../computed/main-resource.js":12,"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/seo/is-crawlable":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const robotsParser=require('robots-parser');
const URL=require('../../lib/url-shim.js');
const MainResource=require('../../computed/main-resource.js');
const BLOCKLIST=new Set([
'noindex',
'none']);

const ROBOTS_HEADER='x-robots-tag';
const UNAVAILABLE_AFTER='unavailable_after';
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Page isn’t blocked from indexing',

failureTitle:'Page is blocked from indexing',

description:'Search engines are unable to include your pages in search results '+
'if they don\'t have permission to crawl them. [Learn more](https://web.dev/is-crawable).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);






function isUnavailable(directive){
const parts=directive.split(':');

if(parts.length<=1||parts[0]!==UNAVAILABLE_AFTER){
return false;
}

const date=Date.parse(parts.slice(1).join(':'));

return!isNaN(date)&&date<Date.now();
}






function hasBlockingDirective(directives){
return directives.split(',').
map(d=>d.toLowerCase().trim()).
some(d=>BLOCKLIST.has(d)||isUnavailable(d));
}






function hasUserAgent(directives){
const parts=directives.match(/^([^,:]+):/);



return!!parts&&parts[1].toLowerCase()!==UNAVAILABLE_AFTER;
}

class IsCrawlable extends Audit{



static get meta(){
return{
id:'is-crawlable',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['MetaElements','RobotsTxt','URL','devtoolsLogs']};

}






static audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metaRobots=artifacts.MetaElements.find(meta=>meta.name==='robots');

return MainResource.request({devtoolsLog,URL:artifacts.URL},context).
then(mainResource=>{

const blockingDirectives=[];

if(metaRobots){
const metaRobotsContent=metaRobots.content||'';
const isBlocking=hasBlockingDirective(metaRobotsContent);

if(isBlocking){
blockingDirectives.push({
source:{
type:'node',
snippet:`<meta name="robots" content="${metaRobotsContent}" />`}});


}
}

mainResource.responseHeaders&&mainResource.responseHeaders.
filter(h=>h.name.toLowerCase()===ROBOTS_HEADER&&!hasUserAgent(h.value)&&
hasBlockingDirective(h.value)).
forEach(h=>blockingDirectives.push({source:`${h.name}: ${h.value}`}));

if(artifacts.RobotsTxt.content){
const robotsFileUrl=new URL('/robots.txt',mainResource.url);
const robotsTxt=robotsParser(robotsFileUrl.href,artifacts.RobotsTxt.content);

if(!robotsTxt.isAllowed(mainResource.url)){
const line=robotsTxt.getMatchingLineNumber(mainResource.url)||1;
blockingDirectives.push({
source:{
type:'source-location',
url:robotsFileUrl.href,
urlProvider:'network',
line:line-1,
column:0}});


}
}


const headings=[
{key:'source',itemType:'code',text:'Blocking Directive Source'}];

const details=Audit.makeTableDetails(headings,blockingDirectives);

return{
score:Number(blockingDirectives.length===0),
details};

});
}}


module.exports=IsCrawlable;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/is-crawlable.js");
},{"../../computed/main-resource.js":12,"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","../audit.js":3,"robots-parser":189}],"../audits/seo/link-text":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const URL=require('../../lib/url-shim.js');
const BLOCKLIST=new Set([

'click here',
'click this',
'go',
'here',
'information',
'learn more',
'more',
'more info',
'more information',
'right here',
'read more',
'see more',
'start',
'this',

'ここをクリック',
'こちらをクリック',
'リンク',
'続きを読む',
'続く',
'全文表示',

'click aquí',
'click aqui',
'clicka aquí',
'clicka aqui',
'pincha aquí',
'pincha aqui',
'aquí',
'aqui',
'más',
'mas',
'más información',
'más informacion',
'mas información',
'mas informacion',
'este',
'enlace',
'este enlace',
'empezar',

'clique aqui',
'inicio',
'início',
'ir',
'mais informação',
'mais informações',
'mais',
'veja mais',

'여기',
'여기를 클릭',
'클릭',
'링크',
'자세히',
'자세히 보기',
'계속',
'이동',
'전체 보기',

'här',
'klicka här',
'läs mer',
'mer',
'mer info',
'mer information']);

const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Links have descriptive text',

failureTitle:'Links do not have descriptive text',

description:'Descriptive link text helps search engines understand your content. '+
'[Learn more](https://web.dev/link-text).',

displayValue:`{itemCount, plural,
    =1 {1 link found}
    other {# links found}
    }`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class LinkText extends Audit{



static get meta(){
return{
id:'link-text',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['URL','AnchorElements']};

}





static audit(artifacts){
const failingLinks=artifacts.AnchorElements.
filter(link=>link.href&&!link.rel.includes('nofollow')).
filter(link=>{
const href=link.href.toLowerCase();
if(
href.startsWith('javascript:')||
href.startsWith('mailto:')||
URL.equalWithExcludedFragments(link.href,artifacts.URL.finalUrl))
{
return false;
}

return BLOCKLIST.has(link.text.trim().toLowerCase());
}).
map(link=>{
return{
href:link.href,
text:link.text.trim()};

});


const headings=[
{key:'href',itemType:'url',text:'Link destination'},
{key:'text',itemType:'text',text:'Link Text'}];


const details=Audit.makeTableDetails(headings,failingLinks,{});
let displayValue;

if(failingLinks.length){
displayValue=str_(UIStrings.displayValue,{itemCount:failingLinks.length});
}

return{
score:Number(failingLinks.length===0),
details,
displayValue};

}}


module.exports=LinkText;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/link-text.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","../audit.js":3}],"../audits/seo/manual/structured-data":[function(require,module,exports){
(function(__filename){





'use strict';

const ManualAudit=require('../../manual/manual-audit.js');
const i18n=require('../../../lib/i18n/i18n.js');

const UIStrings={

description:'Run the [Structured Data Testing Tool](https://search.google.com/structured-data/testing-tool/) and the [Structured Data Linter](http://linter.structured-data.org/) to validate structured data. [Learn more](https://web.dev/structured-data).',

title:'Structured data is valid'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





class StructuredData extends ManualAudit{



static get meta(){
return Object.assign({
id:'structured-data',
description:str_(UIStrings.description),
title:str_(UIStrings.title)},
super.partialMeta);
}}


module.exports=StructuredData;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/manual/structured-data.js");
},{"../../../lib/i18n/i18n.js":77,"../../manual/manual-audit.js":5}],"../audits/seo/meta-description":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Document has a meta description',

failureTitle:'Document does not have a meta description',

description:'Meta descriptions may be included in search results to concisely summarize '+
'page content. '+
'[Learn more](https://web.dev/meta-description).',

explanation:'Description text is empty.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class Description extends Audit{



static get meta(){
return{
id:'meta-description',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['MetaElements']};

}





static audit(artifacts){
const metaDescription=artifacts.MetaElements.find(meta=>meta.name==='description');
if(!metaDescription){
return{
score:0};

}

const description=metaDescription.content||'';
if(description.trim().length===0){
return{
score:0,
explanation:str_(UIStrings.explanation)};

}

return{
score:1};

}}


module.exports=Description;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/meta-description.js");
},{"../../lib/i18n/i18n.js":77,"../audit.js":3}],"../audits/seo/plugins":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const URL=require('../../lib/url-shim.js');

const JAVA_APPLET_TYPE='application/x-java-applet';
const JAVA_BEAN_TYPE='application/x-java-bean';
const TYPE_BLOCKLIST=new Set([
'application/x-shockwave-flash',

JAVA_APPLET_TYPE,
JAVA_BEAN_TYPE,

'application/x-silverlight',
'application/x-silverlight-2']);

const FILE_EXTENSION_BLOCKLIST=new Set([
'swf',
'flv',
'class',
'xap']);

const SOURCE_PARAMS=new Set([
'code',
'movie',
'source',
'src']);

const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Document avoids plugins',

failureTitle:'Document uses plugins',

description:'Search engines can\'t index plugin content, and '+
'many devices restrict plugins or don\'t support them. '+
'[Learn more](https://web.dev/plugins).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);






function isPluginType(type){
type=type.trim().toLowerCase();

return TYPE_BLOCKLIST.has(type)||
type.startsWith(JAVA_APPLET_TYPE)||
type.startsWith(JAVA_BEAN_TYPE);
}






function isPluginURL(url){
try{

const filePath=new URL(url,'http://example.com').pathname;
const parts=filePath.split('.');

if(parts.length<2){
return false;
}
const part=parts.pop();
return FILE_EXTENSION_BLOCKLIST.has(part.trim().toLowerCase());
}catch(e){
return false;
}
}

class Plugins extends Audit{



static get meta(){
return{
id:'plugins',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['EmbeddedContent']};

}





static audit(artifacts){
const plugins=artifacts.EmbeddedContent.
filter(item=>{
if(item.tagName==='APPLET'){
return true;
}

if(
(item.tagName==='EMBED'||item.tagName==='OBJECT')&&
item.type&&
isPluginType(item.type))
{
return true;
}

const embedSrc=item.src||item.code;
if(item.tagName==='EMBED'&&embedSrc&&isPluginURL(embedSrc)){
return true;
}

if(item.tagName==='OBJECT'&&item.data&&isPluginURL(item.data)){
return true;
}

const failingParams=item.params.filter(param=>
SOURCE_PARAMS.has(param.name.trim().toLowerCase())&&isPluginURL(param.value));


return failingParams.length>0;
}).
map(plugin=>{
const tagName=plugin.tagName.toLowerCase();

const attributeKeys=['src','data','code','type'];
const attributes=attributeKeys.
reduce((result,attr)=>{
if(plugin[attr]!==null){
result+=` ${attr}="${plugin[attr]}"`;
}
return result;
},'');
const params=plugin.params.
filter(param=>SOURCE_PARAMS.has(param.name.trim().toLowerCase())).
map(param=>`<param ${param.name}="${param.value}" />`).
join('');

return{
source:{
type:'node',
snippet:`<${tagName}${attributes}>${params}</${tagName}>`}};


});


const headings=[
{key:'source',itemType:'code',text:'Element source'}];


const details=Audit.makeTableDetails(headings,plugins);

return{
score:Number(plugins.length===0),
details};

}}


module.exports=Plugins;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/plugins.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","../audit.js":3}],"../audits/seo/robots-txt":[function(require,module,exports){
(function(__filename){





'use strict';








const Audit=require('../audit.js');
const URL=require('../../lib/url-shim.js');

const HTTP_CLIENT_ERROR_CODE_LOW=400;
const HTTP_SERVER_ERROR_CODE_LOW=500;

const DIRECTIVE_SITEMAP='sitemap';
const DIRECTIVE_USER_AGENT='user-agent';
const DIRECTIVE_ALLOW='allow';
const DIRECTIVE_DISALLOW='disallow';
const DIRECTIVES_GROUP_MEMBERS=new Set([DIRECTIVE_ALLOW,DIRECTIVE_DISALLOW]);
const DIRECTIVE_SAFELIST=new Set([
DIRECTIVE_USER_AGENT,DIRECTIVE_DISALLOW,
DIRECTIVE_ALLOW,DIRECTIVE_SITEMAP,
'crawl-delay',
'clean-param','host',
'request-rate','visit-time','noindex']);

const SITEMAP_VALID_PROTOCOLS=new Set(['https:','http:','ftp:']);
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'robots.txt is valid',

failureTitle:'robots.txt is not valid',

description:'If your robots.txt file is malformed, crawlers may not be able to understand '+
'how you want your website to be crawled or indexed. [Learn more](https://web.dev/robots-txt).',




displayValueHttpBadCode:'Request for robots.txt returned HTTP status: {statusCode}',

displayValueValidationError:`{itemCount, plural,
    =1 {1 error found}
    other {# errors found}
    }`,

explanation:'Lighthouse was unable to download a robots.txt file'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);






function verifyDirective(directiveName,directiveValue){
if(!DIRECTIVE_SAFELIST.has(directiveName)){
throw new Error('Unknown directive');
}

if(directiveName===DIRECTIVE_SITEMAP){
let sitemapUrl;

try{
sitemapUrl=new URL(directiveValue);
}catch(e){
throw new Error('Invalid sitemap URL');
}

if(!SITEMAP_VALID_PROTOCOLS.has(sitemapUrl.protocol)){
throw new Error('Invalid sitemap URL protocol');
}
}

if(directiveName===DIRECTIVE_USER_AGENT&&!directiveValue){
throw new Error('No user-agent specified');
}

if(directiveName===DIRECTIVE_ALLOW||directiveName===DIRECTIVE_DISALLOW){
if(directiveValue!==''&&directiveValue[0]!=='/'&&directiveValue[0]!=='*'){
throw new Error('Pattern should either be empty, start with "/" or "*"');
}

const dollarIndex=directiveValue.indexOf('$');

if(dollarIndex!==-1&&dollarIndex!==directiveValue.length-1){
throw new Error('"$" should only be used at the end of the pattern');
}
}
}






function parseLine(line){
const hashIndex=line.indexOf('#');

if(hashIndex!==-1){
line=line.substr(0,hashIndex);
}

line=line.trim();

if(line.length===0){
return null;
}

const colonIndex=line.indexOf(':');

if(colonIndex===-1){
throw new Error('Syntax not understood');
}

const directiveName=line.slice(0,colonIndex).trim().toLowerCase();
const directiveValue=line.slice(colonIndex+1).trim();

verifyDirective(directiveName,directiveValue);

return{
directive:directiveName,
value:directiveValue};

}





function validateRobots(content){



const errors=[];
let inGroup=false;

content.
split(/\r\n|\r|\n/).
forEach((line,index)=>{
let parsedLine;

try{
parsedLine=parseLine(line);
}catch(e){
errors.push({
index:(index+1).toString(),
line:line,
message:e.message.toString()});

}

if(!parsedLine){
return;
}



if(parsedLine.directive===DIRECTIVE_USER_AGENT){
inGroup=true;
}else if(!inGroup&&DIRECTIVES_GROUP_MEMBERS.has(parsedLine.directive)){
errors.push({
index:(index+1).toString(),
line:line,
message:'No user-agent specified'});

}
});

return errors;
}

class RobotsTxt extends Audit{



static get meta(){
return{
id:'robots-txt',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['RobotsTxt']};

}





static audit(artifacts){
const{
status,
content}=
artifacts.RobotsTxt;

if(!status){
return{
score:0,
explanation:str_(UIStrings.explanation)};

}

if(status>=HTTP_SERVER_ERROR_CODE_LOW){
return{
score:0,
displayValue:str_(UIStrings.displayValueHttpBadCode,{statusCode:status})};

}else if(status>=HTTP_CLIENT_ERROR_CODE_LOW||content===''){
return{
score:1,
notApplicable:true};

}


if(content===null){
throw new Error(`Status ${status} was valid, but content was null`);
}

const validationErrors=validateRobots(content);


const headings=[
{key:'index',itemType:'text',text:'Line #'},
{key:'line',itemType:'code',text:'Content'},
{key:'message',itemType:'code',text:'Error'}];


const details=Audit.makeTableDetails(headings,validationErrors,{});
let displayValue;

if(validationErrors.length){
displayValue=
str_(UIStrings.displayValueValidationError,{itemCount:validationErrors.length});
}

return{
score:Number(validationErrors.length===0),
details,
displayValue};

}}


module.exports=RobotsTxt;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/seo/robots-txt.js");
},{"../../lib/i18n/i18n.js":77,"../../lib/url-shim.js":"url","../audit.js":3}],"../audits/seo/tap-targets":[function(require,module,exports){
(function(__filename){





'use strict';





const Audit=require('../audit.js');
const ComputedViewportMeta=require('../../computed/viewport-meta.js');
const{
rectsTouchOrOverlap,
getRectOverlapArea,
getRectAtCenter,
allRectsContainedWithinEachOther,
getLargestRect,
getBoundingRectWithPadding}=
require('../../lib/rect-helpers.js');
const{getTappableRectsFromClientRects}=require('../../lib/tappable-rects.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

title:'Tap targets are sized appropriately',

failureTitle:'Tap targets are not sized appropriately',

description:'Interactive elements like buttons and links should be large enough (48x48px), and have enough space around them, to be easy enough to tap without overlapping onto other elements. [Learn more](https://web.dev/tap-targets).',

tapTargetHeader:'Tap Target',

overlappingTargetHeader:'Overlapping Target',


explanationViewportMetaNotOptimized:'Tap targets are too small because there\'s no viewport meta tag optimized for mobile screens',

displayValue:'{decimalProportion, number, percent} appropriately sized tap targets'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const FINGER_SIZE_PX=48;


const MAX_ACCEPTABLE_OVERLAP_SCORE_RATIO=0.25;







function getBoundedTapTargets(targets){
return targets.map(tapTarget=>{
return{
tapTarget,
paddedBoundsRect:getBoundingRectWithPadding(tapTarget.clientRects,FINGER_SIZE_PX)};

});
}




function clientRectBelowMinimumSize(cr){
return cr.width<FINGER_SIZE_PX||cr.height<FINGER_SIZE_PX;
}






function getTooSmallTargets(targets){
return targets.filter(target=>{
return target.tapTarget.clientRects.every(clientRectBelowMinimumSize);
});
}






function getAllOverlapFailures(tooSmallTargets,allTargets){

const failures=[];

tooSmallTargets.forEach(target=>{

const tappableRects=getTappableRectsFromClientRects(target.tapTarget.clientRects);

for(const maybeOverlappingTarget of allTargets){
if(maybeOverlappingTarget===target){

continue;
}

if(!rectsTouchOrOverlap(target.paddedBoundsRect,maybeOverlappingTarget.paddedBoundsRect)){

continue;
}

if(target.tapTarget.href===maybeOverlappingTarget.tapTarget.href){
const isHttpOrHttpsLink=/https?:\/\//.test(target.tapTarget.href);
if(isHttpOrHttpsLink){

continue;
}
}

const maybeOverlappingRects=maybeOverlappingTarget.tapTarget.clientRects;
if(allRectsContainedWithinEachOther(tappableRects,maybeOverlappingRects)){




continue;
}

const rectFailure=getOverlapFailureForTargetPair(tappableRects,maybeOverlappingRects);
if(rectFailure){
failures.push({
...rectFailure,
tapTarget:target.tapTarget,
overlappingTarget:maybeOverlappingTarget.tapTarget});

}
}
});

return failures;
}






function getOverlapFailureForTargetPair(tappableRects,maybeOverlappingRects){

let greatestFailure=null;

for(const targetCR of tappableRects){
const fingerRect=getRectAtCenter(targetCR,FINGER_SIZE_PX);


const tapTargetScore=getRectOverlapArea(fingerRect,targetCR);

for(const maybeOverlappingCR of maybeOverlappingRects){
const overlappingTargetScore=getRectOverlapArea(fingerRect,maybeOverlappingCR);

const overlapScoreRatio=overlappingTargetScore/tapTargetScore;
if(overlapScoreRatio<MAX_ACCEPTABLE_OVERLAP_SCORE_RATIO){


continue;
}


if(!greatestFailure||overlapScoreRatio>greatestFailure.overlapScoreRatio){
greatestFailure={
overlapScoreRatio,
tapTargetScore,
overlappingTargetScore};

}
}
}
return greatestFailure;
}






function mergeSymmetricFailures(overlapFailures){

const failuresAfterMerging=[];

overlapFailures.forEach((failure,overlapFailureIndex)=>{
const symmetricFailure=overlapFailures.find(f=>
f.tapTarget===failure.overlappingTarget&&
f.overlappingTarget===failure.tapTarget);


if(!symmetricFailure){
failuresAfterMerging.push(failure);
return;
}

const{overlapScoreRatio:failureOSR}=failure;
const{overlapScoreRatio:symmetricOSR}=symmetricFailure;




if(failureOSR>symmetricOSR||
failureOSR===symmetricOSR&&
overlapFailureIndex<overlapFailures.indexOf(symmetricFailure))
{
failuresAfterMerging.push(failure);
}
});

return failuresAfterMerging;
}





function getTableItems(overlapFailures){
const tableItems=overlapFailures.map(failure=>{
const largestCR=getLargestRect(failure.tapTarget.clientRects);
const width=Math.floor(largestCR.width);
const height=Math.floor(largestCR.height);
const size=width+'x'+height;
return{
tapTarget:targetToTableNode(failure.tapTarget),
overlappingTarget:targetToTableNode(failure.overlappingTarget),
tapTargetScore:failure.tapTargetScore,
overlappingTargetScore:failure.overlappingTargetScore,
overlapScoreRatio:failure.overlapScoreRatio,
size,
width,
height};

});

tableItems.sort((a,b)=>{
return b.overlapScoreRatio-a.overlapScoreRatio;
});

return tableItems;
}





function targetToTableNode(target){
return{
type:'node',
snippet:target.snippet,
path:target.path,
selector:target.selector,
nodeLabel:target.nodeLabel};

}

class TapTargets extends Audit{



static get meta(){
return{
id:'tap-targets',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['MetaElements','TapTargets','TestedAsMobileDevice']};

}






static async audit(artifacts,context){
if(!artifacts.TestedAsMobileDevice){


return{
score:1,
notApplicable:true};

}

const viewportMeta=await ComputedViewportMeta.request(artifacts.MetaElements,context);
if(!viewportMeta.isMobileOptimized){
return{
score:0,
explanation:str_(UIStrings.explanationViewportMetaNotOptimized)};

}


const boundedTapTargets=getBoundedTapTargets(artifacts.TapTargets);

const tooSmallTargets=getTooSmallTargets(boundedTapTargets);
const overlapFailures=getAllOverlapFailures(tooSmallTargets,boundedTapTargets);
const overlapFailuresForDisplay=mergeSymmetricFailures(overlapFailures);
const tableItems=getTableItems(overlapFailuresForDisplay);


const headings=[
{key:'tapTarget',itemType:'node',text:str_(UIStrings.tapTargetHeader)},
{key:'size',itemType:'text',text:str_(i18n.UIStrings.columnSize)},
{key:'overlappingTarget',itemType:'node',text:str_(UIStrings.overlappingTargetHeader)}];


const details=Audit.makeTableDetails(headings,tableItems);

const tapTargetCount=artifacts.TapTargets.length;
const failingTapTargetCount=new Set(overlapFailures.map(f=>f.tapTarget)).size;
const passingTapTargetCount=tapTargetCount-failingTapTargetCount;

let score=1;
let passingTapTargetRatio=1;
if(failingTapTargetCount>0){
passingTapTargetRatio=passingTapTargetCount/tapTargetCount;


score=passingTapTargetRatio*0.89;
}
const displayValue=str_(UIStrings.displayValue,{decimalProportion:passingTapTargetRatio});

return{
score,
details,
displayValue};

}}


TapTargets.FINGER_SIZE_PX=FINGER_SIZE_PX;

module.exports=TapTargets;
module.exports.UIStrings=UIStrings;
































}).call(this,"/lighthouse-core/audits/seo/tap-targets.js");
},{"../../computed/viewport-meta.js":48,"../../lib/i18n/i18n.js":77,"../../lib/rect-helpers.js":88,"../../lib/tappable-rects.js":93,"../audit.js":3}],"../audits/server-response-time":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');
const MainResource=require('../computed/main-resource.js');

const UIStrings={

title:'Initial server response time was short',

failureTitle:'Reduce initial server response time',

description:'Keep the server response time for the main document short because all other requests depend on it. [Learn more](https://web.dev/time-to-first-byte).',

displayValue:`Root document took {timeInMs, number, milliseconds}\xa0ms`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const RESPONSE_THRESHOLD=600;

class ServerResponseTime extends Audit{



static get meta(){
return{
id:'server-response-time',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','URL']};

}




static caclulateResponseTime(record){
const timing=record.timing;
return timing?timing.receiveHeadersEnd-timing.sendEnd:0;
}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const mainResource=await MainResource.request({devtoolsLog,URL:artifacts.URL},context);

const responseTime=ServerResponseTime.caclulateResponseTime(mainResource);
const passed=responseTime<RESPONSE_THRESHOLD;
const displayValue=str_(UIStrings.displayValue,{timeInMs:responseTime});


const details={
type:'opportunity',
overallSavingsMs:responseTime-RESPONSE_THRESHOLD,
headings:[],
items:[]};


return{
numericValue:responseTime,
numericUnit:'millisecond',
score:Number(passed),
displayValue,
details,
extendedInfo:{
value:{
wastedMs:responseTime-RESPONSE_THRESHOLD}}};



}}


module.exports=ServerResponseTime;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/server-response-time.js");
},{"../computed/main-resource.js":12,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/service-worker":[function(require,module,exports){
(function(__filename){





'use strict';

const URL=require('../lib/url-shim.js');
const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Registers a service worker that controls page and `start_url`',

failureTitle:'Does not register a service worker that controls page and `start_url`',

description:'The service worker is the technology that enables your app to use many '+
'Progressive Web App features, such as offline, add to homescreen, and push '+
'notifications. [Learn more](https://web.dev/service-worker).',




explanationOutOfScope:'This origin has one or more service workers, however the page '+
'({pageUrl}) is not in scope.',

explanationNoManifest:'This page is controlled by a service worker, however '+
'no `start_url` was found because no manifest was fetched.',

explanationBadManifest:'This page is controlled by a service worker, however '+
'no `start_url` was found because manifest failed to parse as valid JSON',





explanationBadStartUrl:'This page is controlled by a service worker, however '+
'the `start_url` ({startUrl}) is not in the service worker\'s scope ({scopeUrl})'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class ServiceWorker extends Audit{



static get meta(){
return{
id:'service-worker',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['URL','ServiceWorker','WebAppManifest']};

}







static getVersionsForOrigin(versions,pageUrl){
return versions.
filter(v=>v.status==='activated').
filter(v=>new URL(v.scriptURL).origin===pageUrl.origin);
}









static getControllingScopeUrl(matchingSWVersions,registrations,pageUrl){

const matchingScopeUrls=matchingSWVersions.
map(v=>registrations.find(r=>r.registrationId===v.registrationId)).
filter(r=>!!r).
map(r=>new URL(r.scopeURL).href);



const pageControllingScope=matchingScopeUrls.
filter(scopeUrl=>pageUrl.href.startsWith(scopeUrl)).
sort((scopeA,scopeB)=>scopeA.length-scopeB.length).
pop();

return pageControllingScope;
}








static checkStartUrl(WebAppManifest,scopeUrl){
if(!WebAppManifest){
return str_(UIStrings.explanationNoManifest);
}
if(!WebAppManifest.value){
return str_(UIStrings.explanationBadManifest);
}

const startUrl=WebAppManifest.value.start_url.value;
if(!startUrl.startsWith(scopeUrl)){
return str_(UIStrings.explanationBadStartUrl,{startUrl,scopeUrl});
}
}





static audit(artifacts){

const pageUrl=new URL(artifacts.URL.finalUrl);
const{versions,registrations}=artifacts.ServiceWorker;

const versionsForOrigin=ServiceWorker.getVersionsForOrigin(versions,pageUrl);
if(versionsForOrigin.length===0){
return{
score:0};

}

const controllingScopeUrl=ServiceWorker.getControllingScopeUrl(versionsForOrigin,
registrations,pageUrl);
if(!controllingScopeUrl){
return{
score:0,
explanation:str_(UIStrings.explanationOutOfScope,{pageUrl:pageUrl.href})};

}

const startUrlFailure=ServiceWorker.checkStartUrl(artifacts.WebAppManifest,
controllingScopeUrl);
if(startUrlFailure){
return{
score:0,
explanation:startUrlFailure};

}


return{
score:1};

}}


module.exports=ServiceWorker;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/service-worker.js");
},{"../lib/i18n/i18n.js":77,"../lib/url-shim.js":"url","./audit.js":3}],"../audits/splash-screen":[function(require,module,exports){
(function(__filename){





'use strict';

const MultiCheckAudit=require('./multi-check-audit.js');
const ManifestValues=require('../computed/manifest-values.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Configured for a custom splash screen',

failureTitle:'Is not configured for a custom splash screen',

description:'A themed splash screen ensures a high-quality experience when '+
'users launch your app from their homescreens. [Learn '+
'more](https://web.dev/splash-screen).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);














class SplashScreen extends MultiCheckAudit{



static get meta(){
return{
id:'splash-screen',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['WebAppManifest','InstallabilityErrors']};

}





static assessManifest(manifestValues,failures){
if(manifestValues.isParseFailure&&manifestValues.parseFailureReason){
failures.push(manifestValues.parseFailureReason);
return;
}

const splashScreenCheckIds=[
'hasName',
'hasBackgroundColor',
'hasThemeColor',
'hasIconsAtLeast512px'];


manifestValues.allChecks.
filter(item=>splashScreenCheckIds.includes(item.id)).
forEach(item=>{
if(!item.passing){
failures.push(item.failureText);
}
});
}






static async audit_(artifacts,context){

const failures=[];

const manifestValues=await ManifestValues.request(artifacts,context);
SplashScreen.assessManifest(manifestValues,failures);

return{
failures,
manifestValues};

}}


module.exports=SplashScreen;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/splash-screen.js");
},{"../computed/manifest-values.js":14,"../lib/i18n/i18n.js":77,"./multi-check-audit.js":6}],"../audits/themed-omnibox":[function(require,module,exports){
(function(__filename){





'use strict';

const MultiCheckAudit=require('./multi-check-audit.js');
const ManifestValues=require('../computed/manifest-values.js');
const cssParsers=require('cssstyle/lib/parsers');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Sets a theme color for the address bar.',

failureTitle:'Does not set a theme color for the address bar.',

description:'The browser address bar can be themed to match your site. '+
'[Learn more](https://web.dev/themed-omnibox).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);











class ThemedOmnibox extends MultiCheckAudit{



static get meta(){
return{
id:'themed-omnibox',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['WebAppManifest','InstallabilityErrors','MetaElements']};

}





static isValidColor(color){
return cssParsers.valueType(color)===cssParsers.TYPES.COLOR;
}





static assessMetaThemecolor(themeColorMeta,failures){
if(!themeColorMeta){

failures.push('No `<meta name="theme-color">` tag found');
}else if(!ThemedOmnibox.isValidColor(themeColorMeta.content||'')){
failures.push('The theme-color meta tag did not contain a valid CSS color');
}
}





static assessManifest(manifestValues,failures){
if(manifestValues.isParseFailure&&manifestValues.parseFailureReason){
failures.push(manifestValues.parseFailureReason);
return;
}

const themeColorCheck=manifestValues.allChecks.find(i=>i.id==='hasThemeColor');
if(themeColorCheck&&!themeColorCheck.passing){
failures.push(themeColorCheck.failureText);
}
}






static async audit_(artifacts,context){

const failures=[];

const themeColorMeta=artifacts.MetaElements.find(meta=>meta.name==='theme-color');
const manifestValues=await ManifestValues.request(artifacts,context);
ThemedOmnibox.assessManifest(manifestValues,failures);
ThemedOmnibox.assessMetaThemecolor(themeColorMeta,failures);

return{
failures,
manifestValues,
themeColor:themeColorMeta&&themeColorMeta.content||null};

}}


module.exports=ThemedOmnibox;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/themed-omnibox.js");
},{"../computed/manifest-values.js":14,"../lib/i18n/i18n.js":77,"./multi-check-audit.js":6,"cssstyle/lib/parsers":117}],"../audits/third-party-summary":[function(require,module,exports){
(function(__filename){





'use strict';

const thirdPartyWeb=require('third-party-web/httparchive-nostats-subset');

const Audit=require('./audit.js');
const BootupTime=require('./bootup-time.js');
const i18n=require('../lib/i18n/i18n.js');
const NetworkRecords=require('../computed/network-records.js');
const MainResource=require('../computed/main-resource.js');
const MainThreadTasks=require('../computed/main-thread-tasks.js');

const UIStrings={

title:'Minimize third-party usage',

failureTitle:'Reduce the impact of third-party code',

description:'Third-party code can significantly impact load performance. '+
'Limit the number of redundant third-party providers and try to load third-party code after '+
'your page has primarily finished loading. [Learn more](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/).',

columnThirdParty:'Third-Party',

columnBlockingTime:'Main-Thread Blocking Time',

displayValue:'Third-party code blocked the main thread for '+
`{timeInMs, number, milliseconds}\xa0ms`};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


const PASS_THRESHOLD_IN_MS=250;



class ThirdPartySummary extends Audit{



static get meta(){
return{
id:'third-party-summary',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['traces','devtoolsLogs','URL']};

}







static getEntitySafe(url){
try{
return thirdPartyWeb.getEntity(url);
}catch(_){
return undefined;
}
}









static getSummaryByEntity(networkRecords,mainThreadTasks,cpuMultiplier){

const entities=new Map();
const defaultEntityStat={mainThreadTime:0,blockingTime:0,transferSize:0};

for(const request of networkRecords){
const entity=ThirdPartySummary.getEntitySafe(request.url);
if(!entity)continue;

const entityStats=entities.get(entity)||{...defaultEntityStat};
entityStats.transferSize+=request.transferSize;
entities.set(entity,entityStats);
}

const jsURLs=BootupTime.getJavaScriptURLs(networkRecords);

for(const task of mainThreadTasks){
const attributeableURL=BootupTime.getAttributableURLForTask(task,jsURLs);
const entity=ThirdPartySummary.getEntitySafe(attributeableURL);
if(!entity)continue;

const entityStats=entities.get(entity)||{...defaultEntityStat};
const taskDuration=task.selfTime*cpuMultiplier;

entityStats.mainThreadTime+=taskDuration;



entityStats.blockingTime+=Math.max(taskDuration-50,0);
entities.set(entity,entityStats);
}

return entities;
}






static async audit(artifacts,context){
const settings=context.settings||{};
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const mainResource=await MainResource.request({devtoolsLog,URL:artifacts.URL},context);
const mainEntity=ThirdPartySummary.getEntitySafe(mainResource.url);
const tasks=await MainThreadTasks.request(trace,context);
const multiplier=settings.throttlingMethod==='simulate'?
settings.throttling.cpuSlowdownMultiplier:1;

const summaryByEntity=ThirdPartySummary.getSummaryByEntity(networkRecords,tasks,multiplier);

const summary={wastedBytes:0,wastedMs:0};

const results=Array.from(summaryByEntity.entries()).


filter(([entity])=>!(mainEntity&&mainEntity.name===entity.name)).
map(([entity,stats])=>{
summary.wastedBytes+=stats.transferSize;
summary.wastedMs+=stats.blockingTime;

return{
entity:{
type:'link',
text:entity.name,
url:entity.homepage||''},

transferSize:stats.transferSize,
mainThreadTime:stats.mainThreadTime,
blockingTime:stats.blockingTime};

}).

sort((a,b)=>b.blockingTime-a.blockingTime||b.transferSize-a.transferSize);


const headings=[
{key:'entity',itemType:'link',text:str_(UIStrings.columnThirdParty)},
{key:'transferSize',granularity:1,itemType:'bytes',
text:str_(i18n.UIStrings.columnTransferSize)},
{key:'blockingTime',granularity:1,itemType:'ms',
text:str_(UIStrings.columnBlockingTime)}];


if(!results.length){
return{
score:1,
notApplicable:true};

}

return{
score:Number(summary.wastedMs<=PASS_THRESHOLD_IN_MS),
displayValue:str_(UIStrings.displayValue,{
timeInMs:summary.wastedMs}),

details:Audit.makeTableDetails(headings,results,summary)};

}}


module.exports=ThirdPartySummary;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/third-party-summary.js");
},{"../computed/main-resource.js":12,"../computed/main-thread-tasks.js":13,"../computed/network-records.js":39,"../lib/i18n/i18n.js":77,"./audit.js":3,"./bootup-time.js":"../audits/bootup-time","third-party-web/httparchive-nostats-subset":198}],"../audits/timing-budget":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const TimingSummary=require('../computed/metrics/timing-summary.js');
const MainResource=require('../computed/main-resource.js');
const Budget=require('../config/budget.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Timing budget',

description:'Set a timing budget to help you keep an eye on the performance of your site. Performant sites load fast and respond to user input events quickly. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/budgets).',

columnTimingMetric:'Metric',

columnMeasurement:'Measurement'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);



class TimingBudget extends Audit{



static get meta(){
return{
id:'timing-budget',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
requiredArtifacts:['devtoolsLogs','traces','URL']};

}





static getRowLabel(timingMetric){

const strMappings={
'first-contentful-paint':i18n.UIStrings.firstContentfulPaintMetric,
'first-cpu-idle':i18n.UIStrings.firstCPUIdleMetric,
'interactive':i18n.UIStrings.interactiveMetric,
'first-meaningful-paint':i18n.UIStrings.firstMeaningfulPaintMetric,
'max-potential-fid':i18n.UIStrings.maxPotentialFIDMetric,
'estimated-input-latency':i18n.UIStrings.estimatedInputLatencyMetric,
'total-blocking-time':i18n.UIStrings.totalBlockingTimeMetric,
'speed-index':i18n.UIStrings.speedIndexMetric,
'largest-contentful-paint':i18n.UIStrings.largestContentfulPaintMetric,
'cumulative-layout-shift':i18n.UIStrings.cumulativeLayoutShiftMetric};

return str_(strMappings[timingMetric]);
}






static getMeasurement(timingMetric,summary){

const measurements={
'first-contentful-paint':summary.firstContentfulPaint,
'first-cpu-idle':summary.firstCPUIdle,
'interactive':summary.interactive,
'first-meaningful-paint':summary.firstMeaningfulPaint,
'max-potential-fid':summary.maxPotentialFID,
'estimated-input-latency':summary.estimatedInputLatency,
'total-blocking-time':summary.totalBlockingTime,
'speed-index':summary.speedIndex,
'largest-contentful-paint':summary.largestContentfulPaint,
'cumulative-layout-shift':summary.cumulativeLayoutShift};

return measurements[timingMetric];
}






static tableItems(budget,summary){
if(!budget.timings){
return[];
}
return budget.timings.map(timingBudget=>{
const metricName=timingBudget.metric;
const label=this.getRowLabel(metricName);
const measurement=this.getMeasurement(metricName,summary);
const overBudget=measurement&&measurement>timingBudget.budget?
measurement-timingBudget.budget:undefined;
return{
metric:metricName,
label,
measurement,
overBudget};

}).sort((a,b)=>{
return(b.overBudget||0)-(a.overBudget||0);
});
}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const mainResource=await MainResource.request({URL:artifacts.URL,devtoolsLog},context);
const summary=(await TimingSummary.request({trace,devtoolsLog},context)).metrics;
const budget=Budget.getMatchingBudget(context.settings.budgets,mainResource.url);

if(!budget){
return{
score:0,
notApplicable:true};

}


const headers=[
{key:'label',itemType:'text',text:str_(UIStrings.columnTimingMetric)},




{key:'measurement',itemType:'ms',text:str_(UIStrings.columnMeasurement)},
{key:'overBudget',itemType:'ms',text:str_(i18n.UIStrings.columnOverBudget)}];


return{
details:Audit.makeTableDetails(headers,this.tableItems(budget,summary)),
score:1};

}}


module.exports=TimingBudget;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/timing-budget.js");
},{"../computed/main-resource.js":12,"../computed/metrics/timing-summary.js":35,"../config/budget.js":49,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/user-timings":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');
const ComputedUserTimings=require('../computed/user-timings.js');

const UIStrings={

title:'User Timing marks and measures',

description:'Consider instrumenting your app with the User Timing API to measure your '+
'app\'s real-world performance during key user experiences. '+
'[Learn more](https://web.dev/user-timings).',

displayValue:`{itemCount, plural,
    =1 {1 user timing}
    other {# user timings}
    }`,

columnType:'Type',

columnStartTime:'Start Time',

columnDuration:'Duration'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




class UserTimings extends Audit{



static get meta(){
return{
id:'user-timings',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
scoreDisplayMode:Audit.SCORING_MODES.INFORMATIVE,
requiredArtifacts:['traces']};

}




static get blacklistedPrefixes(){
return['goog_'];
}






static excludeBlacklisted(evt){
return UserTimings.blacklistedPrefixes.every(prefix=>!evt.name.startsWith(prefix));
}






static audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
return ComputedUserTimings.request(trace,context).then(computedUserTimings=>{
const userTimings=computedUserTimings.filter(UserTimings.excludeBlacklisted);
const tableRows=userTimings.map(item=>{
return{
name:item.name,
startTime:item.startTime,
duration:item.isMark?undefined:item.duration,
timingType:item.isMark?'Mark':'Measure'};

}).sort((itemA,itemB)=>{
if(itemA.timingType===itemB.timingType){

return itemA.startTime-itemB.startTime;
}else if(itemA.timingType==='Measure'){

return-1;
}else{
return 1;
}
});


const headings=[
{key:'name',itemType:'text',text:str_(i18n.UIStrings.columnName)},
{key:'timingType',itemType:'text',text:str_(UIStrings.columnType)},
{key:'startTime',itemType:'ms',granularity:0.01,
text:str_(UIStrings.columnStartTime)},
{key:'duration',itemType:'ms',granularity:0.01,text:str_(UIStrings.columnDuration)}];


const details=Audit.makeTableDetails(headings,tableRows);


let displayValue;
if(userTimings.length){
displayValue=str_(UIStrings.displayValue,{itemCount:userTimings.length});
}

return{

score:Number(userTimings.length===0),
notApplicable:userTimings.length===0,
displayValue,
extendedInfo:{
value:userTimings},

details};

});
}}


module.exports=UserTimings;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/user-timings.js");
},{"../computed/user-timings.js":47,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/uses-rel-preconnect":[function(require,module,exports){
(function(__filename){






'use strict';

const Audit=require('./audit.js');
const UnusedBytes=require('./byte-efficiency/byte-efficiency-audit.js');
const URL=require('../lib/url-shim.js');
const i18n=require('../lib/i18n/i18n.js');
const NetworkRecords=require('../computed/network-records.js');
const MainResource=require('../computed/main-resource.js');
const LoadSimulator=require('../computed/load-simulator.js');





const PRECONNECT_SOCKET_MAX_IDLE=15;

const IGNORE_THRESHOLD_IN_MS=50;

const UIStrings={

title:'Preconnect to required origins',

description:
'Consider adding `preconnect` or `dns-prefetch` resource hints to establish early '+
`connections to important third-party origins. [Learn more](https://web.dev/uses-rel-preconnect).`,




crossoriginWarning:'A preconnect <link> was found for "{securityOrigin}" but was not used '+
'by the browser. Check that you are using the `crossorigin` attribute properly.',

tooManyPreconnectLinksWarning:'More than 2 preconnect links were found. '+
'Preconnect links should be used sparingly and only to the most important origins.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class UsesRelPreconnectAudit extends Audit{



static get meta(){
return{
id:'uses-rel-preconnect',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','URL','LinkElements'],
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC};

}






static hasValidTiming(record){
return!!record.timing&&record.timing.connectEnd>0&&record.timing.connectStart>0;
}






static hasAlreadyConnectedToOrigin(record){
return(
!!record.timing&&
record.timing.dnsEnd-record.timing.dnsStart===0&&
record.timing.connectEnd-record.timing.connectStart===0);

}







static socketStartTimeIsBelowThreshold(record,mainResource){
return Math.max(0,record.startTime-mainResource.endTime)<PRECONNECT_SOCKET_MAX_IDLE;
}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[UsesRelPreconnectAudit.DEFAULT_PASS];
const settings=context.settings;
let maxWasted=0;

const warnings=[];

const[networkRecords,mainResource,loadSimulator]=await Promise.all([
NetworkRecords.request(devtoolsLog,context),
MainResource.request({devtoolsLog,URL:artifacts.URL},context),
LoadSimulator.request({devtoolsLog,settings},context)]);


const{rtt,additionalRttByOrigin}=loadSimulator.getOptions();


const origins=new Map();
networkRecords.
forEach(record=>{
if(

!UsesRelPreconnectAudit.hasValidTiming(record)||

record.initiator.url===mainResource.url||

!record.parsedURL||!record.parsedURL.securityOrigin||

mainResource.parsedURL.securityOrigin===record.parsedURL.securityOrigin||

UsesRelPreconnectAudit.hasAlreadyConnectedToOrigin(record)||

!UsesRelPreconnectAudit.socketStartTimeIsBelowThreshold(record,mainResource))
{
return;
}

const securityOrigin=record.parsedURL.securityOrigin;
const records=origins.get(securityOrigin)||[];
records.push(record);
origins.set(securityOrigin,records);
});

const preconnectLinks=artifacts.LinkElements.filter(el=>el.rel==='preconnect');
const preconnectOrigins=new Set(preconnectLinks.map(link=>URL.getOrigin(link.href||'')));


let results=[];
origins.forEach(records=>{


const firstRecordOfOrigin=records.reduce((firstRecord,record)=>{
return record.startTime<firstRecord.startTime?record:firstRecord;
});


if(!firstRecordOfOrigin.timing)return;

const securityOrigin=firstRecordOfOrigin.parsedURL.securityOrigin;




const additionalRtt=additionalRttByOrigin.get(securityOrigin)||0;
let connectionTime=rtt+additionalRtt;

if(firstRecordOfOrigin.parsedURL.scheme==='https')connectionTime=connectionTime*2;

const timeBetweenMainResourceAndDnsStart=
firstRecordOfOrigin.startTime*1000-
mainResource.endTime*1000+
firstRecordOfOrigin.timing.dnsStart;

const wastedMs=Math.min(connectionTime,timeBetweenMainResourceAndDnsStart);
if(wastedMs<IGNORE_THRESHOLD_IN_MS)return;

if(preconnectOrigins.has(securityOrigin)){

warnings.push(str_(UIStrings.crossoriginWarning,{securityOrigin}));
return;
}

maxWasted=Math.max(wastedMs,maxWasted);
results.push({
url:securityOrigin,
wastedMs:wastedMs});

});

results=results.
sort((a,b)=>b.wastedMs-a.wastedMs);



if(preconnectLinks.length>=2){
return{
score:1,
warnings:preconnectLinks.length>=3?
[...warnings,str_(UIStrings.tooManyPreconnectLinksWarning)]:warnings};

}


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'wastedMs',valueType:'timespanMs',label:str_(i18n.UIStrings.columnWastedMs)}];


const details=Audit.makeOpportunityDetails(headings,results,maxWasted);

return{
score:UnusedBytes.scoreForWastedMs(maxWasted),
numericValue:maxWasted,
numericUnit:'millisecond',
displayValue:maxWasted?
str_(i18n.UIStrings.displayValueMsSavings,{wastedMs:maxWasted}):
'',
extendedInfo:{
value:results},

warnings,
details};

}}


module.exports=UsesRelPreconnectAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/uses-rel-preconnect.js");
},{"../computed/load-simulator.js":11,"../computed/main-resource.js":12,"../computed/network-records.js":39,"../lib/i18n/i18n.js":77,"../lib/url-shim.js":"url","./audit.js":3,"./byte-efficiency/byte-efficiency-audit.js":4}],"../audits/uses-rel-preload":[function(require,module,exports){
(function(__filename){





'use strict';

const URL=require('../lib/url-shim.js');
const Audit=require('./audit.js');
const UnusedBytes=require('./byte-efficiency/byte-efficiency-audit.js');
const CriticalRequestChains=require('../computed/critical-request-chains.js');
const i18n=require('../lib/i18n/i18n.js');
const MainResource=require('../computed/main-resource.js');
const PageDependencyGraph=require('../computed/page-dependency-graph.js');
const LoadSimulator=require('../computed/load-simulator.js');

const UIStrings={

title:'Preload key requests',

description:'Consider using `<link rel=preload>` to prioritize fetching resources that are '+
'currently requested later in page load. [Learn more](https://web.dev/uses-rel-preload).',




crossoriginWarning:'A preload <link> was found for "{preloadURL}" but was not used '+
'by the browser. Check that you are using the `crossorigin` attribute properly.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const THRESHOLD_IN_MS=100;

class UsesRelPreloadAudit extends Audit{



static get meta(){
return{
id:'uses-rel-preload',
title:str_(UIStrings.title),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','traces','URL'],
scoreDisplayMode:Audit.SCORING_MODES.NUMERIC};

}






static getURLsToPreload(mainResource,graph){

const urls=new Set();

graph.traverse((node,traversalPath)=>{
if(node.type!=='network')return;

const path=traversalPath.slice(1).filter(initiator=>initiator.type==='network');
if(!UsesRelPreloadAudit.shouldPreloadRequest(node.record,mainResource,path))return;
urls.add(node.record.url);
});

return urls;
}







static getURLsFailedToPreload(graph){

const requests=[];
graph.traverse(node=>node.type==='network'&&requests.push(node.record));

const preloadRequests=requests.filter(req=>req.isLinkPreload);
const preloadURLs=new Set(preloadRequests.map(req=>req.url));


const failedRequests=requests.filter(req=>preloadURLs.has(req.url)&&!req.isLinkPreload);
return new Set(failedRequests.map(req=>req.url));
}













static shouldPreloadRequest(request,mainResource,initiatorPath){
const mainResourceDepth=mainResource.redirects?mainResource.redirects.length:0;


if(request.isLinkPreload)return false;

if(!CriticalRequestChains.isCritical(request,mainResource))return false;

if(URL.NON_NETWORK_PROTOCOLS.includes(request.protocol))return false;

if(initiatorPath.length!==mainResourceDepth+2)return false;

return URL.rootDomainsMatch(request.url,mainResource.url);
}








static computeWasteWithGraph(urls,graph,simulator){
if(!urls.size){
return{wastedMs:0,results:[]};
}



const simulationBeforeChanges=simulator.simulate(graph,{flexibleOrdering:true});
const modifiedGraph=graph.cloneWithRelationships();


const nodesToPreload=[];

let mainDocumentNode=null;
modifiedGraph.traverse(node=>{
if(node.type!=='network')return;

const networkNode=node;
if(node.isMainDocument()){
mainDocumentNode=networkNode;
}else if(networkNode.record&&urls.has(networkNode.record.url)){
nodesToPreload.push(networkNode);
}
});

if(!mainDocumentNode){

throw new Error('Could not find main document node');
}



for(const node of nodesToPreload){
node.removeAllDependencies();
node.addDependency(mainDocumentNode);
}


const simulationAfterChanges=simulator.simulate(modifiedGraph,{flexibleOrdering:true});
const originalNodesByRecord=Array.from(simulationBeforeChanges.nodeTimings.keys()).

reduce((map,node)=>map.set(node.record,node),new Map());

const results=[];
for(const node of nodesToPreload){
const originalNode=originalNodesByRecord.get(node.record);
const timingAfter=simulationAfterChanges.nodeTimings.get(node);
const timingBefore=simulationBeforeChanges.nodeTimings.get(originalNode);
if(!timingBefore||!timingAfter)throw new Error('Missing preload node');

const wastedMs=Math.round(timingBefore.endTime-timingAfter.endTime);
if(wastedMs<THRESHOLD_IN_MS)continue;
results.push({url:node.record.url,wastedMs});
}

if(!results.length){
return{wastedMs:0,results};
}

return{


wastedMs:Math.max(...results.map(item=>item.wastedMs)),
results};

}






static async audit(artifacts,context){
const trace=artifacts.traces[UsesRelPreloadAudit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[UsesRelPreloadAudit.DEFAULT_PASS];
const URL=artifacts.URL;
const simulatorOptions={trace,devtoolsLog,settings:context.settings};

const[mainResource,graph,simulator]=await Promise.all([
MainResource.request({devtoolsLog,URL},context),
PageDependencyGraph.request({trace,devtoolsLog},context),
LoadSimulator.request(simulatorOptions,context)]);


const urls=UsesRelPreloadAudit.getURLsToPreload(mainResource,graph);
const{results,wastedMs}=UsesRelPreloadAudit.computeWasteWithGraph(urls,graph,simulator);

results.sort((a,b)=>b.wastedMs-a.wastedMs);


let warnings;
const failedURLs=UsesRelPreloadAudit.getURLsFailedToPreload(graph);
if(failedURLs.size){
warnings=Array.from(failedURLs).
map(preloadURL=>str_(UIStrings.crossoriginWarning,{preloadURL}));
}


const headings=[
{key:'url',valueType:'url',label:str_(i18n.UIStrings.columnURL)},
{key:'wastedMs',valueType:'timespanMs',label:str_(i18n.UIStrings.columnWastedMs)}];

const details=Audit.makeOpportunityDetails(headings,results,wastedMs);

return{
score:UnusedBytes.scoreForWastedMs(wastedMs),
numericValue:wastedMs,
numericUnit:'millisecond',
displayValue:wastedMs?
str_(i18n.UIStrings.displayValueMsSavings,{wastedMs}):
'',
extendedInfo:{
value:results},

details,
warnings};

}}


module.exports=UsesRelPreloadAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/uses-rel-preload.js");
},{"../computed/critical-request-chains.js":9,"../computed/load-simulator.js":11,"../computed/main-resource.js":12,"../computed/page-dependency-graph.js":40,"../lib/i18n/i18n.js":77,"../lib/url-shim.js":"url","./audit.js":3,"./byte-efficiency/byte-efficiency-audit.js":4}],"../audits/viewport":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const ComputedViewportMeta=require('../computed/viewport-meta.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Has a `<meta name="viewport">` tag with `width` or `initial-scale`',

failureTitle:'Does not have a `<meta name="viewport">` tag with `width` '+
'or `initial-scale`',

description:'Add a `<meta name="viewport">` tag to optimize your app for mobile screens. '+
'[Learn more](https://web.dev/viewport).',

explanationNoTag:'No `<meta name="viewport">` tag found'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class Viewport extends Audit{



static get meta(){
return{
id:'viewport',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['MetaElements']};

}






static async audit(artifacts,context){
const viewportMeta=await ComputedViewportMeta.request(artifacts.MetaElements,context);

if(!viewportMeta.hasViewportTag){
return{
score:0,
explanation:str_(UIStrings.explanationNoTag)};

}

return{
score:Number(viewportMeta.isMobileOptimized),
warnings:viewportMeta.parserWarnings};

}}


module.exports=Viewport;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/viewport.js");
},{"../computed/viewport-meta.js":48,"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/without-javascript":[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Contains some content when JavaScript is not available',

failureTitle:'Does not provide fallback content when JavaScript is not available',

description:'Your app should display some content when JavaScript is disabled, even if '+
'it\'s just a warning to the user that JavaScript is required to use the app. '+
'[Learn more](https://web.dev/without-javascript).',

explanation:'The page body should render some content if its scripts are not available.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class WithoutJavaScript extends Audit{



static get meta(){
return{
id:'without-javascript',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['HTMLWithoutJavaScript']};

}





static audit(artifacts){
const artifact=artifacts.HTMLWithoutJavaScript;


if(artifact.bodyText.trim()===''&&!artifact.hasNoScript){
return{
score:0,
explanation:str_(UIStrings.explanation)};

}

return{
score:1};

}}


module.exports=WithoutJavaScript;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/without-javascript.js");
},{"../lib/i18n/i18n.js":77,"./audit.js":3}],"../audits/works-offline":[function(require,module,exports){
(function(__filename){





'use strict';

const URL=require('../lib/url-shim.js');
const Audit=require('./audit.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

title:'Current page responds with a 200 when offline',

failureTitle:'Current page does not respond with a 200 when offline',

description:'If you\'re building a Progressive Web App, consider using a service worker '+
'so that your app can work offline. '+
'[Learn more](https://web.dev/works-offline).',





warningNoLoad:'The page may not be loading offline because your test URL '+
`({requested}) was redirected to "{final}". `+
'Try testing the second URL directly.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class WorksOffline extends Audit{



static get meta(){
return{
id:'works-offline',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['Offline','URL']};

}





static audit(artifacts){
const warnings=[];
const passed=artifacts.Offline===200;
if(!passed&&
!URL.equalWithExcludedFragments(artifacts.URL.requestedUrl,artifacts.URL.finalUrl)){
warnings.push(str_(UIStrings.warningNoLoad,
{requested:artifacts.URL.requestedUrl,final:artifacts.URL.finalUrl}));
}

return{
score:Number(passed),
warnings};

}}


module.exports=WorksOffline;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/works-offline.js");
},{"../lib/i18n/i18n.js":77,"../lib/url-shim.js":"url","./audit.js":3}],"../gather/gatherers/accessibility":[function(require,module,exports){





'use strict';



const Gatherer=require('./gatherer.js');

const axeLibSource="/*! axe v3.5.3\n * Copyright (c) 2020 Deque Systems, Inc.\n *\n * Your use of this Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * This entire copyright notice must appear in every copy of this file you\n * distribute or in any file that contains substantial portions of this source\n * code.\n */\n!function e(window){var a=window,document=window.document;function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function u(e){this.name=\"SupportError\",this.cause=e.cause,this.message=\"`\".concat(e.cause,\"` - feature unsupported in your environment.\"),e.ruleId&&(this.ruleId=e.ruleId,this.message+=\" Skipping \".concat(this.ruleId,\" rule.\")),this.stack=(new Error).stack}(axe=axe||{}).version=\"3.5.3\",\"function\"==typeof define&&define.amd&&define(\"axe-core\",[],function(){\"use strict\";return axe}),\"object\"===(\"undefined\"==typeof module?\"undefined\":W(module))&&module.exports&&\"function\"==typeof e.toString&&(axe.source=\"(\"+e.toString()+')(typeof window === \"object\" ? window : this);',module.exports=axe),\"function\"==typeof window.getComputedStyle&&(window.axe=axe),(u.prototype=Object.create(Error.prototype)).constructor=u,function o(i,s,l){function u(t,e){if(!s[t]){if(!i[t]){var r=\"function\"==typeof require&&require;if(!e&&r)return r(t,!0);if(c)return c(t,!0);var n=new Error(\"Cannot find module '\"+t+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var a=s[t]={exports:{}};i[t][0].call(a.exports,function(e){return u(i[t][1][e]||e)},a,a.exports,o,i,s,l)}return s[t].exports}for(var c=\"function\"==typeof require&&require,e=0;e<l.length;e++)u(l[e]);return u}({1:[function(e,t,r){\"Promise\"in window||e(\"es6-promise\").polyfill(),\"Uint32Array\"in window||e(\"core-js/features/typed-array/uint32-array\"),window.Uint32Array&&(\"some\"in window.Uint32Array.prototype||e(\"core-js/features/typed-array/some\"),\"reduce\"in window.Uint32Array.prototype||e(\"core-js/features/typed-array/reduce\")),e(\"weakmap-polyfill\"),axe.imports={axios:e(\"axios\"),CssSelectorParser:e(\"css-selector-parser\").CssSelectorParser,doT:e(\"@deque/dot\"),emojiRegexText:e(\"emoji-regex\"),memoize:e(\"memoizee\")}},{\"@deque/dot\":2,axios:3,\"core-js/features/typed-array/reduce\":31,\"core-js/features/typed-array/some\":32,\"core-js/features/typed-array/uint32-array\":33,\"css-selector-parser\":155,\"emoji-regex\":158,\"es6-promise\":202,memoizee:223,\"weakmap-polyfill\":245}],2:[function(e,r,t){(function(t){!function(){\"use strict\";var l={name:\"doT\",version:\"1.1.1\",templateSettings:{evaluate:/\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,interpolate:/\\{\\{=([\\s\\S]+?)\\}\\}/g,encode:/\\{\\{!([\\s\\S]+?)\\}\\}/g,use:/\\{\\{#([\\s\\S]+?)\\}\\}/g,useParams:/(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,define:/\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,defineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,conditional:/\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,iterate:/\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,varname:\"it\",strip:!0,append:!0,selfcontained:!1,doNotSkipEncoded:!1},template:void 0,compile:void 0,log:!0};!function(){if(\"object\"!=typeof globalThis)try{Object.defineProperty(Object.prototype,\"__magic__\",{get:function(){return this},configurable:!0}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__}catch(e){window.globalThis=function(){if(\"undefined\"!=typeof self)return self;if(void 0!==window)return window;if(void 0!==t)return t;if(void 0!==this)return this;throw new Error(\"Unable to locate global `this`\")}()}}(),l.encodeHTMLSource=function(e){var t={\"&\":\"&#38;\",\"<\":\"&#60;\",\">\":\"&#62;\",'\"':\"&#34;\",\"'\":\"&#39;\",\"/\":\"&#47;\"},r=e?/[&<>\"'\\/]/g:/&(?!#?\\w+;)|<|>|\"|'|\\//g;return function(e){return e?e.toString().replace(r,function(e){return t[e]||e}):\"\"}},void 0!==r&&r.exports?r.exports=l:\"function\"==typeof define&&define.amd?define(function(){return l}):globalThis.doT=l;var u={append:{start:\"'+(\",end:\")+'\",startencode:\"'+encodeHTML(\"},split:{start:\"';out+=(\",end:\");out+='\",startencode:\"';out+=encodeHTML(\"}},c=/$^/;function d(e){return e.replace(/\\\\('|\\\\)/g,\"$1\").replace(/[\\r\\t\\n]/g,\" \")}l.template=function(e,t,r){var n,a,o=(t=t||l.templateSettings).append?u.append:u.split,i=0,s=t.use||t.define?function n(a,e,o){return(\"string\"==typeof e?e:e.toString()).replace(a.define||c,function(e,n,t,r){return 0===n.indexOf(\"def.\")&&(n=n.substring(4)),n in o||(\":\"===t?(a.defineParams&&r.replace(a.defineParams,function(e,t,r){o[n]={arg:t,text:r}}),n in o||(o[n]=r)):new Function(\"def\",\"def['\"+n+\"']=\"+r)(o)),\"\"}).replace(a.use||c,function(e,t){a.useParams&&(t=t.replace(a.useParams,function(e,t,r,n){if(o[r]&&o[r].arg&&n){var a=(r+\":\"+n).replace(/'|\\\\/g,\"_\");return o.__exp=o.__exp||{},o.__exp[a]=o[r].text.replace(new RegExp(\"(^|[^\\\\w$])\"+o[r].arg+\"([^\\\\w$])\",\"g\"),\"$1\"+n+\"$2\"),t+\"def.__exp['\"+a+\"']\"}}));var r=new Function(\"def\",\"return \"+t)(o);return r?n(a,r,o):r})}(t,e,r||{}):e;s=(\"var out='\"+(t.strip?s.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \").replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"):s).replace(/'|\\\\/g,\"\\\\$&\").replace(t.interpolate||c,function(e,t){return o.start+d(t)+o.end}).replace(t.encode||c,function(e,t){return n=!0,o.startencode+d(t)+o.end}).replace(t.conditional||c,function(e,t,r){return t?r?\"';}else if(\"+d(r)+\"){out+='\":\"';}else{out+='\":r?\"';if(\"+d(r)+\"){out+='\":\"';}out+='\"}).replace(t.iterate||c,function(e,t,r,n){return t?(i+=1,a=n||\"i\"+i,t=d(t),\"';var arr\"+i+\"=\"+t+\";if(arr\"+i+\"){var \"+r+\",\"+a+\"=-1,l\"+i+\"=arr\"+i+\".length-1;while(\"+a+\"<l\"+i+\"){\"+r+\"=arr\"+i+\"[\"+a+\"+=1];out+='\"):\"';} } out+='\"}).replace(t.evaluate||c,function(e,t){return\"';\"+d(t)+\"out+='\"})+\"';return out;\").replace(/\\n/g,\"\\\\n\").replace(/\\t/g,\"\\\\t\").replace(/\\r/g,\"\\\\r\").replace(/(\\s|;|\\}|^|\\{)out\\+='';/g,\"$1\").replace(/\\+''/g,\"\"),n&&(t.selfcontained||!globalThis||globalThis._encodeHTML||(globalThis._encodeHTML=l.encodeHTMLSource(t.doNotSkipEncoded)),s=\"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"+l.encodeHTMLSource.toString()+\"(\"+(t.doNotSkipEncoded||\"\")+\"));\"+s);try{return new Function(t.varname,s)}catch(e){throw\"undefined\"!=typeof console&&console.log(\"Could not create a template function: \"+s),e}},l.compile=function(e,t){return l.template(e,null,t)}}()}).call(this,void 0!==a?a:\"undefined\"!=typeof self?self:void 0!==window?window:{})},{}],3:[function(e,t,r){t.exports=e(\"./lib/axios\")},{\"./lib/axios\":5}],4:[function(d,e,t){\"use strict\";var utils=d(\"./../utils\"),p=d(\"./../core/settle\"),m=d(\"./../helpers/buildURL\"),f=d(\"../core/buildFullPath\"),h=d(\"./../helpers/parseHeaders\"),b=d(\"./../helpers/isURLSameOrigin\"),g=d(\"../core/createError\");e.exports=function(c){return new Promise(function(r,n){var a=c.data,o=c.headers;utils.isFormData(a)&&delete o[\"Content-Type\"];var i=new XMLHttpRequest;if(c.auth){var e=c.auth.username||\"\",t=c.auth.password||\"\";o.Authorization=\"Basic \"+btoa(e+\":\"+t)}var s=f(c.baseURL,c.url);if(i.open(c.method.toUpperCase(),m(s,c.params,c.paramsSerializer),!0),i.timeout=c.timeout,i.onreadystatechange=function(){if(i&&4===i.readyState&&(0!==i.status||i.responseURL&&0===i.responseURL.indexOf(\"file:\"))){var e=\"getAllResponseHeaders\"in i?h(i.getAllResponseHeaders()):null,t={data:c.responseType&&\"text\"!==c.responseType?i.response:i.responseText,status:i.status,statusText:i.statusText,headers:e,config:c,request:i};p(r,n,t),i=null}},i.onabort=function(){i&&(n(g(\"Request aborted\",c,\"ECONNABORTED\",i)),i=null)},i.onerror=function(){n(g(\"Network Error\",c,null,i)),i=null},i.ontimeout=function(){var e=\"timeout of \"+c.timeout+\"ms exceeded\";c.timeoutErrorMessage&&(e=c.timeoutErrorMessage),n(g(e,c,\"ECONNABORTED\",i)),i=null},utils.isStandardBrowserEnv()){var l=d(\"./../helpers/cookies\"),u=(c.withCredentials||b(s))&&c.xsrfCookieName?l.read(c.xsrfCookieName):void 0;u&&(o[c.xsrfHeaderName]=u)}if(\"setRequestHeader\"in i&&utils.forEach(o,function(e,t){void 0===a&&\"content-type\"===t.toLowerCase()?delete o[t]:i.setRequestHeader(t,e)}),utils.isUndefined(c.withCredentials)||(i.withCredentials=!!c.withCredentials),c.responseType)try{i.responseType=c.responseType}catch(e){if(\"json\"!==c.responseType)throw e}\"function\"==typeof c.onDownloadProgress&&i.addEventListener(\"progress\",c.onDownloadProgress),\"function\"==typeof c.onUploadProgress&&i.upload&&i.upload.addEventListener(\"progress\",c.onUploadProgress),c.cancelToken&&c.cancelToken.promise.then(function(e){i&&(i.abort(),n(e),i=null)}),void 0===a&&(a=null),i.send(a)})}},{\"../core/buildFullPath\":11,\"../core/createError\":12,\"./../core/settle\":16,\"./../helpers/buildURL\":20,\"./../helpers/cookies\":22,\"./../helpers/isURLSameOrigin\":24,\"./../helpers/parseHeaders\":26,\"./../utils\":28}],5:[function(e,t,r){\"use strict\";var utils=e(\"./utils\"),n=e(\"./helpers/bind\"),a=e(\"./core/Axios\"),o=e(\"./core/mergeConfig\");function i(e){var t=new a(e),r=n(a.prototype.request,t);return utils.extend(r,a.prototype,t),utils.extend(r,t),r}var s=i(e(\"./defaults\"));s.Axios=a,s.create=function(e){return i(o(s.defaults,e))},s.Cancel=e(\"./cancel/Cancel\"),s.CancelToken=e(\"./cancel/CancelToken\"),s.isCancel=e(\"./cancel/isCancel\"),s.all=function(e){return Promise.all(e)},s.spread=e(\"./helpers/spread\"),t.exports=s,t.exports.default=s},{\"./cancel/Cancel\":6,\"./cancel/CancelToken\":7,\"./cancel/isCancel\":8,\"./core/Axios\":9,\"./core/mergeConfig\":15,\"./defaults\":18,\"./helpers/bind\":19,\"./helpers/spread\":27,\"./utils\":28}],6:[function(e,t,r){\"use strict\";function n(e){this.message=e}n.prototype.toString=function(){return\"Cancel\"+(this.message?\": \"+this.message:\"\")},n.prototype.__CANCEL__=!0,t.exports=n},{}],7:[function(e,t,r){\"use strict\";var n=e(\"./Cancel\");function a(e){if(\"function\"!=typeof e)throw new TypeError(\"executor must be a function.\");var t;this.promise=new Promise(function(e){t=e});var r=this;e(function(e){r.reason||(r.reason=new n(e),t(r.reason))})}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var t;return{token:new a(function(e){t=e}),cancel:t}},t.exports=a},{\"./Cancel\":6}],8:[function(e,t,r){\"use strict\";t.exports=function(e){return!(!e||!e.__CANCEL__)}},{}],9:[function(e,t,r){\"use strict\";var utils=e(\"./../utils\"),n=e(\"../helpers/buildURL\"),a=e(\"./InterceptorManager\"),o=e(\"./dispatchRequest\"),i=e(\"./mergeConfig\");function s(e){this.defaults=e,this.interceptors={request:new a,response:new a}}s.prototype.request=function(e,t){\"string\"==typeof e?(e=t||{}).url=arguments[0]:e=e||{},(e=i(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method=\"get\";var r=[o,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){r.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){r.push(e.fulfilled,e.rejected)});r.length;)n=n.then(r.shift(),r.shift());return n},s.prototype.getUri=function(e){return e=i(this.defaults,e),n(e.url,e.params,e.paramsSerializer).replace(/^\\?/,\"\")},utils.forEach([\"delete\",\"get\",\"head\",\"options\"],function(r){s.prototype[r]=function(e,t){return this.request(utils.merge(t||{},{method:r,url:e}))}}),utils.forEach([\"post\",\"put\",\"patch\"],function(n){s.prototype[n]=function(e,t,r){return this.request(utils.merge(r||{},{method:n,url:e,data:t}))}}),t.exports=s},{\"../helpers/buildURL\":20,\"./../utils\":28,\"./InterceptorManager\":10,\"./dispatchRequest\":13,\"./mergeConfig\":15}],10:[function(e,t,r){\"use strict\";var utils=e(\"./../utils\");function n(){this.handlers=[]}n.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},n.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},n.prototype.forEach=function(t){utils.forEach(this.handlers,function(e){null!==e&&t(e)})},t.exports=n},{\"./../utils\":28}],11:[function(e,t,r){\"use strict\";var n=e(\"../helpers/isAbsoluteURL\"),a=e(\"../helpers/combineURLs\");t.exports=function(e,t){return e&&!n(t)?a(e,t):t}},{\"../helpers/combineURLs\":21,\"../helpers/isAbsoluteURL\":23}],12:[function(e,t,r){\"use strict\";var i=e(\"./enhanceError\");t.exports=function(e,t,r,n,a){var o=new Error(e);return i(o,t,r,n,a)}},{\"./enhanceError\":14}],13:[function(e,t,r){\"use strict\";var utils=e(\"./../utils\"),n=e(\"./transformData\"),a=e(\"../cancel/isCancel\"),o=e(\"../defaults\");function i(e){e.cancelToken&&e.cancelToken.throwIfRequested()}t.exports=function(t){return i(t),t.headers=t.headers||{},t.data=n(t.data,t.headers,t.transformRequest),t.headers=utils.merge(t.headers.common||{},t.headers[t.method]||{},t.headers),utils.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],function(e){delete t.headers[e]}),(t.adapter||o.adapter)(t).then(function(e){return i(t),e.data=n(e.data,e.headers,t.transformResponse),e},function(e){return a(e)||(i(t),e&&e.response&&(e.response.data=n(e.response.data,e.response.headers,t.transformResponse))),Promise.reject(e)})}},{\"../cancel/isCancel\":8,\"../defaults\":18,\"./../utils\":28,\"./transformData\":17}],14:[function(e,t,r){\"use strict\";t.exports=function(e,t,r,n,a){return e.config=t,r&&(e.code=r),e.request=n,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},{}],15:[function(e,t,r){\"use strict\";var utils=e(\"../utils\");t.exports=function(t,r){r=r||{};var n={},e=[\"url\",\"method\",\"params\",\"data\"],a=[\"headers\",\"auth\",\"proxy\"],o=[\"baseURL\",\"url\",\"transformRequest\",\"transformResponse\",\"paramsSerializer\",\"timeout\",\"withCredentials\",\"adapter\",\"responseType\",\"xsrfCookieName\",\"xsrfHeaderName\",\"onUploadProgress\",\"onDownloadProgress\",\"maxContentLength\",\"validateStatus\",\"maxRedirects\",\"httpAgent\",\"httpsAgent\",\"cancelToken\",\"socketPath\"];utils.forEach(e,function(e){void 0!==r[e]&&(n[e]=r[e])}),utils.forEach(a,function(e){utils.isObject(r[e])?n[e]=utils.deepMerge(t[e],r[e]):void 0!==r[e]?n[e]=r[e]:utils.isObject(t[e])?n[e]=utils.deepMerge(t[e]):void 0!==t[e]&&(n[e]=t[e])}),utils.forEach(o,function(e){void 0!==r[e]?n[e]=r[e]:void 0!==t[e]&&(n[e]=t[e])});var i=e.concat(a).concat(o),s=Object.keys(r).filter(function(e){return-1===i.indexOf(e)});return utils.forEach(s,function(e){void 0!==r[e]?n[e]=r[e]:void 0!==t[e]&&(n[e]=t[e])}),n}},{\"../utils\":28}],16:[function(e,t,r){\"use strict\";var a=e(\"./createError\");t.exports=function(e,t,r){var n=r.config.validateStatus;!n||n(r.status)?e(r):t(a(\"Request failed with status code \"+r.status,r.config,null,r.request,r))}},{\"./createError\":12}],17:[function(e,t,r){\"use strict\";var utils=e(\"./../utils\");t.exports=function(t,r,e){return utils.forEach(e,function(e){t=e(t,r)}),t}},{\"./../utils\":28}],18:[function(i,s,e){(function(e){\"use strict\";var utils=i(\"./utils\"),r=i(\"./helpers/normalizeHeaderName\"),t={\"Content-Type\":\"application/x-www-form-urlencoded\"};function n(e,t){!utils.isUndefined(e)&&utils.isUndefined(e[\"Content-Type\"])&&(e[\"Content-Type\"]=t)}var a,o={adapter:(\"undefined\"!=typeof XMLHttpRequest?a=i(\"./adapters/xhr\"):void 0!==e&&\"[object process]\"===Object.prototype.toString.call(e)&&(a=i(\"./adapters/http\")),a),transformRequest:[function(e,t){return r(t,\"Accept\"),r(t,\"Content-Type\"),utils.isFormData(e)||utils.isArrayBuffer(e)||utils.isBuffer(e)||utils.isStream(e)||utils.isFile(e)||utils.isBlob(e)?e:utils.isArrayBufferView(e)?e.buffer:utils.isURLSearchParams(e)?(n(t,\"application/x-www-form-urlencoded;charset=utf-8\"),e.toString()):utils.isObject(e)?(n(t,\"application/json;charset=utf-8\"),JSON.stringify(e)):e}],transformResponse:[function(e){if(\"string\"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,validateStatus:function(e){return 200<=e&&e<300}};o.headers={common:{Accept:\"application/json, text/plain, */*\"}},utils.forEach([\"delete\",\"get\",\"head\"],function(e){o.headers[e]={}}),utils.forEach([\"post\",\"put\",\"patch\"],function(e){o.headers[e]=utils.merge(t)}),s.exports=o}).call(this,i(\"_process\"))},{\"./adapters/http\":4,\"./adapters/xhr\":4,\"./helpers/normalizeHeaderName\":25,\"./utils\":28,_process:236}],19:[function(e,t,r){\"use strict\";t.exports=function(r,n){return function(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];return r.apply(n,e)}}},{}],20:[function(e,t,r){\"use strict\";var utils=e(\"./../utils\");function i(e){return encodeURIComponent(e).replace(/%40/gi,\"@\").replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}t.exports=function(e,t,r){if(!t)return e;var n;if(r)n=r(t);else if(utils.isURLSearchParams(t))n=t.toString();else{var a=[];utils.forEach(t,function(e,t){null!=e&&(utils.isArray(e)?t+=\"[]\":e=[e],utils.forEach(e,function(e){utils.isDate(e)?e=e.toISOString():utils.isObject(e)&&(e=JSON.stringify(e)),a.push(i(t)+\"=\"+i(e))}))}),n=a.join(\"&\")}if(n){var o=e.indexOf(\"#\");-1!==o&&(e=e.slice(0,o)),e+=(-1===e.indexOf(\"?\")?\"?\":\"&\")+n}return e}},{\"./../utils\":28}],21:[function(e,t,r){\"use strict\";t.exports=function(e,t){return t?e.replace(/\\/+$/,\"\")+\"/\"+t.replace(/^\\/+/,\"\"):e}},{}],22:[function(e,t,r){\"use strict\";var utils=e(\"./../utils\");t.exports=utils.isStandardBrowserEnv()?{write:function(e,t,r,n,a,o){var i=[];i.push(e+\"=\"+encodeURIComponent(t)),utils.isNumber(r)&&i.push(\"expires=\"+new Date(r).toGMTString()),utils.isString(n)&&i.push(\"path=\"+n),utils.isString(a)&&i.push(\"domain=\"+a),!0===o&&i.push(\"secure\"),document.cookie=i.join(\"; \")},read:function(e){var t=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+e+\")=([^;]*)\"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,\"\",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},{\"./../utils\":28}],23:[function(e,t,r){\"use strict\";t.exports=function(e){return/^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(e)}},{}],24:[function(e,t,r){\"use strict\";var n,a,o,utils=e(\"./../utils\");function i(e){var t=e;return a&&(o.setAttribute(\"href\",t),t=o.href),o.setAttribute(\"href\",t),{href:o.href,protocol:o.protocol?o.protocol.replace(/:$/,\"\"):\"\",host:o.host,search:o.search?o.search.replace(/^\\?/,\"\"):\"\",hash:o.hash?o.hash.replace(/^#/,\"\"):\"\",hostname:o.hostname,port:o.port,pathname:\"/\"===o.pathname.charAt(0)?o.pathname:\"/\"+o.pathname}}t.exports=utils.isStandardBrowserEnv()?(a=/(msie|trident)/i.test(navigator.userAgent),o=document.createElement(\"a\"),n=i(window.location.href),function(e){var t=utils.isString(e)?i(e):e;return t.protocol===n.protocol&&t.host===n.host}):function(){return!0}},{\"./../utils\":28}],25:[function(e,t,r){\"use strict\";var utils=e(\"../utils\");t.exports=function(r,n){utils.forEach(r,function(e,t){t!==n&&t.toUpperCase()===n.toUpperCase()&&(r[n]=e,delete r[t])})}},{\"../utils\":28}],26:[function(e,t,r){\"use strict\";var utils=e(\"./../utils\"),o=[\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"];t.exports=function(e){var t,r,n,a={};return e&&utils.forEach(e.split(\"\\n\"),function(e){if(n=e.indexOf(\":\"),t=utils.trim(e.substr(0,n)).toLowerCase(),r=utils.trim(e.substr(n+1)),t){if(a[t]&&0<=o.indexOf(t))return;a[t]=\"set-cookie\"===t?(a[t]?a[t]:[]).concat([r]):a[t]?a[t]+\", \"+r:r}}),a}},{\"./../utils\":28}],27:[function(e,t,r){\"use strict\";t.exports=function(t){return function(e){return t.apply(null,e)}}},{}],28:[function(e,t,r){\"use strict\";var a=e(\"./helpers/bind\"),n=Object.prototype.toString;function o(e){return\"[object Array]\"===n.call(e)}function i(e){return void 0===e}function s(e){return null!==e&&\"object\"==typeof e}function l(e){return\"[object Function]\"===n.call(e)}function u(e,t){if(null!=e)if(\"object\"!=typeof e&&(e=[e]),o(e))for(var r=0,n=e.length;r<n;r++)t.call(null,e[r],r,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.call(null,e[a],a,e)}t.exports={isArray:o,isArrayBuffer:function(e){return\"[object ArrayBuffer]\"===n.call(e)},isBuffer:function(e){return null!==e&&!i(e)&&null!==e.constructor&&!i(e.constructor)&&\"function\"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return\"undefined\"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return\"string\"==typeof e},isNumber:function(e){return\"number\"==typeof e},isObject:s,isUndefined:i,isDate:function(e){return\"[object Date]\"===n.call(e)},isFile:function(e){return\"[object File]\"===n.call(e)},isBlob:function(e){return\"[object Blob]\"===n.call(e)},isFunction:l,isStream:function(e){return s(e)&&l(e.pipe)},isURLSearchParams:function(e){return\"undefined\"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return(\"undefined\"==typeof navigator||\"ReactNative\"!==navigator.product&&\"NativeScript\"!==navigator.product&&\"NS\"!==navigator.product)&&(void 0!==window&&void 0!==document)},forEach:u,merge:function r(){var n={};function e(e,t){\"object\"==typeof n[t]&&\"object\"==typeof e?n[t]=r(n[t],e):n[t]=e}for(var t=0,a=arguments.length;t<a;t++)u(arguments[t],e);return n},deepMerge:function r(){var n={};function e(e,t){\"object\"==typeof n[t]&&\"object\"==typeof e?n[t]=r(n[t],e):n[t]=\"object\"==typeof e?r({},e):e}for(var t=0,a=arguments.length;t<a;t++)u(arguments[t],e);return n},extend:function(r,e,n){return u(e,function(e,t){r[t]=n&&\"function\"==typeof e?a(e,n):e}),r},trim:function(e){return e.replace(/^\\s*/,\"\").replace(/\\s*$/,\"\")}}},{\"./helpers/bind\":19}],29:[function(e,t,r){e(\"../../modules/es.typed-array.from\"),e(\"../../modules/es.typed-array.of\"),e(\"../../modules/es.typed-array.copy-within\"),e(\"../../modules/es.typed-array.every\"),e(\"../../modules/es.typed-array.fill\"),e(\"../../modules/es.typed-array.filter\"),e(\"../../modules/es.typed-array.find\"),e(\"../../modules/es.typed-array.find-index\"),e(\"../../modules/es.typed-array.for-each\"),e(\"../../modules/es.typed-array.includes\"),e(\"../../modules/es.typed-array.index-of\"),e(\"../../modules/es.typed-array.join\"),e(\"../../modules/es.typed-array.last-index-of\"),e(\"../../modules/es.typed-array.map\"),e(\"../../modules/es.typed-array.reduce\"),e(\"../../modules/es.typed-array.reduce-right\"),e(\"../../modules/es.typed-array.reverse\"),e(\"../../modules/es.typed-array.set\"),e(\"../../modules/es.typed-array.slice\"),e(\"../../modules/es.typed-array.some\"),e(\"../../modules/es.typed-array.sort\"),e(\"../../modules/es.typed-array.subarray\"),e(\"../../modules/es.typed-array.to-locale-string\"),e(\"../../modules/es.typed-array.to-string\"),e(\"../../modules/es.typed-array.iterator\"),e(\"../../modules/es.object.to-string\")},{\"../../modules/es.object.to-string\":128,\"../../modules/es.typed-array.copy-within\":129,\"../../modules/es.typed-array.every\":130,\"../../modules/es.typed-array.fill\":131,\"../../modules/es.typed-array.filter\":132,\"../../modules/es.typed-array.find\":134,\"../../modules/es.typed-array.find-index\":133,\"../../modules/es.typed-array.for-each\":135,\"../../modules/es.typed-array.from\":136,\"../../modules/es.typed-array.includes\":137,\"../../modules/es.typed-array.index-of\":138,\"../../modules/es.typed-array.iterator\":139,\"../../modules/es.typed-array.join\":140,\"../../modules/es.typed-array.last-index-of\":141,\"../../modules/es.typed-array.map\":142,\"../../modules/es.typed-array.of\":143,\"../../modules/es.typed-array.reduce\":145,\"../../modules/es.typed-array.reduce-right\":144,\"../../modules/es.typed-array.reverse\":146,\"../../modules/es.typed-array.set\":147,\"../../modules/es.typed-array.slice\":148,\"../../modules/es.typed-array.some\":149,\"../../modules/es.typed-array.sort\":150,\"../../modules/es.typed-array.subarray\":151,\"../../modules/es.typed-array.to-locale-string\":152,\"../../modules/es.typed-array.to-string\":153}],30:[function(e,t,r){e(\"../../modules/es.typed-array.uint32-array\"),e(\"./methods\");var n=e(\"../../internals/global\");t.exports=n.Uint32Array},{\"../../internals/global\":68,\"../../modules/es.typed-array.uint32-array\":154,\"./methods\":29}],31:[function(e,t,r){e(\"../../modules/es.typed-array.reduce\")},{\"../../modules/es.typed-array.reduce\":145}],32:[function(e,t,r){e(\"../../modules/es.typed-array.some\")},{\"../../modules/es.typed-array.some\":149}],33:[function(e,t,r){var n=e(\"../../es/typed-array/uint32-array\");t.exports=n},{\"../../es/typed-array/uint32-array\":30}],34:[function(e,t,r){t.exports=function(e){if(\"function\"!=typeof e)throw TypeError(String(e)+\" is not a function\");return e}},{}],35:[function(e,t,r){var n=e(\"../internals/is-object\");t.exports=function(e){if(!n(e)&&null!==e)throw TypeError(\"Can't set \"+String(e)+\" as a prototype\");return e}},{\"../internals/is-object\":81}],36:[function(e,t,r){var n=e(\"../internals/well-known-symbol\"),a=e(\"../internals/object-create\"),o=e(\"../internals/object-define-property\"),i=n(\"unscopables\"),s=Array.prototype;null==s[i]&&o.f(s,i,{configurable:!0,value:a(null)}),t.exports=function(e){s[i][e]=!0}},{\"../internals/object-create\":87,\"../internals/object-define-property\":89,\"../internals/well-known-symbol\":126}],37:[function(e,t,r){t.exports=function(e,t,r){if(!(e instanceof t))throw TypeError(\"Incorrect \"+(r?r+\" \":\"\")+\"invocation\");return e}},{}],38:[function(e,t,r){var n=e(\"../internals/is-object\");t.exports=function(e){if(!n(e))throw TypeError(String(e)+\" is not an object\");return e}},{\"../internals/is-object\":81}],39:[function(e,t,r){t.exports=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof DataView},{}],40:[function(e,t,r){\"use strict\";function n(e){return l(e)&&u(N,c(e))}var a,o=e(\"../internals/array-buffer-native\"),i=e(\"../internals/descriptors\"),s=e(\"../internals/global\"),l=e(\"../internals/is-object\"),u=e(\"../internals/has\"),c=e(\"../internals/classof\"),d=e(\"../internals/create-non-enumerable-property\"),p=e(\"../internals/redefine\"),m=e(\"../internals/object-define-property\").f,f=e(\"../internals/object-get-prototype-of\"),h=e(\"../internals/object-set-prototype-of\"),b=e(\"../internals/well-known-symbol\"),g=e(\"../internals/uid\"),y=s.Int8Array,v=y&&y.prototype,w=s.Uint8ClampedArray,x=w&&w.prototype,D=y&&f(y),k=v&&f(v),E=Object.prototype,A=E.isPrototypeOf,j=b(\"toStringTag\"),C=g(\"TYPED_ARRAY_TAG\"),F=o&&!!h&&\"Opera\"!==c(s.opera),T=!1,N={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8};for(a in N)s[a]||(F=!1);if((!F||\"function\"!=typeof D||D===Function.prototype)&&(D=function(){throw TypeError(\"Incorrect invocation\")},F))for(a in N)s[a]&&h(s[a],D);if((!F||!k||k===E)&&(k=D.prototype,F))for(a in N)s[a]&&h(s[a].prototype,k);if(F&&f(x)!==k&&h(x,k),i&&!u(k,j))for(a in T=!0,m(k,j,{get:function(){return l(this)?this[C]:void 0}}),N)s[a]&&d(s[a],C,a);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:F,TYPED_ARRAY_TAG:T&&C,aTypedArray:function(e){if(n(e))return e;throw TypeError(\"Target is not a typed array\")},aTypedArrayConstructor:function(e){if(h){if(A.call(D,e))return e}else for(var t in N)if(u(N,a)){var r=s[t];if(r&&(e===r||A.call(r,e)))return e}throw TypeError(\"Target is not a typed array constructor\")},exportTypedArrayMethod:function(e,t,r){if(i){if(r)for(var n in N){var a=s[n];a&&u(a.prototype,e)&&delete a.prototype[e]}k[e]&&!r||p(k,e,!r&&F&&v[e]||t)}},exportTypedArrayStaticMethod:function(e,t,r){var n,a;if(i){if(h){if(r)for(n in N)(a=s[n])&&u(a,e)&&delete a[e];if(D[e]&&!r)return;try{return p(D,e,!r&&F&&y[e]||t)}catch(e){}}for(n in N)!(a=s[n])||a[e]&&!r||p(a,e,t)}},isView:function(e){var t=c(e);return\"DataView\"===t||u(N,t)},isTypedArray:n,TypedArray:D,TypedArrayPrototype:k}},{\"../internals/array-buffer-native\":39,\"../internals/classof\":53,\"../internals/create-non-enumerable-property\":57,\"../internals/descriptors\":60,\"../internals/global\":68,\"../internals/has\":69,\"../internals/is-object\":81,\"../internals/object-define-property\":89,\"../internals/object-get-prototype-of\":93,\"../internals/object-set-prototype-of\":97,\"../internals/redefine\":102,\"../internals/uid\":124,\"../internals/well-known-symbol\":126}],41:[function(e,t,r){\"use strict\";function n(e){return[255&e]}function a(e){return[255&e,e>>8&255]}function o(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function i(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function s(e){return V(e,23,4)}function l(e){return V(e,52,8)}function u(e,t){j(e[O],t,{get:function(){return N(this)[t]}})}function c(e,t,r,n){var a=x(r),o=N(e);if(a+t>o.byteLength)throw M(_);var i=N(o.buffer).bytes,s=a+o.byteOffset,l=i.slice(s,s+t);return n?l:l.reverse()}function d(e,t,r,n,a,o){var i=x(r),s=N(e);if(i+t>s.byteLength)throw M(_);for(var l=N(s.buffer).bytes,u=i+s.byteOffset,c=n(+a),d=0;d<t;d++)l[u+d]=c[o?d:t-d-1]}var p=e(\"../internals/global\"),m=e(\"../internals/descriptors\"),f=e(\"../internals/array-buffer-native\"),h=e(\"../internals/create-non-enumerable-property\"),b=e(\"../internals/redefine-all\"),g=e(\"../internals/fails\"),y=e(\"../internals/an-instance\"),v=e(\"../internals/to-integer\"),w=e(\"../internals/to-length\"),x=e(\"../internals/to-index\"),D=e(\"../internals/ieee754\"),k=e(\"../internals/object-get-prototype-of\"),E=e(\"../internals/object-set-prototype-of\"),A=e(\"../internals/object-get-own-property-names\").f,j=e(\"../internals/object-define-property\").f,C=e(\"../internals/array-fill\"),F=e(\"../internals/set-to-string-tag\"),T=e(\"../internals/internal-state\"),N=T.get,S=T.set,z=\"ArrayBuffer\",q=\"DataView\",O=\"prototype\",_=\"Wrong index\",R=p[z],P=R,I=p[q],L=I&&I[O],B=Object.prototype,M=p.RangeError,V=D.pack,U=D.unpack;if(f){if(!g(function(){R(1)})||!g(function(){new R(-1)})||g(function(){return new R,new R(1.5),new R(NaN),R.name!=z})){for(var H,$=(P=function(e){return y(this,P),new R(x(e))})[O]=R[O],G=A(R),W=0;G.length>W;)(H=G[W++])in P||h(P,H,R[H]);$.constructor=P}E&&k(L)!==B&&E(L,B);var Y=new I(new P(2)),K=L.setInt8;Y.setInt8(0,2147483648),Y.setInt8(1,2147483649),!Y.getInt8(0)&&Y.getInt8(1)||b(L,{setInt8:function(e,t){K.call(this,e,t<<24>>24)},setUint8:function(e,t){K.call(this,e,t<<24>>24)}},{unsafe:!0})}else P=function(e){y(this,P,z);var t=x(e);S(this,{bytes:C.call(new Array(t),0),byteLength:t}),m||(this.byteLength=t)},I=function(e,t,r){y(this,I,q),y(e,P,q);var n=N(e).byteLength,a=v(t);if(a<0||n<a)throw M(\"Wrong offset\");if(n<a+(r=void 0===r?n-a:w(r)))throw M(\"Wrong length\");S(this,{buffer:e,byteLength:r,byteOffset:a}),m||(this.buffer=e,this.byteLength=r,this.byteOffset=a)},m&&(u(P,\"byteLength\"),u(I,\"buffer\"),u(I,\"byteLength\"),u(I,\"byteOffset\")),b(I[O],{getInt8:function(e){return c(this,1,e)[0]<<24>>24},getUint8:function(e){return c(this,1,e)[0]},getInt16:function(e,t){var r=c(this,2,e,1<arguments.length?t:void 0);return(r[1]<<8|r[0])<<16>>16},getUint16:function(e,t){var r=c(this,2,e,1<arguments.length?t:void 0);return r[1]<<8|r[0]},getInt32:function(e,t){return i(c(this,4,e,1<arguments.length?t:void 0))},getUint32:function(e,t){return i(c(this,4,e,1<arguments.length?t:void 0))>>>0},getFloat32:function(e,t){return U(c(this,4,e,1<arguments.length?t:void 0),23)},getFloat64:function(e,t){return U(c(this,8,e,1<arguments.length?t:void 0),52)},setInt8:function(e,t){d(this,1,e,n,t)},setUint8:function(e,t){d(this,1,e,n,t)},setInt16:function(e,t,r){d(this,2,e,a,t,2<arguments.length?r:void 0)},setUint16:function(e,t,r){d(this,2,e,a,t,2<arguments.length?r:void 0)},setInt32:function(e,t,r){d(this,4,e,o,t,2<arguments.length?r:void 0)},setUint32:function(e,t,r){d(this,4,e,o,t,2<arguments.length?r:void 0)},setFloat32:function(e,t,r){d(this,4,e,s,t,2<arguments.length?r:void 0)},setFloat64:function(e,t,r){d(this,8,e,l,t,2<arguments.length?r:void 0)}});F(P,z),F(I,q),t.exports={ArrayBuffer:P,DataView:I}},{\"../internals/an-instance\":37,\"../internals/array-buffer-native\":39,\"../internals/array-fill\":43,\"../internals/create-non-enumerable-property\":57,\"../internals/descriptors\":60,\"../internals/fails\":64,\"../internals/global\":68,\"../internals/ieee754\":73,\"../internals/internal-state\":77,\"../internals/object-define-property\":89,\"../internals/object-get-own-property-names\":91,\"../internals/object-get-prototype-of\":93,\"../internals/object-set-prototype-of\":97,\"../internals/redefine-all\":101,\"../internals/set-to-string-tag\":106,\"../internals/to-index\":112,\"../internals/to-integer\":114,\"../internals/to-length\":115}],42:[function(e,t,r){\"use strict\";var c=e(\"../internals/to-object\"),d=e(\"../internals/to-absolute-index\"),p=e(\"../internals/to-length\"),m=Math.min;t.exports=[].copyWithin||function(e,t,r){var n=c(this),a=p(n.length),o=d(e,a),i=d(t,a),s=2<arguments.length?r:void 0,l=m((void 0===s?a:d(s,a))-i,a-o),u=1;for(i<o&&o<i+l&&(u=-1,i+=l-1,o+=l-1);0<l--;)i in n?n[o]=n[i]:delete n[o],o+=u,i+=u;return n}},{\"../internals/to-absolute-index\":111,\"../internals/to-length\":115,\"../internals/to-object\":116}],43:[function(e,t,r){\"use strict\";var u=e(\"../internals/to-object\"),c=e(\"../internals/to-absolute-index\"),d=e(\"../internals/to-length\");t.exports=function(e,t,r){for(var n=u(this),a=d(n.length),o=arguments.length,i=c(1<o?t:void 0,a),s=2<o?r:void 0,l=void 0===s?a:c(s,a);i<l;)n[i++]=e;return n}},{\"../internals/to-absolute-index\":111,\"../internals/to-length\":115,\"../internals/to-object\":116}],44:[function(e,t,r){function n(s){return function(e,t,r){var n,a=l(e),o=u(a.length),i=c(r,o);if(s&&t!=t){for(;i<o;)if((n=a[i++])!=n)return!0}else for(;i<o;i++)if((s||i in a)&&a[i]===t)return s||i||0;return!s&&-1}}var l=e(\"../internals/to-indexed-object\"),u=e(\"../internals/to-length\"),c=e(\"../internals/to-absolute-index\");t.exports={includes:n(!0),indexOf:n(!1)}},{\"../internals/to-absolute-index\":111,\"../internals/to-indexed-object\":113,\"../internals/to-length\":115}],45:[function(e,t,r){function n(m){var f=1==m,h=2==m,b=3==m,g=4==m,y=6==m,v=5==m||y;return function(e,t,r,n){for(var a,o,i=D(e),s=x(i),l=w(t,r,3),u=k(s.length),c=0,d=n||E,p=f?d(e,u):h?d(e,0):void 0;c<u;c++)if((v||c in s)&&(o=l(a=s[c],c,i),m))if(f)p[c]=o;else if(o)switch(m){case 3:return!0;case 5:return a;case 6:return c;case 2:A.call(p,a)}else if(g)return!1;return y?-1:b||g?g:p}}var w=e(\"../internals/function-bind-context\"),x=e(\"../internals/indexed-object\"),D=e(\"../internals/to-object\"),k=e(\"../internals/to-length\"),E=e(\"../internals/array-species-create\"),A=[].push;t.exports={forEach:n(0),map:n(1),filter:n(2),some:n(3),every:n(4),find:n(5),findIndex:n(6)}},{\"../internals/array-species-create\":50,\"../internals/function-bind-context\":65,\"../internals/indexed-object\":74,\"../internals/to-length\":115,\"../internals/to-object\":116}],46:[function(e,t,r){\"use strict\";var o=e(\"../internals/to-indexed-object\"),i=e(\"../internals/to-integer\"),s=e(\"../internals/to-length\"),n=e(\"../internals/array-method-is-strict\"),a=e(\"../internals/array-method-uses-to-length\"),l=Math.min,u=[].lastIndexOf,c=!!u&&1/[1].lastIndexOf(1,-0)<0,d=n(\"lastIndexOf\"),p=a(\"indexOf\",{ACCESSORS:!0,1:0}),m=c||!d||!p;t.exports=m?function(e,t){if(c)return u.apply(this,arguments)||0;var r=o(this),n=s(r.length),a=n-1;for(1<arguments.length&&(a=l(a,i(t))),a<0&&(a=n+a);0<=a;a--)if(a in r&&r[a]===e)return a||0;return-1}:u},{\"../internals/array-method-is-strict\":47,\"../internals/array-method-uses-to-length\":48,\"../internals/to-indexed-object\":113,\"../internals/to-integer\":114,\"../internals/to-length\":115}],47:[function(e,t,r){\"use strict\";var n=e(\"../internals/fails\");t.exports=function(e,t){var r=[][e];return!!r&&n(function(){r.call(null,t||function(){throw 1},1)})}},{\"../internals/fails\":64}],48:[function(e,t,r){function i(e){throw e}var s=e(\"../internals/descriptors\"),l=e(\"../internals/fails\"),u=e(\"../internals/has\"),c=Object.defineProperty,d={};t.exports=function(e,t){if(u(d,e))return d[e];var r=[][e],n=!!u(t=t||{},\"ACCESSORS\")&&t.ACCESSORS,a=u(t,0)?t[0]:i,o=u(t,1)?t[1]:void 0;return d[e]=!!r&&!l(function(){if(n&&!s)return!0;var e={length:-1};n?c(e,1,{enumerable:!0,get:i}):e[1]=1,r.call(e,a,o)})}},{\"../internals/descriptors\":60,\"../internals/fails\":64,\"../internals/has\":69}],49:[function(e,t,r){function n(u){return function(e,t,r,n){c(t);var a=d(e),o=p(a),i=m(a.length),s=u?i-1:0,l=u?-1:1;if(r<2)for(;;){if(s in o){n=o[s],s+=l;break}if(s+=l,u?s<0:i<=s)throw TypeError(\"Reduce of empty array with no initial value\")}for(;u?0<=s:s<i;s+=l)s in o&&(n=t(n,o[s],s,a));return n}}var c=e(\"../internals/a-function\"),d=e(\"../internals/to-object\"),p=e(\"../internals/indexed-object\"),m=e(\"../internals/to-length\");t.exports={left:n(!1),right:n(!0)}},{\"../internals/a-function\":34,\"../internals/indexed-object\":74,\"../internals/to-length\":115,\"../internals/to-object\":116}],50:[function(e,t,r){var n=e(\"../internals/is-object\"),a=e(\"../internals/is-array\"),o=e(\"../internals/well-known-symbol\")(\"species\");t.exports=function(e,t){var r;return a(e)&&(\"function\"==typeof(r=e.constructor)&&(r===Array||a(r.prototype))||n(r)&&null===(r=r[o]))&&(r=void 0),new(void 0===r?Array:r)(0===t?0:t)}},{\"../internals/is-array\":79,\"../internals/is-object\":81,\"../internals/well-known-symbol\":126}],51:[function(e,t,r){var a=e(\"../internals/well-known-symbol\")(\"iterator\"),o=!1;try{var n=0,i={next:function(){return{done:!!n++}},return:function(){o=!0}};i[a]=function(){return this},Array.from(i,function(){throw 2})}catch(e){}t.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var n={};n[a]=function(){return{next:function(){return{done:r=!0}}}},e(n)}catch(e){}return r}},{\"../internals/well-known-symbol\":126}],52:[function(e,t,r){var n={}.toString;t.exports=function(e){return n.call(e).slice(8,-1)}},{}],53:[function(e,t,r){var n=e(\"../internals/to-string-tag-support\"),a=e(\"../internals/classof-raw\"),o=e(\"../internals/well-known-symbol\")(\"toStringTag\"),i=\"Arguments\"==a(function(){return arguments}());t.exports=n?a:function(e){var t,r,n;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?a(t):\"Object\"==(n=a(t))&&\"function\"==typeof t.callee?\"Arguments\":n}},{\"../internals/classof-raw\":52,\"../internals/to-string-tag-support\":120,\"../internals/well-known-symbol\":126}],54:[function(e,t,r){var s=e(\"../internals/has\"),l=e(\"../internals/own-keys\"),u=e(\"../internals/object-get-own-property-descriptor\"),c=e(\"../internals/object-define-property\");t.exports=function(e,t){for(var r=l(t),n=c.f,a=u.f,o=0;o<r.length;o++){var i=r[o];s(e,i)||n(e,i,a(t,i))}}},{\"../internals/has\":69,\"../internals/object-define-property\":89,\"../internals/object-get-own-property-descriptor\":90,\"../internals/own-keys\":99}],55:[function(e,t,r){var n=e(\"../internals/fails\");t.exports=!n(function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})},{\"../internals/fails\":64}],56:[function(e,t,r){\"use strict\";function a(){return this}var o=e(\"../internals/iterators-core\").IteratorPrototype,i=e(\"../internals/object-create\"),s=e(\"../internals/create-property-descriptor\"),l=e(\"../internals/set-to-string-tag\"),u=e(\"../internals/iterators\");t.exports=function(e,t,r){var n=t+\" Iterator\";return e.prototype=i(o,{next:s(1,r)}),l(e,n,!1,!0),u[n]=a,e}},{\"../internals/create-property-descriptor\":58,\"../internals/iterators\":84,\"../internals/iterators-core\":83,\"../internals/object-create\":87,\"../internals/set-to-string-tag\":106}],57:[function(e,t,r){var n=e(\"../internals/descriptors\"),a=e(\"../internals/object-define-property\"),o=e(\"../internals/create-property-descriptor\");t.exports=n?function(e,t,r){return a.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},{\"../internals/create-property-descriptor\":58,\"../internals/descriptors\":60,\"../internals/object-define-property\":89}],58:[function(e,t,r){t.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},{}],59:[function(e,t,r){\"use strict\";function g(){return this}var y=e(\"../internals/export\"),v=e(\"../internals/create-iterator-constructor\"),w=e(\"../internals/object-get-prototype-of\"),x=e(\"../internals/object-set-prototype-of\"),D=e(\"../internals/set-to-string-tag\"),k=e(\"../internals/create-non-enumerable-property\"),E=e(\"../internals/redefine\"),n=e(\"../internals/well-known-symbol\"),A=e(\"../internals/is-pure\"),j=e(\"../internals/iterators\"),a=e(\"../internals/iterators-core\"),C=a.IteratorPrototype,F=a.BUGGY_SAFARI_ITERATORS,T=n(\"iterator\"),N=\"values\",S=\"entries\";t.exports=function(e,t,r,n,a,o,i){v(r,t,n);function s(e){if(e===a&&h)return h;if(!F&&e in m)return m[e];switch(e){case\"keys\":case N:case S:return function(){return new r(this,e)}}return function(){return new r(this)}}var l,u,c,d=t+\" Iterator\",p=!1,m=e.prototype,f=m[T]||m[\"@@iterator\"]||a&&m[a],h=!F&&f||s(a),b=\"Array\"==t&&m.entries||f;if(b&&(l=w(b.call(new e)),C!==Object.prototype&&l.next&&(A||w(l)===C||(x?x(l,C):\"function\"!=typeof l[T]&&k(l,T,g)),D(l,d,!0,!0),A&&(j[d]=g))),a==N&&f&&f.name!==N&&(p=!0,h=function(){return f.call(this)}),A&&!i||m[T]===h||k(m,T,h),j[t]=h,a)if(u={values:s(N),keys:o?h:s(\"keys\"),entries:s(S)},i)for(c in u)!F&&!p&&c in m||E(m,c,u[c]);else y({target:t,proto:!0,forced:F||p},u);return u}},{\"../internals/create-iterator-constructor\":56,\"../internals/create-non-enumerable-property\":57,\"../internals/export\":63,\"../internals/is-pure\":82,\"../internals/iterators\":84,\"../internals/iterators-core\":83,\"../internals/object-get-prototype-of\":93,\"../internals/object-set-prototype-of\":97,\"../internals/redefine\":102,\"../internals/set-to-string-tag\":106,\"../internals/well-known-symbol\":126}],60:[function(e,t,r){var n=e(\"../internals/fails\");t.exports=!n(function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})},{\"../internals/fails\":64}],61:[function(e,t,r){var n=e(\"../internals/global\"),a=e(\"../internals/is-object\"),document=n.document,o=a(document)&&a(document.createElement);t.exports=function(e){return o?document.createElement(e):{}}},{\"../internals/global\":68,\"../internals/is-object\":81}],62:[function(e,t,r){t.exports=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"]},{}],63:[function(e,t,r){var c=e(\"../internals/global\"),d=e(\"../internals/object-get-own-property-descriptor\").f,p=e(\"../internals/create-non-enumerable-property\"),m=e(\"../internals/redefine\"),f=e(\"../internals/set-global\"),h=e(\"../internals/copy-constructor-properties\"),b=e(\"../internals/is-forced\");t.exports=function(e,t){var r,n,a,o,i,s=e.target,l=e.global,u=e.stat;if(r=l?c:u?c[s]||f(s,{}):(c[s]||{}).prototype)for(n in t){if(o=t[n],a=e.noTargetGet?(i=d(r,n))&&i.value:r[n],!b(l?n:s+(u?\".\":\"#\")+n,e.forced)&&void 0!==a){if(typeof o==typeof a)continue;h(o,a)}(e.sham||a&&a.sham)&&p(o,\"sham\",!0),m(r,n,o,e)}}},{\"../internals/copy-constructor-properties\":54,\"../internals/create-non-enumerable-property\":57,\"../internals/global\":68,\"../internals/is-forced\":80,\"../internals/object-get-own-property-descriptor\":90,\"../internals/redefine\":102,\"../internals/set-global\":104}],64:[function(e,t,r){t.exports=function(e){try{return!!e()}catch(e){return!0}}},{}],65:[function(e,t,r){var o=e(\"../internals/a-function\");t.exports=function(n,a,e){if(o(n),void 0===a)return n;switch(e){case 0:return function(){return n.call(a)};case 1:return function(e){return n.call(a,e)};case 2:return function(e,t){return n.call(a,e,t)};case 3:return function(e,t,r){return n.call(a,e,t,r)}}return function(){return n.apply(a,arguments)}}},{\"../internals/a-function\":34}],66:[function(e,t,r){function n(e){return\"function\"==typeof e?e:void 0}var a=e(\"../internals/path\"),o=e(\"../internals/global\");t.exports=function(e,t){return arguments.length<2?n(a[e])||n(o[e]):a[e]&&a[e][t]||o[e]&&o[e][t]}},{\"../internals/global\":68,\"../internals/path\":100}],67:[function(e,t,r){var n=e(\"../internals/classof\"),a=e(\"../internals/iterators\"),o=e(\"../internals/well-known-symbol\")(\"iterator\");t.exports=function(e){if(null!=e)return e[o]||e[\"@@iterator\"]||a[n(e)]}},{\"../internals/classof\":53,\"../internals/iterators\":84,\"../internals/well-known-symbol\":126}],68:[function(e,r,t){(function(e){function t(e){return e&&e.Math==Math&&e}r.exports=t(\"object\"==typeof globalThis&&globalThis)||t(\"object\"==typeof window&&window)||t(\"object\"==typeof self&&self)||t(\"object\"==typeof e&&e)||Function(\"return this\")()}).call(this,void 0!==a?a:\"undefined\"!=typeof self?self:void 0!==window?window:{})},{}],69:[function(e,t,r){var n={}.hasOwnProperty;t.exports=function(e,t){return n.call(e,t)}},{}],70:[function(e,t,r){t.exports={}},{}],71:[function(e,t,r){var n=e(\"../internals/get-built-in\");t.exports=n(\"document\",\"documentElement\")},{\"../internals/get-built-in\":66}],72:[function(e,t,r){var n=e(\"../internals/descriptors\"),a=e(\"../internals/fails\"),o=e(\"../internals/document-create-element\");t.exports=!n&&!a(function(){return 7!=Object.defineProperty(o(\"div\"),\"a\",{get:function(){return 7}}).a})},{\"../internals/descriptors\":60,\"../internals/document-create-element\":61,\"../internals/fails\":64}],73:[function(e,t,r){var m=Math.abs,f=Math.pow,h=Math.floor,b=Math.log,g=Math.LN2;t.exports={pack:function(e,t,r){var n,a,o,i=new Array(r),s=8*r-t-1,l=(1<<s)-1,u=l>>1,c=23===t?f(2,-24)-f(2,-77):0,d=e<0||0===e&&1/e<0?1:0,p=0;for((e=m(e))!=e||e===1/0?(a=e!=e?1:0,n=l):(n=h(b(e)/g),e*(o=f(2,-n))<1&&(n--,o*=2),2<=(e+=1<=n+u?c/o:c*f(2,1-u))*o&&(n++,o/=2),l<=n+u?(a=0,n=l):1<=n+u?(a=(e*o-1)*f(2,t),n+=u):(a=e*f(2,u-1)*f(2,t),n=0));8<=t;i[p++]=255&a,a/=256,t-=8);for(n=n<<t|a,s+=t;0<s;i[p++]=255&n,n/=256,s-=8);return i[--p]|=128*d,i},unpack:function(e,t){var r,n=e.length,a=8*n-t-1,o=(1<<a)-1,i=o>>1,s=a-7,l=n-1,u=e[l--],c=127&u;for(u>>=7;0<s;c=256*c+e[l],l--,s-=8);for(r=c&(1<<-s)-1,c>>=-s,s+=t;0<s;r=256*r+e[l],l--,s-=8);if(0===c)c=1-i;else{if(c===o)return r?NaN:u?-1/0:1/0;r+=f(2,t),c-=i}return(u?-1:1)*r*f(2,c-t)}}},{}],74:[function(e,t,r){var n=e(\"../internals/fails\"),a=e(\"../internals/classof-raw\"),o=\"\".split;t.exports=n(function(){return!Object(\"z\").propertyIsEnumerable(0)})?function(e){return\"String\"==a(e)?o.call(e,\"\"):Object(e)}:Object},{\"../internals/classof-raw\":52,\"../internals/fails\":64}],75:[function(e,t,r){var o=e(\"../internals/is-object\"),i=e(\"../internals/object-set-prototype-of\");t.exports=function(e,t,r){var n,a;return i&&\"function\"==typeof(n=t.constructor)&&n!==r&&o(a=n.prototype)&&a!==r.prototype&&i(e,a),e}},{\"../internals/is-object\":81,\"../internals/object-set-prototype-of\":97}],76:[function(e,t,r){var n=e(\"../internals/shared-store\"),a=Function.toString;\"function\"!=typeof n.inspectSource&&(n.inspectSource=function(e){return a.call(e)}),t.exports=n.inspectSource},{\"../internals/shared-store\":108}],77:[function(e,t,r){var n,a,o,i=e(\"../internals/native-weak-map\"),s=e(\"../internals/global\"),l=e(\"../internals/is-object\"),u=e(\"../internals/create-non-enumerable-property\"),c=e(\"../internals/has\"),d=e(\"../internals/shared-key\"),p=e(\"../internals/hidden-keys\"),m=s.WeakMap;if(i){var f=new m,h=f.get,b=f.has,g=f.set;n=function(e,t){return g.call(f,e,t),t},a=function(e){return h.call(f,e)||{}},o=function(e){return b.call(f,e)}}else{var y=d(\"state\");p[y]=!0,n=function(e,t){return u(e,y,t),t},a=function(e){return c(e,y)?e[y]:{}},o=function(e){return c(e,y)}}t.exports={set:n,get:a,has:o,enforce:function(e){return o(e)?a(e):n(e,{})},getterFor:function(r){return function(e){var t;if(!l(e)||(t=a(e)).type!==r)throw TypeError(\"Incompatible receiver, \"+r+\" required\");return t}}}},{\"../internals/create-non-enumerable-property\":57,\"../internals/global\":68,\"../internals/has\":69,\"../internals/hidden-keys\":70,\"../internals/is-object\":81,\"../internals/native-weak-map\":86,\"../internals/shared-key\":107}],78:[function(e,t,r){var n=e(\"../internals/well-known-symbol\"),a=e(\"../internals/iterators\"),o=n(\"iterator\"),i=Array.prototype;t.exports=function(e){return void 0!==e&&(a.Array===e||i[o]===e)}},{\"../internals/iterators\":84,\"../internals/well-known-symbol\":126}],79:[function(e,t,r){var n=e(\"../internals/classof-raw\");t.exports=Array.isArray||function(e){return\"Array\"==n(e)}},{\"../internals/classof-raw\":52}],80:[function(e,t,r){function n(e,t){var r=s[i(e)];return r==u||r!=l&&(\"function\"==typeof t?a(t):!!t)}var a=e(\"../internals/fails\"),o=/#|\\.prototype\\./,i=n.normalize=function(e){return String(e).replace(o,\".\").toLowerCase()},s=n.data={},l=n.NATIVE=\"N\",u=n.POLYFILL=\"P\";t.exports=n},{\"../internals/fails\":64}],81:[function(e,t,r){t.exports=function(e){return\"object\"==typeof e?null!==e:\"function\"==typeof e}},{}],82:[function(e,t,r){t.exports=!1},{}],83:[function(e,t,r){\"use strict\";var n,a,o,i=e(\"../internals/object-get-prototype-of\"),s=e(\"../internals/create-non-enumerable-property\"),l=e(\"../internals/has\"),u=e(\"../internals/well-known-symbol\"),c=e(\"../internals/is-pure\"),d=u(\"iterator\"),p=!1;[].keys&&(\"next\"in(o=[].keys())?(a=i(i(o)))!==Object.prototype&&(n=a):p=!0),null==n&&(n={}),c||l(n,d)||s(n,d,function(){return this}),t.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:p}},{\"../internals/create-non-enumerable-property\":57,\"../internals/has\":69,\"../internals/is-pure\":82,\"../internals/object-get-prototype-of\":93,\"../internals/well-known-symbol\":126}],84:[function(e,t,r){arguments[4][70][0].apply(r,arguments)},{dup:70}],85:[function(e,t,r){var n=e(\"../internals/fails\");t.exports=!!Object.getOwnPropertySymbols&&!n(function(){return!String(Symbol())})},{\"../internals/fails\":64}],86:[function(e,t,r){var n=e(\"../internals/global\"),a=e(\"../internals/inspect-source\"),o=n.WeakMap;t.exports=\"function\"==typeof o&&/native code/.test(a(o))},{\"../internals/global\":68,\"../internals/inspect-source\":76}],87:[function(e,t,r){function n(){}function a(e){return\"<script>\"+e+\"</\"+f+\">\"}var o,i=e(\"../internals/an-object\"),s=e(\"../internals/object-define-properties\"),l=e(\"../internals/enum-bug-keys\"),u=e(\"../internals/hidden-keys\"),c=e(\"../internals/html\"),d=e(\"../internals/document-create-element\"),p=e(\"../internals/shared-key\"),m=\"prototype\",f=\"script\",h=p(\"IE_PROTO\"),b=function(){try{o=document.domain&&new ActiveXObject(\"htmlfile\")}catch(e){}var e,t;b=o?function(e){e.write(a(\"\")),e.close();var t=e.parentWindow.Object;return e=null,t}(o):((t=d(\"iframe\")).style.display=\"none\",c.appendChild(t),t.src=String(\"javascript:\"),(e=t.contentWindow.document).open(),e.write(a(\"document.F=Object\")),e.close(),e.F);for(var r=l.length;r--;)delete b[m][l[r]];return b()};u[h]=!0,t.exports=Object.create||function(e,t){var r;return null!==e?(n[m]=i(e),r=new n,n[m]=null,r[h]=e):r=b(),void 0===t?r:s(r,t)}},{\"../internals/an-object\":38,\"../internals/document-create-element\":61,\"../internals/enum-bug-keys\":62,\"../internals/hidden-keys\":70,\"../internals/html\":71,\"../internals/object-define-properties\":88,\"../internals/shared-key\":107}],88:[function(e,t,r){var n=e(\"../internals/descriptors\"),i=e(\"../internals/object-define-property\"),s=e(\"../internals/an-object\"),l=e(\"../internals/object-keys\");t.exports=n?Object.defineProperties:function(e,t){s(e);for(var r,n=l(t),a=n.length,o=0;o<a;)i.f(e,r=n[o++],t[r]);return e}},{\"../internals/an-object\":38,\"../internals/descriptors\":60,\"../internals/object-define-property\":89,\"../internals/object-keys\":95}],89:[function(e,t,r){var n=e(\"../internals/descriptors\"),a=e(\"../internals/ie8-dom-define\"),o=e(\"../internals/an-object\"),i=e(\"../internals/to-primitive\"),s=Object.defineProperty;r.f=n?s:function(e,t,r){if(o(e),t=i(t,!0),o(r),a)try{return s(e,t,r)}catch(e){}if(\"get\"in r||\"set\"in r)throw TypeError(\"Accessors not supported\");return\"value\"in r&&(e[t]=r.value),e}},{\"../internals/an-object\":38,\"../internals/descriptors\":60,\"../internals/ie8-dom-define\":72,\"../internals/to-primitive\":119}],90:[function(e,t,r){var n=e(\"../internals/descriptors\"),a=e(\"../internals/object-property-is-enumerable\"),o=e(\"../internals/create-property-descriptor\"),i=e(\"../internals/to-indexed-object\"),s=e(\"../internals/to-primitive\"),l=e(\"../internals/has\"),u=e(\"../internals/ie8-dom-define\"),c=Object.getOwnPropertyDescriptor;r.f=n?c:function(e,t){if(e=i(e),t=s(t,!0),u)try{return c(e,t)}catch(e){}if(l(e,t))return o(!a.f.call(e,t),e[t])}},{\"../internals/create-property-descriptor\":58,\"../internals/descriptors\":60,\"../internals/has\":69,\"../internals/ie8-dom-define\":72,\"../internals/object-property-is-enumerable\":96,\"../internals/to-indexed-object\":113,\"../internals/to-primitive\":119}],91:[function(e,t,r){var n=e(\"../internals/object-keys-internal\"),a=e(\"../internals/enum-bug-keys\").concat(\"length\",\"prototype\");r.f=Object.getOwnPropertyNames||function(e){return n(e,a)}},{\"../internals/enum-bug-keys\":62,\"../internals/object-keys-internal\":94}],92:[function(e,t,r){r.f=Object.getOwnPropertySymbols},{}],93:[function(e,t,r){var n=e(\"../internals/has\"),a=e(\"../internals/to-object\"),o=e(\"../internals/shared-key\"),i=e(\"../internals/correct-prototype-getter\"),s=o(\"IE_PROTO\"),l=Object.prototype;t.exports=i?Object.getPrototypeOf:function(e){return e=a(e),n(e,s)?e[s]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},{\"../internals/correct-prototype-getter\":55,\"../internals/has\":69,\"../internals/shared-key\":107,\"../internals/to-object\":116}],94:[function(e,t,r){var i=e(\"../internals/has\"),s=e(\"../internals/to-indexed-object\"),l=e(\"../internals/array-includes\").indexOf,u=e(\"../internals/hidden-keys\");t.exports=function(e,t){var r,n=s(e),a=0,o=[];for(r in n)!i(u,r)&&i(n,r)&&o.push(r);for(;t.length>a;)i(n,r=t[a++])&&(~l(o,r)||o.push(r));return o}},{\"../internals/array-includes\":44,\"../internals/has\":69,\"../internals/hidden-keys\":70,\"../internals/to-indexed-object\":113}],95:[function(e,t,r){var n=e(\"../internals/object-keys-internal\"),a=e(\"../internals/enum-bug-keys\");t.exports=Object.keys||function(e){return n(e,a)}},{\"../internals/enum-bug-keys\":62,\"../internals/object-keys-internal\":94}],96:[function(e,t,r){\"use strict\";var n={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,o=a&&!n.call({1:2},1);r.f=o?function(e){var t=a(this,e);return!!t&&t.enumerable}:n},{}],97:[function(e,t,r){var a=e(\"../internals/an-object\"),o=e(\"../internals/a-possible-prototype\");t.exports=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var r,n=!1,e={};try{(r=Object.getOwnPropertyDescriptor(Object.prototype,\"__proto__\").set).call(e,[]),n=e instanceof Array}catch(e){}return function(e,t){return a(e),o(t),n?r.call(e,t):e.__proto__=t,e}}():void 0)},{\"../internals/a-possible-prototype\":35,\"../internals/an-object\":38}],98:[function(e,t,r){\"use strict\";var n=e(\"../internals/to-string-tag-support\"),a=e(\"../internals/classof\");t.exports=n?{}.toString:function(){return\"[object \"+a(this)+\"]\"}},{\"../internals/classof\":53,\"../internals/to-string-tag-support\":120}],99:[function(e,t,r){var n=e(\"../internals/get-built-in\"),a=e(\"../internals/object-get-own-property-names\"),o=e(\"../internals/object-get-own-property-symbols\"),i=e(\"../internals/an-object\");t.exports=n(\"Reflect\",\"ownKeys\")||function(e){var t=a.f(i(e)),r=o.f;return r?t.concat(r(e)):t}},{\"../internals/an-object\":38,\"../internals/get-built-in\":66,\"../internals/object-get-own-property-names\":91,\"../internals/object-get-own-property-symbols\":92}],100:[function(e,t,r){var n=e(\"../internals/global\");t.exports=n},{\"../internals/global\":68}],101:[function(e,t,r){var a=e(\"../internals/redefine\");t.exports=function(e,t,r){for(var n in t)a(e,n,t[n],r);return e}},{\"../internals/redefine\":102}],102:[function(e,t,r){var s=e(\"../internals/global\"),l=e(\"../internals/create-non-enumerable-property\"),u=e(\"../internals/has\"),c=e(\"../internals/set-global\"),n=e(\"../internals/inspect-source\"),a=e(\"../internals/internal-state\"),o=a.get,d=a.enforce,p=String(String).split(\"String\");(t.exports=function(e,t,r,n){var a=!!n&&!!n.unsafe,o=!!n&&!!n.enumerable,i=!!n&&!!n.noTargetGet;\"function\"==typeof r&&(\"string\"!=typeof t||u(r,\"name\")||l(r,\"name\",t),d(r).source=p.join(\"string\"==typeof t?t:\"\")),e!==s?(a?!i&&e[t]&&(o=!0):delete e[t],o?e[t]=r:l(e,t,r)):o?e[t]=r:c(t,r)})(Function.prototype,\"toString\",function(){return\"function\"==typeof this&&o(this).source||n(this)})},{\"../internals/create-non-enumerable-property\":57,\"../internals/global\":68,\"../internals/has\":69,\"../internals/inspect-source\":76,\"../internals/internal-state\":77,\"../internals/set-global\":104}],103:[function(e,t,r){t.exports=function(e){if(null==e)throw TypeError(\"Can't call method on \"+e);return e}},{}],104:[function(e,t,r){var n=e(\"../internals/global\"),a=e(\"../internals/create-non-enumerable-property\");t.exports=function(t,r){try{a(n,t,r)}catch(e){n[t]=r}return r}},{\"../internals/create-non-enumerable-property\":57,\"../internals/global\":68}],105:[function(e,t,r){\"use strict\";var n=e(\"../internals/get-built-in\"),a=e(\"../internals/object-define-property\"),o=e(\"../internals/well-known-symbol\"),i=e(\"../internals/descriptors\"),s=o(\"species\");t.exports=function(e){var t=n(e),r=a.f;i&&t&&!t[s]&&r(t,s,{configurable:!0,get:function(){return this}})}},{\"../internals/descriptors\":60,\"../internals/get-built-in\":66,\"../internals/object-define-property\":89,\"../internals/well-known-symbol\":126}],106:[function(e,t,r){var n=e(\"../internals/object-define-property\").f,a=e(\"../internals/has\"),o=e(\"../internals/well-known-symbol\")(\"toStringTag\");t.exports=function(e,t,r){e&&!a(e=r?e:e.prototype,o)&&n(e,o,{configurable:!0,value:t})}},{\"../internals/has\":69,\"../internals/object-define-property\":89,\"../internals/well-known-symbol\":126}],107:[function(e,t,r){var n=e(\"../internals/shared\"),a=e(\"../internals/uid\"),o=n(\"keys\");t.exports=function(e){return o[e]||(o[e]=a(e))}},{\"../internals/shared\":109,\"../internals/uid\":124}],108:[function(e,t,r){var n=e(\"../internals/global\"),a=e(\"../internals/set-global\"),o=\"__core-js_shared__\",i=n[o]||a(o,{});t.exports=i},{\"../internals/global\":68,\"../internals/set-global\":104}],109:[function(e,t,r){var n=e(\"../internals/is-pure\"),a=e(\"../internals/shared-store\");(t.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:\"3.6.4\",mode:n?\"pure\":\"global\",copyright:\"© 2020 Denis Pushkarev (zloirock.ru)\"})},{\"../internals/is-pure\":82,\"../internals/shared-store\":108}],110:[function(e,t,r){var a=e(\"../internals/an-object\"),o=e(\"../internals/a-function\"),i=e(\"../internals/well-known-symbol\")(\"species\");t.exports=function(e,t){var r,n=a(e).constructor;return void 0===n||null==(r=a(n)[i])?t:o(r)}},{\"../internals/a-function\":34,\"../internals/an-object\":38,\"../internals/well-known-symbol\":126}],111:[function(e,t,r){var n=e(\"../internals/to-integer\"),a=Math.max,o=Math.min;t.exports=function(e,t){var r=n(e);return r<0?a(r+t,0):o(r,t)}},{\"../internals/to-integer\":114}],112:[function(e,t,r){var n=e(\"../internals/to-integer\"),a=e(\"../internals/to-length\");t.exports=function(e){if(void 0===e)return 0;var t=n(e),r=a(t);if(t!==r)throw RangeError(\"Wrong length or index\");return r}},{\"../internals/to-integer\":114,\"../internals/to-length\":115}],113:[function(e,t,r){var n=e(\"../internals/indexed-object\"),a=e(\"../internals/require-object-coercible\");t.exports=function(e){return n(a(e))}},{\"../internals/indexed-object\":74,\"../internals/require-object-coercible\":103}],114:[function(e,t,r){var n=Math.ceil,a=Math.floor;t.exports=function(e){return isNaN(e=+e)?0:(0<e?a:n)(e)}},{}],115:[function(e,t,r){var n=e(\"../internals/to-integer\"),a=Math.min;t.exports=function(e){return 0<e?a(n(e),9007199254740991):0}},{\"../internals/to-integer\":114}],116:[function(e,t,r){var n=e(\"../internals/require-object-coercible\");t.exports=function(e){return Object(n(e))}},{\"../internals/require-object-coercible\":103}],117:[function(e,t,r){var n=e(\"../internals/to-positive-integer\");t.exports=function(e,t){var r=n(e);if(r%t)throw RangeError(\"Wrong offset\");return r}},{\"../internals/to-positive-integer\":118}],118:[function(e,t,r){var n=e(\"../internals/to-integer\");t.exports=function(e){var t=n(e);if(t<0)throw RangeError(\"The argument can't be less than 0\");return t}},{\"../internals/to-integer\":114}],119:[function(e,t,r){var a=e(\"../internals/is-object\");t.exports=function(e,t){if(!a(e))return e;var r,n;if(t&&\"function\"==typeof(r=e.toString)&&!a(n=r.call(e)))return n;if(\"function\"==typeof(r=e.valueOf)&&!a(n=r.call(e)))return n;if(!t&&\"function\"==typeof(r=e.toString)&&!a(n=r.call(e)))return n;throw TypeError(\"Can't convert object to primitive value\")}},{\"../internals/is-object\":81}],120:[function(e,t,r){var n={};n[e(\"../internals/well-known-symbol\")(\"toStringTag\")]=\"z\",t.exports=\"[object z]\"===String(n)},{\"../internals/well-known-symbol\":126}],121:[function(e,t,r){\"use strict\";function f(e,t){for(var r=0,n=t.length,a=new(W(e))(n);r<n;)a[r]=t[r++];return a}function n(e,t){P(e,t,{get:function(){return _(this)[t]}})}function h(e){var t;return e instanceof M||\"ArrayBuffer\"==(t=k(e))||\"SharedArrayBuffer\"==t}function a(e,t){return Y(e)&&\"symbol\"!=typeof t&&t in e&&String(+t)==String(t)}function o(e,t){return a(e,t=m(t,!0))?p(2,e[t]):I(e,t)}function i(e,t,r){return!(a(e,t=m(t,!0))&&E(r)&&D(r,\"value\"))||D(r,\"get\")||D(r,\"set\")||r.configurable||D(r,\"writable\")&&!r.writable||D(r,\"enumerable\")&&!r.enumerable?P(e,t,r):(e[t]=r.value,e)}var l=e(\"../internals/export\"),u=e(\"../internals/global\"),s=e(\"../internals/descriptors\"),b=e(\"../internals/typed-array-constructors-require-wrappers\"),c=e(\"../internals/array-buffer-view-core\"),d=e(\"../internals/array-buffer\"),g=e(\"../internals/an-instance\"),p=e(\"../internals/create-property-descriptor\"),y=e(\"../internals/create-non-enumerable-property\"),v=e(\"../internals/to-length\"),w=e(\"../internals/to-index\"),x=e(\"../internals/to-offset\"),m=e(\"../internals/to-primitive\"),D=e(\"../internals/has\"),k=e(\"../internals/classof\"),E=e(\"../internals/is-object\"),A=e(\"../internals/object-create\"),j=e(\"../internals/object-set-prototype-of\"),C=e(\"../internals/object-get-own-property-names\").f,F=e(\"../internals/typed-array-from\"),T=e(\"../internals/array-iteration\").forEach,N=e(\"../internals/set-species\"),S=e(\"../internals/object-define-property\"),z=e(\"../internals/object-get-own-property-descriptor\"),q=e(\"../internals/internal-state\"),O=e(\"../internals/inherit-if-required\"),_=q.get,R=q.set,P=S.f,I=z.f,L=Math.round,B=u.RangeError,M=d.ArrayBuffer,V=d.DataView,U=c.NATIVE_ARRAY_BUFFER_VIEWS,H=c.TYPED_ARRAY_TAG,$=c.TypedArray,G=c.TypedArrayPrototype,W=c.aTypedArrayConstructor,Y=c.isTypedArray,K=\"BYTES_PER_ELEMENT\",X=\"Wrong length\";s?(U||(z.f=o,S.f=i,n(G,\"buffer\"),n(G,\"byteOffset\"),n(G,\"byteLength\"),n(G,\"length\")),l({target:\"Object\",stat:!0,forced:!U},{getOwnPropertyDescriptor:o,defineProperty:i}),t.exports=function(e,t,o){function c(e,a){P(e,a,{get:function(){return e=a,(t=_(this)).view[r](e*d+t.byteOffset,!0);var e,t},set:function(e){return t=a,r=e,n=_(this),o&&(r=(r=L(r))<0?0:255<r?255:255&r),void n.view[i](t*d+n.byteOffset,r,!0);var t,r,n},enumerable:!0})}var d=e.match(/\\d+$/)[0]/8,p=e+(o?\"Clamped\":\"\")+\"Array\",r=\"get\"+e,i=\"set\"+e,a=u[p],m=a,n=m&&m.prototype,s={};U?b&&(m=t(function(e,t,r,n){return g(e,m,p),O(E(t)?h(t)?void 0!==n?new a(t,x(r,d),n):void 0!==r?new a(t,x(r,d)):new a(t):Y(t)?f(m,t):F.call(m,t):new a(w(t)),e,m)}),j&&j(m,$),T(C(a),function(e){e in m||y(m,e,a[e])}),m.prototype=n):(m=t(function(e,t,r,n){g(e,m,p);var a,o,i,s=0,l=0;if(E(t)){if(!h(t))return Y(t)?f(m,t):F.call(m,t);a=t,l=x(r,d);var u=t.byteLength;if(void 0===n){if(u%d)throw B(X);if((o=u-l)<0)throw B(X)}else if(u<(o=v(n)*d)+l)throw B(X);i=o/d}else i=w(t),a=new M(o=i*d);for(R(e,{buffer:a,byteOffset:l,byteLength:o,length:i,view:new V(a)});s<i;)c(e,s++)}),j&&j(m,$),n=m.prototype=A(G)),n.constructor!==m&&y(n,\"constructor\",m),H&&y(n,H,p),s[p]=m,l({global:!0,forced:m!=a,sham:!U},s),K in m||y(m,K,d),K in n||y(n,K,d),N(p)}):t.exports=function(){}},{\"../internals/an-instance\":37,\"../internals/array-buffer\":41,\"../internals/array-buffer-view-core\":40,\"../internals/array-iteration\":45,\"../internals/classof\":53,\"../internals/create-non-enumerable-property\":57,\"../internals/create-property-descriptor\":58,\"../internals/descriptors\":60,\"../internals/export\":63,\"../internals/global\":68,\"../internals/has\":69,\"../internals/inherit-if-required\":75,\"../internals/internal-state\":77,\"../internals/is-object\":81,\"../internals/object-create\":87,\"../internals/object-define-property\":89,\"../internals/object-get-own-property-descriptor\":90,\"../internals/object-get-own-property-names\":91,\"../internals/object-set-prototype-of\":97,\"../internals/set-species\":105,\"../internals/to-index\":112,\"../internals/to-length\":115,\"../internals/to-offset\":117,\"../internals/to-primitive\":119,\"../internals/typed-array-constructors-require-wrappers\":122,\"../internals/typed-array-from\":123}],122:[function(e,t,r){var n=e(\"../internals/global\"),a=e(\"../internals/fails\"),o=e(\"../internals/check-correctness-of-iteration\"),i=e(\"../internals/array-buffer-view-core\").NATIVE_ARRAY_BUFFER_VIEWS,s=n.ArrayBuffer,l=n.Int8Array;t.exports=!i||!a(function(){l(1)})||!a(function(){new l(-1)})||!o(function(e){new l,new l(null),new l(1.5),new l(e)},!0)||a(function(){return 1!==new l(new s(2),1,void 0).length})},{\"../internals/array-buffer-view-core\":40,\"../internals/check-correctness-of-iteration\":51,\"../internals/fails\":64,\"../internals/global\":68}],123:[function(e,t,r){var f=e(\"../internals/to-object\"),h=e(\"../internals/to-length\"),b=e(\"../internals/get-iterator-method\"),g=e(\"../internals/is-array-iterator-method\"),y=e(\"../internals/function-bind-context\"),v=e(\"../internals/array-buffer-view-core\").aTypedArrayConstructor;t.exports=function(e,t,r){var n,a,o,i,s,l,u=f(e),c=arguments.length,d=1<c?t:void 0,p=void 0!==d,m=b(u);if(null!=m&&!g(m))for(l=(s=m.call(u)).next,u=[];!(i=l.call(s)).done;)u.push(i.value);for(p&&2<c&&(d=y(d,r,2)),a=h(u.length),o=new(v(this))(a),n=0;n<a;n++)o[n]=p?d(u[n],n):u[n];return o}},{\"../internals/array-buffer-view-core\":40,\"../internals/function-bind-context\":65,\"../internals/get-iterator-method\":67,\"../internals/is-array-iterator-method\":78,\"../internals/to-length\":115,\"../internals/to-object\":116}],124:[function(e,t,r){var n=0,a=Math.random();t.exports=function(e){return\"Symbol(\"+String(void 0===e?\"\":e)+\")_\"+(++n+a).toString(36)}},{}],125:[function(e,t,r){var n=e(\"../internals/native-symbol\");t.exports=n&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator},{\"../internals/native-symbol\":85}],126:[function(e,t,r){var n=e(\"../internals/global\"),a=e(\"../internals/shared\"),o=e(\"../internals/has\"),i=e(\"../internals/uid\"),s=e(\"../internals/native-symbol\"),l=e(\"../internals/use-symbol-as-uid\"),u=a(\"wks\"),c=n.Symbol,d=l?c:c&&c.withoutSetter||i;t.exports=function(e){return o(u,e)||(s&&o(c,e)?u[e]=c[e]:u[e]=d(\"Symbol.\"+e)),u[e]}},{\"../internals/global\":68,\"../internals/has\":69,\"../internals/native-symbol\":85,\"../internals/shared\":109,\"../internals/uid\":124,\"../internals/use-symbol-as-uid\":125}],127:[function(e,t,r){\"use strict\";var n=e(\"../internals/to-indexed-object\"),a=e(\"../internals/add-to-unscopables\"),o=e(\"../internals/iterators\"),i=e(\"../internals/internal-state\"),s=e(\"../internals/define-iterator\"),l=\"Array Iterator\",u=i.set,c=i.getterFor(l);t.exports=s(Array,\"Array\",function(e,t){u(this,{type:l,target:n(e),index:0,kind:t})},function(){var e=c(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?{value:e.target=void 0,done:!0}:\"keys\"==r?{value:n,done:!1}:\"values\"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}},\"values\"),o.Arguments=o.Array,a(\"keys\"),a(\"values\"),a(\"entries\")},{\"../internals/add-to-unscopables\":36,\"../internals/define-iterator\":59,\"../internals/internal-state\":77,\"../internals/iterators\":84,\"../internals/to-indexed-object\":113}],128:[function(e,t,r){var n=e(\"../internals/to-string-tag-support\"),a=e(\"../internals/redefine\"),o=e(\"../internals/object-to-string\");n||a(Object.prototype,\"toString\",o,{unsafe:!0})},{\"../internals/object-to-string\":98,\"../internals/redefine\":102,\"../internals/to-string-tag-support\":120}],129:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-copy-within\"),o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"copyWithin\",function(e,t,r){return a.call(o(this),e,t,2<arguments.length?r:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-copy-within\":42}],130:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-iteration\").every,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"every\",function(e,t){return a(o(this),e,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-iteration\":45}],131:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-fill\"),o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"fill\",function(e){return a.apply(o(this),arguments)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-fill\":43}],132:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),s=e(\"../internals/array-iteration\").filter,l=e(\"../internals/species-constructor\"),u=n.aTypedArray,c=n.aTypedArrayConstructor;(0,n.exportTypedArrayMethod)(\"filter\",function(e,t){for(var r=s(u(this),e,1<arguments.length?t:void 0),n=l(this,this.constructor),a=0,o=r.length,i=new(c(n))(o);a<o;)i[a]=r[a++];return i})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-iteration\":45,\"../internals/species-constructor\":110}],133:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-iteration\").findIndex,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"findIndex\",function(e,t){return a(o(this),e,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-iteration\":45}],134:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-iteration\").find,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"find\",function(e,t){return a(o(this),e,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-iteration\":45}],135:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-iteration\").forEach,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"forEach\",function(e,t){a(o(this),e,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-iteration\":45}],136:[function(e,t,r){\"use strict\";var n=e(\"../internals/typed-array-constructors-require-wrappers\");(0,e(\"../internals/array-buffer-view-core\").exportTypedArrayStaticMethod)(\"from\",e(\"../internals/typed-array-from\"),n)},{\"../internals/array-buffer-view-core\":40,\"../internals/typed-array-constructors-require-wrappers\":122,\"../internals/typed-array-from\":123}],137:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-includes\").includes,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"includes\",function(e,t){return a(o(this),e,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-includes\":44}],138:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-includes\").indexOf,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"indexOf\",function(e,t){return a(o(this),e,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-includes\":44}],139:[function(e,t,r){\"use strict\";function n(){return u.call(p(this))}var a=e(\"../internals/global\"),o=e(\"../internals/array-buffer-view-core\"),i=e(\"../modules/es.array.iterator\"),s=e(\"../internals/well-known-symbol\")(\"iterator\"),l=a.Uint8Array,u=i.values,c=i.keys,d=i.entries,p=o.aTypedArray,m=o.exportTypedArrayMethod,f=l&&l.prototype[s],h=!!f&&(\"values\"==f.name||null==f.name);m(\"entries\",function(){return d.call(p(this))}),m(\"keys\",function(){return c.call(p(this))}),m(\"values\",n,!h),m(s,n,!h)},{\"../internals/array-buffer-view-core\":40,\"../internals/global\":68,\"../internals/well-known-symbol\":126,\"../modules/es.array.iterator\":127}],140:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=n.aTypedArray,o=n.exportTypedArrayMethod,i=[].join;o(\"join\",function(e){return i.apply(a(this),arguments)})},{\"../internals/array-buffer-view-core\":40}],141:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-last-index-of\"),o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"lastIndexOf\",function(e){return a.apply(o(this),arguments)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-last-index-of\":46}],142:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-iteration\").map,o=e(\"../internals/species-constructor\"),i=n.aTypedArray,s=n.aTypedArrayConstructor;(0,n.exportTypedArrayMethod)(\"map\",function(e,t){return a(i(this),e,1<arguments.length?t:void 0,function(e,t){return new(s(o(e,e.constructor)))(t)})})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-iteration\":45,\"../internals/species-constructor\":110}],143:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/typed-array-constructors-require-wrappers\"),o=n.aTypedArrayConstructor;(0,n.exportTypedArrayStaticMethod)(\"of\",function(){for(var e=0,t=arguments.length,r=new(o(this))(t);e<t;)r[e]=arguments[e++];return r},a)},{\"../internals/array-buffer-view-core\":40,\"../internals/typed-array-constructors-require-wrappers\":122}],144:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-reduce\").right,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"reduceRight\",function(e,t){return a(o(this),e,arguments.length,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-reduce\":49}],145:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-reduce\").left,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"reduce\",function(e,t){return a(o(this),e,arguments.length,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-reduce\":49}],146:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),o=n.aTypedArray,a=n.exportTypedArrayMethod,i=Math.floor;a(\"reverse\",function(){for(var e,t=this,r=o(t).length,n=i(r/2),a=0;a<n;)e=t[a],t[a++]=t[--r],t[r]=e;return t})},{\"../internals/array-buffer-view-core\":40}],147:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),s=e(\"../internals/to-length\"),l=e(\"../internals/to-offset\"),u=e(\"../internals/to-object\"),a=e(\"../internals/fails\"),c=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"set\",function(e,t){c(this);var r=l(1<arguments.length?t:void 0,1),n=this.length,a=u(e),o=s(a.length),i=0;if(n<o+r)throw RangeError(\"Wrong length\");for(;i<o;)this[r+i]=a[i++]},a(function(){new Int8Array(1).set({})}))},{\"../internals/array-buffer-view-core\":40,\"../internals/fails\":64,\"../internals/to-length\":115,\"../internals/to-object\":116,\"../internals/to-offset\":117}],148:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),s=e(\"../internals/species-constructor\"),a=e(\"../internals/fails\"),l=n.aTypedArray,u=n.aTypedArrayConstructor,o=n.exportTypedArrayMethod,c=[].slice;o(\"slice\",function(e,t){for(var r=c.call(l(this),e,t),n=s(this,this.constructor),a=0,o=r.length,i=new(u(n))(o);a<o;)i[a]=r[a++];return i},a(function(){new Int8Array(1).slice()}))},{\"../internals/array-buffer-view-core\":40,\"../internals/fails\":64,\"../internals/species-constructor\":110}],149:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=e(\"../internals/array-iteration\").some,o=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"some\",function(e,t){return a(o(this),e,1<arguments.length?t:void 0)})},{\"../internals/array-buffer-view-core\":40,\"../internals/array-iteration\":45}],150:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),a=n.aTypedArray,o=n.exportTypedArrayMethod,i=[].sort;o(\"sort\",function(e){return i.call(a(this),e)})},{\"../internals/array-buffer-view-core\":40}],151:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\"),o=e(\"../internals/to-length\"),i=e(\"../internals/to-absolute-index\"),s=e(\"../internals/species-constructor\"),l=n.aTypedArray;(0,n.exportTypedArrayMethod)(\"subarray\",function(e,t){var r=l(this),n=r.length,a=i(e,n);return new(s(r,r.constructor))(r.buffer,r.byteOffset+a*r.BYTES_PER_ELEMENT,o((void 0===t?n:i(t,n))-a))})},{\"../internals/array-buffer-view-core\":40,\"../internals/species-constructor\":110,\"../internals/to-absolute-index\":111,\"../internals/to-length\":115}],152:[function(e,t,r){\"use strict\";var n=e(\"../internals/global\"),a=e(\"../internals/array-buffer-view-core\"),o=e(\"../internals/fails\"),i=n.Int8Array,s=a.aTypedArray,l=a.exportTypedArrayMethod,u=[].toLocaleString,c=[].slice,d=!!i&&o(function(){u.call(new i(1))});l(\"toLocaleString\",function(){return u.apply(d?c.call(s(this)):s(this),arguments)},o(function(){return[1,2].toLocaleString()!=new i([1,2]).toLocaleString()})||!o(function(){i.prototype.toLocaleString.call([1,2])}))},{\"../internals/array-buffer-view-core\":40,\"../internals/fails\":64,\"../internals/global\":68}],153:[function(e,t,r){\"use strict\";var n=e(\"../internals/array-buffer-view-core\").exportTypedArrayMethod,a=e(\"../internals/fails\"),o=e(\"../internals/global\").Uint8Array,i=o&&o.prototype||{},s=[].toString,l=[].join;a(function(){s.call({})})&&(s=function(){return l.call(this)}),n(\"toString\",s,i.toString!=s)},{\"../internals/array-buffer-view-core\":40,\"../internals/fails\":64,\"../internals/global\":68}],154:[function(e,t,r){e(\"../internals/typed-array-constructor\")(\"Uint32\",function(n){return function(e,t,r){return n(this,e,t,r)}})},{\"../internals/typed-array-constructor\":121}],155:[function(e,t,r){t.exports={CssSelectorParser:e(\"./lib/css-selector-parser.js\").CssSelectorParser}},{\"./lib/css-selector-parser.js\":156}],156:[function(e,t,r){function n(){this.pseudos={},this.attrEqualityMods={},this.ruleNestingOperators={},this.substitutesEnabled=!1}function o(e){return\"a\"<=e&&e<=\"f\"||\"A\"<=e&&e<=\"F\"||\"0\"<=e&&e<=\"9\"}n.prototype.registerSelectorPseudos=function(e){for(var t=0,r=arguments.length;t<r;t++)e=arguments[t],this.pseudos[e]=\"selector\";return this},n.prototype.unregisterSelectorPseudos=function(e){for(var t=0,r=arguments.length;t<r;t++)e=arguments[t],delete this.pseudos[e];return this},n.prototype.registerNumericPseudos=function(e){for(var t=0,r=arguments.length;t<r;t++)e=arguments[t],this.pseudos[e]=\"numeric\";return this},n.prototype.unregisterNumericPseudos=function(e){for(var t=0,r=arguments.length;t<r;t++)e=arguments[t],delete this.pseudos[e];return this},n.prototype.registerNestingOperators=function(e){for(var t=0,r=arguments.length;t<r;t++)e=arguments[t],this.ruleNestingOperators[e]=!0;return this},n.prototype.unregisterNestingOperators=function(e){for(var t=0,r=arguments.length;t<r;t++)e=arguments[t],delete this.ruleNestingOperators[e];return this},n.prototype.registerAttrEqualityMods=function(e){for(var t=0,r=arguments.length;t<r;t++)e=arguments[t],this.attrEqualityMods[e]=!0;return this},n.prototype.unregisterAttrEqualityMods=function(e){for(var t=0,r=arguments.length;t<r;t++)e=arguments[t],delete this.attrEqualityMods[e];return this},n.prototype.enableSubstitutes=function(){return this.substitutesEnabled=!0,this},n.prototype.disableSubstitutes=function(){return this.substitutesEnabled=!1,this};var s={\"!\":!0,'\"':!0,\"#\":!0,$:!0,\"%\":!0,\"&\":!0,\"'\":!0,\"(\":!0,\")\":!0,\"*\":!0,\"+\":!0,\",\":!0,\".\":!0,\"/\":!0,\";\":!0,\"<\":!0,\"=\":!0,\">\":!0,\"?\":!0,\"@\":!0,\"[\":!0,\"\\\\\":!0,\"]\":!0,\"^\":!0,\"`\":!0,\"{\":!0,\"|\":!0,\"}\":!0,\"~\":!0},i={\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\f\":\"\\\\f\",\"\\v\":\"\\\\v\"},y={n:\"\\n\",r:\"\\r\",t:\"\\t\",f:\"\\f\",\"\\\\\":\"\\\\\",\"'\":\"'\"},v={n:\"\\n\",r:\"\\r\",t:\"\\t\",f:\"\\f\",\"\\\\\":\"\\\\\",'\"':'\"'};function a(l,u,c,d,a,p){var m,f,h,b,g;return b=l.length,m=null,h=function(e,t){var r,n,a;for(a=\"\",u++,m=l.charAt(u);u<b;){if(m===e)return u++,a;if(\"\\\\\"===m)if(u++,(m=l.charAt(u))===e)a+=e;else if(r=t[m])a+=r;else{if(o(m)){for(n=m,u++,m=l.charAt(u);o(m);)n+=m,u++,m=l.charAt(u);\" \"===m&&(u++,m=l.charAt(u)),a+=String.fromCharCode(parseInt(n,16));continue}a+=m}else a+=m;u++,m=l.charAt(u)}return a},f=function(){var e,t=\"\";for(m=l.charAt(u);u<b;){if(\"a\"<=(e=m)&&e<=\"z\"||\"A\"<=e&&e<=\"Z\"||\"0\"<=e&&e<=\"9\"||\"-\"===e||\"_\"===e)t+=m;else{if(\"\\\\\"!==m)return t;if(b<=++u)throw Error(\"Expected symbol but end of file reached.\");if(m=l.charAt(u),s[m])t+=m;else{if(o(m)){var r=m;for(u++,m=l.charAt(u);o(m);)r+=m,u++,m=l.charAt(u);\" \"===m&&(u++,m=l.charAt(u)),t+=String.fromCharCode(parseInt(r,16));continue}t+=m}}u++,m=l.charAt(u)}return t},g=function(){m=l.charAt(u);for(var e=!1;\" \"===m||\"\\t\"===m||\"\\n\"===m||\"\\r\"===m||\"\\f\"===m;)e=!0,u++,m=l.charAt(u);return e},this.parse=function(){var e=this.parseSelector();if(u<b)throw Error('Rule expected but \"'+l.charAt(u)+'\" found.');return e},this.parseSelector=function(){var e,t=e=this.parseSingleSelector();for(m=l.charAt(u);\",\"===m;){if(u++,g(),\"selectors\"!==e.type&&(e={type:\"selectors\",selectors:[t]}),!(t=this.parseSingleSelector()))throw Error('Rule expected after \",\".');e.selectors.push(t)}return e},this.parseSingleSelector=function(){g();var e={type:\"ruleSet\"},t=this.parseRule();if(!t)return null;for(var r=e;t&&(t.type=\"rule\",r.rule=t,r=t,g(),m=l.charAt(u),!(b<=u||\",\"===m||\")\"===m));)if(a[m]){var n=m;if(u++,g(),!(t=this.parseRule()))throw Error('Rule expected after \"'+n+'\".');t.nestingOperator=n}else(t=this.parseRule())&&(t.nestingOperator=null);return e},this.parseRule=function(){for(var e,t=null;u<b;)if(\"*\"===(m=l.charAt(u)))u++,(t=t||{}).tagName=\"*\";else if(\"a\"<=(e=m)&&e<=\"z\"||\"A\"<=e&&e<=\"Z\"||\"-\"===e||\"_\"===e||\"\\\\\"===m)(t=t||{}).tagName=f();else if(\".\"===m)u++,((t=t||{}).classNames=t.classNames||[]).push(f());else if(\"#\"===m)u++,(t=t||{}).id=f();else if(\"[\"===m){u++,g();var r={name:f()};if(g(),\"]\"===m)u++;else{var n=\"\";if(d[m]&&(n=m,u++,m=l.charAt(u)),b<=u)throw Error('Expected \"=\" but end of file reached.');if(\"=\"!==m)throw Error('Expected \"=\" but \"'+m+'\" found.');r.operator=n+\"=\",u++,g();var a=\"\";if(r.valueType=\"string\",'\"'===m)a=h('\"',v);else if(\"'\"===m)a=h(\"'\",y);else if(p&&\"$\"===m)u++,a=f(),r.valueType=\"substitute\";else{for(;u<b&&\"]\"!==m;)a+=m,u++,m=l.charAt(u);a=a.trim()}if(g(),b<=u)throw Error('Expected \"]\" but end of file reached.');if(\"]\"!==m)throw Error('Expected \"]\" but \"'+m+'\" found.');u++,r.value=a}((t=t||{}).attrs=t.attrs||[]).push(r)}else{if(\":\"!==m)break;u++;var o=f(),i={name:o};if(\"(\"===m){u++;var s=\"\";if(g(),\"selector\"===c[o])i.valueType=\"selector\",s=this.parseSelector();else{if(i.valueType=c[o]||\"string\",'\"'===m)s=h('\"',v);else if(\"'\"===m)s=h(\"'\",y);else if(p&&\"$\"===m)u++,s=f(),i.valueType=\"substitute\";else{for(;u<b&&\")\"!==m;)s+=m,u++,m=l.charAt(u);s=s.trim()}g()}if(b<=u)throw Error('Expected \")\" but end of file reached.');if(\")\"!==m)throw Error('Expected \")\" but \"'+m+'\" found.');u++,i.value=s}((t=t||{}).pseudos=t.pseudos||[]).push(i)}return t},this}n.prototype.parse=function(e){return new a(e,0,this.pseudos,this.attrEqualityMods,this.ruleNestingOperators,this.substitutesEnabled).parse()},n.prototype.escapeIdentifier=function(e){for(var t=\"\",r=0,n=e.length;r<n;){var a=e.charAt(r);if(s[a])t+=\"\\\\\"+a;else if(\"_\"===a||\"-\"===a||\"A\"<=a&&a<=\"Z\"||\"a\"<=a&&a<=\"z\"||0!==r&&\"0\"<=a&&a<=\"9\")t+=a;else{var o=a.charCodeAt(0);if(55296==(63488&o)){var i=e.charCodeAt(r++);if(55296!=(64512&o)||56320!=(64512&i))throw Error(\"UCS-2(decode): illegal sequence\");o=((1023&o)<<10)+(1023&i)+65536}t+=\"\\\\\"+o.toString(16)+\" \"}r++}return t},n.prototype.escapeStr=function(e){for(var t,r,n=\"\",a=0,o=e.length;a<o;)'\"'===(t=e.charAt(a))?t='\\\\\"':\"\\\\\"===t?t=\"\\\\\\\\\":(r=i[t])&&(t=r),n+=t,a++;return'\"'+n+'\"'},n.prototype.render=function(e){return this._renderEntity(e).trim()},n.prototype._renderEntity=function(e){var t,r,n;switch(n=\"\",e.type){case\"ruleSet\":for(t=e.rule,r=[];t;)t.nestingOperator&&r.push(t.nestingOperator),r.push(this._renderEntity(t)),t=t.rule;n=r.join(\" \");break;case\"selectors\":n=e.selectors.map(this._renderEntity,this).join(\", \");break;case\"rule\":e.tagName&&(n=\"*\"===e.tagName?\"*\":this.escapeIdentifier(e.tagName)),e.id&&(n+=\"#\"+this.escapeIdentifier(e.id)),e.classNames&&(n+=e.classNames.map(function(e){return\".\"+this.escapeIdentifier(e)},this).join(\"\")),e.attrs&&(n+=e.attrs.map(function(e){return e.operator?\"substitute\"===e.valueType?\"[\"+this.escapeIdentifier(e.name)+e.operator+\"$\"+e.value+\"]\":\"[\"+this.escapeIdentifier(e.name)+e.operator+this.escapeStr(e.value)+\"]\":\"[\"+this.escapeIdentifier(e.name)+\"]\"},this).join(\"\")),e.pseudos&&(n+=e.pseudos.map(function(e){return e.valueType?\"selector\"===e.valueType?\":\"+this.escapeIdentifier(e.name)+\"(\"+this._renderEntity(e.value)+\")\":\"substitute\"===e.valueType?\":\"+this.escapeIdentifier(e.name)+\"($\"+e.value+\")\":\"numeric\"===e.valueType?\":\"+this.escapeIdentifier(e.name)+\"(\"+e.value+\")\":\":\"+this.escapeIdentifier(e.name)+\"(\"+this.escapeIdentifier(e.value)+\")\":\":\"+this.escapeIdentifier(e.name)},this).join(\"\"));break;default:throw Error('Unknown entity type: \"'+e.type(NaN))}return n},r.CssSelectorParser=n},{}],157:[function(e,t,r){\"use strict\";var s=e(\"type/value/is\"),l=e(\"type/plain-function/is\"),u=e(\"es5-ext/object/assign\"),c=e(\"es5-ext/object/normalize-options\"),d=e(\"es5-ext/string/#/contains\");(t.exports=function(e,t){var r,n,a,o,i;return arguments.length<2||\"string\"!=typeof e?(o=t,t=e,e=null):o=arguments[2],s(e)?(r=d.call(e,\"c\"),n=d.call(e,\"e\"),a=d.call(e,\"w\")):(r=a=!0,n=!1),i={value:t,configurable:r,enumerable:n,writable:a},o?u(c(o),i):i}).gs=function(e,t,r){var n,a,o,i;return\"string\"!=typeof e?(o=r,r=t,t=e,e=null):o=arguments[3],s(t)?l(t)?s(r)?l(r)||(o=r,r=void 0):r=void 0:(o=t,t=r=void 0):t=void 0,a=s(e)?(n=d.call(e,\"c\"),d.call(e,\"e\")):!(n=!0),i={get:t,set:r,configurable:n,enumerable:a},o?u(c(o),i):i}},{\"es5-ext/object/assign\":178,\"es5-ext/object/normalize-options\":190,\"es5-ext/string/#/contains\":197,\"type/plain-function/is\":242,\"type/value/is\":244}],158:[function(e,t,r){\"use strict\";t.exports=function(){return/\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g}},{}],159:[function(e,t,r){\"use strict\";var o=e(\"../../number/is-nan\"),i=e(\"../../number/to-pos-integer\"),s=e(\"../../object/valid-value\"),l=Array.prototype.indexOf,u=Object.prototype.hasOwnProperty,c=Math.abs,d=Math.floor;t.exports=function(e){var t,r,n,a;if(!o(e))return l.apply(this,arguments);for(r=i(s(this).length),n=arguments[1],t=n=isNaN(n)?0:0<=n?d(n):i(this.length)-d(c(n));t<r;++t)if(u.call(this,t)&&(a=this[t],o(a)))return t;return-1}},{\"../../number/is-nan\":172,\"../../number/to-pos-integer\":176,\"../../object/valid-value\":193}],160:[function(e,t,r){\"use strict\";t.exports=e(\"./is-implemented\")()?Array.from:e(\"./shim\")},{\"./is-implemented\":161,\"./shim\":162}],161:[function(e,t,r){\"use strict\";t.exports=function(){var e,t,r=Array.from;return\"function\"==typeof r&&(t=r(e=[\"raz\",\"dwa\"]),Boolean(t&&t!==e&&\"dwa\"===t[1]))}},{}],162:[function(e,t,r){\"use strict\";var m=e(\"es6-symbol\").iterator,f=e(\"../../function/is-arguments\"),h=e(\"../../function/is-function\"),b=e(\"../../number/to-pos-integer\"),g=e(\"../../object/valid-callable\"),y=e(\"../../object/valid-value\"),v=e(\"../../object/is-value\"),w=e(\"../../string/is-string\"),x=Array.isArray,D=Function.prototype.call,k={configurable:!0,enumerable:!0,writable:!0,value:null},E=Object.defineProperty;t.exports=function(e){var t,r,n,a,o,i,s,l,u,c,d=arguments[1],p=arguments[2];if(e=Object(y(e)),v(d)&&g(d),this&&this!==Array&&h(this))t=this;else{if(!d){if(f(e))return 1!==(o=e.length)?Array.apply(null,e):((a=new Array(1))[0]=e[0],a);if(x(e)){for(a=new Array(o=e.length),r=0;r<o;++r)a[r]=e[r];return a}}a=[]}if(!x(e))if(void 0!==(u=e[m])){for(s=g(u).call(e),t&&(a=new t),l=s.next(),r=0;!l.done;)c=d?D.call(d,p,l.value,r):l.value,t?(k.value=c,E(a,r,k)):a[r]=c,l=s.next(),++r;o=r}else if(w(e)){for(o=e.length,t&&(a=new t),n=r=0;r<o;++r)c=e[r],r+1<o&&55296<=(i=c.charCodeAt(0))&&i<=56319&&(c+=e[++r]),c=d?D.call(d,p,c,n):c,t?(k.value=c,E(a,n,k)):a[n]=c,++n;o=n}if(void 0===o)for(o=b(e.length),t&&(a=new t(o)),r=0;r<o;++r)c=d?D.call(d,p,e[r],r):e[r],t?(k.value=c,E(a,r,k)):a[r]=c;return t&&(k.value=null,a.length=o),a}},{\"../../function/is-arguments\":166,\"../../function/is-function\":167,\"../../number/to-pos-integer\":176,\"../../object/is-value\":184,\"../../object/valid-callable\":192,\"../../object/valid-value\":193,\"../../string/is-string\":200,\"es6-symbol\":203}],163:[function(e,t,r){\"use strict\";var n=e(\"./from\"),a=Array.isArray;t.exports=function(e){return a(e)?e:n(e)}},{\"./from\":160}],164:[function(e,a,t){\"use strict\";var o=e(\"../object/assign\"),i=e(\"../object/is-object\"),s=e(\"../object/is-value\"),l=Error.captureStackTrace;a.exports=function(e){var t=new Error(e),r=arguments[1],n=arguments[2];return s(n)||i(r)&&(n=r,r=null),s(n)&&o(t,n),s(r)&&(t.code=r),l&&l(t,a.exports),t}},{\"../object/assign\":178,\"../object/is-object\":183,\"../object/is-value\":184}],165:[function(e,t,r){\"use strict\";function n(e,t){return t}var a,o,i,s,l,u=e(\"../number/to-pos-integer\");try{Object.defineProperty(n,\"length\",{configurable:!0,writable:!1,enumerable:!1,value:1})}catch(e){}1===n.length?(a={configurable:!0,writable:!1,enumerable:!1},o=Object.defineProperty,t.exports=function(e,t){return t=u(t),e.length===t?e:(a.value=t,o(e,\"length\",a))}):(s=e(\"../object/mixin\"),l=[],i=function(e){var t,r=0;if(l[e])return l[e];for(t=[];e--;)t.push(\"a\"+(++r).toString(36));return new Function(\"fn\",\"return function (\"+t.join(\", \")+\") { return fn.apply(this, arguments); };\")},t.exports=function(e,t){var r;if(t=u(t),e.length===t)return e;r=i(t)(e);try{s(r,e)}catch(e){}return r})},{\"../number/to-pos-integer\":176,\"../object/mixin\":189}],166:[function(e,t,r){\"use strict\";var n=Object.prototype.toString,a=n.call(function(){return arguments}());t.exports=function(e){return n.call(e)===a}},{}],167:[function(e,t,r){\"use strict\";var n=Object.prototype.toString,a=RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);t.exports=function(e){return\"function\"==typeof e&&a(n.call(e))}},{}],168:[function(e,t,r){\"use strict\";t.exports=function(){}},{}],169:[function(e,t,r){\"use strict\";t.exports=e(\"./is-implemented\")()?Math.sign:e(\"./shim\")},{\"./is-implemented\":170,\"./shim\":171}],170:[function(e,t,r){\"use strict\";t.exports=function(){var e=Math.sign;return\"function\"==typeof e&&(1===e(10)&&-1===e(-20))}},{}],171:[function(e,t,r){\"use strict\";t.exports=function(e){return e=Number(e),isNaN(e)||0===e?e:0<e?1:-1}},{}],172:[function(e,t,r){\"use strict\";t.exports=e(\"./is-implemented\")()?Number.isNaN:e(\"./shim\")},{\"./is-implemented\":173,\"./shim\":174}],173:[function(e,t,r){\"use strict\";t.exports=function(){var e=Number.isNaN;return\"function\"==typeof e&&(!e({})&&e(NaN)&&!e(34))}},{}],174:[function(e,t,r){\"use strict\";t.exports=function(e){return e!=e}},{}],175:[function(e,t,r){\"use strict\";var n=e(\"../math/sign\"),a=Math.abs,o=Math.floor;t.exports=function(e){return isNaN(e)?0:0!==(e=Number(e))&&isFinite(e)?n(e)*o(a(e)):e}},{\"../math/sign\":169}],176:[function(e,t,r){\"use strict\";var n=e(\"./to-integer\"),a=Math.max;t.exports=function(e){return a(0,n(e))}},{\"./to-integer\":175}],177:[function(e,t,r){\"use strict\";var s=e(\"./valid-callable\"),l=e(\"./valid-value\"),u=Function.prototype.bind,c=Function.prototype.call,d=Object.keys,p=Object.prototype.propertyIsEnumerable;t.exports=function(o,i){return function(r,n){var e,a=arguments[2],t=arguments[3];return r=Object(l(r)),s(n),e=d(r),t&&e.sort(\"function\"==typeof t?u.call(t,r):void 0),\"function\"!=typeof o&&(o=e[o]),c.call(o,e,function(e,t){return p.call(r,e)?c.call(n,a,r[e],e,r,t):i})}}},{\"./valid-callable\":192,\"./valid-value\":193}],178:[function(e,t,r){\"use strict\";t.exports=e(\"./is-implemented\")()?Object.assign:e(\"./shim\")},{\"./is-implemented\":179,\"./shim\":180}],179:[function(e,t,r){\"use strict\";t.exports=function(){var e,t=Object.assign;return\"function\"==typeof t&&(t(e={foo:\"raz\"},{bar:\"dwa\"},{trzy:\"trzy\"}),e.foo+e.bar+e.trzy===\"razdwatrzy\")}},{}],180:[function(e,t,r){\"use strict\";var i=e(\"../keys\"),s=e(\"../valid-value\"),l=Math.max;t.exports=function(t,r){var n,e,a,o=l(arguments.length,2);for(t=Object(s(t)),a=function(e){try{t[e]=r[e]}catch(e){n=n||e}},e=1;e<o;++e)i(r=arguments[e]).forEach(a);if(void 0!==n)throw n;return t}},{\"../keys\":185,\"../valid-value\":193}],181:[function(e,t,r){\"use strict\";t.exports=e(\"./_iterate\")(\"forEach\")},{\"./_iterate\":177}],182:[function(e,t,r){\"use strict\";t.exports=function(e){return\"function\"==typeof e}},{}],183:[function(e,t,r){\"use strict\";var n=e(\"./is-value\"),a={function:!0,object:!0};t.exports=function(e){return n(e)&&a[typeof e]||!1}},{\"./is-value\":184}],184:[function(e,t,r){\"use strict\";var n=e(\"../function/noop\")();t.exports=function(e){return e!==n&&null!==e}},{\"../function/noop\":168}],185:[function(e,t,r){\"use strict\";t.exports=e(\"./is-implemented\")()?Object.keys:e(\"./shim\")},{\"./is-implemented\":186,\"./shim\":187}],186:[function(e,t,r){\"use strict\";t.exports=function(){try{return Object.keys(\"primitive\"),!0}catch(e){return!1}}},{}],187:[function(e,t,r){\"use strict\";var n=e(\"../is-value\"),a=Object.keys;t.exports=function(e){return a(n(e)?Object(e):e)}},{\"../is-value\":184}],188:[function(e,t,r){\"use strict\";var n=e(\"./valid-callable\"),s=e(\"./for-each\"),l=Function.prototype.call;t.exports=function(e,a){var o={},i=arguments[2];return n(a),s(e,function(e,t,r,n){o[t]=l.call(a,i,e,t,r,n)}),o}},{\"./for-each\":181,\"./valid-callable\":192}],189:[function(e,t,r){\"use strict\";var a=e(\"./valid-value\"),o=Object.defineProperty,i=Object.getOwnPropertyDescriptor,s=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols;t.exports=function(t,r){var n,e=Object(a(r));if(t=Object(a(t)),s(e).forEach(function(e){try{o(t,e,i(r,e))}catch(e){n=e}}),\"function\"==typeof l&&l(e).forEach(function(e){try{o(t,e,i(r,e))}catch(e){n=e}}),void 0!==n)throw n;return t}},{\"./valid-value\":193}],190:[function(e,t,r){\"use strict\";var n=e(\"./is-value\"),a=Array.prototype.forEach,o=Object.create;t.exports=function(e){var t=o(null);return a.call(arguments,function(e){n(e)&&function(e,t){var r;for(r in e)t[r]=e[r]}(Object(e),t)}),t}},{\"./is-value\":184}],191:[function(e,t,r){\"use strict\";var n=Array.prototype.forEach,a=Object.create;t.exports=function(e){var t=a(null);return n.call(arguments,function(e){t[e]=!0}),t}},{}],192:[function(e,t,r){\"use strict\";t.exports=function(e){if(\"function\"!=typeof e)throw new TypeError(e+\" is not a function\");return e}},{}],193:[function(e,t,r){\"use strict\";var n=e(\"./is-value\");t.exports=function(e){if(!n(e))throw new TypeError(\"Cannot use null or undefined\");return e}},{\"./is-value\":184}],194:[function(e,t,r){\"use strict\";var n=e(\"./valid-value\"),a=e(\"./validate-stringifiable\");t.exports=function(e){return a(n(e))}},{\"./valid-value\":193,\"./validate-stringifiable\":195}],195:[function(e,t,r){\"use strict\";var n=e(\"./is-callable\");t.exports=function(e){try{return e&&n(e.toString)?e.toString():String(e)}catch(e){throw new TypeError(\"Passed argument cannot be stringifed\")}}},{\"./is-callable\":182}],196:[function(e,t,r){\"use strict\";var n=e(\"./object/is-callable\");t.exports=function(e){try{return e&&n(e.toString)?e.toString():String(e)}catch(e){return\"<Non-coercible to string value>\"}}},{\"./object/is-callable\":182}],197:[function(e,t,r){\"use strict\";t.exports=e(\"./is-implemented\")()?String.prototype.contains:e(\"./shim\")},{\"./is-implemented\":198,\"./shim\":199}],198:[function(e,t,r){\"use strict\";var n=\"razdwatrzy\";t.exports=function(){return\"function\"==typeof n.contains&&(!0===n.contains(\"dwa\")&&!1===n.contains(\"foo\"))}},{}],199:[function(e,t,r){\"use strict\";var n=String.prototype.indexOf;t.exports=function(e){return-1<n.call(this,e,arguments[1])}},{}],200:[function(e,t,r){\"use strict\";var n=Object.prototype.toString,a=n.call(\"\");t.exports=function(e){return\"string\"==typeof e||e&&\"object\"==typeof e&&(e instanceof String||n.call(e)===a)||!1}},{}],201:[function(e,t,r){\"use strict\";var n=e(\"./safe-to-string\"),a=/[\\n\\r\\u2028\\u2029]/g;t.exports=function(e){var t=n(e);return 100<t.length&&(t=t.slice(0,99)+\"…\"),t=t.replace(a,function(e){return JSON.stringify(e).slice(1,-1)})}},{\"./safe-to-string\":196}],202:[function(U,r,n){(function(M,V){var e,t;e=this,t=function(){\"use strict\";function l(e){return\"function\"==typeof e}var r=Array.isArray?Array.isArray:function(e){return\"[object Array]\"===Object.prototype.toString.call(e)},n=0,t=void 0,a=void 0,i=function(e,t){p[n]=e,p[n+1]=t,2===(n+=2)&&(a?a(m):y())};var e=void 0!==window?window:void 0,o=e||{},s=o.MutationObserver||o.WebKitMutationObserver,u=\"undefined\"==typeof self&&void 0!==M&&\"[object process]\"==={}.toString.call(M),c=\"undefined\"!=typeof Uint8ClampedArray&&\"undefined\"!=typeof importScripts&&\"undefined\"!=typeof MessageChannel;function d(){var e=setTimeout;return function(){return e(m,1)}}var p=new Array(1e3);function m(){for(var e=0;e<n;e+=2){(0,p[e])(p[e+1]),p[e]=void 0,p[e+1]=void 0}n=0}var f,h,b,g,y=void 0;function v(e,t){var r=this,n=new this.constructor(D);void 0===n[x]&&R(n);var a=r._state;if(a){var o=arguments[a-1];i(function(){return O(a,n,o,r._result)})}else z(r,n,e,t);return n}function w(e){if(e&&\"object\"==typeof e&&e.constructor===this)return e;var t=new this(D);return F(t,e),t}y=u?function(){return M.nextTick(m)}:s?(h=0,b=new s(m),g=document.createTextNode(\"\"),b.observe(g,{characterData:!0}),function(){g.data=h=++h%2}):c?((f=new MessageChannel).port1.onmessage=m,function(){return f.port2.postMessage(0)}):(void 0===e&&\"function\"==typeof U?function(){try{var e=Function(\"return this\")().require(\"vertx\");return void 0!==(t=e.runOnLoop||e.runOnContext)?function(){t(m)}:d()}catch(e){return d()}}:d)();var x=Math.random().toString(36).substring(2);function D(){}var k=void 0,E=1,A=2;function j(e,n,a){i(function(t){var r=!1,e=function(e,t,r,n){try{e.call(t,r,n)}catch(e){return e}}(a,n,function(e){r||(r=!0,(n!==e?F:N)(t,e))},function(e){r||(r=!0,S(t,e))},t._label);!r&&e&&(r=!0,S(t,e))},e)}function C(e,t,r){var n,a;t.constructor===e.constructor&&r===v&&t.constructor.resolve===w?(n=e,(a=t)._state===E?N(n,a._result):a._state===A?S(n,a._result):z(a,void 0,function(e){return F(n,e)},function(e){return S(n,e)})):void 0!==r&&l(r)?j(e,t,r):N(e,t)}function F(t,e){if(t===e)S(t,new TypeError(\"You cannot resolve a promise with itself\"));else if(a=typeof(n=e),null===n||\"object\"!=a&&\"function\"!=a)N(t,e);else{var r=void 0;try{r=e.then}catch(e){return void S(t,e)}C(t,e,r)}var n,a}function T(e){e._onerror&&e._onerror(e._result),q(e)}function N(e,t){e._state===k&&(e._result=t,e._state=E,0!==e._subscribers.length&&i(q,e))}function S(e,t){e._state===k&&(e._state=A,e._result=t,i(T,e))}function z(e,t,r,n){var a=e._subscribers,o=a.length;e._onerror=null,a[o]=t,a[o+E]=r,a[o+A]=n,0===o&&e._state&&i(q,e)}function q(e){var t=e._subscribers,r=e._state;if(0!==t.length){for(var n=void 0,a=void 0,o=e._result,i=0;i<t.length;i+=3)n=t[i],a=t[i+r],n?O(r,n,a,o):a(o);e._subscribers.length=0}}function O(e,t,r,n){var a=l(r),o=void 0,i=void 0,s=!0;if(a){try{o=r(n)}catch(e){s=!1,i=e}if(t===o)return void S(t,new TypeError(\"A promises callback cannot return that same promise.\"))}else o=n;t._state!==k||(a&&s?F(t,o):!1===s?S(t,i):e===E?N(t,o):e===A&&S(t,o))}var _=0;function R(e){e[x]=_++,e._state=void 0,e._result=void 0,e._subscribers=[]}var P=(I.prototype._enumerate=function(e){for(var t=0;this._state===k&&t<e.length;t++)this._eachEntry(e[t],t)},I.prototype._eachEntry=function(t,e){var r=this._instanceConstructor,n=r.resolve;if(n===w){var a=void 0,o=void 0,i=!1;try{a=t.then}catch(e){i=!0,o=e}if(a===v&&t._state!==k)this._settledAt(t._state,e,t._result);else if(\"function\"!=typeof a)this._remaining--,this._result[e]=t;else if(r===L){var s=new r(D);i?S(s,o):C(s,t,a),this._willSettleAt(s,e)}else this._willSettleAt(new r(function(e){return e(t)}),e)}else this._willSettleAt(n(t),e)},I.prototype._settledAt=function(e,t,r){var n=this.promise;n._state===k&&(this._remaining--,e===A?S(n,r):this._result[t]=r),0===this._remaining&&N(n,this._result)},I.prototype._willSettleAt=function(e,t){var r=this;z(e,void 0,function(e){return r._settledAt(E,t,e)},function(e){return r._settledAt(A,t,e)})},I);function I(e,t){this._instanceConstructor=e,this.promise=new e(D),this.promise[x]||R(this.promise),r(t)?(this.length=t.length,this._remaining=t.length,this._result=new Array(this.length),0===this.length?N(this.promise,this._result):(this.length=this.length||0,this._enumerate(t),0===this._remaining&&N(this.promise,this._result))):S(this.promise,new Error(\"Array Methods must be provided an Array\"))}var L=(B.prototype.catch=function(e){return this.then(null,e)},B.prototype.finally=function(t){var r=this.constructor;return l(t)?this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})}):this.then(t,t)},B);function B(e){this[x]=_++,this._result=this._state=void 0,this._subscribers=[],D!==e&&(\"function\"!=typeof e&&function(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}(),this instanceof B?function(t,e){try{e(function(e){F(t,e)},function(e){S(t,e)})}catch(e){S(t,e)}}(this,e):function(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}())}return L.prototype.then=v,L.all=function(e){return new P(this,e).promise},L.race=function(a){var o=this;return r(a)?new o(function(e,t){for(var r=a.length,n=0;n<r;n++)o.resolve(a[n]).then(e,t)}):new o(function(e,t){return t(new TypeError(\"You must pass an array to race.\"))})},L.resolve=w,L.reject=function(e){var t=new this(D);return S(t,e),t},L._setScheduler=function(e){a=e},L._setAsap=function(e){i=e},L._asap=i,L.polyfill=function(){var e=void 0;if(void 0!==V)e=V;else if(\"undefined\"!=typeof self)e=self;else try{e=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}var t=e.Promise;if(t){var r=null;try{r=Object.prototype.toString.call(t.resolve())}catch(e){}if(\"[object Promise]\"===r&&!t.cast)return}e.Promise=L},L.Promise=L},\"object\"==typeof n&&void 0!==r?r.exports=t():\"function\"==typeof define&&define.amd?define(t):e.ES6Promise=t()}).call(this,U(\"_process\"),void 0!==a?a:\"undefined\"!=typeof self?self:void 0!==window?window:{})},{_process:236}],203:[function(e,t,r){\"use strict\";t.exports=e(\"./is-implemented\")()?e(\"ext/global-this\").Symbol:e(\"./polyfill\")},{\"./is-implemented\":204,\"./polyfill\":209,\"ext/global-this\":213}],204:[function(e,t,r){\"use strict\";var n=e(\"ext/global-this\"),a={object:!0,symbol:!0};t.exports=function(){var e,t=n.Symbol;if(\"function\"!=typeof t)return!1;e=t(\"test symbol\");try{String(e)}catch(e){return!1}return!!a[typeof t.iterator]&&(!!a[typeof t.toPrimitive]&&!!a[typeof t.toStringTag])}},{\"ext/global-this\":213}],205:[function(e,t,r){\"use strict\";t.exports=function(e){return!!e&&(\"symbol\"==typeof e||!!e.constructor&&(\"Symbol\"===e.constructor.name&&\"Symbol\"===e[e.constructor.toStringTag]))}},{}],206:[function(e,t,r){\"use strict\";var a=e(\"d\"),n=Object.create,o=Object.defineProperty,i=Object.prototype,s=n(null);t.exports=function(e){for(var t,r,n=0;s[e+(n||\"\")];)++n;return s[e+=n||\"\"]=!0,o(i,t=\"@@\"+e,a.gs(null,function(e){r||(r=!0,o(this,t,a(e)),r=!1)})),t}},{d:157}],207:[function(e,t,r){\"use strict\";var n=e(\"d\"),a=e(\"ext/global-this\").Symbol;t.exports=function(e){return Object.defineProperties(e,{hasInstance:n(\"\",a&&a.hasInstance||e(\"hasInstance\")),isConcatSpreadable:n(\"\",a&&a.isConcatSpreadable||e(\"isConcatSpreadable\")),iterator:n(\"\",a&&a.iterator||e(\"iterator\")),match:n(\"\",a&&a.match||e(\"match\")),replace:n(\"\",a&&a.replace||e(\"replace\")),search:n(\"\",a&&a.search||e(\"search\")),species:n(\"\",a&&a.species||e(\"species\")),split:n(\"\",a&&a.split||e(\"split\")),toPrimitive:n(\"\",a&&a.toPrimitive||e(\"toPrimitive\")),toStringTag:n(\"\",a&&a.toStringTag||e(\"toStringTag\")),unscopables:n(\"\",a&&a.unscopables||e(\"unscopables\"))})}},{d:157,\"ext/global-this\":213}],208:[function(e,t,r){\"use strict\";var n=e(\"d\"),a=e(\"../../../validate-symbol\"),o=Object.create(null);t.exports=function(t){return Object.defineProperties(t,{for:n(function(e){return o[e]?o[e]:o[e]=t(String(e))}),keyFor:n(function(e){var t;for(t in a(e),o)if(o[t]===e)return t})})}},{\"../../../validate-symbol\":210,d:157}],209:[function(e,t,r){\"use strict\";var n,a,o,i=e(\"d\"),s=e(\"./validate-symbol\"),l=e(\"ext/global-this\").Symbol,u=e(\"./lib/private/generate-name\"),c=e(\"./lib/private/setup/standard-symbols\"),d=e(\"./lib/private/setup/symbol-registry\"),p=Object.create,m=Object.defineProperties,f=Object.defineProperty;if(\"function\"==typeof l)try{String(l()),o=!0}catch(e){}else l=null;a=function(e){if(this instanceof a)throw new TypeError(\"Symbol is not a constructor\");return n(e)},t.exports=n=function e(t){var r;if(this instanceof e)throw new TypeError(\"Symbol is not a constructor\");return o?l(t):(r=p(a.prototype),t=void 0===t?\"\":String(t),m(r,{__description__:i(\"\",t),__name__:i(\"\",u(t))}))},c(n),d(n),m(a.prototype,{constructor:i(n),toString:i(\"\",function(){return this.__name__})}),m(n.prototype,{toString:i(function(){return\"Symbol (\"+s(this).__description__+\")\"}),valueOf:i(function(){return s(this)})}),f(n.prototype,n.toPrimitive,i(\"\",function(){var e=s(this);return\"symbol\"==typeof e?e:e.toString()})),f(n.prototype,n.toStringTag,i(\"c\",\"Symbol\")),f(a.prototype,n.toStringTag,i(\"c\",n.prototype[n.toStringTag])),f(a.prototype,n.toPrimitive,i(\"c\",n.prototype[n.toPrimitive]))},{\"./lib/private/generate-name\":206,\"./lib/private/setup/standard-symbols\":207,\"./lib/private/setup/symbol-registry\":208,\"./validate-symbol\":210,d:157,\"ext/global-this\":213}],210:[function(e,t,r){\"use strict\";var n=e(\"./is-symbol\");t.exports=function(e){if(!n(e))throw new TypeError(e+\" is not a symbol\");return e}},{\"./is-symbol\":205}],211:[function(e,t,r){\"use strict\";var a,n,o,i,s,l,u,c=e(\"d\"),d=e(\"es5-ext/object/valid-callable\"),p=Function.prototype.apply,m=Function.prototype.call,f=Object.create,h=Object.defineProperty,b=Object.defineProperties,g=Object.prototype.hasOwnProperty,y={configurable:!0,enumerable:!1,writable:!0};n=function(e,t){var r,n;return d(t),a.call(n=this,e,r=function(){o.call(n,e,r),p.call(t,this,arguments)}),r.__eeOnceListener__=t,this},s={on:a=function(e,t){var r;return d(t),g.call(this,\"__ee__\")?r=this.__ee__:(r=y.value=f(null),h(this,\"__ee__\",y),y.value=null),r[e]?\"object\"==typeof r[e]?r[e].push(t):r[e]=[r[e],t]:r[e]=t,this},once:n,off:o=function(e,t){var r,n,a,o;if(d(t),!g.call(this,\"__ee__\"))return this;if(!(r=this.__ee__)[e])return this;if(\"object\"==typeof(n=r[e]))for(o=0;a=n[o];++o)a!==t&&a.__eeOnceListener__!==t||(2===n.length?r[e]=n[o?0:1]:n.splice(o,1));else n!==t&&n.__eeOnceListener__!==t||delete r[e];return this},emit:i=function(e){var t,r,n,a,o;if(g.call(this,\"__ee__\")&&(a=this.__ee__[e]))if(\"object\"==typeof a){for(r=arguments.length,o=new Array(r-1),t=1;t<r;++t)o[t-1]=arguments[t];for(a=a.slice(),t=0;n=a[t];++t)p.call(n,this,o)}else switch(arguments.length){case 1:m.call(a,this);break;case 2:m.call(a,this,arguments[1]);break;case 3:m.call(a,this,arguments[1],arguments[2]);break;default:for(r=arguments.length,o=new Array(r-1),t=1;t<r;++t)o[t-1]=arguments[t];p.call(a,this,o)}}},l={on:c(a),once:c(n),off:c(o),emit:c(i)},u=b({},l),t.exports=r=function(e){return null==e?f(u):b(Object(e),l)},r.methods=s},{d:157,\"es5-ext/object/valid-callable\":192}],212:[function(e,t,r){function n(){if(\"object\"==typeof self&&self)return self;if(\"object\"==typeof window&&window)return window;throw new Error(\"Unable to resolve global `this`\")}t.exports=function(){if(this)return this;try{Object.defineProperty(Object.prototype,\"__global__\",{get:function(){return this},configurable:!0})}catch(e){return n()}try{return __global__?__global__:n()}finally{delete Object.prototype.__global__}}()},{}],213:[function(e,t,r){\"use strict\";t.exports=e(\"./is-implemented\")()?globalThis:e(\"./implementation\")},{\"./implementation\":212,\"./is-implemented\":214}],214:[function(e,t,r){\"use strict\";t.exports=function(){return\"object\"==typeof globalThis&&(!!globalThis&&globalThis.Array===Array)}},{}],215:[function(e,t,r){t.exports=function(e){return!!e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof e.then}},{}],216:[function(e,t,r){\"use strict\";var c=e(\"es5-ext/number/to-pos-integer\"),d=Object.create,p=Object.prototype.hasOwnProperty;t.exports=function(n){var a,o=0,i=1,s=d(null),l=d(null),u=0;return n=c(n),{hit:function(e){var t=l[e],r=++u;if(s[r]=e,l[e]=r,!t){if(++o<=n)return;return e=s[i],a(e),e}if(delete s[t],i===t)for(;!p.call(s,++i););},delete:a=function(e){var t=l[e];if(t&&(delete s[t],delete l[e],--o,i===t)){if(!o)return u=0,void(i=1);for(;!p.call(s,++i););}},clear:function(){o=0,i=1,s=d(null),l=d(null),u=0}}}},{\"es5-ext/number/to-pos-integer\":176}],217:[function(e,t,r){\"use strict\";var p=e(\"es5-ext/array/from\"),a=e(\"es5-ext/object/map\"),m=e(\"es5-ext/object/mixin\"),f=e(\"es5-ext/function/_define-length\"),h=e(\"next-tick\"),b=Array.prototype.slice,g=Function.prototype.apply,y=Object.create;e(\"../lib/registered-extensions\").async=function(e,i){var s,l,u,c=y(null),d=y(null),o=i.memoized,n=i.original;i.memoized=f(function(e){var t=arguments,r=t[t.length-1];return\"function\"==typeof r&&(s=r,t=b.call(t,0,-1)),o.apply(l=this,u=t)},o);try{m(i.memoized,o)}catch(e){}i.on(\"get\",function(t){var r,n,a;if(s){if(c[t])return\"function\"==typeof c[t]?c[t]=[c[t],s]:c[t].push(s),void(s=null);r=s,n=l,a=u,s=l=u=null,h(function(){var e;hasOwnProperty.call(d,t)?(e=d[t],i.emit(\"getasync\",t,a,n),g.call(r,e.context,e.args)):(s=r,l=n,u=a,o.apply(n,a))})}}),i.original=function(){var e,t,r,o;return s?(e=p(arguments),t=function e(t){var r,n,a=e.id;if(null!=a){if(delete e.id,r=c[a],delete c[a],r)return n=p(arguments),i.has(a)&&(t?i.delete(a):(d[a]={context:this,args:n},i.emit(\"setasync\",a,\"function\"==typeof r?1:r.length))),\"function\"==typeof r?o=g.call(r,this,n):r.forEach(function(e){o=g.call(e,this,n)},this),o}else h(g.bind(e,this,arguments))},r=s,s=l=u=null,e.push(t),o=g.call(n,this,e),t.cb=r,s=t,o):g.call(n,this,arguments)},i.on(\"set\",function(e){s?(c[e]?\"function\"==typeof c[e]?c[e]=[c[e],s.cb]:c[e].push(s.cb):c[e]=s.cb,delete s.cb,s.id=e,s=null):i.delete(e)}),i.on(\"delete\",function(e){var t;hasOwnProperty.call(c,e)||d[e]&&(t=d[e],delete d[e],i.emit(\"deleteasync\",e,b.call(t.args,1)))}),i.on(\"clear\",function(){var e=d;d=y(null),i.emit(\"clearasync\",a(e,function(e){return b.call(e.args,1)}))})}},{\"../lib/registered-extensions\":225,\"es5-ext/array/from\":160,\"es5-ext/function/_define-length\":165,\"es5-ext/object/map\":188,\"es5-ext/object/mixin\":189,\"next-tick\":235}],218:[function(e,t,r){\"use strict\";var a=e(\"es5-ext/object/valid-callable\"),o=e(\"es5-ext/object/for-each\"),i=e(\"../lib/registered-extensions\"),s=Function.prototype.apply;i.dispose=function(r,e,t){var n;if(a(r),t.async&&i.async||t.promise&&i.promise)return e.on(\"deleteasync\",n=function(e,t){s.call(r,null,t)}),void e.on(\"clearasync\",function(e){o(e,function(e,t){n(t,e)})});e.on(\"delete\",n=function(e,t){r(t)}),e.on(\"clear\",function(e){o(e,function(e,t){n(t,e)})})}},{\"../lib/registered-extensions\":225,\"es5-ext/object/for-each\":181,\"es5-ext/object/valid-callable\":192}],219:[function(e,t,r){\"use strict\";var s=e(\"es5-ext/array/from\"),l=e(\"es5-ext/object/for-each\"),u=e(\"next-tick\"),c=e(\"is-promise\"),d=e(\"timers-ext/valid-timeout\"),p=e(\"../lib/registered-extensions\"),m=Function.prototype,f=Math.max,h=Math.min,b=Object.create;p.maxAge=function(t,a,o){var r,e,n,i;(t=d(t))&&(r=b(null),e=o.async&&p.async||o.promise&&p.promise?\"async\":\"\",a.on(\"set\"+e,function(e){r[e]=setTimeout(function(){a.delete(e)},t),\"function\"==typeof r[e].unref&&r[e].unref(),i&&(i[e]&&\"nextTick\"!==i[e]&&clearTimeout(i[e]),i[e]=setTimeout(function(){delete i[e]},n),\"function\"==typeof i[e].unref&&i[e].unref())}),a.on(\"delete\"+e,function(e){clearTimeout(r[e]),delete r[e],i&&(\"nextTick\"!==i[e]&&clearTimeout(i[e]),delete i[e])}),o.preFetch&&(n=!0===o.preFetch||isNaN(o.preFetch)?.333:f(h(Number(o.preFetch),1),0))&&(i={},n=(1-n)*t,a.on(\"get\"+e,function(t,r,n){i[t]||(i[t]=\"nextTick\",u(function(){var e;\"nextTick\"===i[t]&&(delete i[t],a.delete(t),o.async&&(r=s(r)).push(m),e=a.memoized.apply(n,r),o.promise&&c(e)&&(\"function\"==typeof e.done?e.done(m,m):e.then(m,m)))}))})),a.on(\"clear\"+e,function(){l(r,function(e){clearTimeout(e)}),r={},i&&(l(i,function(e){\"nextTick\"!==e&&clearTimeout(e)}),i={})}))}},{\"../lib/registered-extensions\":225,\"es5-ext/array/from\":160,\"es5-ext/object/for-each\":181,\"is-promise\":215,\"next-tick\":235,\"timers-ext/valid-timeout\":239}],220:[function(e,t,r){\"use strict\";var i=e(\"es5-ext/number/to-pos-integer\"),s=e(\"lru-queue\"),l=e(\"../lib/registered-extensions\");l.max=function(e,t,r){var n,a,o;(e=i(e))&&(a=s(e),n=r.async&&l.async||r.promise&&l.promise?\"async\":\"\",t.on(\"set\"+n,o=function(e){void 0!==(e=a.hit(e))&&t.delete(e)}),t.on(\"get\"+n,o),t.on(\"delete\"+n,a.delete),t.on(\"clear\"+n,a.clear))}},{\"../lib/registered-extensions\":225,\"es5-ext/number/to-pos-integer\":176,\"lru-queue\":216}],221:[function(e,t,r){\"use strict\";var n=e(\"es5-ext/object/map\"),a=e(\"es5-ext/object/primitive-set\"),o=e(\"es5-ext/object/validate-stringifiable-value\"),i=e(\"es5-ext/to-short-string-representation\"),m=e(\"is-promise\"),f=e(\"next-tick\"),s=Object.create,h=a(\"then\",\"then:finally\",\"done\",\"done:finally\");e(\"../lib/registered-extensions\").promise=function(l,u){var c=s(null),d=s(null),p=s(null);if(!0===l)l=null;else if(l=o(l),!h[l])throw new TypeError(\"'\"+i(l)+\"' is not valid promise mode\");u.on(\"set\",function(r,e,t){var n=!1;if(!m(t))return d[r]=t,void u.emit(\"setasync\",r,1);c[r]=1,p[r]=t;function a(e){var t=c[r];if(n)throw new Error(\"Memoizee error: Detected unordered then|done & finally resolution, which in turn makes proper detection of success/failure impossible (when in 'done:finally' mode)\\nConsider to rely on 'then' or 'done' mode instead.\");t&&(delete c[r],d[r]=e,u.emit(\"setasync\",r,t))}function o(){n=!0,c[r]&&(delete c[r],delete p[r],u.delete(r))}var i=l;if(\"then\"===(i=i||\"then\")){var s=function(){f(o)};\"function\"==typeof(t=t.then(function(e){f(a.bind(this,e))},s)).finally&&t.finally(s)}else if(\"done\"===i){if(\"function\"!=typeof t.done)throw new Error(\"Memoizee error: Retrieved promise does not implement 'done' in 'done' mode\");t.done(a,o)}else if(\"done:finally\"===i){if(\"function\"!=typeof t.done)throw new Error(\"Memoizee error: Retrieved promise does not implement 'done' in 'done:finally' mode\");if(\"function\"!=typeof t.finally)throw new Error(\"Memoizee error: Retrieved promise does not implement 'finally' in 'done:finally' mode\");t.done(a),t.finally(o)}}),u.on(\"get\",function(e,t,r){var n;if(c[e])++c[e];else{n=p[e];var a=function(){u.emit(\"getasync\",e,t,r)};m(n)?\"function\"==typeof n.done?n.done(a):n.then(function(){f(a)}):a()}}),u.on(\"delete\",function(e){if(delete p[e],c[e])delete c[e];else if(hasOwnProperty.call(d,e)){var t=d[e];delete d[e],u.emit(\"deleteasync\",e,[t])}}),u.on(\"clear\",function(){var e=d;d=s(null),c=s(null),p=s(null),u.emit(\"clearasync\",n(e,function(e){return[e]}))})}},{\"../lib/registered-extensions\":225,\"es5-ext/object/map\":188,\"es5-ext/object/primitive-set\":191,\"es5-ext/object/validate-stringifiable-value\":194,\"es5-ext/to-short-string-representation\":201,\"is-promise\":215,\"next-tick\":235}],222:[function(e,t,r){\"use strict\";var o=e(\"d\"),i=e(\"../lib/registered-extensions\"),s=Object.create,l=Object.defineProperties;i.refCounter=function(e,t,r){var n,a;n=s(null),a=r.async&&i.async||r.promise&&i.promise?\"async\":\"\",t.on(\"set\"+a,function(e,t){n[e]=t||1}),t.on(\"get\"+a,function(e){++n[e]}),t.on(\"delete\"+a,function(e){delete n[e]}),t.on(\"clear\"+a,function(){n={}}),l(t.memoized,{deleteRef:o(function(){var e=t.get(arguments);return null!==e&&n[e]?!--n[e]&&(t.delete(e),!0):null}),getRefCount:o(function(){var e=t.get(arguments);return null!==e&&n[e]?n[e]:0})})}},{\"../lib/registered-extensions\":225,d:157}],223:[function(n,e,t){\"use strict\";var a=n(\"es5-ext/object/normalize-options\"),o=n(\"./lib/resolve-length\"),i=n(\"./plain\");e.exports=function(e){var t,r=a(arguments[1]);return r.normalizer||0!==(t=r.length=o(r.length,e.length,r.async))&&(r.primitive?!1===t?r.normalizer=n(\"./normalizers/primitive\"):1<t&&(r.normalizer=n(\"./normalizers/get-primitive-fixed\")(t)):r.normalizer=!1===t?n(\"./normalizers/get\")():1===t?n(\"./normalizers/get-1\")():n(\"./normalizers/get-fixed\")(t)),r.async&&n(\"./ext/async\"),r.promise&&n(\"./ext/promise\"),r.dispose&&n(\"./ext/dispose\"),r.maxAge&&n(\"./ext/max-age\"),r.max&&n(\"./ext/max\"),r.refCounter&&n(\"./ext/ref-counter\"),i(e,r)}},{\"./ext/async\":217,\"./ext/dispose\":218,\"./ext/max\":220,\"./ext/max-age\":219,\"./ext/promise\":221,\"./ext/ref-counter\":222,\"./lib/resolve-length\":226,\"./normalizers/get\":232,\"./normalizers/get-1\":229,\"./normalizers/get-fixed\":230,\"./normalizers/get-primitive-fixed\":231,\"./normalizers/primitive\":233,\"./plain\":234,\"es5-ext/object/normalize-options\":190}],224:[function(e,t,r){\"use strict\";var v=e(\"es5-ext/error/custom\"),w=e(\"es5-ext/function/_define-length\"),x=e(\"d\"),n=e(\"event-emitter\").methods,D=e(\"./resolve-resolve\"),k=e(\"./resolve-normalize\"),E=Function.prototype.apply,A=Function.prototype.call,j=Object.create,C=Object.defineProperties,F=n.on,T=n.emit;t.exports=function(a,r,e){var o,t,i,s,n,l,u,c,d,p,m,f,h,b,g,y=j(null);return t=!1!==r?r:isNaN(a.length)?1:a.length,e.normalizer&&(p=k(e.normalizer),i=p.get,s=p.set,n=p.delete,l=p.clear),null!=e.resolvers&&(g=D(e.resolvers)),b=i?w(function(e){var t,r,n=arguments;if(g&&(n=g(n)),null!==(t=i(n))&&hasOwnProperty.call(y,t))return m&&o.emit(\"get\",t,n,this),y[t];if(r=1===n.length?A.call(a,this,n[0]):E.call(a,this,n),null===t){if(null!==(t=i(n)))throw v(\"Circular invocation\",\"CIRCULAR_INVOCATION\");t=s(n)}else if(hasOwnProperty.call(y,t))throw v(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return y[t]=r,f&&o.emit(\"set\",t,null,r),r},t):0===r?function(){var e;if(hasOwnProperty.call(y,\"data\"))return m&&o.emit(\"get\",\"data\",arguments,this),y.data;if(e=arguments.length?E.call(a,this,arguments):A.call(a,this),hasOwnProperty.call(y,\"data\"))throw v(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return y.data=e,f&&o.emit(\"set\",\"data\",null,e),e}:function(e){var t,r,n=arguments;if(g&&(n=g(arguments)),r=String(n[0]),hasOwnProperty.call(y,r))return m&&o.emit(\"get\",r,n,this),y[r];if(t=1===n.length?A.call(a,this,n[0]):E.call(a,this,n),hasOwnProperty.call(y,r))throw v(\"Circular invocation\",\"CIRCULAR_INVOCATION\");return y[r]=t,f&&o.emit(\"set\",r,null,t),t},o={original:a,memoized:b,profileName:e.profileName,get:function(e){return g&&(e=g(e)),i?i(e):String(e[0])},has:function(e){return hasOwnProperty.call(y,e)},delete:function(e){var t;hasOwnProperty.call(y,e)&&(n&&n(e),t=y[e],delete y[e],h&&o.emit(\"delete\",e,t))},clear:function(){var e=y;l&&l(),y=j(null),o.emit(\"clear\",e)},on:function(e,t){return\"get\"===e?m=!0:\"set\"===e?f=!0:\"delete\"===e&&(h=!0),F.call(this,e,t)},emit:T,updateEnv:function(){a=o.original}},u=i?w(function(e){var t,r=arguments;g&&(r=g(r)),null!==(t=i(r))&&o.delete(t)},t):0===r?function(){return o.delete(\"data\")}:function(e){return g&&(e=g(arguments)[0]),o.delete(e)},c=w(function(){var e,t=arguments;return 0===r?y.data:(g&&(t=g(t)),e=i?i(t):String(t[0]),y[e])}),d=w(function(){var e,t=arguments;return 0===r?o.has(\"data\"):(g&&(t=g(t)),null!==(e=i?i(t):String(t[0]))&&o.has(e))}),C(b,{__memoized__:x(!0),delete:x(u),clear:x(o.clear),_get:x(c),_has:x(d)}),o}},{\"./resolve-normalize\":227,\"./resolve-resolve\":228,d:157,\"es5-ext/error/custom\":164,\"es5-ext/function/_define-length\":165,\"event-emitter\":211}],225:[function(e,t,r){},{}],226:[function(e,t,r){\"use strict\";var n=e(\"es5-ext/number/to-pos-integer\");t.exports=function(e,t,r){return isNaN(e)?0<=t?r&&t?t-1:t:1:!1!==e&&n(e)}},{\"es5-ext/number/to-pos-integer\":176}],227:[function(e,t,r){\"use strict\";var n=e(\"es5-ext/object/valid-callable\");t.exports=function(e){var t;return\"function\"==typeof e?{set:e,get:e}:(t={get:n(e.get)},void 0!==e.set?(t.set=n(e.set),e.delete&&(t.delete=n(e.delete)),e.clear&&(t.clear=n(e.clear))):t.set=t.get,t)}},{\"es5-ext/object/valid-callable\":192}],228:[function(e,t,r){\"use strict\";var n,a=e(\"es5-ext/array/to-array\"),o=e(\"es5-ext/object/is-value\"),i=e(\"es5-ext/object/valid-callable\"),s=Array.prototype.slice;n=function(r){return this.map(function(e,t){return e?e(r[t]):r[t]}).concat(s.call(r,this.length))},t.exports=function(e){return(e=a(e)).forEach(function(e){o(e)&&i(e)}),n.bind(e)}},{\"es5-ext/array/to-array\":163,\"es5-ext/object/is-value\":184,\"es5-ext/object/valid-callable\":192}],229:[function(e,t,r){\"use strict\";var a=e(\"es5-ext/array/#/e-index-of\");t.exports=function(){var t=0,r=[],n=[];return{get:function(e){var t=a.call(r,e[0]);return-1===t?null:n[t]},set:function(e){return r.push(e[0]),n.push(++t),t},delete:function(e){var t=a.call(n,e);-1!==t&&(r.splice(t,1),n.splice(t,1))},clear:function(){r=[],n=[]}}}},{\"es5-ext/array/#/e-index-of\":159}],230:[function(e,t,r){\"use strict\";var u=e(\"es5-ext/array/#/e-index-of\"),n=Object.create;t.exports=function(i){var a=0,s=[[],[]],l=n(null);return{get:function(e){for(var t,r=0,n=s;r<i-1;){if(-1===(t=u.call(n[0],e[r])))return null;n=n[1][t],++r}return-1!==(t=u.call(n[0],e[r]))&&n[1][t]||null},set:function(e){for(var t,r=0,n=s;r<i-1;)-1===(t=u.call(n[0],e[r]))&&(t=n[0].push(e[r])-1,n[1].push([[],[]])),n=n[1][t],++r;return-1===(t=u.call(n[0],e[r]))&&(t=n[0].push(e[r])-1),n[1][t]=++a,l[a]=e,a},delete:function(e){for(var t,r=0,n=s,a=[],o=l[e];r<i-1;){if(-1===(t=u.call(n[0],o[r])))return;a.push(n,t),n=n[1][t],++r}if(-1!==(t=u.call(n[0],o[r]))){for(e=n[1][t],n[0].splice(t,1),n[1].splice(t,1);!n[0].length&&a.length;)t=a.pop(),(n=a.pop())[0].splice(t,1),n[1].splice(t,1);delete l[e]}},clear:function(){s=[[],[]],l=n(null)}}}},{\"es5-ext/array/#/e-index-of\":159}],231:[function(e,t,r){\"use strict\";t.exports=function(a){return a?function(e){for(var t=String(e[0]),r=0,n=a;--n;)t+=\"\u0001\"+e[++r];return t}:function(){return\"\"}}},{}],232:[function(e,t,r){\"use strict\";var u=e(\"es5-ext/array/#/e-index-of\"),n=Object.create;t.exports=function(){var o=0,s=[],l=n(null);return{get:function(e){var t,r=0,n=s,a=e.length;if(0===a)return n[a]||null;if(n=n[a]){for(;r<a-1;){if(-1===(t=u.call(n[0],e[r])))return null;n=n[1][t],++r}return-1!==(t=u.call(n[0],e[r]))&&n[1][t]||null}return null},set:function(e){var t,r=0,n=s,a=e.length;if(0===a)n[a]=++o;else{for(n[a]||(n[a]=[[],[]]),n=n[a];r<a-1;)-1===(t=u.call(n[0],e[r]))&&(t=n[0].push(e[r])-1,n[1].push([[],[]])),n=n[1][t],++r;-1===(t=u.call(n[0],e[r]))&&(t=n[0].push(e[r])-1),n[1][t]=++o}return l[o]=e,o},delete:function(e){var t,r=0,n=s,a=l[e],o=a.length,i=[];if(0===o)delete n[o];else if(n=n[o]){for(;r<o-1;){if(-1===(t=u.call(n[0],a[r])))return;i.push(n,t),n=n[1][t],++r}if(-1===(t=u.call(n[0],a[r])))return;for(e=n[1][t],n[0].splice(t,1),n[1].splice(t,1);!n[0].length&&i.length;)t=i.pop(),(n=i.pop())[0].splice(t,1),n[1].splice(t,1)}delete l[e]},clear:function(){s=[],l=n(null)}}}},{\"es5-ext/array/#/e-index-of\":159}],233:[function(e,t,r){\"use strict\";t.exports=function(e){var t,r,n=e.length;if(!n)return\"\u0002\";for(t=String(e[r=0]);--n;)t+=\"\u0001\"+e[++r];return t}},{}],234:[function(e,t,r){\"use strict\";var o=e(\"es5-ext/object/valid-callable\"),i=e(\"es5-ext/object/for-each\"),s=e(\"./lib/registered-extensions\"),l=e(\"./lib/configure-map\"),u=e(\"./lib/resolve-length\");t.exports=function e(t){var r,n,a;if(o(t),(r=Object(arguments[1])).async&&r.promise)throw new Error(\"Options 'async' and 'promise' cannot be used together\");return hasOwnProperty.call(t,\"__memoized__\")&&!r.force?t:(n=u(r.length,t.length,r.async&&s.async),a=l(t,n,r),i(s,function(e,t){r[t]&&e(r[t],a,r)}),e.__profiler__&&e.__profiler__(a),a.updateEnv(),a.memoized)}},{\"./lib/configure-map\":224,\"./lib/registered-extensions\":225,\"./lib/resolve-length\":226,\"es5-ext/object/for-each\":181,\"es5-ext/object/valid-callable\":192}],235:[function(e,n,t){(function(e,t){\"use strict\";var o,r;o=function(e){if(\"function\"!=typeof e)throw new TypeError(e+\" is not a function\");return e},r=function(e){var t,r,n=document.createTextNode(\"\"),a=0;return new e(function(){var e;if(t)r&&(t=r.concat(t));else{if(!r)return;t=r}if(r=t,t=null,\"function\"==typeof r)return e=r,r=null,void e();for(n.data=a=++a%2;r;)e=r.shift(),r.length||(r=null),e()}).observe(n,{characterData:!0}),function(e){o(e),t?\"function\"==typeof t?t=[t,e]:t.push(e):(t=e,n.data=a=++a%2)}},n.exports=function(){if(\"object\"==typeof e&&e&&\"function\"==typeof e.nextTick)return e.nextTick;if(\"object\"==typeof document&&document){if(\"function\"==typeof MutationObserver)return r(MutationObserver);if(\"function\"==typeof WebKitMutationObserver)return r(WebKitMutationObserver)}return\"function\"==typeof t?function(e){t(o(e))}:\"function\"==typeof setTimeout||\"object\"==typeof setTimeout?function(e){setTimeout(o(e),0)}:null}()}).call(this,e(\"_process\"),e(\"timers\").setImmediate)},{_process:236,timers:237}],236:[function(e,t,r){var n,a,o=t.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function l(t){if(n===setTimeout)return setTimeout(t,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{a=\"function\"==typeof clearTimeout?clearTimeout:s}catch(e){a=s}}();var u,c=[],d=!1,p=-1;function m(){d&&u&&(d=!1,u.length?c=u.concat(c):p=-1,c.length&&f())}function f(){if(!d){var e=l(m);d=!0;for(var t=c.length;t;){for(u=c,c=[];++p<t;)u&&u[p].run();p=-1,t=c.length}u=null,d=!1,function(t){if(a===clearTimeout)return clearTimeout(t);if((a===s||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(t);try{a(t)}catch(e){try{return a.call(null,t)}catch(e){return a.call(this,t)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function b(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new h(e,t)),1!==c.length||d||l(f)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=b,o.addListener=b,o.once=b,o.off=b,o.removeListener=b,o.removeAllListeners=b,o.emit=b,o.prependListener=b,o.prependOnceListener=b,o.listeners=function(e){return[]},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}},{}],237:[function(l,e,u){(function(e,t){var n=l(\"process/browser.js\").nextTick,r=Function.prototype.apply,a=Array.prototype.slice,o={},i=0;function s(e,t){this._id=e,this._clearFn=t}u.setTimeout=function(){return new s(r.call(setTimeout,window,arguments),clearTimeout)},u.setInterval=function(){return new s(r.call(setInterval,window,arguments),clearInterval)},u.clearTimeout=u.clearInterval=function(e){e.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(window,this._id)},u.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},u.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},u._unrefActive=u.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;0<=t&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},u.setImmediate=\"function\"==typeof e?e:function(e){var t=i++,r=!(arguments.length<2)&&a.call(arguments,1);return o[t]=!0,n(function(){o[t]&&(r?e.apply(null,r):e.call(null),u.clearImmediate(t))}),t},u.clearImmediate=\"function\"==typeof t?t:function(e){delete o[e]}}).call(this,l(\"timers\").setImmediate,l(\"timers\").clearImmediate)},{\"process/browser.js\":236,timers:237}],238:[function(e,t,r){\"use strict\";t.exports=2147483647},{}],239:[function(e,t,r){\"use strict\";var n=e(\"es5-ext/number/to-pos-integer\"),a=e(\"./max-timeout\");t.exports=function(e){if(e=n(e),a<e)throw new TypeError(e+\" exceeds maximum possible timeout\");return e}},{\"./max-timeout\":238,\"es5-ext/number/to-pos-integer\":176}],240:[function(e,t,r){\"use strict\";var n=e(\"../prototype/is\");t.exports=function(e){if(\"function\"!=typeof e)return!1;if(!hasOwnProperty.call(e,\"length\"))return!1;try{if(\"number\"!=typeof e.length)return!1;if(\"function\"!=typeof e.call)return!1;if(\"function\"!=typeof e.apply)return!1}catch(e){return!1}return!n(e)}},{\"../prototype/is\":243}],241:[function(e,t,r){\"use strict\";var n=e(\"../value/is\"),a={object:!0,function:!0,undefined:!0};t.exports=function(e){return!!n(e)&&hasOwnProperty.call(a,typeof e)}},{\"../value/is\":244}],242:[function(e,t,r){\"use strict\";var n=e(\"../function/is\"),a=/^\\s*class[\\s{/}]/,o=Function.prototype.toString;t.exports=function(e){return!!n(e)&&!a.test(o.call(e))}},{\"../function/is\":240}],243:[function(e,t,r){\"use strict\";var n=e(\"../object/is\");t.exports=function(e){if(!n(e))return!1;try{return e.constructor?e.constructor.prototype===e:!1}catch(e){return!1}}},{\"../object/is\":241}],244:[function(e,t,r){\"use strict\";t.exports=function(e){return null!=e}},{}],245:[function(e,t,r){(function(e){!function(e){\"use strict\";if(!e.WeakMap){var r=Object.prototype.hasOwnProperty,n=function(e,t,r){Object.defineProperty?Object.defineProperty(e,t,{configurable:!0,writable:!0,value:r}):e[t]=r};e.WeakMap=(n(t.prototype,\"delete\",function(e){if(a(this,\"delete\"),!i(e))return!1;var t=e[this._id];return!(!t||t[0]!==e||(delete e[this._id],0))}),n(t.prototype,\"get\",function(e){if(a(this,\"get\"),i(e)){var t=e[this._id];return t&&t[0]===e?t[1]:void 0}}),n(t.prototype,\"has\",function(e){if(a(this,\"has\"),!i(e))return!1;var t=e[this._id];return!(!t||t[0]!==e)}),n(t.prototype,\"set\",function(e,t){if(a(this,\"set\"),!i(e))throw new TypeError(\"Invalid value used as weak map key\");var r=e[this._id];return r&&r[0]===e?r[1]=t:n(e,this._id,[e,t]),this}),n(t,\"_polyfill\",!0),t)}function t(){if(void 0===this)throw new TypeError(\"Constructor WeakMap requires 'new'\");if(n(this,\"_id\",\"_WeakMap\"+\"_\"+o()+\".\"+o()),0<arguments.length)throw new TypeError(\"WeakMap iterable is not supported\")}function a(e,t){if(!i(e)||!r.call(e,\"_id\"))throw new TypeError(t+\" method called on incompatible receiver \"+typeof e)}function o(){return Math.random().toString().substring(2)}function i(e){return Object(e)===e}}(\"undefined\"!=typeof self?self:void 0!==window?window:void 0!==e?e:this)}).call(this,void 0!==a?a:\"undefined\"!=typeof self?self:void 0!==window?window:{})},{}]},{},[1]);var utils=axe.utils={},s={};function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var l=/\\{\\{.+?\\}\\}/g;function t(e,t,r){\"use strict\";var n,a;for(n=0,a=e.length;n<a;n++)t[r](e[n])}function r(e){this.brand=\"axe\",this.application=\"axeAPI\",this.tagExclude=[\"experimental\"],this.lang=\"en\",this.defaultConfig=e,this._init(),this._defaultLocale=null}r.prototype._setDefaultLocale=function(){if(!this._defaultLocale){for(var e={checks:{},rules:{},failureSummaries:{},incompleteFallbackMessage:\"\",lang:this.lang},t=Object.keys(this.data.checks),r=0;r<t.length;r++){var n=t[r],a=this.data.checks[n].messages,o=a.pass,i=a.fail,s=a.incomplete;e.checks[n]={pass:o,fail:i,incomplete:s}}for(var l=Object.keys(this.data.rules),u=0;u<l.length;u++){var c=l[u],d=this.data.rules[c],p=d.description,m=d.help;e.rules[c]={description:p,help:m}}for(var f=Object.keys(this.data.failureSummaries),h=0;h<f.length;h++){var b=f[h],g=this.data.failureSummaries[b].failureMessage;e.failureSummaries[b]={failureMessage:g}}e.incompleteFallbackMessage=this.data.incompleteFallbackMessage,this._defaultLocale=e}},r.prototype._resetLocale=function(){var e=this._defaultLocale;e&&this.applyLocale(e)};function m(a,e,o){return o.performanceTimer&&axe.utils.performanceTimer.mark(\"mark_rule_start_\"+a.id),function(r,n){a.run(e,o,function(e){r(e)},function(e){if(o.debug)n(e);else{var t=Object.assign(new h(a),{result:axe.constants.CANTTELL,description:\"An error occured while running this rule\",message:e.message,stack:e.stack,error:e,errorNode:e.errorNode});r(t)}})}}function o(e,t,r){var n=e.brand,a=e.application,o=e.lang;return axe.constants.helpUrlBase+n+\"/\"+(r||axe.version.substring(0,axe.version.lastIndexOf(\".\")))+\"/\"+t+\"?application=\"+encodeURIComponent(a)+(o&&\"en\"!==o?\"&lang=\"+encodeURIComponent(o):\"\")}function c(e){\"use strict\";this.id=e.id,this.data=null,this.relatedNodes=[],this.result=null}function n(e){\"use strict\";return\"string\"==typeof e?new Function(\"return \"+e+\";\")():e}function i(e){e&&(this.id=e.id,this.configure(e))}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function d(e,t,r){\"use strict\";var n,a;e.frames=e.frames||[];var o=document.querySelectorAll(r.shift());e:for(var i=0,s=o.length;i<s;i++){a=o[i];for(var l=0,u=e.frames.length;l<u;l++)if(e.frames[l].node===a){e.frames[l][t].push(r);break e}n={node:a,include:[],exclude:[]},r&&n[t].push(r),e.frames.push(n)}}function p(e,t){\"use strict\";for(var r,n,a=[],o=0,i=e[t].length;o<i;o++){if(\"string\"==typeof(r=e[t][o])){n=Array.from(document.querySelectorAll(r)),a=a.concat(n.map(function(e){return axe.utils.getNodeFromTree(e)}));break}!r||!r.length||r instanceof Node?r instanceof Node&&(r.documentElement instanceof Node?a.push(e.flatTree[0]):a.push(axe.utils.getNodeFromTree(r))):1<r.length?d(e,t,r):(n=Array.from(document.querySelectorAll(r[0])),a=a.concat(n.map(function(e){return axe.utils.getNodeFromTree(e)})))}return a.filter(function(e){return e})}function f(e){\"use strict\";var t=this;this.frames=[],this.initiator=!e||\"boolean\"!=typeof e.initiator||e.initiator,this.page=!1,e=function(e){\"use strict\";if(e&&\"object\"===W(e)||e instanceof NodeList){if(e instanceof Node)return{include:[e],exclude:[]};if(e.hasOwnProperty(\"include\")||e.hasOwnProperty(\"exclude\"))return{include:e.include&&+e.include.length?e.include:[document],exclude:e.exclude||[]};if(e.length===+e.length)return{include:e,exclude:[]}}return\"string\"==typeof e?{include:[e],exclude:[]}:{include:[document],exclude:[]}}(e),this.flatTree=axe.utils.getFlattenedTree(function(e){for(var t=e.include,r=e.exclude,n=Array.from(t).concat(Array.from(r)),a=0;a<n.length;++a){var o=n[a];if(o instanceof Element)return o.ownerDocument.documentElement;if(o instanceof Document)return o.documentElement}return document.documentElement}(e)),this.exclude=e.exclude,this.include=e.include,this.include=p(this,\"include\"),this.exclude=p(this,\"exclude\"),axe.utils.select(\"frame, iframe\",this).forEach(function(e){Ze(e,t)&&function(e,t){\"use strict\";axe.utils.isHidden(t)||axe.utils.findBy(e,\"node\",t)||e.push({node:t,include:[],exclude:[]})}(t.frames,e.actualNode)}),1===this.include.length&&this.include[0].actualNode===document.documentElement&&(this.page=!0);var r=function(e){\"use strict\";if(0===e.include.length){if(0===e.frames.length){var t=axe.utils.respondable.isInFrame()?\"frame\":\"page\";return new Error(\"No elements found for include in \"+t+\" Context\")}e.frames.forEach(function(e,t){if(0===e.include.length)return new Error(\"No elements found for include in Context of frame \"+t)})}}(this);if(r instanceof Error)throw r;Array.isArray(this.include)||(this.include=Array.from(this.include)),this.include.sort(axe.utils.nodeSorter)}function h(e){\"use strict\";this.id=e.id,this.result=axe.constants.NA,this.pageLevel=e.pageLevel,this.impact=null,this.nodes=[]}function b(e,t){\"use strict\";this._audit=t,this.id=e.id,this.selector=e.selector||\"*\",this.excludeHidden=\"boolean\"!=typeof e.excludeHidden||e.excludeHidden,this.enabled=\"boolean\"!=typeof e.enabled||e.enabled,this.pageLevel=\"boolean\"==typeof e.pageLevel&&e.pageLevel,this.any=e.any||[],this.all=e.all||[],this.none=e.none||[],this.tags=e.tags||[],this.preload=!!e.preload,e.matches&&(this.matches=n(e.matches))}function g(e){if(e.length){var r=!1,n={};return e.forEach(function(e){var t=e.results.filter(function(e){return e});(n[e.type]=t).length&&(r=!0)}),r?n:null}}function y(e){\"use strict\";var n=[\"any\",\"all\",\"none\"],t=e.nodes.filter(function(t){var r=0;return n.forEach(function(e){t[e]=function(e){\"use strict\";return e.filter(function(e){return!0!==e.filtered})}(t[e]),r+=t[e].length}),0<r});return e.pageLevel&&t.length&&(t=[t.reduce(function(t,r){if(t)return n.forEach(function(e){t[e].push.apply(t[e],r[e])}),t})]),t}function v(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function x(e,t,r){return t&&w(e.prototype,t),r&&w(e,r),e}r.prototype._applyCheckLocale=function(e){for(var t,r,n,a,o=Object.keys(e),i=0;i<o.length;i++){var s=o[i];if(!this.data.checks[s])throw new Error('Locale provided for unknown check: \"'.concat(s,'\"'));this.data.checks[s]=(t=this.data.checks[s],r=e[s],a=n=void 0,n=r.pass,a=r.fail,\"string\"==typeof n&&l.test(n)&&(n=axe.imports.doT.compile(n)),\"string\"==typeof a&&l.test(a)&&(a=axe.imports.doT.compile(a)),Y({},t,{messages:{pass:n||t.messages.pass,fail:a||t.messages.fail,incomplete:\"object\"===W(t.messages.incomplete)?Y({},t.messages.incomplete,{},r.incomplete):r.incomplete}}))}},r.prototype._applyRuleLocale=function(e){for(var t,r,n,a,o=Object.keys(e),i=0;i<o.length;i++){var s=o[i];if(!this.data.rules[s])throw new Error('Locale provided for unknown rule: \"'.concat(s,'\"'));this.data.rules[s]=(t=this.data.rules[s],r=e[s],a=n=void 0,n=r.help,a=r.description,\"string\"==typeof n&&l.test(n)&&(n=axe.imports.doT.compile(n)),\"string\"==typeof a&&l.test(a)&&(a=axe.imports.doT.compile(a)),Y({},t,{help:n||t.help,description:a||t.description}))}},r.prototype._applyFailureSummaries=function(e){for(var t,r,n,a=Object.keys(e),o=0;o<a.length;o++){var i=a[o];if(!this.data.failureSummaries[i])throw new Error('Locale provided for unknown failureMessage: \"'.concat(i,'\"'));this.data.failureSummaries[i]=(t=this.data.failureSummaries[i],r=e[i],n=void 0,\"string\"==typeof(n=r.failureMessage)&&l.test(n)&&(n=axe.imports.doT.compile(n)),Y({},t,{failureMessage:n||t.failureMessage}))}},r.prototype.applyLocale=function(e){var t,r;this._setDefaultLocale(),e.checks&&this._applyCheckLocale(e.checks),e.rules&&this._applyRuleLocale(e.rules),e.failureSummaries&&this._applyFailureSummaries(e.failureSummaries,\"failureSummaries\"),e.incompleteFallbackMessage&&(this.data.incompleteFallbackMessage=(t=this.data.incompleteFallbackMessage,\"string\"==typeof(r=e.incompleteFallbackMessage)&&l.test(r)&&(r=axe.imports.doT.compile(r)),r||t)),e.lang&&(this.lang=e.lang)},r.prototype._init=function(){var e=function(e){\"use strict\";var t;return e?(t=axe.utils.clone(e)).commons=e.commons:t={},t.reporter=t.reporter||null,t.rules=t.rules||[],t.checks=t.checks||[],t.data=Y({checks:{},rules:{}},t.data),t}(this.defaultConfig);axe.commons=e.commons,this.lang=e.lang||\"en\",this.reporter=e.reporter,this.commands={},this.rules=[],this.checks={},t(e.rules,this,\"addRule\"),t(e.checks,this,\"addCheck\"),this.data={},this.data.checks=e.data&&e.data.checks||{},this.data.rules=e.data&&e.data.rules||{},this.data.failureSummaries=e.data&&e.data.failureSummaries||{},this.data.incompleteFallbackMessage=e.data&&e.data.incompleteFallbackMessage||\"\",this._constructHelpUrls()},r.prototype.registerCommand=function(e){\"use strict\";this.commands[e.id]=e.callback},r.prototype.addRule=function(e){\"use strict\";e.metadata&&(this.data.rules[e.id]=e.metadata);var t=this.getRule(e.id);t?t.configure(e):this.rules.push(new b(e,this))},r.prototype.addCheck=function(e){\"use strict\";var t=e.metadata;\"object\"===W(t)&&(this.data.checks[e.id]=t,\"object\"===W(t.messages)&&Object.keys(t.messages).filter(function(e){return t.messages.hasOwnProperty(e)&&\"string\"==typeof t.messages[e]}).forEach(function(e){0===t.messages[e].indexOf(\"function\")&&(t.messages[e]=new Function(\"return \"+t.messages[e]+\";\")())})),this.checks[e.id]?this.checks[e.id].configure(e):this.checks[e.id]=new i(e)},r.prototype.run=function(o,i,s,l){\"use strict\";this.normalizeOptions(i),axe._selectCache=[];var e,r,n,t=(e=this.rules,r=o,n=i,e.reduce(function(e,t){return axe.utils.ruleShouldRun(t,r,n)&&(t.preload?e.later.push(t):e.now.push(t)),e},{now:[],later:[]})),a=t.now,u=t.later,c=axe.utils.queue();a.forEach(function(e){c.defer(m(e,o,i))});var d=axe.utils.queue();u.length&&d.defer(function(t){axe.utils.preload(i).then(function(e){return t(e)}).catch(function(e){console.warn(\"Couldn't load preload assets: \",e),t(void 0)})});var p=axe.utils.queue();p.defer(c),p.defer(d),p.then(function(e){var t=e.pop();if(t&&t.length){var r=t[0];r&&(o=Y({},o,{},r))}var n=e[0];if(!u.length)return axe._selectCache=void 0,void s(n.filter(function(e){return!!e}));var a=axe.utils.queue();u.forEach(function(e){var t=m(e,o,i);a.defer(t)}),a.then(function(e){axe._selectCache=void 0,s(n.concat(e).filter(function(e){return!!e}))}).catch(l)}).catch(l)},r.prototype.after=function(e,r){\"use strict\";var n=this.rules;return e.map(function(e){var t=axe.utils.findBy(n,\"id\",e.id);if(!t)throw new Error(\"Result for unknown rule. You may be running mismatch axe-core versions\");return t.after(e,r)})},r.prototype.getRule=function(t){return this.rules.find(function(e){return e.id===t})},r.prototype.normalizeOptions=function(e){\"use strict\";var t=[],r=[];if(this.rules.forEach(function(e){r.push(e.id),e.tags.forEach(function(e){t.includes(e)||t.push(e)})}),\"object\"===W(e.runOnly)){if(Array.isArray(e.runOnly)){var n=e.runOnly.find(function(e){return t.includes(e)}),a=e.runOnly.find(function(e){return r.includes(e)});if(n&&a)throw new Error(\"runOnly cannot be both rules and tags\");e.runOnly=a?{type:\"rule\",values:e.runOnly}:{type:\"tag\",values:e.runOnly}}var o=e.runOnly;if(o.value&&!o.values&&(o.values=o.value,delete o.value),!Array.isArray(o.values)||0===o.values.length)throw new Error(\"runOnly.values must be a non-empty array\");if([\"rule\",\"rules\"].includes(o.type))o.type=\"rule\",o.values.forEach(function(e){if(!r.includes(e))throw new Error(\"unknown rule `\"+e+\"` in options.runOnly\")});else{if(![\"tag\",\"tags\",void 0].includes(o.type))throw new Error(\"Unknown runOnly type '\".concat(o.type,\"'\"));o.type=\"tag\";var i=o.values.filter(function(e){return!t.includes(e)});0!==i.length&&axe.log(\"Could not find tags `\"+i.join(\"`, `\")+\"`\")}}return\"object\"===W(e.rules)&&Object.keys(e.rules).forEach(function(e){if(!r.includes(e))throw new Error(\"unknown rule `\"+e+\"` in options.rules\")}),e},r.prototype.setBranding=function(e){\"use strict\";var t={brand:this.brand,application:this.application};e&&e.hasOwnProperty(\"brand\")&&e.brand&&\"string\"==typeof e.brand&&(this.brand=e.brand),e&&e.hasOwnProperty(\"application\")&&e.application&&\"string\"==typeof e.application&&(this.application=e.application),this._constructHelpUrls(t)},r.prototype._constructHelpUrls=function(){var r=this,n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null,a=(axe.version.match(/^[1-9][0-9]*\\.[0-9]+/)||[\"x.y\"])[0];this.rules.forEach(function(e){r.data.rules[e.id]||(r.data.rules[e.id]={});var t=r.data.rules[e.id];(\"string\"!=typeof t.helpUrl||n&&t.helpUrl===o(n,e.id,a))&&(t.helpUrl=o(r,e.id,a))})},r.prototype.resetRulesAndChecks=function(){\"use strict\";this._init(),this._resetLocale()},function(){\"use strict\";var r={},e={set:function(e,t){r[e]=t},get:function(e){return r[e]},clear:function(){r={}}};axe._cache=e}(),i.prototype.enabled=!0,i.prototype.run=function(t,e,r,n,a){\"use strict\";var o=(e=e||{}).hasOwnProperty(\"enabled\")?e.enabled:this.enabled,i=e.options||this.options;if(o){var s,l=new c(this),u=axe.utils.checkHelper(l,e,n,a);try{s=this.evaluate.call(u,t.actualNode,i,t,r)}catch(e){return t&&t.actualNode&&(e.errorNode=new le(t.actualNode).toJSON()),void a(e)}u.isAsync||(l.result=s,n(l))}else n(null)},i.prototype.runSync=function(t,e,r){var n=(e=e||{}).enabled;if(!(void 0===n?this.enabled:n))return null;var a,o=e.options||this.options,i=new c(this),s=axe.utils.checkHelper(i,e);s.async=function(){throw new Error(\"Cannot run async check while in a synchronous run\")};try{a=this.evaluate.call(s,t.actualNode,o,t,r)}catch(e){throw t&&t.actualNode&&(e.errorNode=new le(t.actualNode).toJSON()),e}return i.result=a,i},i.prototype.configure=function(t){var r=this;[\"options\",\"enabled\"].filter(function(e){return t.hasOwnProperty(e)}).forEach(function(e){return r[e]=t[e]}),[\"evaluate\",\"after\"].filter(function(e){return t.hasOwnProperty(e)}).forEach(function(e){return r[e]=n(t[e])})},b.prototype.matches=function(){\"use strict\";return!0},b.prototype.gather=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},r=\"mark_gather_start_\"+this.id,n=\"mark_gather_end_\"+this.id,a=\"mark_isHidden_start_\"+this.id,o=\"mark_isHidden_end_\"+this.id;t.performanceTimer&&axe.utils.performanceTimer.mark(r);var i=axe.utils.select(this.selector,e);return this.excludeHidden&&(t.performanceTimer&&axe.utils.performanceTimer.mark(a),i=i.filter(function(e){return!axe.utils.isHidden(e.actualNode)}),t.performanceTimer&&(axe.utils.performanceTimer.mark(o),axe.utils.performanceTimer.measure(\"rule_\"+this.id+\"#gather_axe.utils.isHidden\",a,o))),t.performanceTimer&&(axe.utils.performanceTimer.mark(n),axe.utils.performanceTimer.measure(\"rule_\"+this.id+\"#gather\",r,n)),i},b.prototype.runChecks=function(t,a,o,i,r,e){\"use strict\";var s=this,l=axe.utils.queue();this[t].forEach(function(e){var r=s._audit.checks[e.id||e],n=axe.utils.getCheckOption(r,s.id,o);l.defer(function(e,t){r.run(a,n,i,e,t)})}),l.then(function(e){e=e.filter(function(e){return e}),r({type:t,results:e})}).catch(e)},b.prototype.runChecksSync=function(e,n,a,o){\"use strict\";var i=this,s=[];return this[e].forEach(function(e){var t=i._audit.checks[e.id||e],r=axe.utils.getCheckOption(t,i.id,a);s.push(t.runSync(n,r,o))}),{type:e,results:s=s.filter(function(e){return e})}},b.prototype.run=function(a){var o=this,i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},e=2<arguments.length?arguments[2]:void 0,t=3<arguments.length?arguments[3]:void 0;i.performanceTimer&&this._trackPerformance();var r,s=axe.utils.queue(),l=new h(this);try{r=this.gatherAndMatchNodes(a,i)}catch(e){return void t(new u({cause:e,ruleId:this.id}))}i.performanceTimer&&this._logGatherPerformance(r),r.forEach(function(n){s.defer(function(r,t){var e=axe.utils.queue();[\"any\",\"all\",\"none\"].forEach(function(r){e.defer(function(e,t){o.runChecks(r,n,i,a,e,t)})}),e.then(function(e){var t=g(e);t&&(t.node=new axe.utils.DqElement(n.actualNode,i),l.nodes.push(t)),r()}).catch(function(e){return t(e)})})}),s.defer(function(e){return setTimeout(e,0)}),i.performanceTimer&&this._logRulePerformance(),s.then(function(){return e(l)}).catch(function(e){return t(e)})},b.prototype.runSync=function(n){var a=this,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};o.performanceTimer&&this._trackPerformance();var e,i=new h(this);try{e=this.gatherAndMatchNodes(n,o)}catch(e){throw new u({cause:e,ruleId:this.id})}return o.performanceTimer&&this._logGatherPerformance(e),e.forEach(function(t){var r=[];[\"any\",\"all\",\"none\"].forEach(function(e){r.push(a.runChecksSync(e,t,o,n))});var e=g(r);e&&(e.node=t.actualNode?new axe.utils.DqElement(t.actualNode,o):null,i.nodes.push(e))}),o.performanceTimer&&this._logRulePerformance(),i},b.prototype._trackPerformance=function(){this._markStart=\"mark_rule_start_\"+this.id,this._markEnd=\"mark_rule_end_\"+this.id,this._markChecksStart=\"mark_runchecks_start_\"+this.id,this._markChecksEnd=\"mark_runchecks_end_\"+this.id},b.prototype._logGatherPerformance=function(e){axe.log(\"gather (\",e.length,\"):\",axe.utils.performanceTimer.timeElapsed()+\"ms\"),axe.utils.performanceTimer.mark(this._markChecksStart)},b.prototype._logRulePerformance=function(){axe.utils.performanceTimer.mark(this._markChecksEnd),axe.utils.performanceTimer.mark(this._markEnd),axe.utils.performanceTimer.measure(\"runchecks_\"+this.id,this._markChecksStart,this._markChecksEnd),axe.utils.performanceTimer.measure(\"rule_\"+this.id,this._markStart,this._markEnd)},b.prototype.gatherAndMatchNodes=function(t,e){var r=this,n=\"mark_matches_start_\"+this.id,a=\"mark_matches_end_\"+this.id,o=this.gather(t,e);return e.performanceTimer&&axe.utils.performanceTimer.mark(n),o=o.filter(function(e){return r.matches(e.actualNode,e,t)}),e.performanceTimer&&(axe.utils.performanceTimer.mark(a),axe.utils.performanceTimer.measure(\"rule_\"+this.id+\"#matches\",n,a)),o},b.prototype.after=function(a,o){\"use strict\";var e=function(r){\"use strict\";return axe.utils.getAllChecks(r).map(function(e){var t=r._audit.checks[e.id||e];return t&&\"function\"==typeof t.after?t:null}).filter(Boolean)}(this),i=this.id;return e.forEach(function(e){var t=function(e,t){\"use strict\";var r=[];return e.forEach(function(e){axe.utils.getAllChecks(e).forEach(function(e){e.id===t&&r.push(e)})}),r}(a.nodes,e.id),r=axe.utils.getCheckOption(e,i,o),n=e.after(t,r);t.forEach(function(e){-1===n.indexOf(e)&&(e.filtered=!0)})}),a.nodes=y(a),a},b.prototype.configure=function(e){\"use strict\";e.hasOwnProperty(\"selector\")&&(this.selector=e.selector),e.hasOwnProperty(\"excludeHidden\")&&(this.excludeHidden=\"boolean\"!=typeof e.excludeHidden||e.excludeHidden),e.hasOwnProperty(\"enabled\")&&(this.enabled=\"boolean\"!=typeof e.enabled||e.enabled),e.hasOwnProperty(\"pageLevel\")&&(this.pageLevel=\"boolean\"==typeof e.pageLevel&&e.pageLevel),e.hasOwnProperty(\"any\")&&(this.any=e.any),e.hasOwnProperty(\"all\")&&(this.all=e.all),e.hasOwnProperty(\"none\")&&(this.none=e.none),e.hasOwnProperty(\"tags\")&&(this.tags=e.tags),e.hasOwnProperty(\"matches\")&&(\"string\"==typeof e.matches?this.matches=new Function(\"return \"+e.matches+\";\")():this.matches=e.matches)};var D=/[\\t\\r\\n\\f]/g,k=(x(E,[{key:\"attr\",value:function(){throw new Error('VirtualNode class must have a \"attr\" function')}},{key:\"hasAttr\",value:function(){throw new Error('VirtualNode class must have a \"hasAttr\" function')}},{key:\"hasClass\",value:function(e){var t=this.attr(\"class\");if(!t)return!1;var r=\" \"+e+\" \";return 0<=(\" \"+t+\" \").replace(D,\" \").indexOf(r)}},{key:\"props\",get:function(){throw new Error('VirtualNode class must have a \"props\" object consisting of \"nodeType\" and \"nodeName\" properties')}}]),E);function E(){v(this,E),this.children=[],this.parent=null}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function v(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function x(e,t,r){return t&&w(e.prototype,t),r&&w(e,r),e}function A(e,t){return!t||\"object\"!==W(t)&&\"function\"!=typeof t?j(e):t}function j(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function F(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}function T(e,t){return(T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}axe.AbstractVirtualNode=k;var N,S,z=(N=axe.AbstractVirtualNode,F(q,N),x(q,[{key:\"attr\",value:function(e){return this._attrs[e]||null}},{key:\"hasAttr\",value:function(e){return void 0!==this._attrs[e]}},{key:\"props\",get:function(){return this._props}}]),q);function q(e){var t,r,n,a;return v(this,q),(t=A(this,C(q).call(this)))._props=function(e){var t=e.nodeName,r=e.nodeType,n=void 0===r?1:r;axe.utils.assert(1===n,\"nodeType has to be undefined or 1, got '\".concat(n,\"'\")),axe.utils.assert(\"string\"==typeof t,\"nodeName has to be a string, got '\".concat(t,\"'\"));var a=Y({},e,{nodeType:n,nodeName:t.toLowerCase()});return delete a.attributes,Object.freeze(a)}(e),t._attrs=(r=e.attributes,n=void 0===r?{}:r,a={htmlFor:\"for\",className:\"class\"},Object.keys(n).reduce(function(e,t){var r=n[t];return axe.utils.assert(\"object\"!==W(r)||null===r,\"expects attributes not to be an object, '\".concat(t,\"' was\")),void 0!==r&&(e[a[t]||t]=null!==r?String(r):null),e},{})),t}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function v(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function x(e,t,r){return t&&w(e.prototype,t),r&&w(e,r),e}function A(e,t){return!t||\"object\"!==W(t)&&\"function\"!=typeof t?j(e):t}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function j(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function F(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}function T(e,t){return(T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}axe.SerialVirtualNode=z;var O,K=(O=axe.AbstractVirtualNode,F(_,O),x(_,[{key:\"attr\",value:function(e){return\"function\"!=typeof this.actualNode.getAttribute?null:this.actualNode.getAttribute(e)}},{key:\"hasAttr\",value:function(e){return\"function\"==typeof this.actualNode.hasAttribute&&this.actualNode.hasAttribute(e)}},{key:\"getComputedStylePropertyValue\",value:function(e){var t=\"computedStyle_\"+e;return this._cache.hasOwnProperty(t)||(this._cache.hasOwnProperty(\"computedStyle\")||(this._cache.computedStyle=window.getComputedStyle(this.actualNode)),this._cache[t]=this._cache.computedStyle.getPropertyValue(e)),this._cache[t]}},{key:\"props\",get:function(){var e=this.actualNode,t=e.nodeType,r=e.nodeName,n=e.id,a=e.type,o=e.multiple;return{nodeType:t,nodeName:this._isXHTML?r:r.toLowerCase(),id:n,type:a,multiple:o}}},{key:\"isFocusable\",get:function(){return this._cache.hasOwnProperty(\"isFocusable\")||(this._cache.isFocusable=axe.commons.dom.isFocusable(this.actualNode)),this._cache.isFocusable}},{key:\"tabbableElements\",get:function(){return this._cache.hasOwnProperty(\"tabbableElements\")||(this._cache.tabbableElements=axe.commons.dom.getTabbableElements(this)),this._cache.tabbableElements}},{key:\"clientRects\",get:function(){return this._cache.hasOwnProperty(\"clientRects\")||(this._cache.clientRects=Array.from(this.actualNode.getClientRects()).filter(function(e){return 0<e.width})),this._cache.clientRects}},{key:\"boundingClientRect\",get:function(){return this._cache.hasOwnProperty(\"boundingClientRect\")||(this._cache.boundingClientRect=this.actualNode.getBoundingClientRect()),this._cache.boundingClientRect}}]),_);function _(e,t,r){var n;return v(this,_),(n=A(this,C(_).call(this))).shadowId=r,n.children=[],n.actualNode=e,n.parent=t,n._isHidden=null,n._cache={},void 0===S&&(S=axe.utils.isXHTML(e.ownerDocument)),n._isXHTML=S,axe._cache.get(\"nodeMap\")&&axe._cache.get(\"nodeMap\").set(e,j(n)),n}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function R(t,r){\"use strict\";if(t=t||function(){},r=r||axe.log,!axe._audit)throw new Error(\"No audit configured\");var n=axe.utils.queue(),a=[];Object.keys(axe.plugins).forEach(function(e){n.defer(function(t){function r(e){a.push(e),t()}try{axe.plugins[e].cleanup(t,r)}catch(e){r(e)}})});var e=axe.utils.getFlattenedTree(document.body);axe.utils.querySelectorAll(e,\"iframe, frame\").forEach(function(r){n.defer(function(e,t){return axe.utils.sendCommandToFrame(r.actualNode,{command:\"cleanup-plugin\"},e,t)})}),n.then(function(e){0===a.length?t(e):r(a)}).catch(r)}function X(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(a)throw o}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function P(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function I(e,t){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(a)throw o}}return r}}function L(e){if(Array.isArray(e))return e}function B(e,t,r){\"use strict\";function n(e){e instanceof Error==!1&&(e=new Error(e)),r(e)}var a=r,o=e&&e.context||{};o.hasOwnProperty(\"include\")&&!o.include.length&&(o.include=[document]);var i=e&&e.options||{};switch(e.command){case\"rules\":return $(o,i,function(e,t){a(e),t()},n);case\"cleanup-plugin\":return R(a,n);default:if(axe._audit&&axe._audit.commands&&axe._audit.commands[e.command])return axe._audit.commands[e.command](e,r)}}function M(e){\"use strict\";this._run=e.run,this._collect=e.collect,this._registry={},e.commands.forEach(function(e){axe._audit.registerCommand(e)})}axe.VirtualNode=K,function(axe){var o={helpUrlBase:\"https://dequeuniversity.com/rules/\",results:[],resultGroups:[],resultGroupMap:{},impact:Object.freeze([\"minor\",\"moderate\",\"serious\",\"critical\"]),preload:Object.freeze({assets:[\"cssom\",\"media\"],timeout:1e4})};[{name:\"NA\",value:\"inapplicable\",priority:0,group:\"inapplicable\"},{name:\"PASS\",value:\"passed\",priority:1,group:\"passes\"},{name:\"CANTTELL\",value:\"cantTell\",priority:2,group:\"incomplete\"},{name:\"FAIL\",value:\"failed\",priority:3,group:\"violations\"}].forEach(function(e){var t=e.name,r=e.value,n=e.priority,a=e.group;o[t]=r,o[t+\"_PRIO\"]=n,o[t+\"_GROUP\"]=a,o.results[n]=r,o.resultGroups[n]=a,o.resultGroupMap[r]=a}),Object.freeze(o.results),Object.freeze(o.resultGroups),Object.freeze(o.resultGroupMap),Object.freeze(o),Object.defineProperty(axe,\"constants\",{value:o,enumerable:!0,configurable:!1,writable:!1})}(axe),axe.log=function(){\"use strict\";\"object\"===(\"undefined\"==typeof console?\"undefined\":W(console))&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},axe.cleanup=R,axe.configure=function(e){\"use strict\";var t;if(!(t=axe._audit))throw new Error(\"No audit configured\");if(e.axeVersion||e.ver){var r=e.axeVersion||e.ver;if(!/^\\d+\\.\\d+\\.\\d+(-canary)?/.test(r))throw new Error(\"Invalid configured version \".concat(r));var n=r.split(\"-\"),a=X(n,2),o=a[0],i=a[1],s=o.split(\".\").map(Number),l=X(s,3),u=l[0],c=l[1],d=l[2],p=axe.version.split(\"-\"),m=X(p,2),f=m[0],h=m[1],b=f.split(\".\").map(Number),g=X(b,3),y=g[0],v=g[1],w=g[2];if(u!==y||v<c||v===c&&w<d||u===y&&c===v&&d===w&&i&&i!==h)throw new Error(\"Configured version \".concat(r,\" is not compatible with current axe version \").concat(axe.version))}e.reporter&&(\"function\"==typeof e.reporter||U[e.reporter])&&(t.reporter=e.reporter),e.checks&&e.checks.forEach(function(e){t.addCheck(e)});var x=[];e.rules&&e.rules.forEach(function(e){x.push(e.id),t.addRule(e)}),e.disableOtherRules&&t.rules.forEach(function(e){!1===x.includes(e.id)&&(e.enabled=!1)}),void 0!==e.branding?t.setBranding(e.branding):t._constructHelpUrls(),e.tagExclude&&(t.tagExclude=e.tagExclude),e.locale&&t.applyLocale(e.locale)},axe.getRules=function(e){\"use strict\";var t=(e=e||[]).length?axe._audit.rules.filter(function(t){return!!e.filter(function(e){return-1!==t.tags.indexOf(e)}).length}):axe._audit.rules,r=axe._audit.data.rules||{};return t.map(function(e){var t=r[e.id]||{};return{ruleId:e.id,description:t.description,help:t.help,helpUrl:t.helpUrl,tags:e.tags}})},axe._load=function(e){\"use strict\";axe.utils.respondable.subscribe(\"axe.ping\",function(e,t,r){r({axe:!0})}),axe.utils.respondable.subscribe(\"axe.start\",B),axe._audit=new r(e)},(axe=axe||{}).plugins={},M.prototype.run=function(){\"use strict\";return this._run.apply(this,arguments)},M.prototype.collect=function(){\"use strict\";return this._collect.apply(this,arguments)},M.prototype.cleanup=function(e){\"use strict\";var r=axe.utils.queue(),n=this;Object.keys(this._registry).forEach(function(t){r.defer(function(e){n._registry[t].cleanup(e)})}),r.then(function(){e()})},M.prototype.add=function(e){\"use strict\";this._registry[e.id]=e},axe.registerPlugin=function(e){\"use strict\";axe.plugins[e.id]=new M(e)};var V,U={};function H(){axe._memoizedFns.forEach(function(e){return e.clear()}),axe._cache.clear(),axe._tree=void 0,axe._selectorData=void 0}function $(r,n,a,o){\"use strict\";try{r=new f(r),axe._tree=r.flatTree,axe._selectorData=axe.utils.getSelectorData(r.flatTree)}catch(e){return H(),o(e)}var i,e=axe.utils.queue(),s=axe._audit;n.performanceTimer&&axe.utils.performanceTimer.auditStart(),r.frames.length&&!1!==n.iframes&&e.defer(function(e,t){axe.utils.collectResultsFromFrames(r,n,\"rules\",null,e,t)}),e.defer(function(e,t){n.restoreScroll&&(i=axe.utils.getScrollState()),s.run(r,n,e,t)}),e.then(function(e){try{i&&axe.utils.setScrollState(i),n.performanceTimer&&axe.utils.performanceTimer.auditEnd();var t=axe.utils.mergeResults(e.map(function(e){return{results:e}}));r.initiator&&((t=s.after(t,n)).forEach(axe.utils.publishMetaData),t=t.map(axe.utils.finalizeRuleResult));try{a(t,H)}catch(e){H(),axe.log(e)}}catch(e){H(),o(e)}}).catch(function(e){H(),o(e)})}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}axe.getReporter=function(e){\"use strict\";return\"string\"==typeof e&&U[e]?U[e]:\"function\"==typeof e?e:V},axe.addReporter=function(e,t,r){\"use strict\";U[e]=t,r&&(V=t)},axe.reset=function(){\"use strict\";var e=axe._audit;if(!e)throw new Error(\"No audit configured\");e.resetRulesAndChecks()},axe._runRules=$,axe.runVirtualRule=function(t,e){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};r.reporter=r.reporter||axe._audit.reporter||\"v1\",axe._selectorData={},e instanceof axe.AbstractVirtualNode==!1&&(e=new z(e));var n=axe._audit.rules.find(function(e){return e.id===t});if(!n)throw new Error(\"unknown rule `\"+t+\"`\");var a={include:[e]},o=(n=Object.create(n,{excludeHidden:{value:!1}})).runSync(a,r);axe.utils.publishMetaData(o),axe.utils.finalizeRuleResult(o);var i=axe.utils.aggregateResult([o]);return i.violations.forEach(function(e){return e.nodes.forEach(function(e){e.failureSummary=s.failureSummary(e)})}),Y({},s.getEnvironmentData(),{},i,{toolOptions:r})};function G(){}function J(e,t,r){\"use strict\";var n=new TypeError(\"axe.run arguments are invalid\");if(!function(e){\"use strict\";switch(!0){case\"string\"==typeof e:case Array.isArray(e):case Node&&e instanceof Node:case NodeList&&e instanceof NodeList:return 1;case\"object\"!==W(e):return;case void 0!==e.include:case void 0!==e.exclude:case\"number\"==typeof e.length:return 1;default:return}}(e)){if(void 0!==r)throw n;r=t,t=e,e=document}if(\"object\"!==W(t)){if(void 0!==r)throw n;r=t,t={}}if(\"function\"!=typeof r&&void 0!==r)throw n;return{context:e,options:t,callback:r||G}}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}axe.run=function(e,a,o){\"use strict\";if(!axe._audit)throw new Error(\"No audit configured\");var t,r=J(e,a,o);e=r.context,a=r.options,o=r.callback,a.reporter=a.reporter||axe._audit.reporter||\"v1\",a.performanceTimer&&axe.utils.performanceTimer.start();var i=G,s=G;if(\"function\"==typeof Promise&&o===G&&(t=new Promise(function(e,t){i=t,s=e})),axe._running){var n=\"Axe is already running. Use `await axe.run()` to wait for the previous run to finish before starting a new run.\";return o(n),i(n),t}return axe._running=!0,axe._runRules(e,a,function(e,t){function r(e){axe._running=!1,t();try{o(null,e)}catch(e){axe.log(e)}s(e)}a.performanceTimer&&axe.utils.performanceTimer.end();try{var n=axe.getReporter(a.reporter)(e,a,r);void 0!==n&&r(n)}catch(e){axe._running=!1,t(),o(e),i(e)}},function(e){axe._running=!1,o(e),i(e)}),t},s.failureSummary=function(e){\"use strict\";var r={};return r.none=e.none.concat(e.all),r.any=e.any,Object.keys(r).map(function(e){if(r[e].length){var t=axe._audit.data.failureSummaries[e];return t&&\"function\"==typeof t.failureMessage?t.failureMessage(r[e].map(function(e){return e.message||\"\"})):void 0}}).filter(function(e){return void 0!==e}).join(\"\\n\\n\")},s.getEnvironmentData=function(e){var t=0<arguments.length&&void 0!==e?e:window,r=t.screen,n=void 0===r?{}:r,a=t.navigator,o=void 0===a?{}:a,i=t.location,s=void 0===i?{}:i,l=t.innerHeight,u=t.innerWidth,c=n.msOrientation||n.orientation||n.mozOrientation||{};return{testEngine:{name:\"axe-core\",version:axe.version},testRunner:{name:axe._audit.brand},testEnvironment:{userAgent:o.userAgent,windowWidth:u,windowHeight:l,orientationAngle:c.angle,orientationType:c.type},timestamp:(new Date).toISOString(),url:s.href}},s.incompleteFallbackMessage=function(){\"use strict\";return\"function\"==typeof axe._audit.data.incompleteFallbackMessage?axe._audit.data.incompleteFallbackMessage():axe._audit.data.incompleteFallbackMessage};var Z=axe.constants.resultGroups;function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}s.processAggregate=function(e,r){var t=axe.utils.aggregateResult(e);return Z.forEach(function(e){r.resultTypes&&!r.resultTypes.includes(e)&&(t[e]||[]).forEach(function(e){Array.isArray(e.nodes)&&0<e.nodes.length&&(e.nodes=[e.nodes[0]])}),t[e]=(t[e]||[]).map(function(t){return t=Object.assign({},t),Array.isArray(t.nodes)&&0<t.nodes.length&&(t.nodes=t.nodes.map(function(e){return\"object\"===W(e.node)&&(e.html=e.node.source,r.elementRef&&!e.node.fromFrame&&(e.element=e.node.element),!1===r.selectors&&!e.node.fromFrame||(e.target=e.node.selector),r.xpath&&(e.xpath=e.node.xpath)),delete e.result,delete e.node,function(t,r){\"use strict\";[\"any\",\"all\",\"none\"].forEach(function(e){Array.isArray(t[e])&&t[e].filter(function(e){return Array.isArray(e.relatedNodes)}).forEach(function(e){e.relatedNodes=e.relatedNodes.map(function(e){var t={html:e.source};return r.elementRef&&!e.fromFrame&&(t.element=e.element),!1===r.selectors&&!e.fromFrame||(t.target=e.selector),r.xpath&&(t.xpath=e.xpath),t})})})}(e,r),e})),Z.forEach(function(e){return delete t[e]}),delete t.pageLevel,delete t.result,t})}),t},axe.addReporter(\"na\",function(e,t,r){\"use strict\";console.warn('\"na\" reporter will be deprecated in axe v4.0. Use the \"v2\" reporter instead.'),\"function\"==typeof t&&(r=t,t={});var n=s.processAggregate(e,t);r(Y({},s.getEnvironmentData(),{toolOptions:t,violations:n.violations,passes:n.passes,incomplete:n.incomplete,inapplicable:n.inapplicable}))}),axe.addReporter(\"no-passes\",function(e,t,r){\"use strict\";\"function\"==typeof t&&(r=t,t={}),t.resultTypes=[\"violations\"];var n=s.processAggregate(e,t);r(Y({},s.getEnvironmentData(),{toolOptions:t,violations:n.violations}))}),axe.addReporter(\"rawEnv\",function(e,t,r){\"function\"==typeof t&&(r=t,t={}),axe.getReporter(\"raw\")(e,t,function(e){var t=s.getEnvironmentData();r({raw:e,env:t})})}),axe.addReporter(\"raw\",function(e,t,r){\"use strict\";if(\"function\"==typeof t&&(r=t,t={}),!e||!Array.isArray(e))return r(e);r(e.map(function(e){for(var t=Y({},e),r=0,n=[\"passes\",\"violations\",\"incomplete\",\"inapplicable\"];r<n.length;r++){var a=n[r];t[a]&&Array.isArray(t[a])&&(t[a]=t[a].map(function(e){return Y({},e,{node:e.node.toJSON()})}))}return t}))}),axe.addReporter(\"v1\",function(e,t,r){\"use strict\";\"function\"==typeof t&&(r=t,t={});function n(e){e.nodes.forEach(function(e){e.failureSummary=s.failureSummary(e)})}var a=s.processAggregate(e,t);a.incomplete.forEach(n),a.violations.forEach(n),r(Y({},s.getEnvironmentData(),{toolOptions:t,violations:a.violations,passes:a.passes,incomplete:a.incomplete,inapplicable:a.inapplicable}))}),axe.addReporter(\"v2\",function(e,t,r){\"use strict\";\"function\"==typeof t&&(r=t,t={});var n=s.processAggregate(e,t);r(Y({},s.getEnvironmentData(),{toolOptions:t,violations:n.violations,passes:n.passes,incomplete:n.incomplete,inapplicable:n.inapplicable}))},!0),axe.utils.aggregate=function(t,e,r){e=e.slice(),r&&e.push(r);var n=e.map(function(e){return t.indexOf(e)}).sort();return t[n.pop()]};var Q=axe.constants,ee=Q.CANTTELL_PRIO,te=Q.FAIL_PRIO,re=[];re[axe.constants.PASS_PRIO]=!0,re[axe.constants.CANTTELL_PRIO]=null,re[axe.constants.FAIL_PRIO]=!1;var axe,ne=[\"any\",\"all\",\"none\"];function ae(r,n){return ne.reduce(function(e,t){return e[t]=(r[t]||[]).map(function(e){return n(e,t)}),e},{})}function oe(e,t,r){var n=Object.assign({},t);n.nodes=(n[r]||[]).concat(),axe.constants.resultGroups.forEach(function(e){delete n[e]}),e[r].push(n)}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function ie(e,t){\"use strict\";var r;return axe._tree&&(r=axe.utils.getSelector(t)),new Error(e+\": \"+(r||t))}function se(e){var t=e.outerHTML;return t||\"function\"!=typeof XMLSerializer||(t=(new XMLSerializer).serializeToString(e)),function(e,t){if(t=t||300,e.length>t){var r=e.indexOf(\">\");e=e.substring(0,r+1)}return e}(t||\"\")}function le(e,t,r){this._fromFrame=!!r,this.spec=r||{},t&&t.absolutePaths&&(this._options={toRoot:!0}),this.source=void 0!==this.spec.source?this.spec.source:se(e),this._element=e}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function ue(e,a,r){var n,t,o;function i(e,t,r){var n=ue(t,a,r);return n&&(e=e.concat(n)),e}if(e.documentElement&&(e=e.documentElement),o=e.nodeName.toLowerCase(),axe.utils.isShadowRoot(e))return n=new K(e,r,a),a=\"a\"+Math.random().toString().substring(2),t=Array.from(e.shadowRoot.childNodes),n.children=t.reduce(function(e,t){return i(e,t,n)},[]),[n];if(\"content\"===o&&\"function\"==typeof e.getDistributedNodes)return(t=Array.from(e.getDistributedNodes())).reduce(function(e,t){return i(e,t,r)},[]);if(\"slot\"!==o||\"function\"!=typeof e.assignedNodes)return 1===e.nodeType?(n=new K(e,r,a),t=Array.from(e.childNodes),n.children=t.reduce(function(e,t){return i(e,t,n)},[]),[n]):3===e.nodeType?[new K(e,r)]:void 0;(t=Array.from(e.assignedNodes())).length||(t=function(e){var t=[];for(e=e.firstChild;e;)t.push(e),e=e.nextSibling;return t}(e));window.getComputedStyle(e);return t.reduce(function(e,t){return i(e,t,r)},[])}function X(e,t){return L(e)||I(e,t)||P()}function P(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function I(e,t){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(a)throw o}}return r}}function L(e){if(Array.isArray(e))return e}function ce(e,t){return[e.substring(0,t),e.substring(t)]}function de(e){return e.replace(/\\s+$/,\"\")}axe.utils.aggregateChecks=function(e){var r=Object.assign({},e);ae(r,function(e,t){var r=void 0===e.result?-1:re.indexOf(e.result);e.priority=-1!==r?r:axe.constants.CANTTELL_PRIO,\"none\"===t&&(e.priority===axe.constants.PASS_PRIO?e.priority=axe.constants.FAIL_PRIO:e.priority===axe.constants.FAIL_PRIO&&(e.priority=axe.constants.PASS_PRIO))});var n={all:r.all.reduce(function(e,t){return Math.max(e,t.priority)},0),none:r.none.reduce(function(e,t){return Math.max(e,t.priority)},0),any:r.any.reduce(function(e,t){return Math.min(e,t.priority)},4)%4};r.priority=Math.max(n.all,n.none,n.any);var a=[];return ne.forEach(function(t){r[t]=r[t].filter(function(e){return e.priority===r.priority&&e.priority===n[t]}),r[t].forEach(function(e){return a.push(e.impact)})}),[ee,te].includes(r.priority)?r.impact=axe.utils.aggregate(axe.constants.impact,a):r.impact=null,ae(r,function(e){delete e.result,delete e.priority}),r.result=axe.constants.results[r.priority],delete r.priority,r},axe.utils.aggregateNodeResults=function(e){var r={};if((e=e.map(function(e){if(e.any&&e.all&&e.none)return axe.utils.aggregateChecks(e);if(Array.isArray(e.node))return axe.utils.finalizeRuleResult(e);throw new TypeError(\"Invalid Result type\")}))&&e.length){var t=e.map(function(e){return e.result});r.result=axe.utils.aggregate(axe.constants.results,t,r.result)}else r.result=\"inapplicable\";axe.constants.resultGroups.forEach(function(e){return r[e]=[]}),e.forEach(function(e){var t=axe.constants.resultGroupMap[e.result];r[t].push(e)});var n=axe.constants.FAIL_GROUP;if(0===r[n].length&&(n=axe.constants.CANTTELL_GROUP),0<r[n].length){var a=r[n].map(function(e){return e.impact});r.impact=axe.utils.aggregate(axe.constants.impact,a)||null}else r.impact=null;return r},axe.utils.aggregateResult=function(e){var r={};return axe.constants.resultGroups.forEach(function(e){return r[e]=[]}),e.forEach(function(t){t.error?oe(r,t,axe.constants.CANTTELL_GROUP):t.result===axe.constants.NA?oe(r,t,axe.constants.NA_GROUP):axe.constants.resultGroups.forEach(function(e){Array.isArray(t[e])&&0<t[e].length&&oe(r,t,e)})}),r},axe.utils.areStylesSet=function e(t,r,n){\"use strict\";var a=window.getComputedStyle(t,null);if(!a)return!1;for(var o=0;o<r.length;++o){var i=r[o];if(a.getPropertyValue(i.property)===i.value)return!0}return!(!t.parentNode||t.nodeName.toUpperCase()===n.toUpperCase())&&e(t.parentNode,r,n)},axe.utils.assert=function(e,t){if(!e)throw new Error(t)},axe.utils.checkHelper=function(t,r,n,a){\"use strict\";return{isAsync:!1,async:function(){return this.isAsync=!0,function(e){e instanceof Error==!1?(t.result=e,n(t)):a(e)}},data:function(e){t.data=e},relatedNodes:function(e){e=e instanceof Node?[e]:axe.utils.toArray(e),t.relatedNodes=e.map(function(e){return new axe.utils.DqElement(e,r)})}}},axe.utils.clone=function(e){\"use strict\";var t,r,n=e;if(null!==e&&\"object\"===W(e))if(Array.isArray(e))for(n=[],t=0,r=e.length;t<r;t++)n[t]=axe.utils.clone(e[t]);else for(t in n={},e)n[t]=axe.utils.clone(e[t]);return n},axe.utils.sendCommandToFrame=function(t,r,n,a){\"use strict\";var o=t.contentWindow;if(!o)return axe.log(\"Frame does not have a content window\",t),void n(null);var i=setTimeout(function(){i=setTimeout(function(){r.debug?a(ie(\"No response from frame\",t)):n(null)},0)},500);axe.utils.respondable(o,\"axe.ping\",null,void 0,function(){clearTimeout(i);var e=r.options&&r.options.frameWaitTime||6e4;i=setTimeout(function(){a(ie(\"Axe in frame timed out\",t))},e),axe.utils.respondable(o,\"axe.start\",r,void 0,function(e){clearTimeout(i),(e instanceof Error==!1?n:a)(e)})})},axe.utils.collectResultsFromFrames=function(e,t,r,o,n,a){\"use strict\";var i=axe.utils.queue();e.frames.forEach(function(n){var a={options:t,command:r,parameter:o,context:{initiator:!1,page:e.page,include:n.include||[],exclude:n.exclude||[]}};i.defer(function(t,e){var r=n.node;axe.utils.sendCommandToFrame(r,a,function(e){if(e)return t({results:e,frameElement:r,frame:axe.utils.getSelector(r)});t(null)},e)})}),i.then(function(e){n(axe.utils.mergeResults(e,t))}).catch(a)},axe.utils.contains=function(e,t){\"use strict\";if(e.shadowId||t.shadowId)return function t(e,r){return e.shadowId===r.shadowId||!!e.children.find(function(e){return t(e,r)})}(e,t);if(e.actualNode)return\"function\"==typeof e.actualNode.contains?e.actualNode.contains(t.actualNode):!!(16&e.actualNode.compareDocumentPosition(t.actualNode));do{if(t===e)return!0}while(t=t&&t.parent);return!1},function(axe){var e=new axe.imports.CssSelectorParser;e.registerSelectorPseudos(\"not\"),e.registerNestingOperators(\">\"),e.registerAttrEqualityMods(\"^\",\"$\",\"*\"),axe.utils.cssParser=e}(axe),le.prototype={get selector(){return this.spec.selector||[axe.utils.getSelector(this.element,this._options)]},get xpath(){return this.spec.xpath||[axe.utils.getXpath(this.element)]},get element(){return this._element},get fromFrame(){return this._fromFrame},toJSON:function(){\"use strict\";return{selector:this.selector,source:this.source,xpath:this.xpath}}},le.fromFrame=function(e,t,r){return e.selector.unshift(r.selector),e.xpath.unshift(r.xpath),new axe.utils.DqElement(r.element,t,e)},axe.utils.DqElement=le,axe.utils.matchesSelector=function(){\"use strict\";var r;return function(e,t){return r&&e[r]||(r=function(e){var t,r,n=[\"matches\",\"matchesSelector\",\"mozMatchesSelector\",\"webkitMatchesSelector\",\"msMatchesSelector\"],a=n.length;for(t=0;t<a;t++)if(e[r=n[t]])return r}(e)),!!e[r]&&e[r](t)}}(),axe.utils.escapeSelector=function(e){\"use strict\";for(var t,r=String(e),n=r.length,a=-1,o=\"\",i=r.charCodeAt(0);++a<n;)0!=(t=r.charCodeAt(a))?o+=1<=t&&t<=31||127==t||0==a&&48<=t&&t<=57||1==a&&48<=t&&t<=57&&45==i?\"\\\\\"+t.toString(16)+\" \":(0!=a||1!=n||45!=t)&&(128<=t||45==t||95==t||48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122)?r.charAt(a):\"\\\\\"+r.charAt(a):o+=\"�\";return o},axe.utils.extendMetaData=function(t,r){Object.assign(t,r),Object.keys(r).filter(function(e){return\"function\"==typeof r[e]}).forEach(function(e){t[e]=null;try{t[e]=r[e](t)}catch(e){}})},axe.utils.finalizeRuleResult=function(e){return Object.assign(e,axe.utils.aggregateNodeResults(e.nodes)),delete e.nodes,e},axe.utils.findBy=function(e,t,r){if(Array.isArray(e))return e.find(function(e){return\"object\"===W(e)&&e[t]===r})},(axe=axe||{utils:{}}).utils.getFlattenedTree=function(e,t){return axe._cache.set(\"nodeMap\",new WeakMap),ue(e,t)},axe.utils.getNodeFromTree=function(e,t){var r=t||e;return axe._cache.get(\"nodeMap\")?axe._cache.get(\"nodeMap\").get(r):null},axe.utils.getAllChecks=function(e){\"use strict\";return[].concat(e.any||[]).concat(e.all||[]).concat(e.none||[])},axe.utils.getBaseLang=function(e){return e?e.trim().split(\"-\")[0].toLowerCase():\"\"},axe.utils.getCheckMessage=function(e,t,r){var n=axe._audit.data.checks[e];if(!n)throw new Error(\"Cannot get message for unknown check: \".concat(e,\".\"));if(!n.messages[t])throw new Error('Check \"'.concat(e,'\"\" does not have a \"').concat(t,'\" message.'));return axe.utils.processMessage(n.messages[t],r)},axe.utils.getCheckOption=function(e,t,r){var n=((r.rules&&r.rules[t]||{}).checks||{})[e.id],a=(r.checks||{})[e.id],o=e.enabled,i=e.options;return a&&(a.hasOwnProperty(\"enabled\")&&(o=a.enabled),a.hasOwnProperty(\"options\")&&(i=a.options)),n&&(n.hasOwnProperty(\"enabled\")&&(o=n.enabled),n.hasOwnProperty(\"options\")&&(i=n.options)),{enabled:o,options:i,absolutePaths:r.absolutePaths}},axe.utils.getFriendlyUriEnd=function(e,t){var r=0<arguments.length&&void 0!==e?e:\"\",n=1<arguments.length&&void 0!==t?t:{};if(!(r.length<=1||\"data:\"===r.substr(0,5)||\"javascript:\"===r.substr(0,11)||r.includes(\"?\"))){var a=n.currentDomain,o=n.maxLength,i=void 0===o?25:o,s=function(e){var t=e,r=\"\",n=\"\",a=\"\",o=\"\",i=\"\";if(e.includes(\"#\")){var s=ce(e,e.indexOf(\"#\")),l=X(s,2);e=l[0],i=l[1]}if(e.includes(\"?\")){var u=ce(e,e.indexOf(\"?\")),c=X(u,2);e=c[0],o=c[1]}if(e.includes(\"://\")){var d=e.split(\"://\"),p=X(d,2);r=p[0];var m=ce(e=p[1],e.indexOf(\"/\")),f=X(m,2);n=f[0],e=f[1]}else if(\"//\"===e.substr(0,2)){var h=ce(e=e.substr(2),e.indexOf(\"/\")),b=X(h,2);n=b[0],e=b[1]}if(\"www.\"===n.substr(0,4)&&(n=n.substr(4)),n&&n.includes(\":\")){var g=ce(n,n.indexOf(\":\")),y=X(g,2);n=y[0],a=y[1]}return{original:t,protocol:r,domain:n,port:a,path:e,query:o,hash:i}}(r),l=s.path,u=s.domain,c=s.hash,d=l.substr(l.substr(0,l.length-2).lastIndexOf(\"/\")+1);if(c)return d&&(d+c).length<=i?de(d+c):d.length<2&&2<c.length&&c.length<=i?de(c):void 0;if(u&&u.length<i&&l.length<=1)return de(u+l);if(l===\"/\"+d&&u&&a&&u!==a&&(u+l).length<=i)return de(u+l);var p=d.lastIndexOf(\".\");return(-1===p||1<p)&&(-1!==p||2<d.length)&&d.length<=i&&!d.match(/index(\\.[a-zA-Z]{2-4})?/)&&!function(e){var t=0<arguments.length&&void 0!==e?e:\"\";return 0!==t.length&&(t.match(/[0-9]/g)||\"\").length>=t.length/2}(d)?de(d):void 0}},axe.utils.getNodeAttributes=function(e){return e.attributes instanceof window.NamedNodeMap?e.attributes:e.cloneNode(!1).attributes},axe.utils.getRootNode=function(e){var t=e.getRootNode&&e.getRootNode()||document;return t===e&&(t=document),t},axe.utils.getScroll=function(e,t){var r=1<arguments.length&&void 0!==t?t:0,n=e.scrollWidth>e.clientWidth+r,a=e.scrollHeight>e.clientHeight+r;if(n||a){var o=window.getComputedStyle(e),i=o.getPropertyValue(\"overflow-x\"),s=o.getPropertyValue(\"overflow-y\");return n&&(\"visible\"!==i&&\"hidden\"!==i)||a&&(\"visible\"!==s&&\"hidden\"!==s)?{elm:e,top:e.scrollTop,left:e.scrollLeft}:void 0}};var pe,me,fe=axe.utils.escapeSelector,he=[\"class\",\"style\",\"id\",\"selected\",\"checked\",\"disabled\",\"tabindex\",\"aria-checked\",\"aria-selected\",\"aria-invalid\",\"aria-activedescendant\",\"aria-busy\",\"aria-disabled\",\"aria-expanded\",\"aria-grabbed\",\"aria-pressed\",\"aria-valuenow\"],be=31;function ge(e,t){var r,n=t.name;if(-1!==n.indexOf(\"href\")||-1!==n.indexOf(\"src\")){var a=axe.utils.getFriendlyUriEnd(e.getAttribute(n));if(a){var o=encodeURI(a);if(!o)return;r=fe(t.name)+'$=\"'+fe(o)+'\"'}else r=fe(t.name)+'=\"'+fe(e.getAttribute(n))+'\"'}else r=fe(n)+'=\"'+fe(t.value)+'\"';return r}function ye(e,t){return e.count<t.count?-1:e.count===t.count?0:1}function ve(e){return!he.includes(e.name)&&-1===e.name.indexOf(\":\")&&(!e.value||e.value.length<be)}function we(t,r){var e=t.parentNode&&Array.from(t.parentNode.children||\"\")||[];return e.find(function(e){return e!==t&&axe.utils.matchesSelector(e,r)})?\":nth-child(\"+(1+e.indexOf(t))+\")\":\"\"}function xe(e){if(e.getAttribute(\"id\")){var t=e.getRootNode&&e.getRootNode()||document,r=\"#\"+fe(e.getAttribute(\"id\")||\"\");return r.match(/player_uid_/)||1!==t.querySelectorAll(r).length?void 0:r}}function De(e){return void 0===pe&&(pe=axe.utils.isXHTML(document)),fe(pe?e.localName:e.nodeName.toLowerCase())}function ke(e,t){var r,n,a,o,i,s,l,u,c,d,p,m=\"\",f=(n=e,o=[],i=(a=t).classes,s=a.tags,n.classList&&Array.from(n.classList).forEach(function(e){var t=fe(e);i[t]<s[n.nodeName]&&o.push({name:t,count:i[t],species:\"class\"})}),o.sort(ye)),h=(l=e,c=[],d=(u=t).attributes,p=u.tags,l.hasAttributes()&&Array.from(axe.utils.getNodeAttributes(l)).filter(ve).forEach(function(e){var t=ge(l,e);t&&d[t]<p[l.nodeName]&&c.push({name:t,count:d[t],species:\"attribute\"})}),c.sort(ye));return f.length&&1===f[0].count?r=[f[0]]:h.length&&1===h[0].count?(r=[h[0]],m=De(e)):((r=f.concat(h)).sort(ye),(r=r.slice(0,3)).some(function(e){return\"class\"===e.species})?r.sort(function(e,t){return e.species!==t.species&&\"class\"===e.species?-1:e.species===t.species?0:1}):m=De(e)),m+r.reduce(function(e,t){switch(t.species){case\"class\":return e+\".\"+t.name;case\"attribute\":return e+\"[\"+t.name+\"]\"}return e},\"\")}function Ee(e,t,r){if(!axe._selectorData)throw new Error(\"Expect axe._selectorData to be set up\");var n,a,o=t.toRoot,i=void 0!==o&&o;do{var s=xe(e);s||(s=ke(e,axe._selectorData),s+=we(e,s)),n=n?s+\" > \"+n:s,a=a?a.filter(function(e){return axe.utils.matchesSelector(e,n)}):Array.from(r.querySelectorAll(n)),e=e.parentElement}while((1<a.length||i)&&e&&11!==e.nodeType);return 1===a.length?n:-1!==n.indexOf(\" > \")?\":root\"+n.substring(n.indexOf(\" > \")):\":root\"}axe.utils.getSelectorData=function(e){function t(){var e=a.pop(),r=e.actualNode;if(r.querySelectorAll){var t=r.nodeName;n.tags[t]?n.tags[t]++:n.tags[t]=1,r.classList&&Array.from(r.classList).forEach(function(e){var t=fe(e);n.classes[t]?n.classes[t]++:n.classes[t]=1}),r.hasAttributes()&&Array.from(axe.utils.getNodeAttributes(r)).filter(ve).forEach(function(e){var t=ge(r,e);t&&(n.attributes[t]?n.attributes[t]++:n.attributes[t]=1)})}for(e.children.length&&(o.push(a),a=e.children.slice());!a.length&&o.length;)a=o.pop()}for(var n={classes:{},tags:{},attributes:{}},a=(e=Array.isArray(e)?e:[e]).slice(),o=[];a.length;)t();return n},axe.utils.getSelector=function(e,t){var r=1<arguments.length&&void 0!==t?t:{};if(!e)return\"\";var n=e.getRootNode&&e.getRootNode()||document;if(11!==n.nodeType)return Ee(e,r,n);for(var a=[];11===n.nodeType;){if(!n.host)return\"\";a.push({elm:e,doc:n}),n=(e=n.host).getRootNode()}return a.push({elm:e,doc:n}),a.reverse().map(function(e){return Ee(e.elm,r,e.doc)})},axe.utils.getStyleSheetFactory=function(d){if(!d)throw new Error(\"axe.utils.getStyleSheetFactory should be invoked with an argument\");return function(e){var t=e.data,r=e.isCrossOrigin,n=void 0!==r&&r,a=e.shadowId,o=e.root,i=e.priority,s=e.isLink,l=void 0!==s&&s,u=d.createElement(\"style\");if(l){var c=d.createTextNode('@import \"'.concat(t.href,'\"'));u.appendChild(c)}else u.appendChild(d.createTextNode(t));return d.head.appendChild(u),{sheet:u.sheet,isCrossOrigin:n,shadowId:a,root:o,priority:i}}},axe.utils.getXpath=function(e){var t=function e(t,r){var n,a;if(!t)return[];if(!r&&9===t.nodeType)return r=[{str:\"html\"}];if(r=r||[],t.parentNode&&t.parentNode!==t&&(r=e(t.parentNode,r)),t.previousSibling){for(a=1,n=t.previousSibling;1===n.nodeType&&n.nodeName===t.nodeName&&a++,n=n.previousSibling;);1===a&&(a=null)}else if(t.nextSibling)for(n=t.nextSibling;n=1===n.nodeType&&n.nodeName===t.nodeName?(a=1,null):(a=null,n.previousSibling););if(1===t.nodeType){var o={};o.str=t.nodeName.toLowerCase();var i=t.getAttribute&&axe.utils.escapeSelector(t.getAttribute(\"id\"));i&&1===t.ownerDocument.querySelectorAll(\"#\"+i).length&&(o.id=t.getAttribute(\"id\")),1<a&&(o.count=a),r.push(o)}return r}(e);return t.reduce(function(e,t){return t.id?\"/\".concat(t.str,\"[@id='\").concat(t.id,\"']\"):e+\"/\".concat(t.str)+(0<t.count?\"[\".concat(t.count,\"]\"):\"\")},\"\")},axe.utils.injectStyle=function(e){\"use strict\";if(me&&me.parentNode)return void 0===me.styleSheet?me.appendChild(document.createTextNode(e)):me.styleSheet.cssText+=e,me;if(e){var t=document.head||document.getElementsByTagName(\"head\")[0];return(me=document.createElement(\"style\")).type=\"text/css\",void 0===me.styleSheet?me.appendChild(document.createTextNode(e)):me.styleSheet.cssText=e,t.appendChild(me),me}},axe.utils.isHidden=function(e,t){\"use strict\";var r=axe.utils.getNodeFromTree(e);if(9===e.nodeType)return!1;if(11===e.nodeType&&(e=e.host),r&&null!==r._isHidden)return r._isHidden;var n=window.getComputedStyle(e,null);if(!n||!e.parentNode||\"none\"===n.getPropertyValue(\"display\")||!t&&\"hidden\"===n.getPropertyValue(\"visibility\")||\"true\"===e.getAttribute(\"aria-hidden\"))return!0;var a=e.assignedSlot?e.assignedSlot:e.parentNode,o=axe.utils.isHidden(a,!0);return r&&(r._isHidden=o),o};var Ae=[\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"bdi\",\"bdo\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\",\"mark\",\"math\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"pre\",\"progress\",\"q\",\"rb\",\"rp\",\"rt\",\"rtc\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"slot\",\"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"svg\",\"table\",\"tbody\",\"td\",\"template\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"track\",\"u\",\"ul\",\"var\",\"video\",\"wbr\"];axe.utils.isHtmlElement=function(e){return\"http://www.w3.org/2000/svg\"!==e.namespaceURI&&Ae.includes(e.nodeName.toLowerCase())};var je=[\"article\",\"aside\",\"blockquote\",\"body\",\"div\",\"footer\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"main\",\"nav\",\"p\",\"section\",\"span\"];function Ce(e,t){return d=t,1===(c=e).props.nodeType&&(\"*\"===d.tag||c.props.nodeName===d.tag)&&(l=e,!(u=t).classes||u.classes.every(function(e){return l.hasClass(e.value)}))&&(i=e,!(s=t).attributes||s.attributes.every(function(e){var t=i.attr(e.key);return null!==t&&(!e.value||e.test(t))}))&&(a=e,!(o=t).id||a.props.id===o.id)&&(r=e,!((n=t).pseudos&&!n.pseudos.every(function(e){if(\"not\"===e.name)return!axe.utils.matchesExpression(r,e.expressions[0]);throw new Error(\"the pseudo selector \"+e.name+\" has not yet been implemented\")})));var r,n,a,o,i,s,l,u,c,d}axe.utils.isShadowRoot=function(e){if(e.shadowRoot){var t=e.nodeName.toLowerCase();if(je.includes(t)||/^[a-z][a-z0-9_.-]*-[a-z0-9_.-]*$/.test(t))return!0}return!1},axe.utils.isXHTML=function(e){\"use strict\";return!!e.createElement&&\"A\"===e.createElement(\"A\").localName};var Fe,Te,Ne,Se=(Fe=/(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,function(e){return e.replace(Fe,\"\\\\\")}),ze=/\\\\/g;function qe(e){if(e)return e.map(function(e){var t,r,n=e.name.replace(ze,\"\"),a=(e.value||\"\").replace(ze,\"\");switch(e.operator){case\"^=\":r=new RegExp(\"^\"+Se(a));break;case\"$=\":r=new RegExp(Se(a)+\"$\");break;case\"~=\":r=new RegExp(\"(^|\\\\s)\"+Se(a)+\"(\\\\s|$)\");break;case\"|=\":r=new RegExp(\"^\"+Se(a)+\"(-|$)\");break;case\"=\":t=function(e){return a===e};break;case\"*=\":t=function(e){return e&&e.includes(a)};break;case\"!=\":t=function(e){return a!==e};break;default:t=function(e){return!!e}}return\"\"===a&&/^[*$^]=$/.test(e.operator)&&(t=function(){return!1}),{key:n,value:a,test:t=t||function(e){return e&&r.test(e)}}})}function Oe(e){if(e)return e.map(function(e){return{value:e=e.replace(ze,\"\"),regexp:new RegExp(\"(^|\\\\s)\"+Se(e)+\"(\\\\s|$)\")}})}function _e(e){if(e)return e.map(function(e){var t;return\"not\"===e.name&&(t=Re(t=(t=e.value).selectors?t.selectors:[t])),{name:e.name,expressions:t,value:e.value}})}function Re(e){return e.map(function(e){for(var t=[],r=e.rule;r;)t.push({tag:r.tagName?r.tagName.toLowerCase():\"*\",combinator:r.nestingOperator?r.nestingOperator:\" \",id:r.id,attributes:qe(r.attrs),classes:Oe(r.classNames),pseudos:_e(r.pseudos)}),r=r.rule;return t})}function Pe(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function Ie(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}function Le(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}function Be(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function Me(e){return\"function\"==typeof e||\"[object Function]\"===Te.call(e)}function Ve(e){var t,r=(t=Number(e),isNaN(t)?0:0!==t&&isFinite(t)?(0<t?1:-1)*Math.floor(Math.abs(t)):t);return Math.min(Math.max(r,0),Ne)}function Ue(e){var t=e.nodeName.toUpperCase(),r=e.getAttribute(\"href\"),n=e.getAttribute(\"rel\"),a=\"LINK\"===t&&r&&n&&e.rel.toUpperCase().includes(\"STYLESHEET\");return\"STYLE\"===t||a&&He(e.media)}function He(e){return!e||!e.toUpperCase().includes(\"PRINT\")}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}axe.utils.convertSelector=function(e){var t=axe.utils.cssParser.parse(e);return Re(t=t.selectors?t.selectors:[t])},axe.utils.matchesExpression=function(e,t,r){for(var n=[].concat(t),a=n.pop(),o=Ce(e,a);!o&&r&&e.parent;)o=Ce(e=e.parent,a);if(n.length){if(!1===[\" \",\">\"].includes(a.combinator))throw new Error(\"axe.utils.matchesExpression does not support the combinator: \"+a.combinator);o=o&&axe.utils.matchesExpression(e.parent,n,\" \"===a.combinator)}return o},axe.utils.matches=function(t,e){return axe.utils.convertSelector(e).some(function(e){return axe.utils.matchesExpression(t,e)})},axe._memoizedFns=[],axe.utils.memoize=function(e){var t=axe.imports.memoize(e);return axe._memoizedFns.push(t),t},axe.utils.mergeResults=function(e,n){\"use strict\";var a=[];return e.forEach(function(r){var e=function(e){\"use strict\";return e&&e.results?Array.isArray(e.results)?e.results.length?e.results:null:[e.results]:null}(r);e&&e.length&&e.forEach(function(e){e.nodes&&r.frame&&function(e,r,t,n){\"use strict\";var a={element:t,selector:n,xpath:axe.utils.getXpath(t)};e.forEach(function(e){e.node=axe.utils.DqElement.fromFrame(e.node,r,a);var t=axe.utils.getAllChecks(e);t.length&&t.forEach(function(e){e.relatedNodes=e.relatedNodes.map(function(e){return axe.utils.DqElement.fromFrame(e,r,a)})})})}(e.nodes,n,r.frameElement,r.frame);var t=axe.utils.findBy(a,\"id\",e.id);t?e.nodes.length&&function(e,t){\"use strict\";for(var r,n,a=t[0].node,o=0,i=e.length;o<i;o++)if(n=e[o].node,0<(r=axe.utils.nodeSorter({actualNode:n.element},{actualNode:a.element}))||0===r&&a.selector.length<n.selector.length)return e.splice.apply(e,[o,0].concat(t));e.push.apply(e,t)}(t.nodes,e.nodes):a.push(e)})}),a},axe.utils.nodeSorter=function(e,t){return(e=e.actualNode||e)===(t=t.actualNode||t)?0:4&e.compareDocumentPosition(t)?-1:1},axe.utils.parseCrossOriginStylesheet=function(e,n,a,o,i){var t={method:\"get\",timeout:axe.constants.preload.timeout,url:e};return o.push(e),axe.imports.axios(t).then(function(e){var t=e.data,r=n.convertDataToStylesheet({data:t,isCrossOrigin:i,priority:a,root:n.rootNode,shadowId:n.shadowId});return axe.utils.parseStylesheet(r.sheet,n,a,o,r.isCrossOrigin)})},axe.utils.parseSameOriginStylesheet=function(e,a,o,i,t){var r=4<arguments.length&&void 0!==t&&t,n=Array.from(e.cssRules);if(!n)return Promise.resolve();var s=n.filter(function(e){return 3===e.type});if(!s.length)return Promise.resolve({isCrossOrigin:r,priority:o,root:a.rootNode,shadowId:a.shadowId,sheet:e});var l=s.filter(function(e){return e.href}).map(function(e){return e.href}).filter(function(e){return!i.includes(e)}).map(function(e,t){var r=[].concat(Pe(o),[t]),n=/^https?:\\/\\/|^\\/\\//i.test(e);return axe.utils.parseCrossOriginStylesheet(e,a,r,i,n)}),u=n.filter(function(e){return 3!==e.type});return u.length&&l.push(Promise.resolve(a.convertDataToStylesheet({data:u.map(function(e){return e.cssText}).join(),isCrossOrigin:r,priority:o,root:a.rootNode,shadowId:a.shadowId}))),Promise.all(l)},axe.utils.parseStylesheet=function(e,t,r,n,a){var o=4<arguments.length&&void 0!==a&&a;return function(e){try{return!e.cssRules&&e.href?!1:!0}catch(e){return!1}}(e)?axe.utils.parseSameOriginStylesheet(e,t,r,n,o):axe.utils.parseCrossOriginStylesheet(e.href,t,r,n,!0)},utils.performanceTimer=function(){\"use strict\";function e(){if(window.performance&&window.performance)return window.performance.now()}var t=null,r=e();return{start:function(){this.mark(\"mark_axe_start\")},end:function(){this.mark(\"mark_axe_end\"),this.measure(\"axe\",\"mark_axe_start\",\"mark_axe_end\"),this.logMeasures(\"axe\")},auditStart:function(){this.mark(\"mark_audit_start\")},auditEnd:function(){this.mark(\"mark_audit_end\"),this.measure(\"audit_start_to_end\",\"mark_audit_start\",\"mark_audit_end\"),this.logMeasures()},mark:function(e){window.performance&&void 0!==window.performance.mark&&window.performance.mark(e)},measure:function(e,t,r){window.performance&&void 0!==window.performance.measure&&window.performance.measure(e,t,r)},logMeasures:function(e){function t(e){axe.log(\"Measure \"+e.name+\" took \"+e.duration+\"ms\")}if(window.performance&&void 0!==window.performance.getEntriesByType)for(var r=window.performance.getEntriesByName(\"mark_axe_start\")[0],n=window.performance.getEntriesByType(\"measure\").filter(function(e){return e.startTime>=r.startTime}),a=0;a<n.length;++a){var o=n[a];if(o.name===e)return void t(o);t(o)}},timeElapsed:function(){return e()-r},reset:function(){t=t||e(),r=e()}}}(),\"function\"!=typeof Object.assign&&(Object.assign=function(e){\"use strict\";if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var t=Object(e),r=1;r<arguments.length;r++){var n=arguments[r];if(null!=n)for(var a in n)n.hasOwnProperty(a)&&(t[a]=n[a])}return t}),Array.prototype.find||Object.defineProperty(Array.prototype,\"find\",{value:function(e){if(null===this)throw new TypeError(\"Array.prototype.find called on null or undefined\");if(\"function\"!=typeof e)throw new TypeError(\"predicate must be a function\");for(var t,r=Object(this),n=r.length>>>0,a=arguments[1],o=0;o<n;o++)if(t=r[o],e.call(a,t,o,r))return t}}),axe.utils.pollyfillElementsFromPoint=function(){if(document.elementsFromPoint)return document.elementsFromPoint;if(document.msElementsFromPoint)return document.msElementsFromPoint;var e,t=((e=document.createElement(\"x\")).style.cssText=\"pointer-events:auto\",\"auto\"===e.style.pointerEvents),s=t?\"pointer-events\":\"visibility\",l=t?\"none\":\"hidden\",u=document.createElement(\"style\");return u.innerHTML=t?\"* { pointer-events: all }\":\"* { visibility: visible }\",function(e,t){var r,n,a,o=[],i=[];for(document.head.appendChild(u);(r=document.elementFromPoint(e,t))&&-1===o.indexOf(r);)o.push(r),i.push({value:r.style.getPropertyValue(s),priority:r.style.getPropertyPriority(s)}),r.style.setProperty(s,l,\"important\");for(o.indexOf(document.documentElement)<o.length-1&&(o.splice(o.indexOf(document.documentElement),1),o.push(document.documentElement)),n=i.length;a=i[--n];)o[n].style.setProperty(s,a.value?a.value:\"\",a.priority);return document.head.removeChild(u),o}},\"function\"==typeof window.addEventListener&&(document.elementsFromPoint=axe.utils.pollyfillElementsFromPoint()),Array.prototype.includes||Object.defineProperty(Array.prototype,\"includes\",{value:function(e,t){\"use strict\";var r=Object(this),n=parseInt(r.length,10)||0;if(0===n)return!1;var a,o,i=parseInt(t,10)||0;for(0<=i?a=i:(a=n+i)<0&&(a=0);a<n;){if(e===(o=r[a])||e!=e&&o!=o)return!0;a++}return!1}}),Array.prototype.some||Object.defineProperty(Array.prototype,\"some\",{value:function(e,t){\"use strict\";if(null==this)throw new TypeError(\"Array.prototype.some called on null or undefined\");if(\"function\"!=typeof e)throw new TypeError;for(var r=Object(this),n=r.length>>>0,a=2<=arguments.length?t:void 0,o=0;o<n;o++)if(o in r&&e.call(a,r[o],o,r))return!0;return!1}}),Array.from||Object.defineProperty(Array,\"from\",{value:(Te=Object.prototype.toString,Ne=Math.pow(2,53)-1,function(e,t,r){var n=Object(e);if(null==e)throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");var a,o=1<arguments.length?t:void 0;if(void 0!==o){if(!Me(o))throw new TypeError(\"Array.from: when provided, the second argument must be a function\");2<arguments.length&&(a=r)}for(var i,s=Ve(n.length),l=Me(this)?Object(new this(s)):new Array(s),u=0;u<s;)i=n[u],l[u]=o?void 0===a?o(i,u):o.call(a,i,u):i,u+=1;return l.length=s,l})}),String.prototype.includes||(String.prototype.includes=function(e,t){return\"number\"!=typeof t&&(t=0),!(t+e.length>this.length)&&-1!==this.indexOf(e,t)}),axe.utils.preloadCssom=function(e){var t,r,n,a=e.treeRoot,o=void 0===a?axe._tree[0]:a,i=(t=o,r=[],n=axe.utils.querySelectorAllFilter(t,\"*\",function(e){return!r.includes(e.shadowId)&&(r.push(e.shadowId),!0)}).map(function(e){return{shadowId:e.shadowId,rootNode:axe.utils.getRootNode(e.actualNode)}}),axe.utils.uniqueArray(n,[]));if(!i.length)return Promise.resolve();var u,c,s=document.implementation.createHTMLDocument(\"Dynamic document for loading cssom\"),l=axe.utils.getStyleSheetFactory(s);return u=l,c=[],i.forEach(function(e,t){var r=e.rootNode,n=e.shadowId,a=function(e,t,r){return function(e){var t=[];return e.filter(function(e){return!e.href||!t.includes(e.href)&&(t.push(e.href),!0)})}(11===e.nodeType&&t?function(o,i){return Array.from(o.children).filter(Ue).reduce(function(e,t){var r=t.nodeName.toUpperCase(),n=\"STYLE\"===r?t.textContent:t,a=i({data:n,isLink:\"LINK\"===r,root:o});return e.push(a.sheet),e},[])}(e,r):function(e){return Array.from(e.styleSheets).filter(function(e){return He(e.media.mediaText)})}(e))}(r,n,u);if(!a)return Promise.all(c);var o=t+1,i={rootNode:r,shadowId:n,convertDataToStylesheet:u,rootIndex:o},s=[],l=Promise.all(a.map(function(e,t){var r=[o,t];return axe.utils.parseStylesheet(e,i,r,s)}));c.push(l)}),Promise.all(c).then(function(e){return function r(e){return e.reduce(function(e,t){return Array.isArray(t)?e.concat(r(t)):e.concat(t)},[])}(e)})},axe.utils.preloadMedia=function(e){var t=e.treeRoot,r=void 0===t?axe._tree[0]:t,n=axe.utils.querySelectorAllFilter(r,\"video, audio\",function(e){var t=e.actualNode;return t.hasAttribute(\"src\")?!!t.getAttribute(\"src\"):!(Array.from(t.getElementsByTagName(\"source\")).filter(function(e){return!!e.getAttribute(\"src\")}).length<=0)});return Promise.all(n.map(function(e){var r,t=e.actualNode;return r=t,new Promise(function(t){0<r.readyState&&t(r),r.addEventListener(\"loadedmetadata\",function e(){r.removeEventListener(\"loadedmetadata\",e),t(r)})})}))},axe.utils.shouldPreload=function(e){return!e||void 0===e.preload||null===e.preload||(\"boolean\"==typeof e.preload?e.preload:(t=e.preload,\"object\"===W(t)&&Array.isArray(t.assets)));var t},axe.utils.getPreloadConfig=function(e){var t=axe.constants.preload,r=t.assets,n=t.timeout,a={assets:r,timeout:n};if(!e.preload)return a;if(\"boolean\"==typeof e.preload)return a;if(!e.preload.assets.every(function(e){return r.includes(e.toLowerCase())}))throw new Error(\"Requested assets, not supported. \"+\"Supported assets are: \".concat(r.join(\", \"),\".\"));return a.assets=axe.utils.uniqueArray(e.preload.assets.map(function(e){return e.toLowerCase()}),[]),e.preload.timeout&&\"number\"==typeof e.preload.timeout&&!isNaN(e.preload.timeout)&&(a.timeout=e.preload.timeout),a},axe.utils.preload=function(i){var s={cssom:axe.utils.preloadCssom,media:axe.utils.preloadMedia};return axe.utils.shouldPreload(i)?new Promise(function(r,t){var e=axe.utils.getPreloadConfig(i),n=e.assets,a=e.timeout,o=setTimeout(function(){return t(new Error(\"Preload assets timed out.\"))},a);Promise.all(n.map(function(a){return s[a](i).then(function(e){return n=e,(r=a)in(t={})?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t;var t,r,n})})).then(function(e){var t=e.reduce(function(e,t){return Y({},e,{},t)},{});clearTimeout(o),r(t)}).catch(function(e){clearTimeout(o),t(e)})}):Promise.resolve()};var $e,Ge=/\\$\\{\\s?data\\s?\\}/g;function We(e,t){if(\"string\"==typeof t)return e.replace(Ge,t);for(var r in t)if(t.hasOwnProperty(r)){var n=new RegExp(\"\\\\${\\\\s?data\\\\.\"+r+\"\\\\s?}\",\"g\");e=e.replace(n,t[r])}return e}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function Ye(a,o){\"use strict\";return function(e){var t=a[e.id]||{},r=t.messages||{},n=Object.assign({},t);delete n.messages,void 0===e.result?(\"object\"!==W(r.incomplete)||Array.isArray(e.data)||(n.message=function(t,r){function n(e){return e.incomplete&&e.incomplete.default?e.incomplete.default:s.incompleteFallbackMessage()}if(!t||!t.missingData)return t&&t.messageKey?r.incomplete[t.messageKey]:n(r);try{var e=r.incomplete[t.missingData[0].reason];if(!e)throw new Error;return e}catch(e){return\"string\"==typeof t.missingData?r.incomplete[t.missingData]:n(r)}}(e.data,r)),n.message||(n.message=r.incomplete)):n.message=e.result===o?r.pass:r.fail,\"function\"!=typeof n.message&&(n.message=axe.utils.processMessage(n.message,e.data)),axe.utils.extendMetaData(e,n)}}function Ke(e,t,r,n){var a={vNodes:e.slice(),anyLevel:t,thisLevel:r,parentShadowId:n};return a.vNodes.reverse(),a}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function Xe(t,e){\"use strict\";var r,n,a=axe._audit&&axe._audit.tagExclude?axe._audit.tagExclude:[];return n=e.hasOwnProperty(\"include\")||e.hasOwnProperty(\"exclude\")?(r=e.include||[],r=Array.isArray(r)?r:[r],n=e.exclude||[],(n=Array.isArray(n)?n:[n]).concat(a.filter(function(e){return-1===r.indexOf(e)}))):(r=Array.isArray(e)?e:[e],a.filter(function(e){return-1===r.indexOf(e)})),!!(r.some(function(e){return-1!==t.tags.indexOf(e)})||0===r.length&&!1!==t.enabled)&&n.every(function(e){return-1===t.tags.indexOf(e)})}function Je(e){\"use strict\";return e.sort(function(e,t){return axe.utils.contains(e,t)?1:-1})[0]}function Ze(t,e){\"use strict\";var r=e.include&&Je(e.include.filter(function(e){return axe.utils.contains(e,t)})),n=e.exclude&&Je(e.exclude.filter(function(e){return axe.utils.contains(e,t)}));return!!(!n&&r||n&&axe.utils.contains(n,r))}function Qe(e,t){\"use strict\";var r;if(0===e.length)return t;e.length<t.length&&(r=e,e=t,t=r);for(var n=0,a=t.length;n<a;n++)e.includes(t[n])||e.push(t[n]);return e}axe.utils.processMessage=function e(t,r){if(t){if(Array.isArray(r))return(r.values=r.join(\", \"),\"string\"!=typeof t.singular||\"string\"!=typeof t.plural)?We(t,r):We(1===r.length?t.singular:t.plural,r);if(\"string\"==typeof t)return We(t,r);if(\"string\"==typeof r)return We(t[r],r);var n=t.default||s.incompleteFallbackMessage();return r&&r.messageKey&&t[r.messageKey]&&(n=t[r.messageKey]),e(n,r)}},axe.utils.publishMetaData=function(e){\"use strict\";var t=axe._audit.data.checks||{},r=axe._audit.data.rules||{},n=axe.utils.findBy(axe._audit.rules,\"id\",e.id)||{};e.tags=axe.utils.clone(n.tags||[]);var a=Ye(t,!0),o=Ye(t,!1);e.nodes.forEach(function(e){e.any.forEach(a),e.all.forEach(a),e.none.forEach(o)}),axe.utils.extendMetaData(e,axe.utils.clone(r[e.id]||{}))},axe.utils.querySelectorAll=function(e,t){return axe.utils.querySelectorAllFilter(e,t)},axe.utils.querySelectorAllFilter=function(e,t,r){return function(e,t,r){for(var n=[],a=Ke(Array.isArray(e)?e:[e],t,[],e[0].shadowId),o=[];a.vNodes.length;){for(var i=a.vNodes.pop(),s=[],l=[],u=a.anyLevel.slice().concat(a.thisLevel),c=!1,d=0;d<u.length;d++){var p=u[d];if((!p[0].id||i.shadowId===a.parentShadowId)&&axe.utils.matchesExpression(i,p[0]))if(1===p.length)c||r&&!r(i)||(o.push(i),c=!0);else{var m=p.slice(1);if(!1===[\" \",\">\"].includes(m[0].combinator))throw new Error(\"axe.utils.querySelectorAll does not support the combinator: \"+p[1].combinator);\">\"===m[0].combinator?s.push(m):l.push(m)}p[0].id&&i.shadowId!==a.parentShadowId||!a.anyLevel.includes(p)||l.push(p)}for(i.children&&i.children.length&&(n.push(a),a=Ke(i.children,l,s,i.shadowId));!a.vNodes.length&&n.length;)a=n.pop()}return o}(e=Array.isArray(e)?e:[e],axe.utils.convertSelector(t),r)},function(){\"use strict\";function p(){}function m(e){if(\"function\"!=typeof e)throw new TypeError(\"Queue methods require functions as arguments\")}axe.utils.queue=function(){function t(e){n=e,setTimeout(function(){null!=n&&axe.log(\"Uncaught error (of queue)\",n)},1)}var n,a=[],o=0,i=0,r=p,s=!1,l=t;function u(t){return function(e){a[t]=e,--i||r===p||(s=!0,r(a))}}function c(e){return r=p,l(e),a}var d={defer:function(e){if(\"object\"===W(e)&&e.then&&e.catch){var r=e;e=function(e,t){r.then(e).catch(t)}}if(m(e),void 0===n){if(s)throw new Error(\"Queue already completed\");return a.push(e),++i,function(){for(var e=a.length;o<e;o++){var t=a[o];try{t.call(null,u(o),c)}catch(e){c(e)}}}(),d}},then:function(e){if(m(e),r!==p)throw new Error(\"queue `then` already set\");return n||(r=e,i||(s=!0,r(a))),d},catch:function(e){if(m(e),l!==t)throw new Error(\"queue `catch` already set\");return n?(e(n),n=null):l=e,d},abort:c};return d}}(),function(e){\"use strict\";var u={},i={},s=Object.freeze([\"EvalError\",\"RangeError\",\"ReferenceError\",\"SyntaxError\",\"TypeError\",\"URIError\"]);function c(){var e=\"axeAPI\",t=\"\";return void 0!==axe&&axe._audit&&axe._audit.application&&(e=axe._audit.application),void 0!==axe&&(t=axe.version),e+\".\"+t}function l(e,t,r,n,a,o){var i;r instanceof Error&&(i={name:r.name,message:r.message,stack:r.stack},r=void 0);var s={uuid:n,topic:t,message:r,error:i,_respondable:!0,_source:c(),_axeuuid:axe._uuid,_keepalive:a},l=axe._cache.get(\"axeRespondables\");l||(l={},axe._cache.set(\"axeRespondables\",l)),l[n]=!0,\"function\"==typeof o&&(u[n]=o),e.postMessage(JSON.stringify(s),\"*\")}function t(e,t,r,n,a){l(e,t,r,$e.v1(),n,a)}function d(n,a,o){return function(e,t,r){l(n,a,e,o,t,r)}}function o(e){var t;if(\"string\"==typeof e){try{t=JSON.parse(e)}catch(e){}var r,n,a,o;if(function(e){if(\"object\"===W(e)&&\"string\"==typeof e.uuid&&!0===e._respondable){var t=c();return e._source===t||\"axeAPI.x.y.z\"===e._source||\"axeAPI.x.y.z\"===t}}(t))return\"object\"===W(t.error)?t.error=(r=t.error,n=r.message||\"Unknown error occurred\",a=s.includes(r.name)?r.name:\"Error\",o=window[a]||Error,r.stack&&(n+=\"\\n\"+r.stack.replace(r.message,\"\")),new o(n)):t.error=void 0,t}}t.subscribe=function(e,t){i[e]=t},t.isInFrame=function(e){return!!(e=e||window).frameElement},\"function\"==typeof window.addEventListener&&window.addEventListener(\"message\",function(t){var e=o(t.data);if(e&&e._axeuuid){var r=e.uuid;if(!(axe._cache.get(\"axeRespondables\")||{})[r]||e._axeuuid!==axe._uuid){var n=e._keepalive,a=u[r];if(a)a(e.error||e.message,n,d(t.source,e.topic,r)),n||delete u[r];if(!e.error)try{!function(e,t,r){var n=t.topic,a=i[n];if(a){var o=d(e,null,t.uuid);a(t.message,r,o)}}(t.source,e,n)}catch(e){l(t.source,null,e,r,!1)}}}},!1),e.respondable=t}(utils),axe.utils.ruleShouldRun=function(e,t,r){\"use strict\";var n=r.runOnly||{},a=(r.rules||{})[e.id];return!(e.pageLevel&&!t.page)&&(\"rule\"===n.type?-1!==n.values.indexOf(e.id):a&&\"boolean\"==typeof a.enabled?a.enabled:\"tag\"===n.type&&n.values?Xe(e,n.values):Xe(e,[]))},axe.utils.getScrollState=function(e){var t=0<arguments.length&&void 0!==e?e:window,r=t.document.documentElement;return[void 0!==t.pageXOffset?{elm:t,top:t.pageYOffset,left:t.pageXOffset}:{elm:r,top:r.scrollTop,left:r.scrollLeft}].concat(function n(e){return Array.from(e.children||e.childNodes||[]).reduce(function(e,t){var r=axe.utils.getScroll(t);return r&&e.push(r),e.concat(n(t))},[])}(document.body))},axe.utils.setScrollState=function(e){e.forEach(function(e){return function(e,t,r){if(e===window)return e.scroll(r,t);e.scrollTop=t,e.scrollLeft=r}(e.elm,e.top,e.left)})},axe.utils.select=function(e,t){\"use strict\";var r,n=[];if(axe._selectCache)for(var a=0,o=axe._selectCache.length;a<o;a++){var i=axe._selectCache[a];if(i.selector===e)return i.result}for(var s,l=function(e){return Ze(e,s)},u=(s=t).include.reduce(function(e,t){return e.length&&axe.utils.contains(e[e.length-1],t)||e.push(t),e},[]),c=0;c<u.length;c++)r=u[c],n=Qe(n,axe.utils.querySelectorAllFilter(r,e,l));return axe._selectCache&&axe._selectCache.push({selector:e,result:n}),n},axe.utils.toArray=function(e){\"use strict\";return Array.prototype.slice.call(e)},axe.utils.uniqueArray=function(e,t){return e.concat(t).filter(function(e,t,r){return r.indexOf(e)===t})},axe.utils.tokenList=function(e){\"use strict\";return e.trim().replace(/\\s{2,}/g,\" \").split(\" \")},function(e){var i,t=e.crypto||e.msCrypto;if(!i&&t&&t.getRandomValues){var r=new Uint8Array(16);i=function(){return t.getRandomValues(r),r}}if(!i){var n=new Array(16);i=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),n[t]=e>>>((3&t)<<3)&255;return n}}for(var s=\"function\"==typeof e.Buffer?e.Buffer:Array,a=[],o={},l=0;l<256;l++)a[l]=(l+256).toString(16).substr(1),o[a[l]]=l;function m(e,t){var r=t||0;return a[e[r++]]+a[e[r++]]+a[e[r++]]+a[e[r++]]+\"-\"+a[e[r++]]+a[e[r++]]+\"-\"+a[e[r++]]+a[e[r++]]+\"-\"+a[e[r++]]+a[e[r++]]+\"-\"+a[e[r++]]+a[e[r++]]+a[e[r++]]+a[e[r++]]+a[e[r++]]+a[e[r++]]}var u=i(),f=[1|u[0],u[1],u[2],u[3],u[4],u[5]],h=16383&(u[6]<<8|u[7]),b=0,g=0;function c(e,t,r){var n=t&&r||0,a=t||[],o=null!=(e=e||{}).clockseq?e.clockseq:h,i=null!=e.msecs?e.msecs:(new Date).getTime(),s=null!=e.nsecs?e.nsecs:g+1,l=i-b+(s-g)/1e4;if(l<0&&null==e.clockseq&&(o=o+1&16383),(l<0||b<i)&&null==e.nsecs&&(s=0),1e4<=s)throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");b=i,h=o;var u=(1e4*(268435455&(i+=122192928e5))+(g=s))%4294967296;a[n++]=u>>>24&255,a[n++]=u>>>16&255,a[n++]=u>>>8&255,a[n++]=255&u;var c=i/4294967296*1e4&268435455;a[n++]=c>>>8&255,a[n++]=255&c,a[n++]=c>>>24&15|16,a[n++]=c>>>16&255,a[n++]=o>>>8|128,a[n++]=255&o;for(var d=e.node||f,p=0;p<6;p++)a[n+p]=d[p];return t||m(a)}function d(e,t,r){var n=t&&r||0;\"string\"==typeof e&&(t=\"binary\"==e?new s(16):null,e=null);var a=(e=e||{}).random||(e.rng||i)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t)for(var o=0;o<16;o++)t[n+o]=a[o];return t||m(a)}($e=d).v1=c,$e.v4=d,$e.parse=function(e,t,r){var n=t&&r||0,a=0;for(t=t||[],e.toLowerCase().replace(/[0-9a-f]{2}/g,function(e){a<16&&(t[n+a++]=o[e])});a<16;)t[n+a++]=0;return t},$e.unparse=m,$e.BufferClass=s,axe._uuid=c()}(window),axe.utils.validInputTypes=function(){\"use strict\";return[\"hidden\",\"text\",\"search\",\"tel\",\"url\",\"email\",\"password\",\"date\",\"month\",\"week\",\"time\",\"datetime-local\",\"number\",\"range\",\"color\",\"checkbox\",\"radio\",\"file\",\"submit\",\"image\",\"reset\",\"button\"]};var et=[\"aa\",\"ab\",\"ae\",\"af\",\"ak\",\"am\",\"an\",\"ar\",\"as\",\"av\",\"ay\",\"az\",\"ba\",\"be\",\"bg\",\"bh\",\"bi\",\"bm\",\"bn\",\"bo\",\"br\",\"bs\",\"ca\",\"ce\",\"ch\",\"co\",\"cr\",\"cs\",\"cu\",\"cv\",\"cy\",\"da\",\"de\",\"dv\",\"dz\",\"ee\",\"el\",\"en\",\"eo\",\"es\",\"et\",\"eu\",\"fa\",\"ff\",\"fi\",\"fj\",\"fo\",\"fr\",\"fy\",\"ga\",\"gd\",\"gl\",\"gn\",\"gu\",\"gv\",\"ha\",\"he\",\"hi\",\"ho\",\"hr\",\"ht\",\"hu\",\"hy\",\"hz\",\"ia\",\"id\",\"ie\",\"ig\",\"ii\",\"ik\",\"in\",\"io\",\"is\",\"it\",\"iu\",\"iw\",\"ja\",\"ji\",\"jv\",\"jw\",\"ka\",\"kg\",\"ki\",\"kj\",\"kk\",\"kl\",\"km\",\"kn\",\"ko\",\"kr\",\"ks\",\"ku\",\"kv\",\"kw\",\"ky\",\"la\",\"lb\",\"lg\",\"li\",\"ln\",\"lo\",\"lt\",\"lu\",\"lv\",\"mg\",\"mh\",\"mi\",\"mk\",\"ml\",\"mn\",\"mo\",\"mr\",\"ms\",\"mt\",\"my\",\"na\",\"nb\",\"nd\",\"ne\",\"ng\",\"nl\",\"nn\",\"no\",\"nr\",\"nv\",\"ny\",\"oc\",\"oj\",\"om\",\"or\",\"os\",\"pa\",\"pi\",\"pl\",\"ps\",\"pt\",\"qu\",\"rm\",\"rn\",\"ro\",\"ru\",\"rw\",\"sa\",\"sc\",\"sd\",\"se\",\"sg\",\"sh\",\"si\",\"sk\",\"sl\",\"sm\",\"sn\",\"so\",\"sq\",\"sr\",\"ss\",\"st\",\"su\",\"sv\",\"sw\",\"ta\",\"te\",\"tg\",\"th\",\"ti\",\"tk\",\"tl\",\"tn\",\"to\",\"tr\",\"ts\",\"tt\",\"tw\",\"ty\",\"ug\",\"uk\",\"ur\",\"uz\",\"ve\",\"vi\",\"vo\",\"wa\",\"wo\",\"xh\",\"yi\",\"yo\",\"za\",\"zh\",\"zu\",\"aaa\",\"aab\",\"aac\",\"aad\",\"aae\",\"aaf\",\"aag\",\"aah\",\"aai\",\"aak\",\"aal\",\"aam\",\"aan\",\"aao\",\"aap\",\"aaq\",\"aas\",\"aat\",\"aau\",\"aav\",\"aaw\",\"aax\",\"aaz\",\"aba\",\"abb\",\"abc\",\"abd\",\"abe\",\"abf\",\"abg\",\"abh\",\"abi\",\"abj\",\"abl\",\"abm\",\"abn\",\"abo\",\"abp\",\"abq\",\"abr\",\"abs\",\"abt\",\"abu\",\"abv\",\"abw\",\"abx\",\"aby\",\"abz\",\"aca\",\"acb\",\"acd\",\"ace\",\"acf\",\"ach\",\"aci\",\"ack\",\"acl\",\"acm\",\"acn\",\"acp\",\"acq\",\"acr\",\"acs\",\"act\",\"acu\",\"acv\",\"acw\",\"acx\",\"acy\",\"acz\",\"ada\",\"adb\",\"add\",\"ade\",\"adf\",\"adg\",\"adh\",\"adi\",\"adj\",\"adl\",\"adn\",\"ado\",\"adp\",\"adq\",\"adr\",\"ads\",\"adt\",\"adu\",\"adw\",\"adx\",\"ady\",\"adz\",\"aea\",\"aeb\",\"aec\",\"aed\",\"aee\",\"aek\",\"ael\",\"aem\",\"aen\",\"aeq\",\"aer\",\"aes\",\"aeu\",\"aew\",\"aey\",\"aez\",\"afa\",\"afb\",\"afd\",\"afe\",\"afg\",\"afh\",\"afi\",\"afk\",\"afn\",\"afo\",\"afp\",\"afs\",\"aft\",\"afu\",\"afz\",\"aga\",\"agb\",\"agc\",\"agd\",\"age\",\"agf\",\"agg\",\"agh\",\"agi\",\"agj\",\"agk\",\"agl\",\"agm\",\"agn\",\"ago\",\"agp\",\"agq\",\"agr\",\"ags\",\"agt\",\"agu\",\"agv\",\"agw\",\"agx\",\"agy\",\"agz\",\"aha\",\"ahb\",\"ahg\",\"ahh\",\"ahi\",\"ahk\",\"ahl\",\"ahm\",\"ahn\",\"aho\",\"ahp\",\"ahr\",\"ahs\",\"aht\",\"aia\",\"aib\",\"aic\",\"aid\",\"aie\",\"aif\",\"aig\",\"aih\",\"aii\",\"aij\",\"aik\",\"ail\",\"aim\",\"ain\",\"aio\",\"aip\",\"aiq\",\"air\",\"ais\",\"ait\",\"aiw\",\"aix\",\"aiy\",\"aja\",\"ajg\",\"aji\",\"ajn\",\"ajp\",\"ajt\",\"aju\",\"ajw\",\"ajz\",\"akb\",\"akc\",\"akd\",\"ake\",\"akf\",\"akg\",\"akh\",\"aki\",\"akj\",\"akk\",\"akl\",\"akm\",\"ako\",\"akp\",\"akq\",\"akr\",\"aks\",\"akt\",\"aku\",\"akv\",\"akw\",\"akx\",\"aky\",\"akz\",\"ala\",\"alc\",\"ald\",\"ale\",\"alf\",\"alg\",\"alh\",\"ali\",\"alj\",\"alk\",\"all\",\"alm\",\"aln\",\"alo\",\"alp\",\"alq\",\"alr\",\"als\",\"alt\",\"alu\",\"alv\",\"alw\",\"alx\",\"aly\",\"alz\",\"ama\",\"amb\",\"amc\",\"ame\",\"amf\",\"amg\",\"ami\",\"amj\",\"amk\",\"aml\",\"amm\",\"amn\",\"amo\",\"amp\",\"amq\",\"amr\",\"ams\",\"amt\",\"amu\",\"amv\",\"amw\",\"amx\",\"amy\",\"amz\",\"ana\",\"anb\",\"anc\",\"and\",\"ane\",\"anf\",\"ang\",\"anh\",\"ani\",\"anj\",\"ank\",\"anl\",\"anm\",\"ann\",\"ano\",\"anp\",\"anq\",\"anr\",\"ans\",\"ant\",\"anu\",\"anv\",\"anw\",\"anx\",\"any\",\"anz\",\"aoa\",\"aob\",\"aoc\",\"aod\",\"aoe\",\"aof\",\"aog\",\"aoh\",\"aoi\",\"aoj\",\"aok\",\"aol\",\"aom\",\"aon\",\"aor\",\"aos\",\"aot\",\"aou\",\"aox\",\"aoz\",\"apa\",\"apb\",\"apc\",\"apd\",\"ape\",\"apf\",\"apg\",\"aph\",\"api\",\"apj\",\"apk\",\"apl\",\"apm\",\"apn\",\"apo\",\"app\",\"apq\",\"apr\",\"aps\",\"apt\",\"apu\",\"apv\",\"apw\",\"apx\",\"apy\",\"apz\",\"aqa\",\"aqc\",\"aqd\",\"aqg\",\"aql\",\"aqm\",\"aqn\",\"aqp\",\"aqr\",\"aqt\",\"aqz\",\"arb\",\"arc\",\"ard\",\"are\",\"arh\",\"ari\",\"arj\",\"ark\",\"arl\",\"arn\",\"aro\",\"arp\",\"arq\",\"arr\",\"ars\",\"art\",\"aru\",\"arv\",\"arw\",\"arx\",\"ary\",\"arz\",\"asa\",\"asb\",\"asc\",\"asd\",\"ase\",\"asf\",\"asg\",\"ash\",\"asi\",\"asj\",\"ask\",\"asl\",\"asn\",\"aso\",\"asp\",\"asq\",\"asr\",\"ass\",\"ast\",\"asu\",\"asv\",\"asw\",\"asx\",\"asy\",\"asz\",\"ata\",\"atb\",\"atc\",\"atd\",\"ate\",\"atg\",\"ath\",\"ati\",\"atj\",\"atk\",\"atl\",\"atm\",\"atn\",\"ato\",\"atp\",\"atq\",\"atr\",\"ats\",\"att\",\"atu\",\"atv\",\"atw\",\"atx\",\"aty\",\"atz\",\"aua\",\"aub\",\"auc\",\"aud\",\"aue\",\"auf\",\"aug\",\"auh\",\"aui\",\"auj\",\"auk\",\"aul\",\"aum\",\"aun\",\"auo\",\"aup\",\"auq\",\"aur\",\"aus\",\"aut\",\"auu\",\"auw\",\"aux\",\"auy\",\"auz\",\"avb\",\"avd\",\"avi\",\"avk\",\"avl\",\"avm\",\"avn\",\"avo\",\"avs\",\"avt\",\"avu\",\"avv\",\"awa\",\"awb\",\"awc\",\"awd\",\"awe\",\"awg\",\"awh\",\"awi\",\"awk\",\"awm\",\"awn\",\"awo\",\"awr\",\"aws\",\"awt\",\"awu\",\"awv\",\"aww\",\"awx\",\"awy\",\"axb\",\"axe\",\"axg\",\"axk\",\"axl\",\"axm\",\"axx\",\"aya\",\"ayb\",\"ayc\",\"ayd\",\"aye\",\"ayg\",\"ayh\",\"ayi\",\"ayk\",\"ayl\",\"ayn\",\"ayo\",\"ayp\",\"ayq\",\"ayr\",\"ays\",\"ayt\",\"ayu\",\"ayx\",\"ayy\",\"ayz\",\"aza\",\"azb\",\"azc\",\"azd\",\"azg\",\"azj\",\"azm\",\"azn\",\"azo\",\"azt\",\"azz\",\"baa\",\"bab\",\"bac\",\"bad\",\"bae\",\"baf\",\"bag\",\"bah\",\"bai\",\"baj\",\"bal\",\"ban\",\"bao\",\"bap\",\"bar\",\"bas\",\"bat\",\"bau\",\"bav\",\"baw\",\"bax\",\"bay\",\"baz\",\"bba\",\"bbb\",\"bbc\",\"bbd\",\"bbe\",\"bbf\",\"bbg\",\"bbh\",\"bbi\",\"bbj\",\"bbk\",\"bbl\",\"bbm\",\"bbn\",\"bbo\",\"bbp\",\"bbq\",\"bbr\",\"bbs\",\"bbt\",\"bbu\",\"bbv\",\"bbw\",\"bbx\",\"bby\",\"bbz\",\"bca\",\"bcb\",\"bcc\",\"bcd\",\"bce\",\"bcf\",\"bcg\",\"bch\",\"bci\",\"bcj\",\"bck\",\"bcl\",\"bcm\",\"bcn\",\"bco\",\"bcp\",\"bcq\",\"bcr\",\"bcs\",\"bct\",\"bcu\",\"bcv\",\"bcw\",\"bcy\",\"bcz\",\"bda\",\"bdb\",\"bdc\",\"bdd\",\"bde\",\"bdf\",\"bdg\",\"bdh\",\"bdi\",\"bdj\",\"bdk\",\"bdl\",\"bdm\",\"bdn\",\"bdo\",\"bdp\",\"bdq\",\"bdr\",\"bds\",\"bdt\",\"bdu\",\"bdv\",\"bdw\",\"bdx\",\"bdy\",\"bdz\",\"bea\",\"beb\",\"bec\",\"bed\",\"bee\",\"bef\",\"beg\",\"beh\",\"bei\",\"bej\",\"bek\",\"bem\",\"beo\",\"bep\",\"beq\",\"ber\",\"bes\",\"bet\",\"beu\",\"bev\",\"bew\",\"bex\",\"bey\",\"bez\",\"bfa\",\"bfb\",\"bfc\",\"bfd\",\"bfe\",\"bff\",\"bfg\",\"bfh\",\"bfi\",\"bfj\",\"bfk\",\"bfl\",\"bfm\",\"bfn\",\"bfo\",\"bfp\",\"bfq\",\"bfr\",\"bfs\",\"bft\",\"bfu\",\"bfw\",\"bfx\",\"bfy\",\"bfz\",\"bga\",\"bgb\",\"bgc\",\"bgd\",\"bge\",\"bgf\",\"bgg\",\"bgi\",\"bgj\",\"bgk\",\"bgl\",\"bgm\",\"bgn\",\"bgo\",\"bgp\",\"bgq\",\"bgr\",\"bgs\",\"bgt\",\"bgu\",\"bgv\",\"bgw\",\"bgx\",\"bgy\",\"bgz\",\"bha\",\"bhb\",\"bhc\",\"bhd\",\"bhe\",\"bhf\",\"bhg\",\"bhh\",\"bhi\",\"bhj\",\"bhk\",\"bhl\",\"bhm\",\"bhn\",\"bho\",\"bhp\",\"bhq\",\"bhr\",\"bhs\",\"bht\",\"bhu\",\"bhv\",\"bhw\",\"bhx\",\"bhy\",\"bhz\",\"bia\",\"bib\",\"bic\",\"bid\",\"bie\",\"bif\",\"big\",\"bij\",\"bik\",\"bil\",\"bim\",\"bin\",\"bio\",\"bip\",\"biq\",\"bir\",\"bit\",\"biu\",\"biv\",\"biw\",\"bix\",\"biy\",\"biz\",\"bja\",\"bjb\",\"bjc\",\"bjd\",\"bje\",\"bjf\",\"bjg\",\"bjh\",\"bji\",\"bjj\",\"bjk\",\"bjl\",\"bjm\",\"bjn\",\"bjo\",\"bjp\",\"bjq\",\"bjr\",\"bjs\",\"bjt\",\"bju\",\"bjv\",\"bjw\",\"bjx\",\"bjy\",\"bjz\",\"bka\",\"bkb\",\"bkc\",\"bkd\",\"bkf\",\"bkg\",\"bkh\",\"bki\",\"bkj\",\"bkk\",\"bkl\",\"bkm\",\"bkn\",\"bko\",\"bkp\",\"bkq\",\"bkr\",\"bks\",\"bkt\",\"bku\",\"bkv\",\"bkw\",\"bkx\",\"bky\",\"bkz\",\"bla\",\"blb\",\"blc\",\"bld\",\"ble\",\"blf\",\"blg\",\"blh\",\"bli\",\"blj\",\"blk\",\"bll\",\"blm\",\"bln\",\"blo\",\"blp\",\"blq\",\"blr\",\"bls\",\"blt\",\"blv\",\"blw\",\"blx\",\"bly\",\"blz\",\"bma\",\"bmb\",\"bmc\",\"bmd\",\"bme\",\"bmf\",\"bmg\",\"bmh\",\"bmi\",\"bmj\",\"bmk\",\"bml\",\"bmm\",\"bmn\",\"bmo\",\"bmp\",\"bmq\",\"bmr\",\"bms\",\"bmt\",\"bmu\",\"bmv\",\"bmw\",\"bmx\",\"bmy\",\"bmz\",\"bna\",\"bnb\",\"bnc\",\"bnd\",\"bne\",\"bnf\",\"bng\",\"bni\",\"bnj\",\"bnk\",\"bnl\",\"bnm\",\"bnn\",\"bno\",\"bnp\",\"bnq\",\"bnr\",\"bns\",\"bnt\",\"bnu\",\"bnv\",\"bnw\",\"bnx\",\"bny\",\"bnz\",\"boa\",\"bob\",\"boe\",\"bof\",\"bog\",\"boh\",\"boi\",\"boj\",\"bok\",\"bol\",\"bom\",\"bon\",\"boo\",\"bop\",\"boq\",\"bor\",\"bot\",\"bou\",\"bov\",\"bow\",\"box\",\"boy\",\"boz\",\"bpa\",\"bpb\",\"bpd\",\"bpg\",\"bph\",\"bpi\",\"bpj\",\"bpk\",\"bpl\",\"bpm\",\"bpn\",\"bpo\",\"bpp\",\"bpq\",\"bpr\",\"bps\",\"bpt\",\"bpu\",\"bpv\",\"bpw\",\"bpx\",\"bpy\",\"bpz\",\"bqa\",\"bqb\",\"bqc\",\"bqd\",\"bqf\",\"bqg\",\"bqh\",\"bqi\",\"bqj\",\"bqk\",\"bql\",\"bqm\",\"bqn\",\"bqo\",\"bqp\",\"bqq\",\"bqr\",\"bqs\",\"bqt\",\"bqu\",\"bqv\",\"bqw\",\"bqx\",\"bqy\",\"bqz\",\"bra\",\"brb\",\"brc\",\"brd\",\"brf\",\"brg\",\"brh\",\"bri\",\"brj\",\"brk\",\"brl\",\"brm\",\"brn\",\"bro\",\"brp\",\"brq\",\"brr\",\"brs\",\"brt\",\"bru\",\"brv\",\"brw\",\"brx\",\"bry\",\"brz\",\"bsa\",\"bsb\",\"bsc\",\"bse\",\"bsf\",\"bsg\",\"bsh\",\"bsi\",\"bsj\",\"bsk\",\"bsl\",\"bsm\",\"bsn\",\"bso\",\"bsp\",\"bsq\",\"bsr\",\"bss\",\"bst\",\"bsu\",\"bsv\",\"bsw\",\"bsx\",\"bsy\",\"bta\",\"btb\",\"btc\",\"btd\",\"bte\",\"btf\",\"btg\",\"bth\",\"bti\",\"btj\",\"btk\",\"btl\",\"btm\",\"btn\",\"bto\",\"btp\",\"btq\",\"btr\",\"bts\",\"btt\",\"btu\",\"btv\",\"btw\",\"btx\",\"bty\",\"btz\",\"bua\",\"bub\",\"buc\",\"bud\",\"bue\",\"buf\",\"bug\",\"buh\",\"bui\",\"buj\",\"buk\",\"bum\",\"bun\",\"buo\",\"bup\",\"buq\",\"bus\",\"but\",\"buu\",\"buv\",\"buw\",\"bux\",\"buy\",\"buz\",\"bva\",\"bvb\",\"bvc\",\"bvd\",\"bve\",\"bvf\",\"bvg\",\"bvh\",\"bvi\",\"bvj\",\"bvk\",\"bvl\",\"bvm\",\"bvn\",\"bvo\",\"bvp\",\"bvq\",\"bvr\",\"bvt\",\"bvu\",\"bvv\",\"bvw\",\"bvx\",\"bvy\",\"bvz\",\"bwa\",\"bwb\",\"bwc\",\"bwd\",\"bwe\",\"bwf\",\"bwg\",\"bwh\",\"bwi\",\"bwj\",\"bwk\",\"bwl\",\"bwm\",\"bwn\",\"bwo\",\"bwp\",\"bwq\",\"bwr\",\"bws\",\"bwt\",\"bwu\",\"bww\",\"bwx\",\"bwy\",\"bwz\",\"bxa\",\"bxb\",\"bxc\",\"bxd\",\"bxe\",\"bxf\",\"bxg\",\"bxh\",\"bxi\",\"bxj\",\"bxk\",\"bxl\",\"bxm\",\"bxn\",\"bxo\",\"bxp\",\"bxq\",\"bxr\",\"bxs\",\"bxu\",\"bxv\",\"bxw\",\"bxx\",\"bxz\",\"bya\",\"byb\",\"byc\",\"byd\",\"bye\",\"byf\",\"byg\",\"byh\",\"byi\",\"byj\",\"byk\",\"byl\",\"bym\",\"byn\",\"byo\",\"byp\",\"byq\",\"byr\",\"bys\",\"byt\",\"byv\",\"byw\",\"byx\",\"byy\",\"byz\",\"bza\",\"bzb\",\"bzc\",\"bzd\",\"bze\",\"bzf\",\"bzg\",\"bzh\",\"bzi\",\"bzj\",\"bzk\",\"bzl\",\"bzm\",\"bzn\",\"bzo\",\"bzp\",\"bzq\",\"bzr\",\"bzs\",\"bzt\",\"bzu\",\"bzv\",\"bzw\",\"bzx\",\"bzy\",\"bzz\",\"caa\",\"cab\",\"cac\",\"cad\",\"cae\",\"caf\",\"cag\",\"cah\",\"cai\",\"caj\",\"cak\",\"cal\",\"cam\",\"can\",\"cao\",\"cap\",\"caq\",\"car\",\"cas\",\"cau\",\"cav\",\"caw\",\"cax\",\"cay\",\"caz\",\"cba\",\"cbb\",\"cbc\",\"cbd\",\"cbe\",\"cbg\",\"cbh\",\"cbi\",\"cbj\",\"cbk\",\"cbl\",\"cbn\",\"cbo\",\"cbq\",\"cbr\",\"cbs\",\"cbt\",\"cbu\",\"cbv\",\"cbw\",\"cby\",\"cca\",\"ccc\",\"ccd\",\"cce\",\"ccg\",\"cch\",\"ccj\",\"ccl\",\"ccm\",\"ccn\",\"cco\",\"ccp\",\"ccq\",\"ccr\",\"ccs\",\"cda\",\"cdc\",\"cdd\",\"cde\",\"cdf\",\"cdg\",\"cdh\",\"cdi\",\"cdj\",\"cdm\",\"cdn\",\"cdo\",\"cdr\",\"cds\",\"cdy\",\"cdz\",\"cea\",\"ceb\",\"ceg\",\"cek\",\"cel\",\"cen\",\"cet\",\"cfa\",\"cfd\",\"cfg\",\"cfm\",\"cga\",\"cgc\",\"cgg\",\"cgk\",\"chb\",\"chc\",\"chd\",\"chf\",\"chg\",\"chh\",\"chj\",\"chk\",\"chl\",\"chm\",\"chn\",\"cho\",\"chp\",\"chq\",\"chr\",\"cht\",\"chw\",\"chx\",\"chy\",\"chz\",\"cia\",\"cib\",\"cic\",\"cid\",\"cie\",\"cih\",\"cik\",\"cim\",\"cin\",\"cip\",\"cir\",\"ciw\",\"ciy\",\"cja\",\"cje\",\"cjh\",\"cji\",\"cjk\",\"cjm\",\"cjn\",\"cjo\",\"cjp\",\"cjr\",\"cjs\",\"cjv\",\"cjy\",\"cka\",\"ckb\",\"ckh\",\"ckl\",\"ckn\",\"cko\",\"ckq\",\"ckr\",\"cks\",\"ckt\",\"cku\",\"ckv\",\"ckx\",\"cky\",\"ckz\",\"cla\",\"clc\",\"cld\",\"cle\",\"clh\",\"cli\",\"clj\",\"clk\",\"cll\",\"clm\",\"clo\",\"clt\",\"clu\",\"clw\",\"cly\",\"cma\",\"cmc\",\"cme\",\"cmg\",\"cmi\",\"cmk\",\"cml\",\"cmm\",\"cmn\",\"cmo\",\"cmr\",\"cms\",\"cmt\",\"cna\",\"cnb\",\"cnc\",\"cng\",\"cnh\",\"cni\",\"cnk\",\"cnl\",\"cno\",\"cnr\",\"cns\",\"cnt\",\"cnu\",\"cnw\",\"cnx\",\"coa\",\"cob\",\"coc\",\"cod\",\"coe\",\"cof\",\"cog\",\"coh\",\"coj\",\"cok\",\"col\",\"com\",\"con\",\"coo\",\"cop\",\"coq\",\"cot\",\"cou\",\"cov\",\"cow\",\"cox\",\"coy\",\"coz\",\"cpa\",\"cpb\",\"cpc\",\"cpe\",\"cpf\",\"cpg\",\"cpi\",\"cpn\",\"cpo\",\"cpp\",\"cps\",\"cpu\",\"cpx\",\"cpy\",\"cqd\",\"cqu\",\"cra\",\"crb\",\"crc\",\"crd\",\"crf\",\"crg\",\"crh\",\"cri\",\"crj\",\"crk\",\"crl\",\"crm\",\"crn\",\"cro\",\"crp\",\"crq\",\"crr\",\"crs\",\"crt\",\"crv\",\"crw\",\"crx\",\"cry\",\"crz\",\"csa\",\"csb\",\"csc\",\"csd\",\"cse\",\"csf\",\"csg\",\"csh\",\"csi\",\"csj\",\"csk\",\"csl\",\"csm\",\"csn\",\"cso\",\"csq\",\"csr\",\"css\",\"cst\",\"csu\",\"csv\",\"csw\",\"csy\",\"csz\",\"cta\",\"ctc\",\"ctd\",\"cte\",\"ctg\",\"cth\",\"ctl\",\"ctm\",\"ctn\",\"cto\",\"ctp\",\"cts\",\"ctt\",\"ctu\",\"ctz\",\"cua\",\"cub\",\"cuc\",\"cug\",\"cuh\",\"cui\",\"cuj\",\"cuk\",\"cul\",\"cum\",\"cuo\",\"cup\",\"cuq\",\"cur\",\"cus\",\"cut\",\"cuu\",\"cuv\",\"cuw\",\"cux\",\"cuy\",\"cvg\",\"cvn\",\"cwa\",\"cwb\",\"cwd\",\"cwe\",\"cwg\",\"cwt\",\"cya\",\"cyb\",\"cyo\",\"czh\",\"czk\",\"czn\",\"czo\",\"czt\",\"daa\",\"dac\",\"dad\",\"dae\",\"daf\",\"dag\",\"dah\",\"dai\",\"daj\",\"dak\",\"dal\",\"dam\",\"dao\",\"dap\",\"daq\",\"dar\",\"das\",\"dau\",\"dav\",\"daw\",\"dax\",\"day\",\"daz\",\"dba\",\"dbb\",\"dbd\",\"dbe\",\"dbf\",\"dbg\",\"dbi\",\"dbj\",\"dbl\",\"dbm\",\"dbn\",\"dbo\",\"dbp\",\"dbq\",\"dbr\",\"dbt\",\"dbu\",\"dbv\",\"dbw\",\"dby\",\"dcc\",\"dcr\",\"dda\",\"ddd\",\"dde\",\"ddg\",\"ddi\",\"ddj\",\"ddn\",\"ddo\",\"ddr\",\"dds\",\"ddw\",\"dec\",\"ded\",\"dee\",\"def\",\"deg\",\"deh\",\"dei\",\"dek\",\"del\",\"dem\",\"den\",\"dep\",\"deq\",\"der\",\"des\",\"dev\",\"dez\",\"dga\",\"dgb\",\"dgc\",\"dgd\",\"dge\",\"dgg\",\"dgh\",\"dgi\",\"dgk\",\"dgl\",\"dgn\",\"dgo\",\"dgr\",\"dgs\",\"dgt\",\"dgu\",\"dgw\",\"dgx\",\"dgz\",\"dha\",\"dhd\",\"dhg\",\"dhi\",\"dhl\",\"dhm\",\"dhn\",\"dho\",\"dhr\",\"dhs\",\"dhu\",\"dhv\",\"dhw\",\"dhx\",\"dia\",\"dib\",\"dic\",\"did\",\"dif\",\"dig\",\"dih\",\"dii\",\"dij\",\"dik\",\"dil\",\"dim\",\"din\",\"dio\",\"dip\",\"diq\",\"dir\",\"dis\",\"dit\",\"diu\",\"diw\",\"dix\",\"diy\",\"diz\",\"dja\",\"djb\",\"djc\",\"djd\",\"dje\",\"djf\",\"dji\",\"djj\",\"djk\",\"djl\",\"djm\",\"djn\",\"djo\",\"djr\",\"dju\",\"djw\",\"dka\",\"dkk\",\"dkl\",\"dkr\",\"dks\",\"dkx\",\"dlg\",\"dlk\",\"dlm\",\"dln\",\"dma\",\"dmb\",\"dmc\",\"dmd\",\"dme\",\"dmg\",\"dmk\",\"dml\",\"dmm\",\"dmn\",\"dmo\",\"dmr\",\"dms\",\"dmu\",\"dmv\",\"dmw\",\"dmx\",\"dmy\",\"dna\",\"dnd\",\"dne\",\"dng\",\"dni\",\"dnj\",\"dnk\",\"dnn\",\"dnr\",\"dnt\",\"dnu\",\"dnv\",\"dnw\",\"dny\",\"doa\",\"dob\",\"doc\",\"doe\",\"dof\",\"doh\",\"doi\",\"dok\",\"dol\",\"don\",\"doo\",\"dop\",\"doq\",\"dor\",\"dos\",\"dot\",\"dov\",\"dow\",\"dox\",\"doy\",\"doz\",\"dpp\",\"dra\",\"drb\",\"drc\",\"drd\",\"dre\",\"drg\",\"drh\",\"dri\",\"drl\",\"drn\",\"dro\",\"drq\",\"drr\",\"drs\",\"drt\",\"dru\",\"drw\",\"dry\",\"dsb\",\"dse\",\"dsh\",\"dsi\",\"dsl\",\"dsn\",\"dso\",\"dsq\",\"dta\",\"dtb\",\"dtd\",\"dth\",\"dti\",\"dtk\",\"dtm\",\"dtn\",\"dto\",\"dtp\",\"dtr\",\"dts\",\"dtt\",\"dtu\",\"dty\",\"dua\",\"dub\",\"duc\",\"dud\",\"due\",\"duf\",\"dug\",\"duh\",\"dui\",\"duj\",\"duk\",\"dul\",\"dum\",\"dun\",\"duo\",\"dup\",\"duq\",\"dur\",\"dus\",\"duu\",\"duv\",\"duw\",\"dux\",\"duy\",\"duz\",\"dva\",\"dwa\",\"dwl\",\"dwr\",\"dws\",\"dwu\",\"dww\",\"dwy\",\"dya\",\"dyb\",\"dyd\",\"dyg\",\"dyi\",\"dym\",\"dyn\",\"dyo\",\"dyu\",\"dyy\",\"dza\",\"dzd\",\"dze\",\"dzg\",\"dzl\",\"dzn\",\"eaa\",\"ebg\",\"ebk\",\"ebo\",\"ebr\",\"ebu\",\"ecr\",\"ecs\",\"ecy\",\"eee\",\"efa\",\"efe\",\"efi\",\"ega\",\"egl\",\"ego\",\"egx\",\"egy\",\"ehu\",\"eip\",\"eit\",\"eiv\",\"eja\",\"eka\",\"ekc\",\"eke\",\"ekg\",\"eki\",\"ekk\",\"ekl\",\"ekm\",\"eko\",\"ekp\",\"ekr\",\"eky\",\"ele\",\"elh\",\"eli\",\"elk\",\"elm\",\"elo\",\"elp\",\"elu\",\"elx\",\"ema\",\"emb\",\"eme\",\"emg\",\"emi\",\"emk\",\"emm\",\"emn\",\"emo\",\"emp\",\"ems\",\"emu\",\"emw\",\"emx\",\"emy\",\"ena\",\"enb\",\"enc\",\"end\",\"enf\",\"enh\",\"enl\",\"enm\",\"enn\",\"eno\",\"enq\",\"enr\",\"enu\",\"env\",\"enw\",\"enx\",\"eot\",\"epi\",\"era\",\"erg\",\"erh\",\"eri\",\"erk\",\"ero\",\"err\",\"ers\",\"ert\",\"erw\",\"ese\",\"esg\",\"esh\",\"esi\",\"esk\",\"esl\",\"esm\",\"esn\",\"eso\",\"esq\",\"ess\",\"esu\",\"esx\",\"esy\",\"etb\",\"etc\",\"eth\",\"etn\",\"eto\",\"etr\",\"ets\",\"ett\",\"etu\",\"etx\",\"etz\",\"euq\",\"eve\",\"evh\",\"evn\",\"ewo\",\"ext\",\"eya\",\"eyo\",\"eza\",\"eze\",\"faa\",\"fab\",\"fad\",\"faf\",\"fag\",\"fah\",\"fai\",\"faj\",\"fak\",\"fal\",\"fam\",\"fan\",\"fap\",\"far\",\"fat\",\"fau\",\"fax\",\"fay\",\"faz\",\"fbl\",\"fcs\",\"fer\",\"ffi\",\"ffm\",\"fgr\",\"fia\",\"fie\",\"fil\",\"fip\",\"fir\",\"fit\",\"fiu\",\"fiw\",\"fkk\",\"fkv\",\"fla\",\"flh\",\"fli\",\"fll\",\"fln\",\"flr\",\"fly\",\"fmp\",\"fmu\",\"fnb\",\"fng\",\"fni\",\"fod\",\"foi\",\"fom\",\"fon\",\"for\",\"fos\",\"fox\",\"fpe\",\"fqs\",\"frc\",\"frd\",\"frk\",\"frm\",\"fro\",\"frp\",\"frq\",\"frr\",\"frs\",\"frt\",\"fse\",\"fsl\",\"fss\",\"fub\",\"fuc\",\"fud\",\"fue\",\"fuf\",\"fuh\",\"fui\",\"fuj\",\"fum\",\"fun\",\"fuq\",\"fur\",\"fut\",\"fuu\",\"fuv\",\"fuy\",\"fvr\",\"fwa\",\"fwe\",\"gaa\",\"gab\",\"gac\",\"gad\",\"gae\",\"gaf\",\"gag\",\"gah\",\"gai\",\"gaj\",\"gak\",\"gal\",\"gam\",\"gan\",\"gao\",\"gap\",\"gaq\",\"gar\",\"gas\",\"gat\",\"gau\",\"gav\",\"gaw\",\"gax\",\"gay\",\"gaz\",\"gba\",\"gbb\",\"gbc\",\"gbd\",\"gbe\",\"gbf\",\"gbg\",\"gbh\",\"gbi\",\"gbj\",\"gbk\",\"gbl\",\"gbm\",\"gbn\",\"gbo\",\"gbp\",\"gbq\",\"gbr\",\"gbs\",\"gbu\",\"gbv\",\"gbw\",\"gbx\",\"gby\",\"gbz\",\"gcc\",\"gcd\",\"gce\",\"gcf\",\"gcl\",\"gcn\",\"gcr\",\"gct\",\"gda\",\"gdb\",\"gdc\",\"gdd\",\"gde\",\"gdf\",\"gdg\",\"gdh\",\"gdi\",\"gdj\",\"gdk\",\"gdl\",\"gdm\",\"gdn\",\"gdo\",\"gdq\",\"gdr\",\"gds\",\"gdt\",\"gdu\",\"gdx\",\"gea\",\"geb\",\"gec\",\"ged\",\"geg\",\"geh\",\"gei\",\"gej\",\"gek\",\"gel\",\"gem\",\"geq\",\"ges\",\"gev\",\"gew\",\"gex\",\"gey\",\"gez\",\"gfk\",\"gft\",\"gfx\",\"gga\",\"ggb\",\"ggd\",\"gge\",\"ggg\",\"ggk\",\"ggl\",\"ggn\",\"ggo\",\"ggr\",\"ggt\",\"ggu\",\"ggw\",\"gha\",\"ghc\",\"ghe\",\"ghh\",\"ghk\",\"ghl\",\"ghn\",\"gho\",\"ghr\",\"ghs\",\"ght\",\"gia\",\"gib\",\"gic\",\"gid\",\"gie\",\"gig\",\"gih\",\"gil\",\"gim\",\"gin\",\"gio\",\"gip\",\"giq\",\"gir\",\"gis\",\"git\",\"giu\",\"giw\",\"gix\",\"giy\",\"giz\",\"gji\",\"gjk\",\"gjm\",\"gjn\",\"gjr\",\"gju\",\"gka\",\"gkd\",\"gke\",\"gkn\",\"gko\",\"gkp\",\"gku\",\"glc\",\"gld\",\"glh\",\"gli\",\"glj\",\"glk\",\"gll\",\"glo\",\"glr\",\"glu\",\"glw\",\"gly\",\"gma\",\"gmb\",\"gmd\",\"gme\",\"gmg\",\"gmh\",\"gml\",\"gmm\",\"gmn\",\"gmq\",\"gmu\",\"gmv\",\"gmw\",\"gmx\",\"gmy\",\"gmz\",\"gna\",\"gnb\",\"gnc\",\"gnd\",\"gne\",\"gng\",\"gnh\",\"gni\",\"gnj\",\"gnk\",\"gnl\",\"gnm\",\"gnn\",\"gno\",\"gnq\",\"gnr\",\"gnt\",\"gnu\",\"gnw\",\"gnz\",\"goa\",\"gob\",\"goc\",\"god\",\"goe\",\"gof\",\"gog\",\"goh\",\"goi\",\"goj\",\"gok\",\"gol\",\"gom\",\"gon\",\"goo\",\"gop\",\"goq\",\"gor\",\"gos\",\"got\",\"gou\",\"gow\",\"gox\",\"goy\",\"goz\",\"gpa\",\"gpe\",\"gpn\",\"gqa\",\"gqi\",\"gqn\",\"gqr\",\"gqu\",\"gra\",\"grb\",\"grc\",\"grd\",\"grg\",\"grh\",\"gri\",\"grj\",\"grk\",\"grm\",\"gro\",\"grq\",\"grr\",\"grs\",\"grt\",\"gru\",\"grv\",\"grw\",\"grx\",\"gry\",\"grz\",\"gse\",\"gsg\",\"gsl\",\"gsm\",\"gsn\",\"gso\",\"gsp\",\"gss\",\"gsw\",\"gta\",\"gti\",\"gtu\",\"gua\",\"gub\",\"guc\",\"gud\",\"gue\",\"guf\",\"gug\",\"guh\",\"gui\",\"guk\",\"gul\",\"gum\",\"gun\",\"guo\",\"gup\",\"guq\",\"gur\",\"gus\",\"gut\",\"guu\",\"guv\",\"guw\",\"gux\",\"guz\",\"gva\",\"gvc\",\"gve\",\"gvf\",\"gvj\",\"gvl\",\"gvm\",\"gvn\",\"gvo\",\"gvp\",\"gvr\",\"gvs\",\"gvy\",\"gwa\",\"gwb\",\"gwc\",\"gwd\",\"gwe\",\"gwf\",\"gwg\",\"gwi\",\"gwj\",\"gwm\",\"gwn\",\"gwr\",\"gwt\",\"gwu\",\"gww\",\"gwx\",\"gxx\",\"gya\",\"gyb\",\"gyd\",\"gye\",\"gyf\",\"gyg\",\"gyi\",\"gyl\",\"gym\",\"gyn\",\"gyo\",\"gyr\",\"gyy\",\"gza\",\"gzi\",\"gzn\",\"haa\",\"hab\",\"hac\",\"had\",\"hae\",\"haf\",\"hag\",\"hah\",\"hai\",\"haj\",\"hak\",\"hal\",\"ham\",\"han\",\"hao\",\"hap\",\"haq\",\"har\",\"has\",\"hav\",\"haw\",\"hax\",\"hay\",\"haz\",\"hba\",\"hbb\",\"hbn\",\"hbo\",\"hbu\",\"hca\",\"hch\",\"hdn\",\"hds\",\"hdy\",\"hea\",\"hed\",\"heg\",\"heh\",\"hei\",\"hem\",\"hgm\",\"hgw\",\"hhi\",\"hhr\",\"hhy\",\"hia\",\"hib\",\"hid\",\"hif\",\"hig\",\"hih\",\"hii\",\"hij\",\"hik\",\"hil\",\"him\",\"hio\",\"hir\",\"hit\",\"hiw\",\"hix\",\"hji\",\"hka\",\"hke\",\"hkk\",\"hkn\",\"hks\",\"hla\",\"hlb\",\"hld\",\"hle\",\"hlt\",\"hlu\",\"hma\",\"hmb\",\"hmc\",\"hmd\",\"hme\",\"hmf\",\"hmg\",\"hmh\",\"hmi\",\"hmj\",\"hmk\",\"hml\",\"hmm\",\"hmn\",\"hmp\",\"hmq\",\"hmr\",\"hms\",\"hmt\",\"hmu\",\"hmv\",\"hmw\",\"hmx\",\"hmy\",\"hmz\",\"hna\",\"hnd\",\"hne\",\"hnh\",\"hni\",\"hnj\",\"hnn\",\"hno\",\"hns\",\"hnu\",\"hoa\",\"hob\",\"hoc\",\"hod\",\"hoe\",\"hoh\",\"hoi\",\"hoj\",\"hok\",\"hol\",\"hom\",\"hoo\",\"hop\",\"hor\",\"hos\",\"hot\",\"hov\",\"how\",\"hoy\",\"hoz\",\"hpo\",\"hps\",\"hra\",\"hrc\",\"hre\",\"hrk\",\"hrm\",\"hro\",\"hrp\",\"hrr\",\"hrt\",\"hru\",\"hrw\",\"hrx\",\"hrz\",\"hsb\",\"hsh\",\"hsl\",\"hsn\",\"hss\",\"hti\",\"hto\",\"hts\",\"htu\",\"htx\",\"hub\",\"huc\",\"hud\",\"hue\",\"huf\",\"hug\",\"huh\",\"hui\",\"huj\",\"huk\",\"hul\",\"hum\",\"huo\",\"hup\",\"huq\",\"hur\",\"hus\",\"hut\",\"huu\",\"huv\",\"huw\",\"hux\",\"huy\",\"huz\",\"hvc\",\"hve\",\"hvk\",\"hvn\",\"hvv\",\"hwa\",\"hwc\",\"hwo\",\"hya\",\"hyw\",\"hyx\",\"iai\",\"ian\",\"iap\",\"iar\",\"iba\",\"ibb\",\"ibd\",\"ibe\",\"ibg\",\"ibh\",\"ibi\",\"ibl\",\"ibm\",\"ibn\",\"ibr\",\"ibu\",\"iby\",\"ica\",\"ich\",\"icl\",\"icr\",\"ida\",\"idb\",\"idc\",\"idd\",\"ide\",\"idi\",\"idr\",\"ids\",\"idt\",\"idu\",\"ifa\",\"ifb\",\"ife\",\"iff\",\"ifk\",\"ifm\",\"ifu\",\"ify\",\"igb\",\"ige\",\"igg\",\"igl\",\"igm\",\"ign\",\"igo\",\"igs\",\"igw\",\"ihb\",\"ihi\",\"ihp\",\"ihw\",\"iin\",\"iir\",\"ijc\",\"ije\",\"ijj\",\"ijn\",\"ijo\",\"ijs\",\"ike\",\"iki\",\"ikk\",\"ikl\",\"iko\",\"ikp\",\"ikr\",\"iks\",\"ikt\",\"ikv\",\"ikw\",\"ikx\",\"ikz\",\"ila\",\"ilb\",\"ilg\",\"ili\",\"ilk\",\"ill\",\"ilm\",\"ilo\",\"ilp\",\"ils\",\"ilu\",\"ilv\",\"ilw\",\"ima\",\"ime\",\"imi\",\"iml\",\"imn\",\"imo\",\"imr\",\"ims\",\"imy\",\"inb\",\"inc\",\"ine\",\"ing\",\"inh\",\"inj\",\"inl\",\"inm\",\"inn\",\"ino\",\"inp\",\"ins\",\"int\",\"inz\",\"ior\",\"iou\",\"iow\",\"ipi\",\"ipo\",\"iqu\",\"iqw\",\"ira\",\"ire\",\"irh\",\"iri\",\"irk\",\"irn\",\"iro\",\"irr\",\"iru\",\"irx\",\"iry\",\"isa\",\"isc\",\"isd\",\"ise\",\"isg\",\"ish\",\"isi\",\"isk\",\"ism\",\"isn\",\"iso\",\"isr\",\"ist\",\"isu\",\"itb\",\"itc\",\"itd\",\"ite\",\"iti\",\"itk\",\"itl\",\"itm\",\"ito\",\"itr\",\"its\",\"itt\",\"itv\",\"itw\",\"itx\",\"ity\",\"itz\",\"ium\",\"ivb\",\"ivv\",\"iwk\",\"iwm\",\"iwo\",\"iws\",\"ixc\",\"ixl\",\"iya\",\"iyo\",\"iyx\",\"izh\",\"izi\",\"izr\",\"izz\",\"jaa\",\"jab\",\"jac\",\"jad\",\"jae\",\"jaf\",\"jah\",\"jaj\",\"jak\",\"jal\",\"jam\",\"jan\",\"jao\",\"jaq\",\"jar\",\"jas\",\"jat\",\"jau\",\"jax\",\"jay\",\"jaz\",\"jbe\",\"jbi\",\"jbj\",\"jbk\",\"jbn\",\"jbo\",\"jbr\",\"jbt\",\"jbu\",\"jbw\",\"jcs\",\"jct\",\"jda\",\"jdg\",\"jdt\",\"jeb\",\"jee\",\"jeg\",\"jeh\",\"jei\",\"jek\",\"jel\",\"jen\",\"jer\",\"jet\",\"jeu\",\"jgb\",\"jge\",\"jgk\",\"jgo\",\"jhi\",\"jhs\",\"jia\",\"jib\",\"jic\",\"jid\",\"jie\",\"jig\",\"jih\",\"jii\",\"jil\",\"jim\",\"jio\",\"jiq\",\"jit\",\"jiu\",\"jiv\",\"jiy\",\"jje\",\"jjr\",\"jka\",\"jkm\",\"jko\",\"jkp\",\"jkr\",\"jku\",\"jle\",\"jls\",\"jma\",\"jmb\",\"jmc\",\"jmd\",\"jmi\",\"jml\",\"jmn\",\"jmr\",\"jms\",\"jmw\",\"jmx\",\"jna\",\"jnd\",\"jng\",\"jni\",\"jnj\",\"jnl\",\"jns\",\"job\",\"jod\",\"jog\",\"jor\",\"jos\",\"jow\",\"jpa\",\"jpr\",\"jpx\",\"jqr\",\"jra\",\"jrb\",\"jrr\",\"jrt\",\"jru\",\"jsl\",\"jua\",\"jub\",\"juc\",\"jud\",\"juh\",\"jui\",\"juk\",\"jul\",\"jum\",\"jun\",\"juo\",\"jup\",\"jur\",\"jus\",\"jut\",\"juu\",\"juw\",\"juy\",\"jvd\",\"jvn\",\"jwi\",\"jya\",\"jye\",\"jyy\",\"kaa\",\"kab\",\"kac\",\"kad\",\"kae\",\"kaf\",\"kag\",\"kah\",\"kai\",\"kaj\",\"kak\",\"kam\",\"kao\",\"kap\",\"kaq\",\"kar\",\"kav\",\"kaw\",\"kax\",\"kay\",\"kba\",\"kbb\",\"kbc\",\"kbd\",\"kbe\",\"kbf\",\"kbg\",\"kbh\",\"kbi\",\"kbj\",\"kbk\",\"kbl\",\"kbm\",\"kbn\",\"kbo\",\"kbp\",\"kbq\",\"kbr\",\"kbs\",\"kbt\",\"kbu\",\"kbv\",\"kbw\",\"kbx\",\"kby\",\"kbz\",\"kca\",\"kcb\",\"kcc\",\"kcd\",\"kce\",\"kcf\",\"kcg\",\"kch\",\"kci\",\"kcj\",\"kck\",\"kcl\",\"kcm\",\"kcn\",\"kco\",\"kcp\",\"kcq\",\"kcr\",\"kcs\",\"kct\",\"kcu\",\"kcv\",\"kcw\",\"kcx\",\"kcy\",\"kcz\",\"kda\",\"kdc\",\"kdd\",\"kde\",\"kdf\",\"kdg\",\"kdh\",\"kdi\",\"kdj\",\"kdk\",\"kdl\",\"kdm\",\"kdn\",\"kdo\",\"kdp\",\"kdq\",\"kdr\",\"kdt\",\"kdu\",\"kdv\",\"kdw\",\"kdx\",\"kdy\",\"kdz\",\"kea\",\"keb\",\"kec\",\"ked\",\"kee\",\"kef\",\"keg\",\"keh\",\"kei\",\"kej\",\"kek\",\"kel\",\"kem\",\"ken\",\"keo\",\"kep\",\"keq\",\"ker\",\"kes\",\"ket\",\"keu\",\"kev\",\"kew\",\"kex\",\"key\",\"kez\",\"kfa\",\"kfb\",\"kfc\",\"kfd\",\"kfe\",\"kff\",\"kfg\",\"kfh\",\"kfi\",\"kfj\",\"kfk\",\"kfl\",\"kfm\",\"kfn\",\"kfo\",\"kfp\",\"kfq\",\"kfr\",\"kfs\",\"kft\",\"kfu\",\"kfv\",\"kfw\",\"kfx\",\"kfy\",\"kfz\",\"kga\",\"kgb\",\"kgc\",\"kgd\",\"kge\",\"kgf\",\"kgg\",\"kgh\",\"kgi\",\"kgj\",\"kgk\",\"kgl\",\"kgm\",\"kgn\",\"kgo\",\"kgp\",\"kgq\",\"kgr\",\"kgs\",\"kgt\",\"kgu\",\"kgv\",\"kgw\",\"kgx\",\"kgy\",\"kha\",\"khb\",\"khc\",\"khd\",\"khe\",\"khf\",\"khg\",\"khh\",\"khi\",\"khj\",\"khk\",\"khl\",\"khn\",\"kho\",\"khp\",\"khq\",\"khr\",\"khs\",\"kht\",\"khu\",\"khv\",\"khw\",\"khx\",\"khy\",\"khz\",\"kia\",\"kib\",\"kic\",\"kid\",\"kie\",\"kif\",\"kig\",\"kih\",\"kii\",\"kij\",\"kil\",\"kim\",\"kio\",\"kip\",\"kiq\",\"kis\",\"kit\",\"kiu\",\"kiv\",\"kiw\",\"kix\",\"kiy\",\"kiz\",\"kja\",\"kjb\",\"kjc\",\"kjd\",\"kje\",\"kjf\",\"kjg\",\"kjh\",\"kji\",\"kjj\",\"kjk\",\"kjl\",\"kjm\",\"kjn\",\"kjo\",\"kjp\",\"kjq\",\"kjr\",\"kjs\",\"kjt\",\"kju\",\"kjv\",\"kjx\",\"kjy\",\"kjz\",\"kka\",\"kkb\",\"kkc\",\"kkd\",\"kke\",\"kkf\",\"kkg\",\"kkh\",\"kki\",\"kkj\",\"kkk\",\"kkl\",\"kkm\",\"kkn\",\"kko\",\"kkp\",\"kkq\",\"kkr\",\"kks\",\"kkt\",\"kku\",\"kkv\",\"kkw\",\"kkx\",\"kky\",\"kkz\",\"kla\",\"klb\",\"klc\",\"kld\",\"kle\",\"klf\",\"klg\",\"klh\",\"kli\",\"klj\",\"klk\",\"kll\",\"klm\",\"kln\",\"klo\",\"klp\",\"klq\",\"klr\",\"kls\",\"klt\",\"klu\",\"klv\",\"klw\",\"klx\",\"kly\",\"klz\",\"kma\",\"kmb\",\"kmc\",\"kmd\",\"kme\",\"kmf\",\"kmg\",\"kmh\",\"kmi\",\"kmj\",\"kmk\",\"kml\",\"kmm\",\"kmn\",\"kmo\",\"kmp\",\"kmq\",\"kmr\",\"kms\",\"kmt\",\"kmu\",\"kmv\",\"kmw\",\"kmx\",\"kmy\",\"kmz\",\"kna\",\"knb\",\"knc\",\"knd\",\"kne\",\"knf\",\"kng\",\"kni\",\"knj\",\"knk\",\"knl\",\"knm\",\"knn\",\"kno\",\"knp\",\"knq\",\"knr\",\"kns\",\"knt\",\"knu\",\"knv\",\"knw\",\"knx\",\"kny\",\"knz\",\"koa\",\"koc\",\"kod\",\"koe\",\"kof\",\"kog\",\"koh\",\"koi\",\"koj\",\"kok\",\"kol\",\"koo\",\"kop\",\"koq\",\"kos\",\"kot\",\"kou\",\"kov\",\"kow\",\"kox\",\"koy\",\"koz\",\"kpa\",\"kpb\",\"kpc\",\"kpd\",\"kpe\",\"kpf\",\"kpg\",\"kph\",\"kpi\",\"kpj\",\"kpk\",\"kpl\",\"kpm\",\"kpn\",\"kpo\",\"kpp\",\"kpq\",\"kpr\",\"kps\",\"kpt\",\"kpu\",\"kpv\",\"kpw\",\"kpx\",\"kpy\",\"kpz\",\"kqa\",\"kqb\",\"kqc\",\"kqd\",\"kqe\",\"kqf\",\"kqg\",\"kqh\",\"kqi\",\"kqj\",\"kqk\",\"kql\",\"kqm\",\"kqn\",\"kqo\",\"kqp\",\"kqq\",\"kqr\",\"kqs\",\"kqt\",\"kqu\",\"kqv\",\"kqw\",\"kqx\",\"kqy\",\"kqz\",\"kra\",\"krb\",\"krc\",\"krd\",\"kre\",\"krf\",\"krh\",\"kri\",\"krj\",\"krk\",\"krl\",\"krm\",\"krn\",\"kro\",\"krp\",\"krr\",\"krs\",\"krt\",\"kru\",\"krv\",\"krw\",\"krx\",\"kry\",\"krz\",\"ksa\",\"ksb\",\"ksc\",\"ksd\",\"kse\",\"ksf\",\"ksg\",\"ksh\",\"ksi\",\"ksj\",\"ksk\",\"ksl\",\"ksm\",\"ksn\",\"kso\",\"ksp\",\"ksq\",\"ksr\",\"kss\",\"kst\",\"ksu\",\"ksv\",\"ksw\",\"ksx\",\"ksy\",\"ksz\",\"kta\",\"ktb\",\"ktc\",\"ktd\",\"kte\",\"ktf\",\"ktg\",\"kth\",\"kti\",\"ktj\",\"ktk\",\"ktl\",\"ktm\",\"ktn\",\"kto\",\"ktp\",\"ktq\",\"ktr\",\"kts\",\"ktt\",\"ktu\",\"ktv\",\"ktw\",\"ktx\",\"kty\",\"ktz\",\"kub\",\"kuc\",\"kud\",\"kue\",\"kuf\",\"kug\",\"kuh\",\"kui\",\"kuj\",\"kuk\",\"kul\",\"kum\",\"kun\",\"kuo\",\"kup\",\"kuq\",\"kus\",\"kut\",\"kuu\",\"kuv\",\"kuw\",\"kux\",\"kuy\",\"kuz\",\"kva\",\"kvb\",\"kvc\",\"kvd\",\"kve\",\"kvf\",\"kvg\",\"kvh\",\"kvi\",\"kvj\",\"kvk\",\"kvl\",\"kvm\",\"kvn\",\"kvo\",\"kvp\",\"kvq\",\"kvr\",\"kvs\",\"kvt\",\"kvu\",\"kvv\",\"kvw\",\"kvx\",\"kvy\",\"kvz\",\"kwa\",\"kwb\",\"kwc\",\"kwd\",\"kwe\",\"kwf\",\"kwg\",\"kwh\",\"kwi\",\"kwj\",\"kwk\",\"kwl\",\"kwm\",\"kwn\",\"kwo\",\"kwp\",\"kwq\",\"kwr\",\"kws\",\"kwt\",\"kwu\",\"kwv\",\"kww\",\"kwx\",\"kwy\",\"kwz\",\"kxa\",\"kxb\",\"kxc\",\"kxd\",\"kxe\",\"kxf\",\"kxh\",\"kxi\",\"kxj\",\"kxk\",\"kxl\",\"kxm\",\"kxn\",\"kxo\",\"kxp\",\"kxq\",\"kxr\",\"kxs\",\"kxt\",\"kxu\",\"kxv\",\"kxw\",\"kxx\",\"kxy\",\"kxz\",\"kya\",\"kyb\",\"kyc\",\"kyd\",\"kye\",\"kyf\",\"kyg\",\"kyh\",\"kyi\",\"kyj\",\"kyk\",\"kyl\",\"kym\",\"kyn\",\"kyo\",\"kyp\",\"kyq\",\"kyr\",\"kys\",\"kyt\",\"kyu\",\"kyv\",\"kyw\",\"kyx\",\"kyy\",\"kyz\",\"kza\",\"kzb\",\"kzc\",\"kzd\",\"kze\",\"kzf\",\"kzg\",\"kzh\",\"kzi\",\"kzj\",\"kzk\",\"kzl\",\"kzm\",\"kzn\",\"kzo\",\"kzp\",\"kzq\",\"kzr\",\"kzs\",\"kzt\",\"kzu\",\"kzv\",\"kzw\",\"kzx\",\"kzy\",\"kzz\",\"laa\",\"lab\",\"lac\",\"lad\",\"lae\",\"laf\",\"lag\",\"lah\",\"lai\",\"laj\",\"lak\",\"lal\",\"lam\",\"lan\",\"lap\",\"laq\",\"lar\",\"las\",\"lau\",\"law\",\"lax\",\"lay\",\"laz\",\"lba\",\"lbb\",\"lbc\",\"lbe\",\"lbf\",\"lbg\",\"lbi\",\"lbj\",\"lbk\",\"lbl\",\"lbm\",\"lbn\",\"lbo\",\"lbq\",\"lbr\",\"lbs\",\"lbt\",\"lbu\",\"lbv\",\"lbw\",\"lbx\",\"lby\",\"lbz\",\"lcc\",\"lcd\",\"lce\",\"lcf\",\"lch\",\"lcl\",\"lcm\",\"lcp\",\"lcq\",\"lcs\",\"lda\",\"ldb\",\"ldd\",\"ldg\",\"ldh\",\"ldi\",\"ldj\",\"ldk\",\"ldl\",\"ldm\",\"ldn\",\"ldo\",\"ldp\",\"ldq\",\"lea\",\"leb\",\"lec\",\"led\",\"lee\",\"lef\",\"leg\",\"leh\",\"lei\",\"lej\",\"lek\",\"lel\",\"lem\",\"len\",\"leo\",\"lep\",\"leq\",\"ler\",\"les\",\"let\",\"leu\",\"lev\",\"lew\",\"lex\",\"ley\",\"lez\",\"lfa\",\"lfn\",\"lga\",\"lgb\",\"lgg\",\"lgh\",\"lgi\",\"lgk\",\"lgl\",\"lgm\",\"lgn\",\"lgq\",\"lgr\",\"lgt\",\"lgu\",\"lgz\",\"lha\",\"lhh\",\"lhi\",\"lhl\",\"lhm\",\"lhn\",\"lhp\",\"lhs\",\"lht\",\"lhu\",\"lia\",\"lib\",\"lic\",\"lid\",\"lie\",\"lif\",\"lig\",\"lih\",\"lii\",\"lij\",\"lik\",\"lil\",\"lio\",\"lip\",\"liq\",\"lir\",\"lis\",\"liu\",\"liv\",\"liw\",\"lix\",\"liy\",\"liz\",\"lja\",\"lje\",\"lji\",\"ljl\",\"ljp\",\"ljw\",\"ljx\",\"lka\",\"lkb\",\"lkc\",\"lkd\",\"lke\",\"lkh\",\"lki\",\"lkj\",\"lkl\",\"lkm\",\"lkn\",\"lko\",\"lkr\",\"lks\",\"lkt\",\"lku\",\"lky\",\"lla\",\"llb\",\"llc\",\"lld\",\"lle\",\"llf\",\"llg\",\"llh\",\"lli\",\"llj\",\"llk\",\"lll\",\"llm\",\"lln\",\"llo\",\"llp\",\"llq\",\"lls\",\"llu\",\"llx\",\"lma\",\"lmb\",\"lmc\",\"lmd\",\"lme\",\"lmf\",\"lmg\",\"lmh\",\"lmi\",\"lmj\",\"lmk\",\"lml\",\"lmm\",\"lmn\",\"lmo\",\"lmp\",\"lmq\",\"lmr\",\"lmu\",\"lmv\",\"lmw\",\"lmx\",\"lmy\",\"lmz\",\"lna\",\"lnb\",\"lnd\",\"lng\",\"lnh\",\"lni\",\"lnj\",\"lnl\",\"lnm\",\"lnn\",\"lno\",\"lns\",\"lnu\",\"lnw\",\"lnz\",\"loa\",\"lob\",\"loc\",\"loe\",\"lof\",\"log\",\"loh\",\"loi\",\"loj\",\"lok\",\"lol\",\"lom\",\"lon\",\"loo\",\"lop\",\"loq\",\"lor\",\"los\",\"lot\",\"lou\",\"lov\",\"low\",\"lox\",\"loy\",\"loz\",\"lpa\",\"lpe\",\"lpn\",\"lpo\",\"lpx\",\"lra\",\"lrc\",\"lre\",\"lrg\",\"lri\",\"lrk\",\"lrl\",\"lrm\",\"lrn\",\"lro\",\"lrr\",\"lrt\",\"lrv\",\"lrz\",\"lsa\",\"lsd\",\"lse\",\"lsg\",\"lsh\",\"lsi\",\"lsl\",\"lsm\",\"lso\",\"lsp\",\"lsr\",\"lss\",\"lst\",\"lsy\",\"ltc\",\"ltg\",\"lth\",\"lti\",\"ltn\",\"lto\",\"lts\",\"ltu\",\"lua\",\"luc\",\"lud\",\"lue\",\"luf\",\"lui\",\"luj\",\"luk\",\"lul\",\"lum\",\"lun\",\"luo\",\"lup\",\"luq\",\"lur\",\"lus\",\"lut\",\"luu\",\"luv\",\"luw\",\"luy\",\"luz\",\"lva\",\"lvk\",\"lvs\",\"lvu\",\"lwa\",\"lwe\",\"lwg\",\"lwh\",\"lwl\",\"lwm\",\"lwo\",\"lws\",\"lwt\",\"lwu\",\"lww\",\"lya\",\"lyg\",\"lyn\",\"lzh\",\"lzl\",\"lzn\",\"lzz\",\"maa\",\"mab\",\"mad\",\"mae\",\"maf\",\"mag\",\"mai\",\"maj\",\"mak\",\"mam\",\"man\",\"map\",\"maq\",\"mas\",\"mat\",\"mau\",\"mav\",\"maw\",\"max\",\"maz\",\"mba\",\"mbb\",\"mbc\",\"mbd\",\"mbe\",\"mbf\",\"mbh\",\"mbi\",\"mbj\",\"mbk\",\"mbl\",\"mbm\",\"mbn\",\"mbo\",\"mbp\",\"mbq\",\"mbr\",\"mbs\",\"mbt\",\"mbu\",\"mbv\",\"mbw\",\"mbx\",\"mby\",\"mbz\",\"mca\",\"mcb\",\"mcc\",\"mcd\",\"mce\",\"mcf\",\"mcg\",\"mch\",\"mci\",\"mcj\",\"mck\",\"mcl\",\"mcm\",\"mcn\",\"mco\",\"mcp\",\"mcq\",\"mcr\",\"mcs\",\"mct\",\"mcu\",\"mcv\",\"mcw\",\"mcx\",\"mcy\",\"mcz\",\"mda\",\"mdb\",\"mdc\",\"mdd\",\"mde\",\"mdf\",\"mdg\",\"mdh\",\"mdi\",\"mdj\",\"mdk\",\"mdl\",\"mdm\",\"mdn\",\"mdp\",\"mdq\",\"mdr\",\"mds\",\"mdt\",\"mdu\",\"mdv\",\"mdw\",\"mdx\",\"mdy\",\"mdz\",\"mea\",\"meb\",\"mec\",\"med\",\"mee\",\"mef\",\"meg\",\"meh\",\"mei\",\"mej\",\"mek\",\"mel\",\"mem\",\"men\",\"meo\",\"mep\",\"meq\",\"mer\",\"mes\",\"met\",\"meu\",\"mev\",\"mew\",\"mey\",\"mez\",\"mfa\",\"mfb\",\"mfc\",\"mfd\",\"mfe\",\"mff\",\"mfg\",\"mfh\",\"mfi\",\"mfj\",\"mfk\",\"mfl\",\"mfm\",\"mfn\",\"mfo\",\"mfp\",\"mfq\",\"mfr\",\"mfs\",\"mft\",\"mfu\",\"mfv\",\"mfw\",\"mfx\",\"mfy\",\"mfz\",\"mga\",\"mgb\",\"mgc\",\"mgd\",\"mge\",\"mgf\",\"mgg\",\"mgh\",\"mgi\",\"mgj\",\"mgk\",\"mgl\",\"mgm\",\"mgn\",\"mgo\",\"mgp\",\"mgq\",\"mgr\",\"mgs\",\"mgt\",\"mgu\",\"mgv\",\"mgw\",\"mgx\",\"mgy\",\"mgz\",\"mha\",\"mhb\",\"mhc\",\"mhd\",\"mhe\",\"mhf\",\"mhg\",\"mhh\",\"mhi\",\"mhj\",\"mhk\",\"mhl\",\"mhm\",\"mhn\",\"mho\",\"mhp\",\"mhq\",\"mhr\",\"mhs\",\"mht\",\"mhu\",\"mhw\",\"mhx\",\"mhy\",\"mhz\",\"mia\",\"mib\",\"mic\",\"mid\",\"mie\",\"mif\",\"mig\",\"mih\",\"mii\",\"mij\",\"mik\",\"mil\",\"mim\",\"min\",\"mio\",\"mip\",\"miq\",\"mir\",\"mis\",\"mit\",\"miu\",\"miw\",\"mix\",\"miy\",\"miz\",\"mja\",\"mjb\",\"mjc\",\"mjd\",\"mje\",\"mjg\",\"mjh\",\"mji\",\"mjj\",\"mjk\",\"mjl\",\"mjm\",\"mjn\",\"mjo\",\"mjp\",\"mjq\",\"mjr\",\"mjs\",\"mjt\",\"mju\",\"mjv\",\"mjw\",\"mjx\",\"mjy\",\"mjz\",\"mka\",\"mkb\",\"mkc\",\"mke\",\"mkf\",\"mkg\",\"mkh\",\"mki\",\"mkj\",\"mkk\",\"mkl\",\"mkm\",\"mkn\",\"mko\",\"mkp\",\"mkq\",\"mkr\",\"mks\",\"mkt\",\"mku\",\"mkv\",\"mkw\",\"mkx\",\"mky\",\"mkz\",\"mla\",\"mlb\",\"mlc\",\"mld\",\"mle\",\"mlf\",\"mlh\",\"mli\",\"mlj\",\"mlk\",\"mll\",\"mlm\",\"mln\",\"mlo\",\"mlp\",\"mlq\",\"mlr\",\"mls\",\"mlu\",\"mlv\",\"mlw\",\"mlx\",\"mlz\",\"mma\",\"mmb\",\"mmc\",\"mmd\",\"mme\",\"mmf\",\"mmg\",\"mmh\",\"mmi\",\"mmj\",\"mmk\",\"mml\",\"mmm\",\"mmn\",\"mmo\",\"mmp\",\"mmq\",\"mmr\",\"mmt\",\"mmu\",\"mmv\",\"mmw\",\"mmx\",\"mmy\",\"mmz\",\"mna\",\"mnb\",\"mnc\",\"mnd\",\"mne\",\"mnf\",\"mng\",\"mnh\",\"mni\",\"mnj\",\"mnk\",\"mnl\",\"mnm\",\"mnn\",\"mno\",\"mnp\",\"mnq\",\"mnr\",\"mns\",\"mnt\",\"mnu\",\"mnv\",\"mnw\",\"mnx\",\"mny\",\"mnz\",\"moa\",\"moc\",\"mod\",\"moe\",\"mof\",\"mog\",\"moh\",\"moi\",\"moj\",\"mok\",\"mom\",\"moo\",\"mop\",\"moq\",\"mor\",\"mos\",\"mot\",\"mou\",\"mov\",\"mow\",\"mox\",\"moy\",\"moz\",\"mpa\",\"mpb\",\"mpc\",\"mpd\",\"mpe\",\"mpg\",\"mph\",\"mpi\",\"mpj\",\"mpk\",\"mpl\",\"mpm\",\"mpn\",\"mpo\",\"mpp\",\"mpq\",\"mpr\",\"mps\",\"mpt\",\"mpu\",\"mpv\",\"mpw\",\"mpx\",\"mpy\",\"mpz\",\"mqa\",\"mqb\",\"mqc\",\"mqe\",\"mqf\",\"mqg\",\"mqh\",\"mqi\",\"mqj\",\"mqk\",\"mql\",\"mqm\",\"mqn\",\"mqo\",\"mqp\",\"mqq\",\"mqr\",\"mqs\",\"mqt\",\"mqu\",\"mqv\",\"mqw\",\"mqx\",\"mqy\",\"mqz\",\"mra\",\"mrb\",\"mrc\",\"mrd\",\"mre\",\"mrf\",\"mrg\",\"mrh\",\"mrj\",\"mrk\",\"mrl\",\"mrm\",\"mrn\",\"mro\",\"mrp\",\"mrq\",\"mrr\",\"mrs\",\"mrt\",\"mru\",\"mrv\",\"mrw\",\"mrx\",\"mry\",\"mrz\",\"msb\",\"msc\",\"msd\",\"mse\",\"msf\",\"msg\",\"msh\",\"msi\",\"msj\",\"msk\",\"msl\",\"msm\",\"msn\",\"mso\",\"msp\",\"msq\",\"msr\",\"mss\",\"mst\",\"msu\",\"msv\",\"msw\",\"msx\",\"msy\",\"msz\",\"mta\",\"mtb\",\"mtc\",\"mtd\",\"mte\",\"mtf\",\"mtg\",\"mth\",\"mti\",\"mtj\",\"mtk\",\"mtl\",\"mtm\",\"mtn\",\"mto\",\"mtp\",\"mtq\",\"mtr\",\"mts\",\"mtt\",\"mtu\",\"mtv\",\"mtw\",\"mtx\",\"mty\",\"mua\",\"mub\",\"muc\",\"mud\",\"mue\",\"mug\",\"muh\",\"mui\",\"muj\",\"muk\",\"mul\",\"mum\",\"mun\",\"muo\",\"mup\",\"muq\",\"mur\",\"mus\",\"mut\",\"muu\",\"muv\",\"mux\",\"muy\",\"muz\",\"mva\",\"mvb\",\"mvd\",\"mve\",\"mvf\",\"mvg\",\"mvh\",\"mvi\",\"mvk\",\"mvl\",\"mvm\",\"mvn\",\"mvo\",\"mvp\",\"mvq\",\"mvr\",\"mvs\",\"mvt\",\"mvu\",\"mvv\",\"mvw\",\"mvx\",\"mvy\",\"mvz\",\"mwa\",\"mwb\",\"mwc\",\"mwd\",\"mwe\",\"mwf\",\"mwg\",\"mwh\",\"mwi\",\"mwj\",\"mwk\",\"mwl\",\"mwm\",\"mwn\",\"mwo\",\"mwp\",\"mwq\",\"mwr\",\"mws\",\"mwt\",\"mwu\",\"mwv\",\"mww\",\"mwx\",\"mwy\",\"mwz\",\"mxa\",\"mxb\",\"mxc\",\"mxd\",\"mxe\",\"mxf\",\"mxg\",\"mxh\",\"mxi\",\"mxj\",\"mxk\",\"mxl\",\"mxm\",\"mxn\",\"mxo\",\"mxp\",\"mxq\",\"mxr\",\"mxs\",\"mxt\",\"mxu\",\"mxv\",\"mxw\",\"mxx\",\"mxy\",\"mxz\",\"myb\",\"myc\",\"myd\",\"mye\",\"myf\",\"myg\",\"myh\",\"myi\",\"myj\",\"myk\",\"myl\",\"mym\",\"myn\",\"myo\",\"myp\",\"myq\",\"myr\",\"mys\",\"myt\",\"myu\",\"myv\",\"myw\",\"myx\",\"myy\",\"myz\",\"mza\",\"mzb\",\"mzc\",\"mzd\",\"mze\",\"mzg\",\"mzh\",\"mzi\",\"mzj\",\"mzk\",\"mzl\",\"mzm\",\"mzn\",\"mzo\",\"mzp\",\"mzq\",\"mzr\",\"mzs\",\"mzt\",\"mzu\",\"mzv\",\"mzw\",\"mzx\",\"mzy\",\"mzz\",\"naa\",\"nab\",\"nac\",\"nad\",\"nae\",\"naf\",\"nag\",\"nah\",\"nai\",\"naj\",\"nak\",\"nal\",\"nam\",\"nan\",\"nao\",\"nap\",\"naq\",\"nar\",\"nas\",\"nat\",\"naw\",\"nax\",\"nay\",\"naz\",\"nba\",\"nbb\",\"nbc\",\"nbd\",\"nbe\",\"nbf\",\"nbg\",\"nbh\",\"nbi\",\"nbj\",\"nbk\",\"nbm\",\"nbn\",\"nbo\",\"nbp\",\"nbq\",\"nbr\",\"nbs\",\"nbt\",\"nbu\",\"nbv\",\"nbw\",\"nbx\",\"nby\",\"nca\",\"ncb\",\"ncc\",\"ncd\",\"nce\",\"ncf\",\"ncg\",\"nch\",\"nci\",\"ncj\",\"nck\",\"ncl\",\"ncm\",\"ncn\",\"nco\",\"ncp\",\"ncq\",\"ncr\",\"ncs\",\"nct\",\"ncu\",\"ncx\",\"ncz\",\"nda\",\"ndb\",\"ndc\",\"ndd\",\"ndf\",\"ndg\",\"ndh\",\"ndi\",\"ndj\",\"ndk\",\"ndl\",\"ndm\",\"ndn\",\"ndp\",\"ndq\",\"ndr\",\"nds\",\"ndt\",\"ndu\",\"ndv\",\"ndw\",\"ndx\",\"ndy\",\"ndz\",\"nea\",\"neb\",\"nec\",\"ned\",\"nee\",\"nef\",\"neg\",\"neh\",\"nei\",\"nej\",\"nek\",\"nem\",\"nen\",\"neo\",\"neq\",\"ner\",\"nes\",\"net\",\"neu\",\"nev\",\"new\",\"nex\",\"ney\",\"nez\",\"nfa\",\"nfd\",\"nfl\",\"nfr\",\"nfu\",\"nga\",\"ngb\",\"ngc\",\"ngd\",\"nge\",\"ngf\",\"ngg\",\"ngh\",\"ngi\",\"ngj\",\"ngk\",\"ngl\",\"ngm\",\"ngn\",\"ngo\",\"ngp\",\"ngq\",\"ngr\",\"ngs\",\"ngt\",\"ngu\",\"ngv\",\"ngw\",\"ngx\",\"ngy\",\"ngz\",\"nha\",\"nhb\",\"nhc\",\"nhd\",\"nhe\",\"nhf\",\"nhg\",\"nhh\",\"nhi\",\"nhk\",\"nhm\",\"nhn\",\"nho\",\"nhp\",\"nhq\",\"nhr\",\"nht\",\"nhu\",\"nhv\",\"nhw\",\"nhx\",\"nhy\",\"nhz\",\"nia\",\"nib\",\"nic\",\"nid\",\"nie\",\"nif\",\"nig\",\"nih\",\"nii\",\"nij\",\"nik\",\"nil\",\"nim\",\"nin\",\"nio\",\"niq\",\"nir\",\"nis\",\"nit\",\"niu\",\"niv\",\"niw\",\"nix\",\"niy\",\"niz\",\"nja\",\"njb\",\"njd\",\"njh\",\"nji\",\"njj\",\"njl\",\"njm\",\"njn\",\"njo\",\"njr\",\"njs\",\"njt\",\"nju\",\"njx\",\"njy\",\"njz\",\"nka\",\"nkb\",\"nkc\",\"nkd\",\"nke\",\"nkf\",\"nkg\",\"nkh\",\"nki\",\"nkj\",\"nkk\",\"nkm\",\"nkn\",\"nko\",\"nkp\",\"nkq\",\"nkr\",\"nks\",\"nkt\",\"nku\",\"nkv\",\"nkw\",\"nkx\",\"nkz\",\"nla\",\"nlc\",\"nle\",\"nlg\",\"nli\",\"nlj\",\"nlk\",\"nll\",\"nlm\",\"nln\",\"nlo\",\"nlq\",\"nlr\",\"nlu\",\"nlv\",\"nlw\",\"nlx\",\"nly\",\"nlz\",\"nma\",\"nmb\",\"nmc\",\"nmd\",\"nme\",\"nmf\",\"nmg\",\"nmh\",\"nmi\",\"nmj\",\"nmk\",\"nml\",\"nmm\",\"nmn\",\"nmo\",\"nmp\",\"nmq\",\"nmr\",\"nms\",\"nmt\",\"nmu\",\"nmv\",\"nmw\",\"nmx\",\"nmy\",\"nmz\",\"nna\",\"nnb\",\"nnc\",\"nnd\",\"nne\",\"nnf\",\"nng\",\"nnh\",\"nni\",\"nnj\",\"nnk\",\"nnl\",\"nnm\",\"nnn\",\"nnp\",\"nnq\",\"nnr\",\"nns\",\"nnt\",\"nnu\",\"nnv\",\"nnw\",\"nnx\",\"nny\",\"nnz\",\"noa\",\"noc\",\"nod\",\"noe\",\"nof\",\"nog\",\"noh\",\"noi\",\"noj\",\"nok\",\"nol\",\"nom\",\"non\",\"noo\",\"nop\",\"noq\",\"nos\",\"not\",\"nou\",\"nov\",\"now\",\"noy\",\"noz\",\"npa\",\"npb\",\"npg\",\"nph\",\"npi\",\"npl\",\"npn\",\"npo\",\"nps\",\"npu\",\"npx\",\"npy\",\"nqg\",\"nqk\",\"nql\",\"nqm\",\"nqn\",\"nqo\",\"nqq\",\"nqy\",\"nra\",\"nrb\",\"nrc\",\"nre\",\"nrf\",\"nrg\",\"nri\",\"nrk\",\"nrl\",\"nrm\",\"nrn\",\"nrp\",\"nrr\",\"nrt\",\"nru\",\"nrx\",\"nrz\",\"nsa\",\"nsc\",\"nsd\",\"nse\",\"nsf\",\"nsg\",\"nsh\",\"nsi\",\"nsk\",\"nsl\",\"nsm\",\"nsn\",\"nso\",\"nsp\",\"nsq\",\"nsr\",\"nss\",\"nst\",\"nsu\",\"nsv\",\"nsw\",\"nsx\",\"nsy\",\"nsz\",\"ntd\",\"nte\",\"ntg\",\"nti\",\"ntj\",\"ntk\",\"ntm\",\"nto\",\"ntp\",\"ntr\",\"nts\",\"ntu\",\"ntw\",\"ntx\",\"nty\",\"ntz\",\"nua\",\"nub\",\"nuc\",\"nud\",\"nue\",\"nuf\",\"nug\",\"nuh\",\"nui\",\"nuj\",\"nuk\",\"nul\",\"num\",\"nun\",\"nuo\",\"nup\",\"nuq\",\"nur\",\"nus\",\"nut\",\"nuu\",\"nuv\",\"nuw\",\"nux\",\"nuy\",\"nuz\",\"nvh\",\"nvm\",\"nvo\",\"nwa\",\"nwb\",\"nwc\",\"nwe\",\"nwg\",\"nwi\",\"nwm\",\"nwo\",\"nwr\",\"nwx\",\"nwy\",\"nxa\",\"nxd\",\"nxe\",\"nxg\",\"nxi\",\"nxk\",\"nxl\",\"nxm\",\"nxn\",\"nxo\",\"nxq\",\"nxr\",\"nxu\",\"nxx\",\"nyb\",\"nyc\",\"nyd\",\"nye\",\"nyf\",\"nyg\",\"nyh\",\"nyi\",\"nyj\",\"nyk\",\"nyl\",\"nym\",\"nyn\",\"nyo\",\"nyp\",\"nyq\",\"nyr\",\"nys\",\"nyt\",\"nyu\",\"nyv\",\"nyw\",\"nyx\",\"nyy\",\"nza\",\"nzb\",\"nzd\",\"nzi\",\"nzk\",\"nzm\",\"nzs\",\"nzu\",\"nzy\",\"nzz\",\"oaa\",\"oac\",\"oar\",\"oav\",\"obi\",\"obk\",\"obl\",\"obm\",\"obo\",\"obr\",\"obt\",\"obu\",\"oca\",\"och\",\"oco\",\"ocu\",\"oda\",\"odk\",\"odt\",\"odu\",\"ofo\",\"ofs\",\"ofu\",\"ogb\",\"ogc\",\"oge\",\"ogg\",\"ogo\",\"ogu\",\"oht\",\"ohu\",\"oia\",\"oin\",\"ojb\",\"ojc\",\"ojg\",\"ojp\",\"ojs\",\"ojv\",\"ojw\",\"oka\",\"okb\",\"okd\",\"oke\",\"okg\",\"okh\",\"oki\",\"okj\",\"okk\",\"okl\",\"okm\",\"okn\",\"oko\",\"okr\",\"oks\",\"oku\",\"okv\",\"okx\",\"ola\",\"old\",\"ole\",\"olk\",\"olm\",\"olo\",\"olr\",\"olt\",\"olu\",\"oma\",\"omb\",\"omc\",\"ome\",\"omg\",\"omi\",\"omk\",\"oml\",\"omn\",\"omo\",\"omp\",\"omq\",\"omr\",\"omt\",\"omu\",\"omv\",\"omw\",\"omx\",\"ona\",\"onb\",\"one\",\"ong\",\"oni\",\"onj\",\"onk\",\"onn\",\"ono\",\"onp\",\"onr\",\"ons\",\"ont\",\"onu\",\"onw\",\"onx\",\"ood\",\"oog\",\"oon\",\"oor\",\"oos\",\"opa\",\"opk\",\"opm\",\"opo\",\"opt\",\"opy\",\"ora\",\"orc\",\"ore\",\"org\",\"orh\",\"orn\",\"oro\",\"orr\",\"ors\",\"ort\",\"oru\",\"orv\",\"orw\",\"orx\",\"ory\",\"orz\",\"osa\",\"osc\",\"osi\",\"oso\",\"osp\",\"ost\",\"osu\",\"osx\",\"ota\",\"otb\",\"otd\",\"ote\",\"oti\",\"otk\",\"otl\",\"otm\",\"otn\",\"oto\",\"otq\",\"otr\",\"ots\",\"ott\",\"otu\",\"otw\",\"otx\",\"oty\",\"otz\",\"oua\",\"oub\",\"oue\",\"oui\",\"oum\",\"oun\",\"ovd\",\"owi\",\"owl\",\"oyb\",\"oyd\",\"oym\",\"oyy\",\"ozm\",\"paa\",\"pab\",\"pac\",\"pad\",\"pae\",\"paf\",\"pag\",\"pah\",\"pai\",\"pak\",\"pal\",\"pam\",\"pao\",\"pap\",\"paq\",\"par\",\"pas\",\"pat\",\"pau\",\"pav\",\"paw\",\"pax\",\"pay\",\"paz\",\"pbb\",\"pbc\",\"pbe\",\"pbf\",\"pbg\",\"pbh\",\"pbi\",\"pbl\",\"pbm\",\"pbn\",\"pbo\",\"pbp\",\"pbr\",\"pbs\",\"pbt\",\"pbu\",\"pbv\",\"pby\",\"pbz\",\"pca\",\"pcb\",\"pcc\",\"pcd\",\"pce\",\"pcf\",\"pcg\",\"pch\",\"pci\",\"pcj\",\"pck\",\"pcl\",\"pcm\",\"pcn\",\"pcp\",\"pcr\",\"pcw\",\"pda\",\"pdc\",\"pdi\",\"pdn\",\"pdo\",\"pdt\",\"pdu\",\"pea\",\"peb\",\"ped\",\"pee\",\"pef\",\"peg\",\"peh\",\"pei\",\"pej\",\"pek\",\"pel\",\"pem\",\"peo\",\"pep\",\"peq\",\"pes\",\"pev\",\"pex\",\"pey\",\"pez\",\"pfa\",\"pfe\",\"pfl\",\"pga\",\"pgd\",\"pgg\",\"pgi\",\"pgk\",\"pgl\",\"pgn\",\"pgs\",\"pgu\",\"pgy\",\"pgz\",\"pha\",\"phd\",\"phg\",\"phh\",\"phi\",\"phk\",\"phl\",\"phm\",\"phn\",\"pho\",\"phq\",\"phr\",\"pht\",\"phu\",\"phv\",\"phw\",\"pia\",\"pib\",\"pic\",\"pid\",\"pie\",\"pif\",\"pig\",\"pih\",\"pii\",\"pij\",\"pil\",\"pim\",\"pin\",\"pio\",\"pip\",\"pir\",\"pis\",\"pit\",\"piu\",\"piv\",\"piw\",\"pix\",\"piy\",\"piz\",\"pjt\",\"pka\",\"pkb\",\"pkc\",\"pkg\",\"pkh\",\"pkn\",\"pko\",\"pkp\",\"pkr\",\"pks\",\"pkt\",\"pku\",\"pla\",\"plb\",\"plc\",\"pld\",\"ple\",\"plf\",\"plg\",\"plh\",\"plj\",\"plk\",\"pll\",\"pln\",\"plo\",\"plp\",\"plq\",\"plr\",\"pls\",\"plt\",\"plu\",\"plv\",\"plw\",\"ply\",\"plz\",\"pma\",\"pmb\",\"pmc\",\"pmd\",\"pme\",\"pmf\",\"pmh\",\"pmi\",\"pmj\",\"pmk\",\"pml\",\"pmm\",\"pmn\",\"pmo\",\"pmq\",\"pmr\",\"pms\",\"pmt\",\"pmu\",\"pmw\",\"pmx\",\"pmy\",\"pmz\",\"pna\",\"pnb\",\"pnc\",\"pne\",\"png\",\"pnh\",\"pni\",\"pnj\",\"pnk\",\"pnl\",\"pnm\",\"pnn\",\"pno\",\"pnp\",\"pnq\",\"pnr\",\"pns\",\"pnt\",\"pnu\",\"pnv\",\"pnw\",\"pnx\",\"pny\",\"pnz\",\"poc\",\"pod\",\"poe\",\"pof\",\"pog\",\"poh\",\"poi\",\"pok\",\"pom\",\"pon\",\"poo\",\"pop\",\"poq\",\"pos\",\"pot\",\"pov\",\"pow\",\"pox\",\"poy\",\"poz\",\"ppa\",\"ppe\",\"ppi\",\"ppk\",\"ppl\",\"ppm\",\"ppn\",\"ppo\",\"ppp\",\"ppq\",\"ppr\",\"pps\",\"ppt\",\"ppu\",\"pqa\",\"pqe\",\"pqm\",\"pqw\",\"pra\",\"prb\",\"prc\",\"prd\",\"pre\",\"prf\",\"prg\",\"prh\",\"pri\",\"prk\",\"prl\",\"prm\",\"prn\",\"pro\",\"prp\",\"prq\",\"prr\",\"prs\",\"prt\",\"pru\",\"prw\",\"prx\",\"pry\",\"prz\",\"psa\",\"psc\",\"psd\",\"pse\",\"psg\",\"psh\",\"psi\",\"psl\",\"psm\",\"psn\",\"pso\",\"psp\",\"psq\",\"psr\",\"pss\",\"pst\",\"psu\",\"psw\",\"psy\",\"pta\",\"pth\",\"pti\",\"ptn\",\"pto\",\"ptp\",\"ptq\",\"ptr\",\"ptt\",\"ptu\",\"ptv\",\"ptw\",\"pty\",\"pua\",\"pub\",\"puc\",\"pud\",\"pue\",\"puf\",\"pug\",\"pui\",\"puj\",\"puk\",\"pum\",\"puo\",\"pup\",\"puq\",\"pur\",\"put\",\"puu\",\"puw\",\"pux\",\"puy\",\"puz\",\"pwa\",\"pwb\",\"pwg\",\"pwi\",\"pwm\",\"pwn\",\"pwo\",\"pwr\",\"pww\",\"pxm\",\"pye\",\"pym\",\"pyn\",\"pys\",\"pyu\",\"pyx\",\"pyy\",\"pzn\",\"qaa..qtz\",\"qua\",\"qub\",\"quc\",\"qud\",\"quf\",\"qug\",\"quh\",\"qui\",\"quk\",\"qul\",\"qum\",\"qun\",\"qup\",\"quq\",\"qur\",\"qus\",\"quv\",\"quw\",\"qux\",\"quy\",\"quz\",\"qva\",\"qvc\",\"qve\",\"qvh\",\"qvi\",\"qvj\",\"qvl\",\"qvm\",\"qvn\",\"qvo\",\"qvp\",\"qvs\",\"qvw\",\"qvy\",\"qvz\",\"qwa\",\"qwc\",\"qwe\",\"qwh\",\"qwm\",\"qws\",\"qwt\",\"qxa\",\"qxc\",\"qxh\",\"qxl\",\"qxn\",\"qxo\",\"qxp\",\"qxq\",\"qxr\",\"qxs\",\"qxt\",\"qxu\",\"qxw\",\"qya\",\"qyp\",\"raa\",\"rab\",\"rac\",\"rad\",\"raf\",\"rag\",\"rah\",\"rai\",\"raj\",\"rak\",\"ral\",\"ram\",\"ran\",\"rao\",\"rap\",\"raq\",\"rar\",\"ras\",\"rat\",\"rau\",\"rav\",\"raw\",\"rax\",\"ray\",\"raz\",\"rbb\",\"rbk\",\"rbl\",\"rbp\",\"rcf\",\"rdb\",\"rea\",\"reb\",\"ree\",\"reg\",\"rei\",\"rej\",\"rel\",\"rem\",\"ren\",\"rer\",\"res\",\"ret\",\"rey\",\"rga\",\"rge\",\"rgk\",\"rgn\",\"rgr\",\"rgs\",\"rgu\",\"rhg\",\"rhp\",\"ria\",\"rie\",\"rif\",\"ril\",\"rim\",\"rin\",\"rir\",\"rit\",\"riu\",\"rjg\",\"rji\",\"rjs\",\"rka\",\"rkb\",\"rkh\",\"rki\",\"rkm\",\"rkt\",\"rkw\",\"rma\",\"rmb\",\"rmc\",\"rmd\",\"rme\",\"rmf\",\"rmg\",\"rmh\",\"rmi\",\"rmk\",\"rml\",\"rmm\",\"rmn\",\"rmo\",\"rmp\",\"rmq\",\"rmr\",\"rms\",\"rmt\",\"rmu\",\"rmv\",\"rmw\",\"rmx\",\"rmy\",\"rmz\",\"rna\",\"rnd\",\"rng\",\"rnl\",\"rnn\",\"rnp\",\"rnr\",\"rnw\",\"roa\",\"rob\",\"roc\",\"rod\",\"roe\",\"rof\",\"rog\",\"rol\",\"rom\",\"roo\",\"rop\",\"ror\",\"rou\",\"row\",\"rpn\",\"rpt\",\"rri\",\"rro\",\"rrt\",\"rsb\",\"rsi\",\"rsl\",\"rsm\",\"rtc\",\"rth\",\"rtm\",\"rts\",\"rtw\",\"rub\",\"ruc\",\"rue\",\"ruf\",\"rug\",\"ruh\",\"rui\",\"ruk\",\"ruo\",\"rup\",\"ruq\",\"rut\",\"ruu\",\"ruy\",\"ruz\",\"rwa\",\"rwk\",\"rwm\",\"rwo\",\"rwr\",\"rxd\",\"rxw\",\"ryn\",\"rys\",\"ryu\",\"rzh\",\"saa\",\"sab\",\"sac\",\"sad\",\"sae\",\"saf\",\"sah\",\"sai\",\"saj\",\"sak\",\"sal\",\"sam\",\"sao\",\"sap\",\"saq\",\"sar\",\"sas\",\"sat\",\"sau\",\"sav\",\"saw\",\"sax\",\"say\",\"saz\",\"sba\",\"sbb\",\"sbc\",\"sbd\",\"sbe\",\"sbf\",\"sbg\",\"sbh\",\"sbi\",\"sbj\",\"sbk\",\"sbl\",\"sbm\",\"sbn\",\"sbo\",\"sbp\",\"sbq\",\"sbr\",\"sbs\",\"sbt\",\"sbu\",\"sbv\",\"sbw\",\"sbx\",\"sby\",\"sbz\",\"sca\",\"scb\",\"sce\",\"scf\",\"scg\",\"sch\",\"sci\",\"sck\",\"scl\",\"scn\",\"sco\",\"scp\",\"scq\",\"scs\",\"sct\",\"scu\",\"scv\",\"scw\",\"scx\",\"sda\",\"sdb\",\"sdc\",\"sde\",\"sdf\",\"sdg\",\"sdh\",\"sdj\",\"sdk\",\"sdl\",\"sdm\",\"sdn\",\"sdo\",\"sdp\",\"sdr\",\"sds\",\"sdt\",\"sdu\",\"sdv\",\"sdx\",\"sdz\",\"sea\",\"seb\",\"sec\",\"sed\",\"see\",\"sef\",\"seg\",\"seh\",\"sei\",\"sej\",\"sek\",\"sel\",\"sem\",\"sen\",\"seo\",\"sep\",\"seq\",\"ser\",\"ses\",\"set\",\"seu\",\"sev\",\"sew\",\"sey\",\"sez\",\"sfb\",\"sfe\",\"sfm\",\"sfs\",\"sfw\",\"sga\",\"sgb\",\"sgc\",\"sgd\",\"sge\",\"sgg\",\"sgh\",\"sgi\",\"sgj\",\"sgk\",\"sgl\",\"sgm\",\"sgn\",\"sgo\",\"sgp\",\"sgr\",\"sgs\",\"sgt\",\"sgu\",\"sgw\",\"sgx\",\"sgy\",\"sgz\",\"sha\",\"shb\",\"shc\",\"shd\",\"she\",\"shg\",\"shh\",\"shi\",\"shj\",\"shk\",\"shl\",\"shm\",\"shn\",\"sho\",\"shp\",\"shq\",\"shr\",\"shs\",\"sht\",\"shu\",\"shv\",\"shw\",\"shx\",\"shy\",\"shz\",\"sia\",\"sib\",\"sid\",\"sie\",\"sif\",\"sig\",\"sih\",\"sii\",\"sij\",\"sik\",\"sil\",\"sim\",\"sio\",\"sip\",\"siq\",\"sir\",\"sis\",\"sit\",\"siu\",\"siv\",\"siw\",\"six\",\"siy\",\"siz\",\"sja\",\"sjb\",\"sjd\",\"sje\",\"sjg\",\"sjk\",\"sjl\",\"sjm\",\"sjn\",\"sjo\",\"sjp\",\"sjr\",\"sjs\",\"sjt\",\"sju\",\"sjw\",\"ska\",\"skb\",\"skc\",\"skd\",\"ske\",\"skf\",\"skg\",\"skh\",\"ski\",\"skj\",\"skk\",\"skm\",\"skn\",\"sko\",\"skp\",\"skq\",\"skr\",\"sks\",\"skt\",\"sku\",\"skv\",\"skw\",\"skx\",\"sky\",\"skz\",\"sla\",\"slc\",\"sld\",\"sle\",\"slf\",\"slg\",\"slh\",\"sli\",\"slj\",\"sll\",\"slm\",\"sln\",\"slp\",\"slq\",\"slr\",\"sls\",\"slt\",\"slu\",\"slw\",\"slx\",\"sly\",\"slz\",\"sma\",\"smb\",\"smc\",\"smd\",\"smf\",\"smg\",\"smh\",\"smi\",\"smj\",\"smk\",\"sml\",\"smm\",\"smn\",\"smp\",\"smq\",\"smr\",\"sms\",\"smt\",\"smu\",\"smv\",\"smw\",\"smx\",\"smy\",\"smz\",\"snb\",\"snc\",\"sne\",\"snf\",\"sng\",\"snh\",\"sni\",\"snj\",\"snk\",\"snl\",\"snm\",\"snn\",\"sno\",\"snp\",\"snq\",\"snr\",\"sns\",\"snu\",\"snv\",\"snw\",\"snx\",\"sny\",\"snz\",\"soa\",\"sob\",\"soc\",\"sod\",\"soe\",\"sog\",\"soh\",\"soi\",\"soj\",\"sok\",\"sol\",\"son\",\"soo\",\"sop\",\"soq\",\"sor\",\"sos\",\"sou\",\"sov\",\"sow\",\"sox\",\"soy\",\"soz\",\"spb\",\"spc\",\"spd\",\"spe\",\"spg\",\"spi\",\"spk\",\"spl\",\"spm\",\"spn\",\"spo\",\"spp\",\"spq\",\"spr\",\"sps\",\"spt\",\"spu\",\"spv\",\"spx\",\"spy\",\"sqa\",\"sqh\",\"sqj\",\"sqk\",\"sqm\",\"sqn\",\"sqo\",\"sqq\",\"sqr\",\"sqs\",\"sqt\",\"squ\",\"sra\",\"srb\",\"src\",\"sre\",\"srf\",\"srg\",\"srh\",\"sri\",\"srk\",\"srl\",\"srm\",\"srn\",\"sro\",\"srq\",\"srr\",\"srs\",\"srt\",\"sru\",\"srv\",\"srw\",\"srx\",\"sry\",\"srz\",\"ssa\",\"ssb\",\"ssc\",\"ssd\",\"sse\",\"ssf\",\"ssg\",\"ssh\",\"ssi\",\"ssj\",\"ssk\",\"ssl\",\"ssm\",\"ssn\",\"sso\",\"ssp\",\"ssq\",\"ssr\",\"sss\",\"sst\",\"ssu\",\"ssv\",\"ssx\",\"ssy\",\"ssz\",\"sta\",\"stb\",\"std\",\"ste\",\"stf\",\"stg\",\"sth\",\"sti\",\"stj\",\"stk\",\"stl\",\"stm\",\"stn\",\"sto\",\"stp\",\"stq\",\"str\",\"sts\",\"stt\",\"stu\",\"stv\",\"stw\",\"sty\",\"sua\",\"sub\",\"suc\",\"sue\",\"sug\",\"sui\",\"suj\",\"suk\",\"sul\",\"sum\",\"suq\",\"sur\",\"sus\",\"sut\",\"suv\",\"suw\",\"sux\",\"suy\",\"suz\",\"sva\",\"svb\",\"svc\",\"sve\",\"svk\",\"svm\",\"svr\",\"svs\",\"svx\",\"swb\",\"swc\",\"swf\",\"swg\",\"swh\",\"swi\",\"swj\",\"swk\",\"swl\",\"swm\",\"swn\",\"swo\",\"swp\",\"swq\",\"swr\",\"sws\",\"swt\",\"swu\",\"swv\",\"sww\",\"swx\",\"swy\",\"sxb\",\"sxc\",\"sxe\",\"sxg\",\"sxk\",\"sxl\",\"sxm\",\"sxn\",\"sxo\",\"sxr\",\"sxs\",\"sxu\",\"sxw\",\"sya\",\"syb\",\"syc\",\"syd\",\"syi\",\"syk\",\"syl\",\"sym\",\"syn\",\"syo\",\"syr\",\"sys\",\"syw\",\"syx\",\"syy\",\"sza\",\"szb\",\"szc\",\"szd\",\"sze\",\"szg\",\"szl\",\"szn\",\"szp\",\"szs\",\"szv\",\"szw\",\"taa\",\"tab\",\"tac\",\"tad\",\"tae\",\"taf\",\"tag\",\"tai\",\"taj\",\"tak\",\"tal\",\"tan\",\"tao\",\"tap\",\"taq\",\"tar\",\"tas\",\"tau\",\"tav\",\"taw\",\"tax\",\"tay\",\"taz\",\"tba\",\"tbb\",\"tbc\",\"tbd\",\"tbe\",\"tbf\",\"tbg\",\"tbh\",\"tbi\",\"tbj\",\"tbk\",\"tbl\",\"tbm\",\"tbn\",\"tbo\",\"tbp\",\"tbq\",\"tbr\",\"tbs\",\"tbt\",\"tbu\",\"tbv\",\"tbw\",\"tbx\",\"tby\",\"tbz\",\"tca\",\"tcb\",\"tcc\",\"tcd\",\"tce\",\"tcf\",\"tcg\",\"tch\",\"tci\",\"tck\",\"tcl\",\"tcm\",\"tcn\",\"tco\",\"tcp\",\"tcq\",\"tcs\",\"tct\",\"tcu\",\"tcw\",\"tcx\",\"tcy\",\"tcz\",\"tda\",\"tdb\",\"tdc\",\"tdd\",\"tde\",\"tdf\",\"tdg\",\"tdh\",\"tdi\",\"tdj\",\"tdk\",\"tdl\",\"tdm\",\"tdn\",\"tdo\",\"tdq\",\"tdr\",\"tds\",\"tdt\",\"tdu\",\"tdv\",\"tdx\",\"tdy\",\"tea\",\"teb\",\"tec\",\"ted\",\"tee\",\"tef\",\"teg\",\"teh\",\"tei\",\"tek\",\"tem\",\"ten\",\"teo\",\"tep\",\"teq\",\"ter\",\"tes\",\"tet\",\"teu\",\"tev\",\"tew\",\"tex\",\"tey\",\"tez\",\"tfi\",\"tfn\",\"tfo\",\"tfr\",\"tft\",\"tga\",\"tgb\",\"tgc\",\"tgd\",\"tge\",\"tgf\",\"tgg\",\"tgh\",\"tgi\",\"tgj\",\"tgn\",\"tgo\",\"tgp\",\"tgq\",\"tgr\",\"tgs\",\"tgt\",\"tgu\",\"tgv\",\"tgw\",\"tgx\",\"tgy\",\"tgz\",\"thc\",\"thd\",\"the\",\"thf\",\"thh\",\"thi\",\"thk\",\"thl\",\"thm\",\"thn\",\"thp\",\"thq\",\"thr\",\"ths\",\"tht\",\"thu\",\"thv\",\"thw\",\"thx\",\"thy\",\"thz\",\"tia\",\"tic\",\"tid\",\"tie\",\"tif\",\"tig\",\"tih\",\"tii\",\"tij\",\"tik\",\"til\",\"tim\",\"tin\",\"tio\",\"tip\",\"tiq\",\"tis\",\"tit\",\"tiu\",\"tiv\",\"tiw\",\"tix\",\"tiy\",\"tiz\",\"tja\",\"tjg\",\"tji\",\"tjl\",\"tjm\",\"tjn\",\"tjo\",\"tjs\",\"tju\",\"tjw\",\"tka\",\"tkb\",\"tkd\",\"tke\",\"tkf\",\"tkg\",\"tkk\",\"tkl\",\"tkm\",\"tkn\",\"tkp\",\"tkq\",\"tkr\",\"tks\",\"tkt\",\"tku\",\"tkv\",\"tkw\",\"tkx\",\"tkz\",\"tla\",\"tlb\",\"tlc\",\"tld\",\"tlf\",\"tlg\",\"tlh\",\"tli\",\"tlj\",\"tlk\",\"tll\",\"tlm\",\"tln\",\"tlo\",\"tlp\",\"tlq\",\"tlr\",\"tls\",\"tlt\",\"tlu\",\"tlv\",\"tlw\",\"tlx\",\"tly\",\"tma\",\"tmb\",\"tmc\",\"tmd\",\"tme\",\"tmf\",\"tmg\",\"tmh\",\"tmi\",\"tmj\",\"tmk\",\"tml\",\"tmm\",\"tmn\",\"tmo\",\"tmp\",\"tmq\",\"tmr\",\"tms\",\"tmt\",\"tmu\",\"tmv\",\"tmw\",\"tmy\",\"tmz\",\"tna\",\"tnb\",\"tnc\",\"tnd\",\"tne\",\"tnf\",\"tng\",\"tnh\",\"tni\",\"tnk\",\"tnl\",\"tnm\",\"tnn\",\"tno\",\"tnp\",\"tnq\",\"tnr\",\"tns\",\"tnt\",\"tnu\",\"tnv\",\"tnw\",\"tnx\",\"tny\",\"tnz\",\"tob\",\"toc\",\"tod\",\"toe\",\"tof\",\"tog\",\"toh\",\"toi\",\"toj\",\"tol\",\"tom\",\"too\",\"top\",\"toq\",\"tor\",\"tos\",\"tou\",\"tov\",\"tow\",\"tox\",\"toy\",\"toz\",\"tpa\",\"tpc\",\"tpe\",\"tpf\",\"tpg\",\"tpi\",\"tpj\",\"tpk\",\"tpl\",\"tpm\",\"tpn\",\"tpo\",\"tpp\",\"tpq\",\"tpr\",\"tpt\",\"tpu\",\"tpv\",\"tpw\",\"tpx\",\"tpy\",\"tpz\",\"tqb\",\"tql\",\"tqm\",\"tqn\",\"tqo\",\"tqp\",\"tqq\",\"tqr\",\"tqt\",\"tqu\",\"tqw\",\"tra\",\"trb\",\"trc\",\"trd\",\"tre\",\"trf\",\"trg\",\"trh\",\"tri\",\"trj\",\"trk\",\"trl\",\"trm\",\"trn\",\"tro\",\"trp\",\"trq\",\"trr\",\"trs\",\"trt\",\"tru\",\"trv\",\"trw\",\"trx\",\"try\",\"trz\",\"tsa\",\"tsb\",\"tsc\",\"tsd\",\"tse\",\"tsf\",\"tsg\",\"tsh\",\"tsi\",\"tsj\",\"tsk\",\"tsl\",\"tsm\",\"tsp\",\"tsq\",\"tsr\",\"tss\",\"tst\",\"tsu\",\"tsv\",\"tsw\",\"tsx\",\"tsy\",\"tsz\",\"tta\",\"ttb\",\"ttc\",\"ttd\",\"tte\",\"ttf\",\"ttg\",\"tth\",\"tti\",\"ttj\",\"ttk\",\"ttl\",\"ttm\",\"ttn\",\"tto\",\"ttp\",\"ttq\",\"ttr\",\"tts\",\"ttt\",\"ttu\",\"ttv\",\"ttw\",\"tty\",\"ttz\",\"tua\",\"tub\",\"tuc\",\"tud\",\"tue\",\"tuf\",\"tug\",\"tuh\",\"tui\",\"tuj\",\"tul\",\"tum\",\"tun\",\"tuo\",\"tup\",\"tuq\",\"tus\",\"tut\",\"tuu\",\"tuv\",\"tuw\",\"tux\",\"tuy\",\"tuz\",\"tva\",\"tvd\",\"tve\",\"tvk\",\"tvl\",\"tvm\",\"tvn\",\"tvo\",\"tvs\",\"tvt\",\"tvu\",\"tvw\",\"tvy\",\"twa\",\"twb\",\"twc\",\"twd\",\"twe\",\"twf\",\"twg\",\"twh\",\"twl\",\"twm\",\"twn\",\"two\",\"twp\",\"twq\",\"twr\",\"twt\",\"twu\",\"tww\",\"twx\",\"twy\",\"txa\",\"txb\",\"txc\",\"txe\",\"txg\",\"txh\",\"txi\",\"txj\",\"txm\",\"txn\",\"txo\",\"txq\",\"txr\",\"txs\",\"txt\",\"txu\",\"txx\",\"txy\",\"tya\",\"tye\",\"tyh\",\"tyi\",\"tyj\",\"tyl\",\"tyn\",\"typ\",\"tyr\",\"tys\",\"tyt\",\"tyu\",\"tyv\",\"tyx\",\"tyz\",\"tza\",\"tzh\",\"tzj\",\"tzl\",\"tzm\",\"tzn\",\"tzo\",\"tzx\",\"uam\",\"uan\",\"uar\",\"uba\",\"ubi\",\"ubl\",\"ubr\",\"ubu\",\"uby\",\"uda\",\"ude\",\"udg\",\"udi\",\"udj\",\"udl\",\"udm\",\"udu\",\"ues\",\"ufi\",\"uga\",\"ugb\",\"uge\",\"ugn\",\"ugo\",\"ugy\",\"uha\",\"uhn\",\"uis\",\"uiv\",\"uji\",\"uka\",\"ukg\",\"ukh\",\"ukk\",\"ukl\",\"ukp\",\"ukq\",\"uks\",\"uku\",\"ukw\",\"uky\",\"ula\",\"ulb\",\"ulc\",\"ule\",\"ulf\",\"uli\",\"ulk\",\"ull\",\"ulm\",\"uln\",\"ulu\",\"ulw\",\"uma\",\"umb\",\"umc\",\"umd\",\"umg\",\"umi\",\"umm\",\"umn\",\"umo\",\"ump\",\"umr\",\"ums\",\"umu\",\"una\",\"und\",\"une\",\"ung\",\"unk\",\"unm\",\"unn\",\"unp\",\"unr\",\"unu\",\"unx\",\"unz\",\"uok\",\"upi\",\"upv\",\"ura\",\"urb\",\"urc\",\"ure\",\"urf\",\"urg\",\"urh\",\"uri\",\"urj\",\"urk\",\"url\",\"urm\",\"urn\",\"uro\",\"urp\",\"urr\",\"urt\",\"uru\",\"urv\",\"urw\",\"urx\",\"ury\",\"urz\",\"usa\",\"ush\",\"usi\",\"usk\",\"usp\",\"usu\",\"uta\",\"ute\",\"utp\",\"utr\",\"utu\",\"uum\",\"uun\",\"uur\",\"uuu\",\"uve\",\"uvh\",\"uvl\",\"uwa\",\"uya\",\"uzn\",\"uzs\",\"vaa\",\"vae\",\"vaf\",\"vag\",\"vah\",\"vai\",\"vaj\",\"val\",\"vam\",\"van\",\"vao\",\"vap\",\"var\",\"vas\",\"vau\",\"vav\",\"vay\",\"vbb\",\"vbk\",\"vec\",\"ved\",\"vel\",\"vem\",\"veo\",\"vep\",\"ver\",\"vgr\",\"vgt\",\"vic\",\"vid\",\"vif\",\"vig\",\"vil\",\"vin\",\"vis\",\"vit\",\"viv\",\"vka\",\"vki\",\"vkj\",\"vkk\",\"vkl\",\"vkm\",\"vko\",\"vkp\",\"vkt\",\"vku\",\"vlp\",\"vls\",\"vma\",\"vmb\",\"vmc\",\"vmd\",\"vme\",\"vmf\",\"vmg\",\"vmh\",\"vmi\",\"vmj\",\"vmk\",\"vml\",\"vmm\",\"vmp\",\"vmq\",\"vmr\",\"vms\",\"vmu\",\"vmv\",\"vmw\",\"vmx\",\"vmy\",\"vmz\",\"vnk\",\"vnm\",\"vnp\",\"vor\",\"vot\",\"vra\",\"vro\",\"vrs\",\"vrt\",\"vsi\",\"vsl\",\"vsv\",\"vto\",\"vum\",\"vun\",\"vut\",\"vwa\",\"waa\",\"wab\",\"wac\",\"wad\",\"wae\",\"waf\",\"wag\",\"wah\",\"wai\",\"waj\",\"wak\",\"wal\",\"wam\",\"wan\",\"wao\",\"wap\",\"waq\",\"war\",\"was\",\"wat\",\"wau\",\"wav\",\"waw\",\"wax\",\"way\",\"waz\",\"wba\",\"wbb\",\"wbe\",\"wbf\",\"wbh\",\"wbi\",\"wbj\",\"wbk\",\"wbl\",\"wbm\",\"wbp\",\"wbq\",\"wbr\",\"wbs\",\"wbt\",\"wbv\",\"wbw\",\"wca\",\"wci\",\"wdd\",\"wdg\",\"wdj\",\"wdk\",\"wdu\",\"wdy\",\"wea\",\"wec\",\"wed\",\"weg\",\"weh\",\"wei\",\"wem\",\"wen\",\"weo\",\"wep\",\"wer\",\"wes\",\"wet\",\"weu\",\"wew\",\"wfg\",\"wga\",\"wgb\",\"wgg\",\"wgi\",\"wgo\",\"wgu\",\"wgw\",\"wgy\",\"wha\",\"whg\",\"whk\",\"whu\",\"wib\",\"wic\",\"wie\",\"wif\",\"wig\",\"wih\",\"wii\",\"wij\",\"wik\",\"wil\",\"wim\",\"win\",\"wir\",\"wit\",\"wiu\",\"wiv\",\"wiw\",\"wiy\",\"wja\",\"wji\",\"wka\",\"wkb\",\"wkd\",\"wkl\",\"wku\",\"wkw\",\"wky\",\"wla\",\"wlc\",\"wle\",\"wlg\",\"wli\",\"wlk\",\"wll\",\"wlm\",\"wlo\",\"wlr\",\"wls\",\"wlu\",\"wlv\",\"wlw\",\"wlx\",\"wly\",\"wma\",\"wmb\",\"wmc\",\"wmd\",\"wme\",\"wmh\",\"wmi\",\"wmm\",\"wmn\",\"wmo\",\"wms\",\"wmt\",\"wmw\",\"wmx\",\"wnb\",\"wnc\",\"wnd\",\"wne\",\"wng\",\"wni\",\"wnk\",\"wnm\",\"wnn\",\"wno\",\"wnp\",\"wnu\",\"wnw\",\"wny\",\"woa\",\"wob\",\"woc\",\"wod\",\"woe\",\"wof\",\"wog\",\"woi\",\"wok\",\"wom\",\"won\",\"woo\",\"wor\",\"wos\",\"wow\",\"woy\",\"wpc\",\"wra\",\"wrb\",\"wrd\",\"wrg\",\"wrh\",\"wri\",\"wrk\",\"wrl\",\"wrm\",\"wrn\",\"wro\",\"wrp\",\"wrr\",\"wrs\",\"wru\",\"wrv\",\"wrw\",\"wrx\",\"wry\",\"wrz\",\"wsa\",\"wsg\",\"wsi\",\"wsk\",\"wsr\",\"wss\",\"wsu\",\"wsv\",\"wtf\",\"wth\",\"wti\",\"wtk\",\"wtm\",\"wtw\",\"wua\",\"wub\",\"wud\",\"wuh\",\"wul\",\"wum\",\"wun\",\"wur\",\"wut\",\"wuu\",\"wuv\",\"wux\",\"wuy\",\"wwa\",\"wwb\",\"wwo\",\"wwr\",\"www\",\"wxa\",\"wxw\",\"wya\",\"wyb\",\"wyi\",\"wym\",\"wyr\",\"wyy\",\"xaa\",\"xab\",\"xac\",\"xad\",\"xae\",\"xag\",\"xai\",\"xaj\",\"xak\",\"xal\",\"xam\",\"xan\",\"xao\",\"xap\",\"xaq\",\"xar\",\"xas\",\"xat\",\"xau\",\"xav\",\"xaw\",\"xay\",\"xba\",\"xbb\",\"xbc\",\"xbd\",\"xbe\",\"xbg\",\"xbi\",\"xbj\",\"xbm\",\"xbn\",\"xbo\",\"xbp\",\"xbr\",\"xbw\",\"xbx\",\"xby\",\"xcb\",\"xcc\",\"xce\",\"xcg\",\"xch\",\"xcl\",\"xcm\",\"xcn\",\"xco\",\"xcr\",\"xct\",\"xcu\",\"xcv\",\"xcw\",\"xcy\",\"xda\",\"xdc\",\"xdk\",\"xdm\",\"xdo\",\"xdy\",\"xeb\",\"xed\",\"xeg\",\"xel\",\"xem\",\"xep\",\"xer\",\"xes\",\"xet\",\"xeu\",\"xfa\",\"xga\",\"xgb\",\"xgd\",\"xgf\",\"xgg\",\"xgi\",\"xgl\",\"xgm\",\"xgn\",\"xgr\",\"xgu\",\"xgw\",\"xha\",\"xhc\",\"xhd\",\"xhe\",\"xhr\",\"xht\",\"xhu\",\"xhv\",\"xia\",\"xib\",\"xii\",\"xil\",\"xin\",\"xip\",\"xir\",\"xis\",\"xiv\",\"xiy\",\"xjb\",\"xjt\",\"xka\",\"xkb\",\"xkc\",\"xkd\",\"xke\",\"xkf\",\"xkg\",\"xkh\",\"xki\",\"xkj\",\"xkk\",\"xkl\",\"xkn\",\"xko\",\"xkp\",\"xkq\",\"xkr\",\"xks\",\"xkt\",\"xku\",\"xkv\",\"xkw\",\"xkx\",\"xky\",\"xkz\",\"xla\",\"xlb\",\"xlc\",\"xld\",\"xle\",\"xlg\",\"xli\",\"xln\",\"xlo\",\"xlp\",\"xls\",\"xlu\",\"xly\",\"xma\",\"xmb\",\"xmc\",\"xmd\",\"xme\",\"xmf\",\"xmg\",\"xmh\",\"xmj\",\"xmk\",\"xml\",\"xmm\",\"xmn\",\"xmo\",\"xmp\",\"xmq\",\"xmr\",\"xms\",\"xmt\",\"xmu\",\"xmv\",\"xmw\",\"xmx\",\"xmy\",\"xmz\",\"xna\",\"xnb\",\"xnd\",\"xng\",\"xnh\",\"xni\",\"xnk\",\"xnn\",\"xno\",\"xnr\",\"xns\",\"xnt\",\"xnu\",\"xny\",\"xnz\",\"xoc\",\"xod\",\"xog\",\"xoi\",\"xok\",\"xom\",\"xon\",\"xoo\",\"xop\",\"xor\",\"xow\",\"xpa\",\"xpc\",\"xpe\",\"xpg\",\"xpi\",\"xpj\",\"xpk\",\"xpm\",\"xpn\",\"xpo\",\"xpp\",\"xpq\",\"xpr\",\"xps\",\"xpt\",\"xpu\",\"xpy\",\"xqa\",\"xqt\",\"xra\",\"xrb\",\"xrd\",\"xre\",\"xrg\",\"xri\",\"xrm\",\"xrn\",\"xrq\",\"xrr\",\"xrt\",\"xru\",\"xrw\",\"xsa\",\"xsb\",\"xsc\",\"xsd\",\"xse\",\"xsh\",\"xsi\",\"xsj\",\"xsl\",\"xsm\",\"xsn\",\"xso\",\"xsp\",\"xsq\",\"xsr\",\"xss\",\"xsu\",\"xsv\",\"xsy\",\"xta\",\"xtb\",\"xtc\",\"xtd\",\"xte\",\"xtg\",\"xth\",\"xti\",\"xtj\",\"xtl\",\"xtm\",\"xtn\",\"xto\",\"xtp\",\"xtq\",\"xtr\",\"xts\",\"xtt\",\"xtu\",\"xtv\",\"xtw\",\"xty\",\"xtz\",\"xua\",\"xub\",\"xud\",\"xug\",\"xuj\",\"xul\",\"xum\",\"xun\",\"xuo\",\"xup\",\"xur\",\"xut\",\"xuu\",\"xve\",\"xvi\",\"xvn\",\"xvo\",\"xvs\",\"xwa\",\"xwc\",\"xwd\",\"xwe\",\"xwg\",\"xwj\",\"xwk\",\"xwl\",\"xwo\",\"xwr\",\"xwt\",\"xww\",\"xxb\",\"xxk\",\"xxm\",\"xxr\",\"xxt\",\"xya\",\"xyb\",\"xyj\",\"xyk\",\"xyl\",\"xyt\",\"xyy\",\"xzh\",\"xzm\",\"xzp\",\"yaa\",\"yab\",\"yac\",\"yad\",\"yae\",\"yaf\",\"yag\",\"yah\",\"yai\",\"yaj\",\"yak\",\"yal\",\"yam\",\"yan\",\"yao\",\"yap\",\"yaq\",\"yar\",\"yas\",\"yat\",\"yau\",\"yav\",\"yaw\",\"yax\",\"yay\",\"yaz\",\"yba\",\"ybb\",\"ybd\",\"ybe\",\"ybh\",\"ybi\",\"ybj\",\"ybk\",\"ybl\",\"ybm\",\"ybn\",\"ybo\",\"ybx\",\"yby\",\"ych\",\"ycl\",\"ycn\",\"ycp\",\"yda\",\"ydd\",\"yde\",\"ydg\",\"ydk\",\"yds\",\"yea\",\"yec\",\"yee\",\"yei\",\"yej\",\"yel\",\"yen\",\"yer\",\"yes\",\"yet\",\"yeu\",\"yev\",\"yey\",\"yga\",\"ygi\",\"ygl\",\"ygm\",\"ygp\",\"ygr\",\"ygs\",\"ygu\",\"ygw\",\"yha\",\"yhd\",\"yhl\",\"yhs\",\"yia\",\"yif\",\"yig\",\"yih\",\"yii\",\"yij\",\"yik\",\"yil\",\"yim\",\"yin\",\"yip\",\"yiq\",\"yir\",\"yis\",\"yit\",\"yiu\",\"yiv\",\"yix\",\"yiy\",\"yiz\",\"yka\",\"ykg\",\"yki\",\"ykk\",\"ykl\",\"ykm\",\"ykn\",\"yko\",\"ykr\",\"ykt\",\"yku\",\"yky\",\"yla\",\"ylb\",\"yle\",\"ylg\",\"yli\",\"yll\",\"ylm\",\"yln\",\"ylo\",\"ylr\",\"ylu\",\"yly\",\"yma\",\"ymb\",\"ymc\",\"ymd\",\"yme\",\"ymg\",\"ymh\",\"ymi\",\"ymk\",\"yml\",\"ymm\",\"ymn\",\"ymo\",\"ymp\",\"ymq\",\"ymr\",\"yms\",\"ymt\",\"ymx\",\"ymz\",\"yna\",\"ynd\",\"yne\",\"yng\",\"ynh\",\"ynk\",\"ynl\",\"ynn\",\"yno\",\"ynq\",\"yns\",\"ynu\",\"yob\",\"yog\",\"yoi\",\"yok\",\"yol\",\"yom\",\"yon\",\"yos\",\"yot\",\"yox\",\"yoy\",\"ypa\",\"ypb\",\"ypg\",\"yph\",\"ypk\",\"ypm\",\"ypn\",\"ypo\",\"ypp\",\"ypz\",\"yra\",\"yrb\",\"yre\",\"yri\",\"yrk\",\"yrl\",\"yrm\",\"yrn\",\"yro\",\"yrs\",\"yrw\",\"yry\",\"ysc\",\"ysd\",\"ysg\",\"ysl\",\"ysn\",\"yso\",\"ysp\",\"ysr\",\"yss\",\"ysy\",\"yta\",\"ytl\",\"ytp\",\"ytw\",\"yty\",\"yua\",\"yub\",\"yuc\",\"yud\",\"yue\",\"yuf\",\"yug\",\"yui\",\"yuj\",\"yuk\",\"yul\",\"yum\",\"yun\",\"yup\",\"yuq\",\"yur\",\"yut\",\"yuu\",\"yuw\",\"yux\",\"yuy\",\"yuz\",\"yva\",\"yvt\",\"ywa\",\"ywg\",\"ywl\",\"ywn\",\"ywq\",\"ywr\",\"ywt\",\"ywu\",\"yww\",\"yxa\",\"yxg\",\"yxl\",\"yxm\",\"yxu\",\"yxy\",\"yyr\",\"yyu\",\"yyz\",\"yzg\",\"yzk\",\"zaa\",\"zab\",\"zac\",\"zad\",\"zae\",\"zaf\",\"zag\",\"zah\",\"zai\",\"zaj\",\"zak\",\"zal\",\"zam\",\"zao\",\"zap\",\"zaq\",\"zar\",\"zas\",\"zat\",\"zau\",\"zav\",\"zaw\",\"zax\",\"zay\",\"zaz\",\"zbc\",\"zbe\",\"zbl\",\"zbt\",\"zbw\",\"zca\",\"zch\",\"zdj\",\"zea\",\"zeg\",\"zeh\",\"zen\",\"zga\",\"zgb\",\"zgh\",\"zgm\",\"zgn\",\"zgr\",\"zhb\",\"zhd\",\"zhi\",\"zhn\",\"zhw\",\"zhx\",\"zia\",\"zib\",\"zik\",\"zil\",\"zim\",\"zin\",\"zir\",\"ziw\",\"ziz\",\"zka\",\"zkb\",\"zkd\",\"zkg\",\"zkh\",\"zkk\",\"zkn\",\"zko\",\"zkp\",\"zkr\",\"zkt\",\"zku\",\"zkv\",\"zkz\",\"zle\",\"zlj\",\"zlm\",\"zln\",\"zlq\",\"zls\",\"zlw\",\"zma\",\"zmb\",\"zmc\",\"zmd\",\"zme\",\"zmf\",\"zmg\",\"zmh\",\"zmi\",\"zmj\",\"zmk\",\"zml\",\"zmm\",\"zmn\",\"zmo\",\"zmp\",\"zmq\",\"zmr\",\"zms\",\"zmt\",\"zmu\",\"zmv\",\"zmw\",\"zmx\",\"zmy\",\"zmz\",\"zna\",\"znd\",\"zne\",\"zng\",\"znk\",\"zns\",\"zoc\",\"zoh\",\"zom\",\"zoo\",\"zoq\",\"zor\",\"zos\",\"zpa\",\"zpb\",\"zpc\",\"zpd\",\"zpe\",\"zpf\",\"zpg\",\"zph\",\"zpi\",\"zpj\",\"zpk\",\"zpl\",\"zpm\",\"zpn\",\"zpo\",\"zpp\",\"zpq\",\"zpr\",\"zps\",\"zpt\",\"zpu\",\"zpv\",\"zpw\",\"zpx\",\"zpy\",\"zpz\",\"zqe\",\"zra\",\"zrg\",\"zrn\",\"zro\",\"zrp\",\"zrs\",\"zsa\",\"zsk\",\"zsl\",\"zsm\",\"zsr\",\"zsu\",\"zte\",\"ztg\",\"ztl\",\"ztm\",\"ztn\",\"ztp\",\"ztq\",\"zts\",\"ztt\",\"ztu\",\"ztx\",\"zty\",\"zua\",\"zuh\",\"zum\",\"zun\",\"zuy\",\"zwa\",\"zxx\",\"zyb\",\"zyg\",\"zyj\",\"zyn\",\"zyp\",\"zza\",\"zzj\"];function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Pe(e){return Be(e)||Le(e)||Ie()}function Ie(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}function Le(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}function Be(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function X(e,t){return L(e)||I(e,t)||P()}function P(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function I(e,t){if(!(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(a)throw o}}return r}function L(e){if(Array.isArray(e))return e}function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}axe.utils.validLangs=function(){\"use strict\";return et},axe._load({lang:\"en\",data:{rules:{accesskeys:{description:\"Ensures every accesskey attribute value is unique\",help:\"accesskey attribute value must be unique\"},\"area-alt\":{description:\"Ensures <area> elements of image maps have alternate text\",help:\"Active <area> elements must have alternate text\"},\"aria-allowed-attr\":{description:\"Ensures ARIA attributes are allowed for an element's role\",help:\"Elements must only use allowed ARIA attributes\"},\"aria-allowed-role\":{description:\"Ensures role attribute has an appropriate value for the element\",help:\"ARIA role must be appropriate for the element\"},\"aria-dpub-role-fallback\":{description:\"Ensures unsupported DPUB roles are only used on elements with implicit fallback roles\",help:\"Unsupported DPUB ARIA roles should be used on elements with implicit fallback roles\"},\"aria-hidden-body\":{description:\"Ensures aria-hidden='true' is not present on the document body.\",help:\"aria-hidden='true' must not be present on the document body\"},\"aria-hidden-focus\":{description:\"Ensures aria-hidden elements do not contain focusable elements\",help:\"ARIA hidden element must not contain focusable elements\"},\"aria-input-field-name\":{description:\"Ensures every ARIA input field has an accessible name\",help:\"ARIA input fields have an accessible name\"},\"aria-required-attr\":{description:\"Ensures elements with ARIA roles have all required ARIA attributes\",help:\"Required ARIA attributes must be provided\"},\"aria-required-children\":{description:\"Ensures elements with an ARIA role that require child roles contain them\",help:\"Certain ARIA roles must contain particular children\"},\"aria-required-parent\":{description:\"Ensures elements with an ARIA role that require parent roles are contained by them\",help:\"Certain ARIA roles must be contained by particular parents\"},\"aria-roledescription\":{description:\"Ensure aria-roledescription is only used on elements with an implicit or explicit role\",help:\"Use aria-roledescription on elements with a semantic role\"},\"aria-roles\":{description:\"Ensures all elements with a role attribute use a valid value\",help:\"ARIA roles used must conform to valid values\"},\"aria-toggle-field-name\":{description:\"Ensures every ARIA toggle field has an accessible name\",help:\"ARIA toggle fields have an accessible name\"},\"aria-valid-attr-value\":{description:\"Ensures all ARIA attributes have valid values\",help:\"ARIA attributes must conform to valid values\"},\"aria-valid-attr\":{description:\"Ensures attributes that begin with aria- are valid ARIA attributes\",help:\"ARIA attributes must conform to valid names\"},\"audio-caption\":{description:\"Ensures <audio> elements have captions\",help:\"<audio> elements must have a captions track\"},\"autocomplete-valid\":{description:\"Ensure the autocomplete attribute is correct and suitable for the form field\",help:\"autocomplete attribute must be used correctly\"},\"avoid-inline-spacing\":{description:\"Ensure that text spacing set through style attributes can be adjusted with custom stylesheets\",help:\"Inline text spacing must be adjustable with custom stylesheets\"},blink:{description:\"Ensures <blink> elements are not used\",help:\"<blink> elements are deprecated and must not be used\"},\"button-name\":{description:\"Ensures buttons have discernible text\",help:\"Buttons must have discernible text\"},bypass:{description:\"Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content\",help:\"Page must have means to bypass repeated blocks\"},checkboxgroup:{description:'Ensures related <input type=\"checkbox\"> elements have a group and that the group designation is consistent',help:\"Checkbox inputs with the same name attribute value must be part of a group\"},\"color-contrast\":{description:\"Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds\",help:\"Elements must have sufficient color contrast\"},\"css-orientation-lock\":{description:\"Ensures content is not locked to any specific display orientation, and the content is operable in all display orientations\",help:\"CSS Media queries are not used to lock display orientation\"},\"definition-list\":{description:\"Ensures <dl> elements are structured correctly\",help:\"<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script>, <template> or <div> elements\"},dlitem:{description:\"Ensures <dt> and <dd> elements are contained by a <dl>\",help:\"<dt> and <dd> elements must be contained by a <dl>\"},\"document-title\":{description:\"Ensures each HTML document contains a non-empty <title> element\",help:\"Documents must have <title> element to aid in navigation\"},\"duplicate-id-active\":{description:\"Ensures every id attribute value of active elements is unique\",help:\"IDs of active elements must be unique\"},\"duplicate-id-aria\":{description:\"Ensures every id attribute value used in ARIA and in labels is unique\",help:\"IDs used in ARIA and labels must be unique\"},\"duplicate-id\":{description:\"Ensures every id attribute value is unique\",help:\"id attribute value must be unique\"},\"empty-heading\":{description:\"Ensures headings have discernible text\",help:\"Headings must not be empty\"},\"focus-order-semantics\":{description:\"Ensures elements in the focus order have an appropriate role\",help:\"Elements in the focus order need a role appropriate for interactive content\"},\"form-field-multiple-labels\":{description:\"Ensures form field does not have multiple label elements\",help:\"Form field should not have multiple label elements\"},\"frame-tested\":{description:\"Ensures <iframe> and <frame> elements contain the axe-core script\",help:\"Frames must be tested with axe-core\"},\"frame-title-unique\":{description:\"Ensures <iframe> and <frame> elements contain a unique title attribute\",help:\"Frames must have a unique title attribute\"},\"frame-title\":{description:\"Ensures <iframe> and <frame> elements contain a non-empty title attribute\",help:\"Frames must have title attribute\"},\"heading-order\":{description:\"Ensures the order of headings is semantically correct\",help:\"Heading levels should only increase by one\"},\"hidden-content\":{description:\"Informs users about hidden content.\",help:\"Hidden content on the page cannot be analyzed\"},\"html-has-lang\":{description:\"Ensures every HTML document has a lang attribute\",help:\"<html> element must have a lang attribute\"},\"html-lang-valid\":{description:\"Ensures the lang attribute of the <html> element has a valid value\",help:\"<html> element must have a valid value for the lang attribute\"},\"html-xml-lang-mismatch\":{description:\"Ensure that HTML elements with both valid lang and xml:lang attributes agree on the base language of the page\",help:\"HTML elements with lang and xml:lang must have the same base language\"},\"identical-links-same-purpose\":{description:\"Ensure that links with the same accessible name serve a similar purpose\",help:\"Links with the same name have a similar purpose\"},\"image-alt\":{description:\"Ensures <img> elements have alternate text or a role of none or presentation\",help:\"Images must have alternate text\"},\"image-redundant-alt\":{description:\"Ensure image alternative is not repeated as text\",help:\"Alternative text of images should not be repeated as text\"},\"input-button-name\":{description:\"Ensures input buttons have discernible text\",help:\"Input buttons must have discernible text\"},\"input-image-alt\":{description:'Ensures <input type=\"image\"> elements have alternate text',help:\"Image buttons must have alternate text\"},\"label-content-name-mismatch\":{description:\"Ensures that elements labelled through their content must have their visible text as part of their accessible name\",help:\"Elements must have their visible text as part of their accessible name\"},\"label-title-only\":{description:\"Ensures that every form element is not solely labeled using the title or aria-describedby attributes\",help:\"Form elements should have a visible label\"},label:{description:\"Ensures every form element has a label\",help:\"Form elements must have labels\"},\"landmark-banner-is-top-level\":{description:\"Ensures the banner landmark is at top level\",help:\"Banner landmark must not be contained in another landmark\"},\"landmark-complementary-is-top-level\":{description:\"Ensures the complementary landmark or aside is at top level\",help:\"Aside must not be contained in another landmark\"},\"landmark-contentinfo-is-top-level\":{description:\"Ensures the contentinfo landmark is at top level\",help:\"Contentinfo landmark must not be contained in another landmark\"},\"landmark-main-is-top-level\":{description:\"Ensures the main landmark is at top level\",help:\"Main landmark must not be contained in another landmark\"},\"landmark-no-duplicate-banner\":{description:\"Ensures the document has at most one banner landmark\",help:\"Document must not have more than one banner landmark\"},\"landmark-no-duplicate-contentinfo\":{description:\"Ensures the document has at most one contentinfo landmark\",help:\"Document must not have more than one contentinfo landmark\"},\"landmark-no-duplicate-main\":{description:\"Ensures the document has at most one main landmark\",help:\"Document must not have more than one main landmark\"},\"landmark-one-main\":{description:\"Ensures the document has a main landmark\",help:\"Document must have one main landmark\"},\"landmark-unique\":{help:\"Ensures landmarks are unique\",description:\"Landmarks must have a unique role or role/label/title (i.e. accessible name) combination\"},\"layout-table\":{description:\"Ensures presentational <table> elements do not use <th>, <caption> elements or the summary attribute\",help:\"Layout tables must not use data table elements\"},\"link-in-text-block\":{description:\"Links can be distinguished without relying on color\",help:\"Links must be distinguished from surrounding text in a way that does not rely on color\"},\"link-name\":{description:\"Ensures links have discernible text\",help:\"Links must have discernible text\"},list:{description:\"Ensures that lists are structured correctly\",help:\"<ul> and <ol> must only directly contain <li>, <script> or <template> elements\"},listitem:{description:\"Ensures <li> elements are used semantically\",help:\"<li> elements must be contained in a <ul> or <ol>\"},marquee:{description:\"Ensures <marquee> elements are not used\",help:\"<marquee> elements are deprecated and must not be used\"},\"meta-refresh\":{description:'Ensures <meta http-equiv=\"refresh\"> is not used',help:\"Timed refresh must not exist\"},\"meta-viewport-large\":{description:'Ensures <meta name=\"viewport\"> can scale a significant amount',help:\"Users should be able to zoom and scale the text up to 500%\"},\"meta-viewport\":{description:'Ensures <meta name=\"viewport\"> does not disable text scaling and zooming',help:\"Zooming and scaling must not be disabled\"},\"no-autoplay-audio\":{description:\"Ensures <video> or <audio> elements do not autoplay audio for more than 3 seconds without a control mechanism to stop or mute the audio\",help:\"<video> or <audio> elements do not autoplay audio\"},\"object-alt\":{description:\"Ensures <object> elements have alternate text\",help:\"<object> elements must have alternate text\"},\"p-as-heading\":{description:\"Ensure p elements are not used to style headings\",help:\"Bold, italic text and font-size are not used to style p elements as a heading\"},\"page-has-heading-one\":{description:\"Ensure that the page, or at least one of its frames contains a level-one heading\",help:\"Page must contain a level-one heading\"},radiogroup:{description:'Ensures related <input type=\"radio\"> elements have a group and that the group designation is consistent',help:\"Radio inputs with the same name attribute value must be part of a group\"},region:{description:\"Ensures all page content is contained by landmarks\",help:\"All page content must be contained by landmarks\"},\"role-img-alt\":{description:\"Ensures [role='img'] elements have alternate text\",help:\"[role='img'] elements have an alternative text\"},\"scope-attr-valid\":{description:\"Ensures the scope attribute is used correctly on tables\",help:\"scope attribute should be used correctly\"},\"scrollable-region-focusable\":{description:\"Elements that have scrollable content should be accessible by keyboard\",help:\"Ensure that scrollable region has keyboard access\"},\"server-side-image-map\":{description:\"Ensures that server-side image maps are not used\",help:\"Server-side image maps must not be used\"},\"skip-link\":{description:\"Ensure all skip links have a focusable target\",help:\"The skip-link target should exist and be focusable\"},\"svg-img-alt\":{description:\"Ensures svg elements with an img, graphics-document or graphics-symbol role have an accessible text\",help:\"svg elements with an img role have an alternative text\"},tabindex:{description:\"Ensures tabindex attribute values are not greater than 0\",help:\"Elements should not have tabindex greater than zero\"},\"table-duplicate-name\":{description:\"Ensure that tables do not have the same summary and caption\",help:\"The <caption> element should not contain the same text as the summary attribute\"},\"table-fake-caption\":{description:\"Ensure that tables with a caption use the <caption> element.\",help:\"Data or header cells should not be used to give caption to a data table.\"},\"td-has-header\":{description:\"Ensure that each non-empty data cell in a large table has one or more table headers\",help:\"All non-empty td element in table larger than 3 by 3 must have an associated table header\"},\"td-headers-attr\":{description:\"Ensure that each cell in a table using the headers refers to another cell in that table\",help:\"All cells in a table element that use the headers attribute must only refer to other cells of that same table\"},\"th-has-data-cells\":{description:\"Ensure that each table header in a data table refers to data cells\",help:\"All th elements and elements with role=columnheader/rowheader must have data cells they describe\"},\"valid-lang\":{description:\"Ensures lang attributes have valid values\",help:\"lang attribute must have a valid value\"},\"video-caption\":{description:\"Ensures <video> elements have captions\",help:\"<video> elements must have captions\"},\"video-description\":{description:\"Ensures <video> elements have audio descriptions\",help:\"<video> elements must have an audio description track\"}},checks:{accesskeys:{impact:\"serious\",messages:{pass:\"Accesskey attribute value is unique\",fail:\"Document has multiple elements with the same accesskey\"}},\"non-empty-alt\":{impact:\"critical\",messages:{pass:\"Element has a non-empty alt attribute\",fail:\"Element has no alt attribute or the alt attribute is empty\"}},\"non-empty-title\":{impact:\"serious\",messages:{pass:\"Element has a title attribute\",fail:\"Element has no title attribute or the title attribute is empty\"}},\"aria-label\":{impact:\"serious\",messages:{pass:\"aria-label attribute exists and is not empty\",fail:\"aria-label attribute does not exist or is empty\"}},\"aria-labelledby\":{impact:\"serious\",messages:{pass:\"aria-labelledby attribute exists and references elements that are visible to screen readers\",fail:\"aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty\"}},\"aria-allowed-attr\":{impact:\"critical\",messages:{pass:\"ARIA attributes are used correctly for the defined role\",fail:{singular:\"ARIA attribute is not allowed: ${data.values}\",plural:\"ARIA attributes are not allowed: ${data.values}\"}}},\"aria-unsupported-attr\":{impact:\"critical\",messages:{pass:\"ARIA attribute is supported\",fail:\"ARIA attribute is not widely supported in screen readers and assistive technologies: ${data.values}\"}},\"aria-allowed-role\":{impact:\"minor\",messages:{pass:\"ARIA role is allowed for given element\",fail:{singular:\"ARIA role ${data.values} is not allowed for given element\",plural:\"ARIA roles ${data.values} are not allowed for given element\"},incomplete:{singular:\"ARIA role ${data.values} must be removed when the element is made visible, as it is not allowed for the element\",plural:\"ARIA roles ${data.values} must be removed when the element is made visible, as they are not allowed for the element\"}}},\"implicit-role-fallback\":{impact:\"moderate\",messages:{pass:\"Element’s implicit ARIA role is an appropriate fallback\",fail:\"Element’s implicit ARIA role is not a good fallback for the (unsupported) role\"}},\"aria-hidden-body\":{impact:\"critical\",messages:{pass:\"No aria-hidden attribute is present on document body\",fail:\"aria-hidden=true should not be present on the document body\"}},\"focusable-modal-open\":{impact:\"serious\",messages:{pass:\"No focusable elements while a modal is open\",incomplete:\"Check that focusable elements are not tabbable in the current state\"}},\"focusable-disabled\":{impact:\"serious\",messages:{pass:\"No focusable elements contained within element\",fail:\"Focusable content should be disabled or be removed from the DOM\"}},\"focusable-not-tabbable\":{impact:\"serious\",messages:{pass:\"No focusable elements contained within element\",fail:\"Focusable content should have tabindex='-1' or be removed from the DOM\"}},\"no-implicit-explicit-label\":{impact:\"moderate\",messages:{pass:\"There is no mismatch between a <label> and accessible name\",incomplete:\"Check that the <label> does not need be part of the ARIA ${data} field's name\"}},\"aria-required-attr\":{impact:\"critical\",messages:{pass:\"All required ARIA attributes are present\",fail:{singular:\"Required ARIA attribute not present: ${data.values}\",plural:\"Required ARIA attributes not present: ${data.values}\"}}},\"aria-required-children\":{impact:\"critical\",messages:{pass:\"Required ARIA children are present\",fail:{singular:\"Required ARIA child role not present: ${data.values}\",plural:\"Required ARIA children role not present: ${data.values}\"},incomplete:{singular:\"Expecting ARIA child role to be added: ${data.values}\",plural:\"Expecting ARIA children role to be added: ${data.values}\"}}},\"aria-required-parent\":{impact:\"critical\",messages:{pass:\"Required ARIA parent role present\",fail:{singular:\"Required ARIA parent role not present: ${data.values}\",plural:\"Required ARIA parents role not present: ${data.values}\"}}},\"aria-roledescription\":{impact:\"serious\",messages:{pass:\"aria-roledescription used on a supported semantic role\",incomplete:\"Check that the aria-roledescription is announced by supported screen readers\",fail:\"Give the element a role that supports aria-roledescription\"}},fallbackrole:{impact:\"serious\",messages:{pass:\"Only one role value used\",fail:\"Use only one role value, since fallback roles are not supported in older browsers\"}},invalidrole:{impact:\"critical\",messages:{pass:\"ARIA role is valid\",fail:{singular:\"Role must be one of the valid ARIA roles: ${data.values}\",plural:\"Roles must be one of the valid ARIA roles: ${data.values}\"}}},abstractrole:{impact:\"serious\",messages:{pass:\"Abstract roles are not used\",fail:{singular:\"Abstract role cannot be directly used: ${data.values}\",plural:\"Abstract roles cannot be directly used: ${data.values}\"}}},unsupportedrole:{impact:\"critical\",messages:{pass:\"ARIA role is supported\",fail:\"The role used is not widely supported in screen readers and assistive technologies: ${data.values}\"}},\"has-visible-text\":{impact:\"minor\",messages:{pass:\"Element has text that is visible to screen readers\",fail:\"Element does not have text that is visible to screen readers\"}},\"aria-valid-attr-value\":{impact:\"critical\",messages:{pass:\"ARIA attribute values are valid\",fail:{singular:\"Invalid ARIA attribute value: ${data.values}\",plural:\"Invalid ARIA attribute values: ${data.values}\"},incomplete:{noId:\"ARIA attribute element ID does not exist on the page: ${data.needsReview}\",ariaCurrent:'ARIA attribute value is invalid and will be treated as \"aria-current=true\": ${data.needsReview}'}}},\"aria-errormessage\":{impact:\"critical\",messages:{pass:\"Uses a supported aria-errormessage technique\",fail:{singular:\"aria-errormessage value `${data.values}` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)\",plural:\"aria-errormessage values `${data.values}` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)\"}}},\"aria-valid-attr\":{impact:\"critical\",messages:{pass:\"ARIA attribute name is valid\",fail:{singular:\"Invalid ARIA attribute name: ${data.values}\",plural:\"Invalid ARIA attribute names: ${data.values}\"}}},caption:{impact:\"critical\",messages:{pass:\"The multimedia element has a captions track\",incomplete:\"Check that captions is available for the element\"}},\"autocomplete-valid\":{impact:\"serious\",messages:{pass:\"the autocomplete attribute is correctly formatted\",fail:\"the autocomplete attribute is incorrectly formatted\"}},\"autocomplete-appropriate\":{impact:\"serious\",messages:{pass:\"the autocomplete value is on an appropriate element\",fail:\"the autocomplete value is inappropriate for this type of input\"}},\"avoid-inline-spacing\":{impact:\"serious\",messages:{pass:\"No inline styles with '!important' that affect text spacing has been specified\",fail:{singular:\"Remove '!important' from inline style ${data.values}, as overriding this is not supported by most browsers\",plural:\"Remove '!important' from inline styles ${data.values}, as overriding this is not supported by most browsers\"}}},\"is-on-screen\":{impact:\"serious\",messages:{pass:\"Element is not visible\",fail:\"Element is visible\"}},\"button-has-visible-text\":{impact:\"critical\",messages:{pass:\"Element has inner text that is visible to screen readers\",fail:\"Element does not have inner text that is visible to screen readers\"}},\"role-presentation\":{impact:\"minor\",messages:{pass:'Element\\'s default semantics were overriden with role=\"presentation\"',fail:'Element\\'s default semantics were not overridden with role=\"presentation\"'}},\"role-none\":{impact:\"minor\",messages:{pass:'Element\\'s default semantics were overriden with role=\"none\"',fail:'Element\\'s default semantics were not overridden with role=\"none\"'}},\"internal-link-present\":{impact:\"serious\",messages:{pass:\"Valid skip link found\",fail:\"No valid skip link found\"}},\"header-present\":{impact:\"serious\",messages:{pass:\"Page has a heading\",fail:\"Page does not have a heading\"}},landmark:{impact:\"serious\",messages:{pass:\"Page has a landmark region\",fail:\"Page does not have a landmark region\"}},\"group-labelledby\":{impact:\"critical\",messages:{pass:'Elements with the name \"${data.name}\" have both a shared label, and a unique label, referenced through aria-labelledby',fail:{default:'Elements with the name \"${data.name}\" do not all have both a shared label, and a unique label referenced through aria-labelledby',\"no-shared-label\":'Elements with the name \"${data.name}\" do not all have a shared label referenced through aria-labelledby',\"no-unique-label\":'Elements with the name \"${data.name}\" do not all have a unique label referenced through aria-labelledby'}}},fieldset:{impact:\"critical\",messages:{pass:\"Element is contained in a fieldset\",fail:{default:\"Element does not have a containing fieldset or ARIA group\",\"no-legend\":\"Fieldset does not have a legend as its first child\",\"empty-legend\":\"Legend does not have text that is visible to screen readers\",\"mixed-inputs\":\"Fieldset contains unrelated inputs\",\"no-group-label\":\"ARIA group does not have aria-label or aria-labelledby\",\"group-mixed-inputs\":\"ARIA group contains unrelated inputs\"}}},\"color-contrast\":{impact:\"serious\",messages:{pass:\"Element has sufficient color contrast of ${data.contrastRatio}\",fail:\"Element has insufficient color contrast of ${data.contrastRatio} (foreground color: ${data.fgColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}\",incomplete:{default:\"Unable to determine contrast ratio\",bgImage:\"Element's background color could not be determined due to a background image\",bgGradient:\"Element's background color could not be determined due to a background gradient\",imgNode:\"Element's background color could not be determined because element contains an image node\",bgOverlap:\"Element's background color could not be determined because it is overlapped by another element\",fgAlpha:\"Element's foreground color could not be determined because of alpha transparency\",elmPartiallyObscured:\"Element's background color could not be determined because it's partially obscured by another element\",elmPartiallyObscuring:\"Element's background color could not be determined because it partially overlaps other elements\",outsideViewport:\"Element's background color could not be determined because it's outside the viewport\",equalRatio:\"Element has a 1:1 contrast ratio with the background\",shortTextContent:\"Element content is too short to determine if it is actual text content\",nonBmp:\"Element content contains only non-text characters\"}}},\"css-orientation-lock\":{impact:\"serious\",messages:{pass:\"Display is operable, and orientation lock does not exist\",fail:\"CSS Orientation lock is applied, and makes display inoperable\",incomplete:\"CSS Orientation lock cannot be determined\"}},\"structured-dlitems\":{impact:\"serious\",messages:{pass:\"When not empty, element has both <dt> and <dd> elements\",fail:\"When not empty, element does not have at least one <dt> element followed by at least one <dd> element\"}},\"only-dlitems\":{impact:\"serious\",messages:{pass:\"List element only has direct children that are allowed inside <dt> or <dd> elements\",fail:\"List element has direct children that are not allowed inside <dt> or <dd> elements\"}},dlitem:{impact:\"serious\",messages:{pass:\"Description list item has a <dl> parent element\",fail:\"Description list item does not have a <dl> parent element\"}},\"doc-has-title\":{impact:\"serious\",messages:{pass:\"Document has a non-empty <title> element\",fail:\"Document does not have a non-empty <title> element\"}},\"duplicate-id-active\":{impact:\"serious\",messages:{pass:\"Document has no active elements that share the same id attribute\",fail:\"Document has active elements with the same id attribute: ${data}\"}},\"duplicate-id-aria\":{impact:\"critical\",messages:{pass:\"Document has no elements referenced with ARIA or labels that share the same id attribute\",fail:\"Document has multiple elements referenced with ARIA with the same id attribute: ${data}\"}},\"duplicate-id\":{impact:\"minor\",messages:{pass:\"Document has no static elements that share the same id attribute\",fail:\"Document has multiple static elements with the same id attribute\"}},\"has-widget-role\":{impact:\"minor\",messages:{pass:\"Element has a widget role.\",fail:\"Element does not have a widget role.\"}},\"valid-scrollable-semantics\":{impact:\"minor\",messages:{pass:\"Element has valid semantics for an element in the focus order.\",fail:\"Element has invalid semantics for an element in the focus order.\"}},\"multiple-label\":{impact:\"moderate\",messages:{pass:\"Form field does not have multiple label elements\",incomplete:\"Multiple label elements is not widely supported in assistive technologies. Ensure the first label contains all necessary information.\"}},\"frame-tested\":{impact:\"critical\",messages:{pass:\"The iframe was tested with axe-core\",fail:\"The iframe could not be tested with axe-core\",incomplete:\"The iframe still has to be tested with axe-core\"}},\"unique-frame-title\":{impact:\"serious\",messages:{pass:\"Element's title attribute is unique\",fail:\"Element's title attribute is not unique\"}},\"heading-order\":{impact:\"moderate\",messages:{pass:\"Heading order valid\",fail:\"Heading order invalid\"}},\"hidden-content\":{impact:\"minor\",messages:{pass:\"All content on the page has been analyzed.\",fail:\"There were problems analyzing the content on this page.\",incomplete:\"There is hidden content on the page that was not analyzed. You will need to trigger the display of this content in order to analyze it.\"}},\"has-lang\":{impact:\"serious\",messages:{pass:\"The <html> element has a lang attribute\",fail:{noXHTML:\"The xml:lang attribute is not valid on HTML pages, use the lang attribute.\",noLang:\"The <html> element does not have a lang attribute\"}}},\"valid-lang\":{impact:\"serious\",messages:{pass:\"Value of lang attribute is included in the list of valid languages\",fail:\"Value of lang attribute not included in the list of valid languages\"}},\"xml-lang-mismatch\":{impact:\"moderate\",messages:{pass:\"Lang and xml:lang attributes have the same base language\",fail:\"Lang and xml:lang attributes do not have the same base language\"}},\"identical-links-same-purpose\":{impact:\"minor\",messages:{pass:\"There are no other links with the same name, that go to a different URL\",incomplete:\"Check that links have the same purpose, or are intentionally ambiguous.\"}},\"has-alt\":{impact:\"critical\",messages:{pass:\"Element has an alt attribute\",fail:\"Element does not have an alt attribute\"}},\"alt-space-value\":{impact:\"critical\",messages:{pass:\"Element has a valid alt attribute value\",fail:\"Element has an alt attribute containing only a space character, which is not ignored by all screen readers\"}},\"duplicate-img-label\":{impact:\"minor\",messages:{pass:\"Element does not duplicate existing text in <img> alt text\",fail:\"Element contains <img> element with alt text that duplicates existing text\"}},\"non-empty-if-present\":{impact:\"critical\",messages:{pass:{default:\"Element does not have a value attribute\",\"has-label\":\"Element has a non-empty value attribute\"},fail:\"Element has a value attribute and the value attribute is empty\"}},\"non-empty-value\":{impact:\"critical\",messages:{pass:\"Element has a non-empty value attribute\",fail:\"Element has no value attribute or the value attribute is empty\"}},\"label-content-name-mismatch\":{impact:\"serious\",messages:{pass:\"Element contains visible text as part of it's accessible name\",fail:\"Text inside the element is not included in the accessible name\"}},\"title-only\":{impact:\"serious\",messages:{pass:\"Form element does not solely use title attribute for its label\",fail:\"Only title used to generate label for form element\"}},\"implicit-label\":{impact:\"critical\",messages:{pass:\"Form element has an implicit (wrapped) <label>\",fail:\"Form element does not have an implicit (wrapped) <label>\"}},\"explicit-label\":{impact:\"critical\",messages:{pass:\"Form element has an explicit <label>\",fail:\"Form element does not have an explicit <label>\"}},\"help-same-as-label\":{impact:\"minor\",messages:{pass:\"Help text (title or aria-describedby) does not duplicate label text\",fail:\"Help text (title or aria-describedby) text is the same as the label text\"}},\"hidden-explicit-label\":{impact:\"critical\",messages:{pass:\"Form element has a visible explicit <label>\",fail:\"Form element has explicit <label> that is hidden\"}},\"landmark-is-top-level\":{impact:\"moderate\",messages:{pass:\"The ${data.role} landmark is at the top level.\",fail:\"The ${data.role} landmark is contained in another landmark.\"}},\"page-no-duplicate-banner\":{impact:\"moderate\",messages:{pass:\"Document does not have more than one banner landmark\",fail:\"Document has more than one banner landmark\"}},\"page-no-duplicate-contentinfo\":{impact:\"moderate\",messages:{pass:\"Document does not have more than one contentinfo landmark\",fail:\"Document has more than one contentinfo landmark\"}},\"page-no-duplicate-main\":{impact:\"moderate\",messages:{pass:\"Document does not have more than one main landmark\",fail:\"Document has more than one main landmark\"}},\"page-has-main\":{impact:\"moderate\",messages:{pass:\"Document has at least one main landmark\",fail:\"Document does not have a main landmark\"}},\"landmark-is-unique\":{impact:\"moderate\",messages:{pass:\"Landmarks must have a unique role or role/label/title (i.e. accessible name) combination\",fail:\"The landmark must have a unique aria-label, aria-labelledby, or title to make landmarks distinguishable\"}},\"has-th\":{impact:\"serious\",messages:{pass:\"Layout table does not use <th> elements\",fail:\"Layout table uses <th> elements\"}},\"has-caption\":{impact:\"serious\",messages:{pass:\"Layout table does not use <caption> element\",fail:\"Layout table uses <caption> element\"}},\"has-summary\":{impact:\"serious\",messages:{pass:\"Layout table does not use summary attribute\",fail:\"Layout table uses summary attribute\"}},\"link-in-text-block\":{impact:\"serious\",messages:{pass:\"Links can be distinguished from surrounding text in some way other than by color\",fail:\"Links need to be distinguished from surrounding text in some way other than by color\",incomplete:{default:\"Unable to determine contrast ratio\",bgContrast:\"Element's contrast ratio could not be determined. Check for a distinct hover/focus style\",bgImage:\"Element's contrast ratio could not be determined due to a background image\",bgGradient:\"Element's contrast ratio could not be determined due to a background gradient\",imgNode:\"Element's contrast ratio could not be determined because element contains an image node\",bgOverlap:\"Element's contrast ratio could not be determined because of element overlap\"}}},\"focusable-no-name\":{impact:\"serious\",messages:{pass:\"Element is not in tab order or has accessible text\",fail:\"Element is in tab order and does not have accessible text\"}},\"only-listitems\":{impact:\"serious\",messages:{pass:\"List element only has direct children that are allowed inside <li> elements\",fail:{default:\"List element has direct children that are not allowed inside <li> elements\",roleNotValid:\"List element has direct children with a role that is not allowed: ${data.roles}\"}}},listitem:{impact:\"serious\",messages:{pass:'List item has a <ul>, <ol> or role=\"list\" parent element',fail:{default:\"List item does not have a <ul>, <ol> parent element\",roleNotValid:'List item does not have a <ul>, <ol> parent element without a role, or a role=\"list\"'}}},\"meta-refresh\":{impact:\"critical\",messages:{pass:\"<meta> tag does not immediately refresh the page\",fail:\"<meta> tag forces timed refresh of page\"}},\"meta-viewport-large\":{impact:\"minor\",messages:{pass:\"<meta> tag does not prevent significant zooming on mobile devices\",fail:\"<meta> tag limits zooming on mobile devices\"}},\"meta-viewport\":{impact:\"critical\",messages:{pass:\"<meta> tag does not disable zooming on mobile devices\",fail:\"${data} on <meta> tag disables zooming on mobile devices\"}},\"no-autoplay-audio\":{impact:\"moderate\",messages:{pass:\"<video> or <audio> does not output audio for more than allowed duration or has controls mechanism\",fail:\"<video> or <audio> outputs audio for more than allowed duration and does not have a controls mechanism\",incomplete:\"Check that the <video> or <audio> does not output audio for more than allowed duration or provides a controls mechanism\"}},\"p-as-heading\":{impact:\"serious\",messages:{pass:\"<p> elements are not styled as headings\",fail:\"Heading elements should be used instead of styled p elements\"}},\"page-has-heading-one\":{impact:\"moderate\",messages:{pass:\"Page has at least one level-one heading\",fail:\"Page must have a level-one heading\"}},region:{impact:\"moderate\",messages:{pass:\"All page content is contained by landmarks\",fail:\"Some page content is not contained by landmarks\"}},\"html5-scope\":{impact:\"moderate\",messages:{pass:\"Scope attribute is only used on table header elements (<th>)\",fail:\"In HTML 5, scope attributes may only be used on table header elements (<th>)\"}},\"scope-value\":{impact:\"critical\",messages:{pass:\"Scope attribute is used correctly\",fail:\"The value of the scope attribute may only be 'row' or 'col'\"}},\"focusable-content\":{impact:\"moderate\",messages:{pass:\"Element contains focusable elements\",fail:\"Element should have focusable content\"}},\"focusable-element\":{impact:\"moderate\",messages:{pass:\"Element is focusable\",fail:\"Element should be focusable\"}},exists:{impact:\"minor\",messages:{pass:\"Element does not exist\",incomplete:\"Element exists\"}},\"skip-link\":{impact:\"moderate\",messages:{pass:\"Skip link target exists\",incomplete:\"Skip link target should become visible on activation\",fail:\"No skip link target\"}},\"svg-non-empty-title\":{impact:\"serious\",messages:{pass:\"element has a child that is a title\",fail:\"element has no child that is a title\"}},tabindex:{impact:\"serious\",messages:{pass:\"Element does not have a tabindex greater than 0\",fail:\"Element has a tabindex greater than 0\"}},\"same-caption-summary\":{impact:\"minor\",messages:{pass:\"Content of summary attribute and <caption> are not duplicated\",fail:\"Content of summary attribute and <caption> element are identical\"}},\"caption-faked\":{impact:\"serious\",messages:{pass:\"The first row of a table is not used as a caption\",fail:\"The first child of the table should be a caption instead of a table cell\"}},\"td-has-header\":{impact:\"critical\",messages:{pass:\"All non-empty data cells have table headers\",fail:\"Some non-empty data cells do not have table headers\"}},\"td-headers-attr\":{impact:\"serious\",messages:{pass:\"The headers attribute is exclusively used to refer to other cells in the table\",incomplete:\"The headers attribute is empty\",fail:\"The headers attribute is not exclusively used to refer to other cells in the table\"}},\"th-has-data-cells\":{impact:\"serious\",messages:{pass:\"All table header cells refer to data cells\",fail:\"Not all table header cells refer to data cells\",incomplete:\"Table data cells are missing or empty\"}},description:{impact:\"critical\",messages:{pass:\"The multimedia element has an audio description track\",incomplete:\"Check that audio description is available for the element\"}}},failureSummaries:{any:{failureMessage:function(e){var t=\"Fix any of the following:\",r=e;if(r)for(var n=-1,a=r.length-1;n<a;)t+=\"\\n  \"+r[n+=1].split(\"\\n\").join(\"\\n  \");return t}},none:{failureMessage:function(e){var t=\"Fix all of the following:\",r=e;if(r)for(var n=-1,a=r.length-1;n<a;)t+=\"\\n  \"+r[n+=1].split(\"\\n\").join(\"\\n  \");return t}}},incompleteFallbackMessage:{}},rules:[{id:\"accesskeys\",selector:\"[accesskey]\",excludeHidden:!1,tags:[\"best-practice\",\"cat.keyboard\"],all:[],any:[],none:[\"accesskeys\"]},{id:\"area-alt\",selector:\"map area[href]\",excludeHidden:!1,tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag111\",\"wcag244\",\"wcag412\",\"section508\",\"section508.22.a\"],all:[],any:[\"non-empty-alt\",\"non-empty-title\",\"aria-label\",\"aria-labelledby\"],none:[]},{id:\"aria-allowed-attr\",matches:function(e){var t=/^aria-/;if(e.hasAttributes())for(var r=axe.utils.getNodeAttributes(e),n=0,a=r.length;n<a;n++)if(t.test(r[n].name))return!0;return!1},tags:[\"cat.aria\",\"wcag2a\",\"wcag412\"],all:[],any:[\"aria-allowed-attr\"],none:[\"aria-unsupported-attr\"]},{id:\"aria-allowed-role\",excludeHidden:!1,selector:\"[role]\",matches:function(e){return null!==axe.commons.aria.getRole(e,{noImplicit:!0,dpub:!0,fallback:!0})},tags:[\"cat.aria\",\"best-practice\"],all:[],any:[{options:{allowImplicit:!0,ignoredTags:[]},id:\"aria-allowed-role\"}],none:[]},{id:\"aria-dpub-role-fallback\",selector:\"[role]\",matches:function(e){var t=e.getAttribute(\"role\");return[\"doc-backlink\",\"doc-biblioentry\",\"doc-biblioref\",\"doc-cover\",\"doc-endnote\",\"doc-glossref\",\"doc-noteref\"].includes(t)},tags:[\"cat.aria\",\"wcag2a\",\"wcag131\",\"deprecated\"],enabled:!1,all:[\"implicit-role-fallback\"],any:[],none:[]},{id:\"aria-hidden-body\",selector:\"body\",excludeHidden:!1,tags:[\"cat.aria\",\"wcag2a\",\"wcag412\"],all:[],any:[\"aria-hidden-body\"],none:[]},{id:\"aria-hidden-focus\",selector:'[aria-hidden=\"true\"]',matches:function(e){var r=axe.commons.dom.getComposedParent;return function e(t){return!t||\"true\"!==t.getAttribute(\"aria-hidden\")&&e(r(t))}(r(e))},excludeHidden:!1,tags:[\"cat.name-role-value\",\"wcag2a\",\"wcag412\",\"wcag131\"],all:[\"focusable-modal-open\",\"focusable-disabled\",\"focusable-not-tabbable\"],any:[],none:[]},{id:\"aria-input-field-name\",selector:'[role=\"combobox\"], [role=\"listbox\"], [role=\"searchbox\"], [role=\"slider\"], [role=\"spinbutton\"], [role=\"textbox\"]',matches:function(e,t){var r=axe.commons.aria,n=e.nodeName.toUpperCase(),a=r.getRole(e,{noImplicit:!0});return(\"AREA\"!==n||!e.getAttribute(\"href\"))&&(![\"INPUT\",\"SELECT\",\"TEXTAREA\"].includes(n)&&(\"IMG\"!==n&&(\"img\"!==a||\"SVG\"===n)&&(\"BUTTON\"!==n&&\"button\"!==a&&(\"combobox\"!==a||!axe.utils.querySelectorAll(t,'input:not([type=\"hidden\"])').length))))},tags:[\"wcag2a\",\"wcag412\"],all:[],any:[\"aria-label\",\"aria-labelledby\",\"non-empty-title\"],none:[\"no-implicit-explicit-label\"]},{id:\"aria-required-attr\",selector:\"[role]\",tags:[\"cat.aria\",\"wcag2a\",\"wcag412\"],all:[],any:[\"aria-required-attr\"],none:[]},{id:\"aria-required-children\",selector:\"[role]\",tags:[\"cat.aria\",\"wcag2a\",\"wcag131\"],all:[],any:[{options:{reviewEmpty:[\"doc-bibliography\",\"doc-endnotes\",\"grid\",\"list\",\"listbox\",\"table\",\"tablist\",\"tree\",\"treegrid\",\"rowgroup\"]},id:\"aria-required-children\"}],none:[]},{id:\"aria-required-parent\",selector:\"[role]\",tags:[\"cat.aria\",\"wcag2a\",\"wcag131\"],all:[],any:[\"aria-required-parent\"],none:[]},{id:\"aria-roledescription\",selector:\"[aria-roledescription]\",tags:[\"cat.aria\",\"wcag2a\",\"wcag412\"],all:[],any:[{options:{supportedRoles:[\"button\",\"img\",\"checkbox\",\"radio\",\"combobox\",\"menuitemcheckbox\",\"menuitemradio\"]},id:\"aria-roledescription\"}],none:[]},{id:\"aria-roles\",selector:\"[role]\",matches:function(e,t){return!!t.hasAttr(\"role\")&&!!t.attr(\"role\").trim()},tags:[\"cat.aria\",\"wcag2a\",\"wcag412\"],all:[],any:[],none:[\"fallbackrole\",\"invalidrole\",\"abstractrole\",\"unsupportedrole\"]},{id:\"aria-toggle-field-name\",selector:'[role=\"checkbox\"], [role=\"menuitemcheckbox\"], [role=\"menuitemradio\"], [role=\"radio\"], [role=\"switch\"]',matches:function(e,t){var r=axe.commons.aria,n=e.nodeName.toUpperCase(),a=r.getRole(e,{noImplicit:!0});return(\"AREA\"!==n||!e.getAttribute(\"href\"))&&(![\"INPUT\",\"SELECT\",\"TEXTAREA\"].includes(n)&&(\"IMG\"!==n&&(\"img\"!==a||\"SVG\"===n)&&(\"BUTTON\"!==n&&\"button\"!==a&&(\"combobox\"!==a||!axe.utils.querySelectorAll(t,'input:not([type=\"hidden\"])').length))))},tags:[\"wcag2a\",\"wcag412\"],all:[],any:[\"aria-label\",\"aria-labelledby\",\"non-empty-title\",\"has-visible-text\"],none:[\"no-implicit-explicit-label\"]},{id:\"aria-valid-attr-value\",matches:function(e){var t=/^aria-/;if(e.hasAttributes())for(var r=axe.utils.getNodeAttributes(e),n=0,a=r.length;n<a;n++)if(t.test(r[n].name))return!0;return!1},tags:[\"cat.aria\",\"wcag2a\",\"wcag412\"],all:[{options:[],id:\"aria-valid-attr-value\"},\"aria-errormessage\"],any:[],none:[]},{id:\"aria-valid-attr\",matches:function(e){var t=/^aria-/;if(e.hasAttributes())for(var r=axe.utils.getNodeAttributes(e),n=0,a=r.length;n<a;n++)if(t.test(r[n].name))return!0;return!1},tags:[\"cat.aria\",\"wcag2a\",\"wcag412\"],all:[],any:[{options:[],id:\"aria-valid-attr\"}],none:[]},{id:\"audio-caption\",selector:\"audio\",enabled:!1,excludeHidden:!1,tags:[\"cat.time-and-media\",\"wcag2a\",\"wcag121\",\"section508\",\"section508.22.a\"],all:[],any:[],none:[\"caption\"]},{id:\"autocomplete-valid\",matches:function(e,t){var r=axe.commons,n=r.text,a=r.aria,o=r.dom,i=t.attr(\"autocomplete\");if(!i||\"\"===n.sanitize(i))return!1;var s=t.props.nodeName;if(!1===[\"textarea\",\"input\",\"select\"].includes(s))return!1;if(\"input\"===s&&[\"submit\",\"reset\",\"button\",\"hidden\"].includes(t.props.type))return!1;var l=t.attr(\"aria-disabled\")||\"false\";if(t.hasAttr(\"disabled\")||\"true\"===l.toLowerCase())return!1;var u=t.attr(\"role\"),c=t.attr(\"tabindex\");if(\"-1\"===c&&u){var d=a.lookupTable.role[u];if(void 0===d||\"widget\"!==d.type)return!1}return!(\"-1\"===c&&t.actualNode&&!o.isVisible(t.actualNode,!1)&&!o.isVisible(t.actualNode,!0))},tags:[\"cat.forms\",\"wcag21aa\",\"wcag135\"],all:[\"autocomplete-valid\",\"autocomplete-appropriate\"],any:[],none:[]},{id:\"avoid-inline-spacing\",selector:\"[style]\",tags:[\"wcag21aa\",\"wcag1412\"],all:[\"avoid-inline-spacing\"],any:[],none:[]},{id:\"blink\",selector:\"blink\",excludeHidden:!1,tags:[\"cat.time-and-media\",\"wcag2a\",\"wcag222\",\"section508\",\"section508.22.j\"],all:[],any:[],none:[\"is-on-screen\"]},{id:\"button-name\",selector:'button, [role=\"button\"]:not(input)',tags:[\"cat.name-role-value\",\"wcag2a\",\"wcag412\",\"section508\",\"section508.22.a\"],all:[],any:[\"button-has-visible-text\",\"aria-label\",\"aria-labelledby\",\"role-presentation\",\"role-none\",\"non-empty-title\"],none:[]},{id:\"bypass\",selector:\"html\",pageLevel:!0,matches:function(e){return!!e.querySelector(\"a[href]\")},tags:[\"cat.keyboard\",\"wcag2a\",\"wcag241\",\"section508\",\"section508.22.o\"],all:[],any:[\"internal-link-present\",\"header-present\",\"landmark\"],none:[]},{id:\"checkboxgroup\",selector:\"input[type=checkbox][name]\",tags:[\"cat.forms\",\"best-practice\",\"deprecated\"],enabled:!1,all:[],any:[\"group-labelledby\",\"fieldset\"],none:[]},{id:\"color-contrast\",matches:function(e,t){var r=e.nodeName.toUpperCase(),n=e.type;if(\"true\"===e.getAttribute(\"aria-disabled\")||axe.commons.dom.findUpVirtual(t,'[aria-disabled=\"true\"]'))return!1;if([\"INPUT\",\"SELECT\",\"TEXTAREA\"].includes(r)){var a=window.getComputedStyle(e),o=parseInt(a.getPropertyValue(\"text-indent\"),10);if(o){var i=e.getBoundingClientRect();if(i={top:i.top,bottom:i.bottom,left:i.left+o,right:i.right+o},!axe.commons.dom.visuallyOverlaps(i,e))return!1}}if(\"INPUT\"===r)return-1===[\"hidden\",\"range\",\"color\",\"checkbox\",\"radio\",\"image\"].indexOf(n)&&!e.disabled;if(\"SELECT\"===r)return!!e.options.length&&!e.disabled;if(\"TEXTAREA\"===r)return!e.disabled;if(\"OPTION\"===r)return!1;if(\"BUTTON\"===r&&e.disabled||axe.commons.dom.findUpVirtual(t,\"button[disabled]\"))return!1;if(\"FIELDSET\"===r&&e.disabled||axe.commons.dom.findUpVirtual(t,\"fieldset[disabled]\"))return!1;var s=axe.commons.dom.findUpVirtual(t,\"label\");if(\"LABEL\"===r||s){var l=e,u=t;s&&(l=s,u=axe.utils.getNodeFromTree(s));var c=axe.commons.dom.getRootNode(l),d=l.htmlFor&&c.getElementById(l.htmlFor),p=axe.utils.getNodeFromTree(d);if(d&&(d.disabled||\"true\"===d.getAttribute(\"aria-disabled\")||axe.commons.dom.findUpVirtual(p,'[aria-disabled=\"true\"]')))return!1;if((d=axe.utils.querySelectorAll(u,'input:not([type=\"hidden\"]):not([type=\"image\"]):not([type=\"button\"]):not([type=\"submit\"]):not([type=\"reset\"]), select, textarea')).length&&d[0].actualNode.disabled)return!1}if(e.getAttribute(\"id\")){var m=axe.utils.escapeSelector(e.getAttribute(\"id\")),f=axe.commons.dom.getRootNode(e).querySelector(\"[aria-labelledby~=\"+m+\"]\");if(f&&f.disabled)return!1}var h=axe.commons.text.visibleVirtual(t,!1,!0);if(\"\"===h||\"\"===axe.commons.text.removeUnicode(h,{emoji:!0,nonBmp:!1,punctuations:!0}))return!1;var b=document.createRange(),g=t.children,y=g.length,v=null,w=0;for(w=0;w<y;w++)3===(v=g[w]).actualNode.nodeType&&\"\"!==axe.commons.text.sanitize(v.actualNode.nodeValue)&&b.selectNodeContents(v.actualNode);var x=b.getClientRects();for(y=x.length,w=0;w<y;w++)if(axe.commons.dom.visuallyOverlaps(x[w],e))return!0;return!1},excludeHidden:!1,tags:[\"cat.color\",\"wcag2aa\",\"wcag143\"],all:[],any:[{options:{noScroll:!1,ignoreUnicode:!0,ignoreLength:!1},id:\"color-contrast\"}],none:[]},{id:\"css-orientation-lock\",selector:\"html\",tags:[\"cat.structure\",\"wcag134\",\"wcag21aa\",\"experimental\"],all:[{options:{degreeThreshold:2},id:\"css-orientation-lock\"}],any:[],none:[],preload:!0},{id:\"definition-list\",selector:\"dl\",matches:function(e){return!e.getAttribute(\"role\")},tags:[\"cat.structure\",\"wcag2a\",\"wcag131\"],all:[],any:[],none:[\"structured-dlitems\",\"only-dlitems\"]},{id:\"dlitem\",selector:\"dd, dt\",matches:function(e){return!e.getAttribute(\"role\")},tags:[\"cat.structure\",\"wcag2a\",\"wcag131\"],all:[],any:[\"dlitem\"],none:[]},{id:\"document-title\",selector:\"html\",matches:function(e){return e.ownerDocument.defaultView.self===e.ownerDocument.defaultView.top},tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag242\"],all:[],any:[\"doc-has-title\"],none:[]},{id:\"duplicate-id-active\",selector:\"[id]\",matches:function(e){var t=axe.commons,r=t.dom,n=t.aria,a=e.getAttribute(\"id\").trim(),o='*[id=\"'.concat(axe.utils.escapeSelector(a),'\"]'),i=Array.from(r.getRootNode(e).querySelectorAll(o));return!n.isAccessibleRef(e)&&i.some(r.isFocusable)},excludeHidden:!1,tags:[\"cat.parsing\",\"wcag2a\",\"wcag411\"],all:[],any:[\"duplicate-id-active\"],none:[]},{id:\"duplicate-id-aria\",selector:\"[id]\",matches:function(e){return axe.commons.aria.isAccessibleRef(e)},excludeHidden:!1,tags:[\"cat.parsing\",\"wcag2a\",\"wcag411\"],all:[],any:[\"duplicate-id-aria\"],none:[]},{id:\"duplicate-id\",selector:\"[id]\",matches:function(e){var t=axe.commons,r=t.dom,n=t.aria,a=e.getAttribute(\"id\").trim(),o='*[id=\"'.concat(axe.utils.escapeSelector(a),'\"]'),i=Array.from(r.getRootNode(e).querySelectorAll(o));return!n.isAccessibleRef(e)&&i.every(function(e){return!r.isFocusable(e)})},excludeHidden:!1,tags:[\"cat.parsing\",\"wcag2a\",\"wcag411\"],all:[],any:[\"duplicate-id\"],none:[]},{id:\"empty-heading\",selector:'h1, h2, h3, h4, h5, h6, [role=\"heading\"]',matches:function(e){var t;return e.hasAttribute(\"role\")&&(t=e.getAttribute(\"role\").split(/\\s+/i).filter(axe.commons.aria.isValidRole)),t&&0<t.length?t.includes(\"heading\"):\"heading\"===axe.commons.aria.implicitRole(e)},tags:[\"cat.name-role-value\",\"best-practice\"],all:[],any:[\"has-visible-text\"],none:[]},{id:\"focus-order-semantics\",selector:\"div, h1, h2, h3, h4, h5, h6, [role=heading], p, span\",matches:function(e){return axe.commons.dom.insertedIntoFocusOrder(e)},tags:[\"cat.keyboard\",\"best-practice\",\"experimental\"],all:[],any:[{options:[],id:\"has-widget-role\"},{options:[],id:\"valid-scrollable-semantics\"}],none:[]},{id:\"form-field-multiple-labels\",selector:\"input, select, textarea\",matches:function(e){if(\"input\"!==e.nodeName.toLowerCase()||!1===e.hasAttribute(\"type\"))return!0;var t=e.getAttribute(\"type\").toLowerCase();return!1===[\"hidden\",\"image\",\"button\",\"submit\",\"reset\"].includes(t)},tags:[\"cat.forms\",\"wcag2a\",\"wcag332\"],all:[],any:[],none:[\"multiple-label\"]},{id:\"frame-tested\",selector:\"frame, iframe\",tags:[\"cat.structure\",\"review-item\",\"best-practice\"],all:[{options:{isViolation:!1},id:\"frame-tested\"}],any:[],none:[]},{id:\"frame-title-unique\",selector:\"frame[title], iframe[title]\",matches:function(e){var t=e.getAttribute(\"title\");return!(!t||!axe.commons.text.sanitize(t).trim())},tags:[\"cat.text-alternatives\",\"best-practice\"],all:[],any:[],none:[\"unique-frame-title\"]},{id:\"frame-title\",selector:\"frame, iframe\",tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag241\",\"wcag412\",\"section508\",\"section508.22.i\"],all:[],any:[\"aria-label\",\"aria-labelledby\",\"non-empty-title\",\"role-presentation\",\"role-none\"],none:[]},{id:\"heading-order\",selector:\"h1, h2, h3, h4, h5, h6, [role=heading]\",matches:function(e){var t;return e.hasAttribute(\"role\")&&(t=e.getAttribute(\"role\").split(/\\s+/i).filter(axe.commons.aria.isValidRole)),t&&0<t.length?t.includes(\"heading\"):\"heading\"===axe.commons.aria.implicitRole(e)},tags:[\"cat.semantics\",\"best-practice\"],all:[],any:[\"heading-order\"],none:[]},{id:\"hidden-content\",selector:\"*\",excludeHidden:!1,tags:[\"cat.structure\",\"experimental\",\"review-item\",\"best-practice\"],all:[],any:[\"hidden-content\"],none:[]},{id:\"html-has-lang\",selector:\"html\",matches:function(e){return e.ownerDocument.defaultView.self===e.ownerDocument.defaultView.top},tags:[\"cat.language\",\"wcag2a\",\"wcag311\"],all:[],any:[\"has-lang\"],none:[]},{id:\"html-lang-valid\",selector:\"html[lang], html[xml\\\\:lang]\",tags:[\"cat.language\",\"wcag2a\",\"wcag311\"],all:[],any:[],none:[\"valid-lang\"]},{id:\"html-xml-lang-mismatch\",selector:\"html[lang][xml\\\\:lang]\",matches:function(e){var t=axe.utils.getBaseLang,r=t(e.getAttribute(\"lang\")),n=t(e.getAttribute(\"xml:lang\"));return axe.utils.validLangs().includes(r)&&axe.utils.validLangs().includes(n)},tags:[\"cat.language\",\"wcag2a\",\"wcag311\"],all:[\"xml-lang-mismatch\"],any:[],none:[]},{id:\"identical-links-same-purpose\",selector:'a[href], area[href], [role=\"link\"]',excludeHidden:!1,matches:function(e,t){var r=axe.commons,n=r.aria;if(!!!r.text.accessibleTextVirtual(t))return!1;var a=n.getRole(e);return!a||\"link\"===a},tags:[\"wcag2aaa\",\"wcag249\",\"best-practice\"],all:[\"identical-links-same-purpose\"],any:[],none:[]},{id:\"image-alt\",selector:\"img\",tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag111\",\"section508\",\"section508.22.a\"],all:[],any:[\"has-alt\",\"aria-label\",\"aria-labelledby\",\"non-empty-title\",\"role-presentation\",\"role-none\"],none:[\"alt-space-value\"]},{id:\"image-redundant-alt\",selector:\"img\",tags:[\"cat.text-alternatives\",\"best-practice\"],all:[],any:[],none:[\"duplicate-img-label\"]},{id:\"input-button-name\",selector:'input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]',tags:[\"cat.name-role-value\",\"wcag2a\",\"wcag412\",\"section508\",\"section508.22.a\"],all:[],any:[\"non-empty-if-present\",\"non-empty-value\",\"aria-label\",\"aria-labelledby\",\"role-presentation\",\"role-none\",\"non-empty-title\"],none:[]},{id:\"input-image-alt\",selector:'input[type=\"image\"]',tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag111\",\"section508\",\"section508.22.a\"],all:[],any:[\"non-empty-alt\",\"aria-label\",\"aria-labelledby\",\"non-empty-title\"],none:[]},{id:\"label-content-name-mismatch\",matches:function(e,t){var r=axe.commons,n=r.aria,a=r.text,o=n.getRole(e);return!!o&&(!!Object.keys(n.lookupTable.role).filter(function(e){return\"widget\"===n.lookupTable.role[e].type}).includes(o)&&(!!n.getRolesWithNameFromContents().includes(o)&&(!(!a.sanitize(n.arialabelText(t))&&!a.sanitize(n.arialabelledbyText(e)))&&!!a.sanitize(a.visibleVirtual(t)))))},tags:[\"wcag21a\",\"wcag253\",\"experimental\"],all:[],any:[{options:{pixelThreshold:.1,occuranceThreshold:3},id:\"label-content-name-mismatch\"}],none:[]},{id:\"label-title-only\",selector:\"input, select, textarea\",matches:function(e){if(\"input\"!==e.nodeName.toLowerCase()||!1===e.hasAttribute(\"type\"))return!0;var t=e.getAttribute(\"type\").toLowerCase();return!1===[\"hidden\",\"image\",\"button\",\"submit\",\"reset\"].includes(t)},tags:[\"cat.forms\",\"best-practice\"],all:[],any:[],none:[\"title-only\"]},{id:\"label\",selector:\"input, select, textarea\",matches:function(e){if(\"input\"!==e.nodeName.toLowerCase()||!1===e.hasAttribute(\"type\"))return!0;var t=e.getAttribute(\"type\").toLowerCase();return!1===[\"hidden\",\"image\",\"button\",\"submit\",\"reset\"].includes(t)},tags:[\"cat.forms\",\"wcag2a\",\"wcag412\",\"wcag131\",\"section508\",\"section508.22.n\"],all:[],any:[\"aria-label\",\"aria-labelledby\",\"implicit-label\",\"explicit-label\",\"non-empty-title\"],none:[\"help-same-as-label\",\"hidden-explicit-label\"]},{id:\"landmark-banner-is-top-level\",selector:\"header:not([role]), [role=banner]\",matches:function(e,t){return e.hasAttribute(\"role\")||!axe.commons.dom.findUpVirtual(t,\"article, aside, main, nav, section\")},tags:[\"cat.semantics\",\"best-practice\"],all:[],any:[\"landmark-is-top-level\"],none:[]},{id:\"landmark-complementary-is-top-level\",selector:\"aside:not([role]), [role=complementary]\",tags:[\"cat.semantics\",\"best-practice\"],all:[],any:[\"landmark-is-top-level\"],none:[]},{id:\"landmark-contentinfo-is-top-level\",selector:\"footer:not([role]), [role=contentinfo]\",matches:function(e,t){return e.hasAttribute(\"role\")||!axe.commons.dom.findUpVirtual(t,\"article, aside, main, nav, section\")},tags:[\"cat.semantics\",\"best-practice\"],all:[],any:[\"landmark-is-top-level\"],none:[]},{id:\"landmark-main-is-top-level\",selector:\"main:not([role]), [role=main]\",tags:[\"cat.semantics\",\"best-practice\"],all:[],any:[\"landmark-is-top-level\"],none:[]},{id:\"landmark-no-duplicate-banner\",selector:\"header:not([role]), [role=banner]\",tags:[\"cat.semantics\",\"best-practice\"],all:[],any:[{options:{selector:\"header:not([role]), [role=banner]\",nativeScopeFilter:\"article, aside, main, nav, section\"},id:\"page-no-duplicate-banner\"}],none:[]},{id:\"landmark-no-duplicate-contentinfo\",selector:\"footer:not([role]), [role=contentinfo]\",tags:[\"cat.semantics\",\"best-practice\"],all:[],any:[{options:{selector:\"footer:not([role]), [role=contentinfo]\",nativeScopeFilter:\"article, aside, main, nav, section\"},id:\"page-no-duplicate-contentinfo\"}],none:[]},{id:\"landmark-no-duplicate-main\",selector:\"main:not([role]), [role=main]\",tags:[\"cat.semantics\",\"best-practice\"],all:[],any:[{options:{selector:\"main:not([role]), [role='main']\"},id:\"page-no-duplicate-main\"}],none:[]},{id:\"landmark-one-main\",selector:\"html\",tags:[\"cat.semantics\",\"best-practice\"],all:[{options:{selector:\"main:not([role]), [role='main']\"},id:\"page-has-main\"}],any:[],none:[]},{id:\"landmark-unique\",selector:\"[role=banner], [role=complementary], [role=contentinfo], [role=main], [role=navigation], [role=region], [role=search], [role=form], form, footer, header, aside, main, nav, section\",tags:[\"cat.semantics\",\"best-practice\"],matches:function(e,t){var i=[\"article\",\"aside\",\"main\",\"nav\",\"section\"].join(\",\");return function(e){var t=e.actualNode,r=axe.commons.aria.getRolesByType(\"landmark\"),n=axe.commons.aria.getRole(t);if(!n)return!1;var a,o=t.nodeName.toUpperCase();return\"HEADER\"===o||\"FOOTER\"===o?(a=e,!axe.commons.dom.findUpVirtual(a,i)):\"SECTION\"!==o&&\"FORM\"!==o?0<=r.indexOf(n)||\"region\"===n:!!axe.commons.text.accessibleTextVirtual(e)}(t)&&axe.commons.dom.isVisible(e,!0)},all:[],any:[\"landmark-is-unique\"],none:[]},{id:\"layout-table\",selector:\"table\",matches:function(e){var t=(e.getAttribute(\"role\")||\"\").toLowerCase();return!((\"presentation\"===t||\"none\"===t)&&!axe.commons.dom.isFocusable(e)||axe.commons.table.isDataTable(e))},tags:[\"cat.semantics\",\"wcag2a\",\"wcag131\",\"deprecated\"],enabled:!1,all:[],any:[],none:[\"has-th\",\"has-caption\",\"has-summary\"]},{id:\"link-in-text-block\",selector:\"a[href], [role=link]\",matches:function(e){var t=axe.commons.text.sanitize(e.textContent),r=e.getAttribute(\"role\");return(!r||\"link\"===r)&&(!!t&&(!!axe.commons.dom.isVisible(e,!1)&&axe.commons.dom.isInTextBlock(e)))},excludeHidden:!1,tags:[\"cat.color\",\"experimental\",\"wcag2a\",\"wcag141\"],all:[\"link-in-text-block\"],any:[],none:[]},{id:\"link-name\",selector:\"a[href]:not([role=button]), [role=link]\",tags:[\"cat.name-role-value\",\"wcag2a\",\"wcag412\",\"wcag244\",\"section508\",\"section508.22.a\"],all:[],any:[\"has-visible-text\",\"aria-label\",\"aria-labelledby\",\"role-presentation\",\"role-none\"],none:[\"focusable-no-name\"]},{id:\"list\",selector:\"ul, ol\",matches:function(e){return!e.getAttribute(\"role\")},tags:[\"cat.structure\",\"wcag2a\",\"wcag131\"],all:[],any:[],none:[\"only-listitems\"]},{id:\"listitem\",selector:\"li\",matches:function(e){return!e.getAttribute(\"role\")},tags:[\"cat.structure\",\"wcag2a\",\"wcag131\"],all:[],any:[\"listitem\"],none:[]},{id:\"marquee\",selector:\"marquee\",excludeHidden:!1,tags:[\"cat.parsing\",\"wcag2a\",\"wcag222\"],all:[],any:[],none:[\"is-on-screen\"]},{id:\"meta-refresh\",selector:'meta[http-equiv=\"refresh\"]',excludeHidden:!1,tags:[\"cat.time-and-media\",\"wcag2a\",\"wcag2aaa\",\"wcag221\",\"wcag224\",\"wcag325\"],all:[],any:[\"meta-refresh\"],none:[]},{id:\"meta-viewport-large\",selector:'meta[name=\"viewport\"]',excludeHidden:!1,tags:[\"cat.sensory-and-visual-cues\",\"best-practice\"],all:[],any:[{options:{scaleMinimum:5,lowerBound:2},id:\"meta-viewport-large\"}],none:[]},{id:\"meta-viewport\",selector:'meta[name=\"viewport\"]',excludeHidden:!1,tags:[\"cat.sensory-and-visual-cues\",\"best-practice\"],all:[],any:[{options:{scaleMinimum:2},id:\"meta-viewport\"}],none:[]},{id:\"no-autoplay-audio\",excludeHidden:!1,selector:\"audio[autoplay], video[autoplay]\",matches:function(e){return!!e.currentSrc&&(!e.hasAttribute(\"paused\")&&!e.hasAttribute(\"muted\"))},tags:[\"wcag2a\",\"wcag142\",\"experimental\"],preload:!0,all:[{options:{allowedDuration:3},id:\"no-autoplay-audio\"}],any:[],none:[]},{id:\"object-alt\",selector:\"object\",tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag111\",\"section508\",\"section508.22.a\"],all:[],any:[\"has-visible-text\",\"aria-label\",\"aria-labelledby\",\"non-empty-title\",\"role-presentation\",\"role-none\"],none:[]},{id:\"p-as-heading\",selector:\"p\",matches:function(e){var t=Array.from(e.parentNode.childNodes),r=e.textContent.trim();return!(0===r.length||2<=(r.match(/[.!?:;](?![.!?:;])/g)||[]).length)&&0!==t.slice(t.indexOf(e)+1).filter(function(e){return\"P\"===e.nodeName.toUpperCase()&&\"\"!==e.textContent.trim()}).length},tags:[\"cat.semantics\",\"wcag2a\",\"wcag131\",\"experimental\"],all:[{options:{margins:[{weight:150,italic:!0},{weight:150,size:1.15},{italic:!0,size:1.15},{size:1.4}]},id:\"p-as-heading\"}],any:[],none:[]},{id:\"page-has-heading-one\",selector:\"html\",tags:[\"cat.semantics\",\"best-practice\"],all:[{options:{selector:'h1:not([role]), [role=\"heading\"][aria-level=\"1\"]'},id:\"page-has-heading-one\"}],any:[],none:[]},{id:\"radiogroup\",selector:\"input[type=radio][name]\",tags:[\"cat.forms\",\"best-practice\",\"deprecated\"],enabled:!1,all:[],any:[\"group-labelledby\",\"fieldset\"],none:[]},{id:\"region\",selector:\"body *\",tags:[\"cat.keyboard\",\"best-practice\"],all:[],any:[\"region\"],none:[]},{id:\"role-img-alt\",selector:\"[role='img']:not(img):not(area):not(input):not(object)\",matches:function(e){return\"http://www.w3.org/1999/xhtml\"===e.namespaceURI},tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag111\",\"section508\",\"section508.22.a\"],all:[],any:[\"aria-label\",\"aria-labelledby\",\"non-empty-title\"],none:[]},{id:\"scope-attr-valid\",selector:\"td[scope], th[scope]\",tags:[\"cat.tables\",\"best-practice\"],all:[\"html5-scope\",\"scope-value\"],any:[],none:[]},{id:\"scrollable-region-focusable\",matches:function(e,t){var r=axe.utils.querySelectorAll,n=axe.commons.dom.hasContentVirtual;return!1!=!!axe.utils.getScroll(e,13)&&!!r(t,\"*\").some(function(e){return n(e,!0,!0)})},tags:[\"wcag2a\",\"wcag211\"],all:[],any:[\"focusable-content\",\"focusable-element\"],none:[]},{id:\"server-side-image-map\",selector:\"img[ismap]\",tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag211\",\"section508\",\"section508.22.f\"],all:[],any:[],none:[\"exists\"]},{id:\"skip-link\",selector:'a[href^=\"#\"], a[href^=\"/#\"]',matches:function(e){return axe.commons.dom.isSkipLink(e)&&axe.commons.dom.isOffscreen(e)},tags:[\"cat.keyboard\",\"best-practice\"],all:[],any:[\"skip-link\"],none:[]},{id:\"svg-img-alt\",selector:'[role=\"img\"], [role=\"graphics-symbol\"], svg[role=\"graphics-document\"]',matches:function(e){return\"http://www.w3.org/2000/svg\"===e.namespaceURI},tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag111\",\"section508\",\"section508.22.a\"],all:[],any:[\"svg-non-empty-title\",\"aria-label\",\"aria-labelledby\",\"non-empty-title\"],none:[]},{id:\"tabindex\",selector:\"[tabindex]\",tags:[\"cat.keyboard\",\"best-practice\"],all:[],any:[\"tabindex\"],none:[]},{id:\"table-duplicate-name\",selector:\"table\",tags:[\"cat.tables\",\"best-practice\"],all:[],any:[],none:[\"same-caption-summary\"]},{id:\"table-fake-caption\",selector:\"table\",matches:function(e){return axe.commons.table.isDataTable(e)},tags:[\"cat.tables\",\"experimental\",\"wcag2a\",\"wcag131\",\"section508\",\"section508.22.g\"],all:[\"caption-faked\"],any:[],none:[]},{id:\"td-has-header\",selector:\"table\",matches:function(e){if(axe.commons.table.isDataTable(e)){var t=axe.commons.table.toArray(e);return 3<=t.length&&3<=t[0].length&&3<=t[1].length&&3<=t[2].length}return!1},tags:[\"cat.tables\",\"experimental\",\"wcag2a\",\"wcag131\",\"section508\",\"section508.22.g\"],all:[\"td-has-header\"],any:[],none:[]},{id:\"td-headers-attr\",selector:\"table\",tags:[\"cat.tables\",\"wcag2a\",\"wcag131\",\"section508\",\"section508.22.g\"],all:[\"td-headers-attr\"],any:[],none:[]},{id:\"th-has-data-cells\",selector:\"table\",matches:function(e){return axe.commons.table.isDataTable(e)},tags:[\"cat.tables\",\"wcag2a\",\"wcag131\",\"section508\",\"section508.22.g\"],all:[\"th-has-data-cells\"],any:[],none:[]},{id:\"valid-lang\",selector:\"[lang], [xml\\\\:lang]\",matches:function(e){return\"html\"!==e.nodeName.toLowerCase()},tags:[\"cat.language\",\"wcag2aa\",\"wcag312\"],all:[],any:[],none:[\"valid-lang\"]},{id:\"video-caption\",selector:\"video\",excludeHidden:!1,tags:[\"cat.text-alternatives\",\"wcag2a\",\"wcag122\",\"section508\",\"section508.22.a\"],all:[],any:[],none:[\"caption\"]},{id:\"video-description\",selector:\"video\",excludeHidden:!1,tags:[\"cat.text-alternatives\",\"wcag2aa\",\"wcag125\",\"section508\",\"section508.22.b\",\"deprecated\"],enabled:!1,all:[],any:[],none:[\"description\"]}],checks:[{id:\"abstractrole\",evaluate:function(e,t,r){var n=axe.utils.tokenList(r.attr(\"role\")).filter(function(e){return\"abstract\"===axe.commons.aria.getRoleType(e)});return 0<n.length&&(this.data(n),!0)}},{id:\"aria-allowed-attr\",evaluate:function(e,t){t=t||{};var r,n,a,o=[],i=e.getAttribute(\"role\"),s=axe.utils.getNodeAttributes(e);if(i=i||axe.commons.aria.implicitRole(e),a=axe.commons.aria.allowedAttr(i),Array.isArray(t[i])&&(a=axe.utils.uniqueArray(t[i].concat(a))),i&&a)for(var l=0,u=s.length;l<u;l++)n=(r=s[l]).name,axe.commons.aria.validateAttr(n)&&!a.includes(n)&&o.push(n+'=\"'+r.nodeValue+'\"');return!o.length||(this.data(o),!1)}},{id:\"aria-allowed-role\",evaluate:function(e,t){var r=axe.commons.dom,n=t||{},a=n.allowImplicit,o=void 0===a||a,i=n.ignoredTags,s=void 0===i?[]:i,l=e.nodeName.toUpperCase();if(s.map(function(e){return e.toUpperCase()}).includes(l))return!0;var u=axe.commons.aria.getElementUnallowedRoles(e,o);if(u.length){if(this.data(u),!r.isVisible(e,!0))return;return!1}return!0},options:{allowImplicit:!0,ignoredTags:[]}},{id:\"aria-hidden-body\",evaluate:function(e){return\"true\"!==e.getAttribute(\"aria-hidden\")}},{id:\"aria-roledescription\",evaluate:function(e,t){t=t||{};var r=axe.commons.aria.getRole(e);return!!(t.supportedRoles||[]).includes(r)||!(!r||\"presentation\"===r||\"none\"===r)&&void 0},options:{supportedRoles:[\"button\",\"img\",\"checkbox\",\"radio\",\"combobox\",\"menuitemcheckbox\",\"menuitemradio\"]}},{id:\"aria-errormessage\",evaluate:function(r,e){var t=axe.commons,n=t.aria,a=t.dom;e=Array.isArray(e)?e:[];var o=r.getAttribute(\"aria-errormessage\"),i=r.hasAttribute(\"aria-errormessage\"),s=a.getRootNode(r);return!(-1===e.indexOf(o)&&i&&!function(e){if(\"\"===e.trim())return n.lookupTable.attributes[\"aria-errormessage\"].allowEmpty;var t=e&&s.getElementById(e);return t&&(\"alert\"===t.getAttribute(\"role\")||\"assertive\"===t.getAttribute(\"aria-live\")||-1<axe.utils.tokenList(r.getAttribute(\"aria-describedby\")||\"\").indexOf(e))}(o))||(this.data(axe.utils.tokenList(o)),!1)}},{id:\"fallbackrole\",evaluate:function(e,t,r){return 1<axe.utils.tokenList(r.attr(\"role\")).length}},{id:\"has-widget-role\",evaluate:function(e){var t=e.getAttribute(\"role\");if(null===t)return!1;var r=axe.commons.aria.getRoleType(t);return\"widget\"===r||\"composite\"===r},options:[]},{id:\"implicit-role-fallback\",evaluate:function(e){var t=e.getAttribute(\"role\");if(null===t||!axe.commons.aria.isValidRole(t))return!0;var r=axe.commons.aria.getRoleType(t);return axe.commons.aria.implicitRole(e)===r},deprecated:!0},{id:\"invalidrole\",evaluate:function(e,t,r){var n=axe.utils.tokenList,a=axe.commons.aria,o=n(r.attr(\"role\"));return!!o.every(function(e){return!a.isValidRole(e,{allowAbstract:!0})})&&(this.data(o),!0)}},{id:\"no-implicit-explicit-label\",evaluate:function(e,t,r){var n=axe.commons,a=n.aria,o=n.text,i=a.getRole(e,{noImplicit:!0});this.data(i);var s=o.sanitize(o.labelText(r)).toLowerCase(),l=o.sanitize(o.accessibleText(e)).toLowerCase();return!(!l&&!s)&&(!((l||!s)&&l.includes(s))&&void 0)}},{id:\"aria-required-attr\",evaluate:function(e,t){t=t||{};var r=[],n=axe.commons.forms,a=n.isNativeTextbox,o=n.isNativeSelect,i=n.isAriaTextbox,s=n.isAriaListbox,l=n.isAriaCombobox,u=n.isAriaRange,c={\"aria-valuenow\":function(){return!(a(e)||o(e)||i(e)||s(e)||l(e)||u(e)&&e.hasAttribute(\"aria-valuenow\"))}};if(e.hasAttributes()){var d=e.getAttribute(\"role\"),p=axe.commons.aria.requiredAttr(d);if(Array.isArray(t[d])&&(p=axe.utils.uniqueArray(t[d],p)),d&&p)for(var m=0,f=p.length;m<f;m++){var h=p[m];e.getAttribute(h)||c[h]&&!c[h]()||r.push(h)}}return!r.length||(this.data(r),!1)}},{id:\"aria-required-children\",evaluate:function(e,t,b){var r=axe.commons.aria.requiredOwned,i=axe.commons.aria.implicitNodes,s=axe.utils.matchesSelector,g=axe.commons.dom.idrefs,n=axe.commons.dom.hasContentVirtual,a=t&&Array.isArray(t.reviewEmpty)?t.reviewEmpty:[];function y(e,t,r,n){if(null!==e){var a=i(r),o=['[role=\"'+r+'\"]'];return a&&(o=o.concat(a.map(function(e){return e+\":not([role])\"}))),o=o.join(\",\"),n&&s(e,o)||axe.utils.querySelectorAll(t,o)[0]}}function v(e,t){for(var r=0;r<e.length;r++){var n=e[r];if(null!==n)if(y(n,axe.utils.getNodeFromTree(n),t,!0))return 1}}var o=e.getAttribute(\"role\"),l=r(o);if(!l)return!0;var u=!1,c=l.one;c||(u=!0,c=l.all);var d=function(e,t,r,n){for(var a=[],o=g(e,\"aria-owns\"),i=0;i<t.length;i++){var s=t[i];if(y(e,b,s)||v(o,s)){if(!r)return null}else r&&a.push(s)}if(\"combobox\"===n){var l=a.indexOf(\"textbox\");(0<=l&&\"INPUT\"===e.nodeName.toUpperCase()&&[\"text\",\"search\",\"email\",\"url\",\"tel\"].includes(e.type)||y(e,b,\"searchbox\")||v(o,\"searchbox\"))&&a.splice(l,1);for(var u=[\"listbox\",\"tree\",\"grid\",\"dialog\"],c=e.getAttribute(\"aria-expanded\"),d=c&&\"false\"!==c,p=(e.getAttribute(\"aria-haspopup\")||\"listbox\").toLowerCase(),m=0;m<u.length;m++){var f=u[m];if(!d||f!==p){var h=a.indexOf(f);0<=h&&a.splice(h,1)}}}return a.length?a:!r&&t.length?t:null}(e,c,u,o);return!d||(this.data(d),!(!a.includes(o)||n(b,!1,!0)||function r(e){return e.children&&e.children.some(function(e){var t=axe.commons.aria.getRole(e);return![\"presentation\",\"none\",null].includes(t)||r(e)})}(b)||0!==g(e,\"aria-owns\").length)&&void 0)},options:{reviewEmpty:[\"doc-bibliography\",\"doc-endnotes\",\"grid\",\"list\",\"listbox\",\"table\",\"tablist\",\"tree\",\"treegrid\",\"rowgroup\"]}},{id:\"aria-required-parent\",evaluate:function(e,t,r){function s(e){return(axe.commons.aria.implicitNodes(e)||[]).concat('[role=\"'+e+'\"]').join(\",\")}function n(e,t,r){var n,a,o=e.actualNode.getAttribute(\"role\"),i=[];if(!(t=t||axe.commons.aria.requiredContext(o)))return null;for(n=0,a=t.length;n<a;n++){if(r&&axe.utils.matchesSelector(e.actualNode,s(t[n])))return null;if(axe.commons.dom.findUpVirtual(e,s(t[n])))return null;i.push(t[n])}return i}var a=n(r);if(!a)return!0;var o=function(e){for(var t=[],r=null;e;){if(e.getAttribute(\"id\")){var n=axe.utils.escapeSelector(e.getAttribute(\"id\"));(r=axe.commons.dom.getRootNode(e).querySelector(\"[aria-owns~=\".concat(n,\"]\")))&&t.push(r)}e=e.parentElement}return t.length?t:null}(e);if(o)for(var i=0,l=o.length;i<l;i++)if(!(a=n(axe.utils.getNodeFromTree(o[i]),a,!0)))return!0;return this.data(a),!1}},{id:\"aria-unsupported-attr\",evaluate:function(o){var i=o.nodeName.toUpperCase(),s=axe.commons.aria.lookupTable,l=axe.commons.aria.getRole(o),e=Array.from(axe.utils.getNodeAttributes(o)).filter(function(e){var t=e.name,r=s.attributes[t];if(!axe.commons.aria.validateAttr(t))return!1;var n=r.unsupported;if(\"object\"!==W(n))return!!n;var a=axe.commons.matches(o,n.exceptions);return Object.keys(s.evaluateRoleForElement).includes(i)?!s.evaluateRoleForElement[i]({node:o,role:l,out:a}):!a}).map(function(e){return e.name.toString()});return!!e.length&&(this.data(e),!0)}},{id:\"unsupportedrole\",evaluate:function(e){return axe.commons.aria.isUnsupportedRole(axe.commons.aria.getRole(e))}},{id:\"aria-valid-attr-value\",evaluate:function(e,t){t=Array.isArray(t)?t:[];for(var r=\"\",n=\"\",a=[],o=/^aria-/,i=axe.utils.getNodeAttributes(e),s=[\"aria-errormessage\"],l={\"aria-controls\":function(){return\"false\"!==e.getAttribute(\"aria-expanded\")&&\"false\"!==e.getAttribute(\"aria-selected\")},\"aria-current\":function(){axe.commons.aria.validateAttrValue(e,\"aria-current\")||(r='aria-current=\"'.concat(e.getAttribute(\"aria-current\"),'\"'),n=\"ariaCurrent\")},\"aria-owns\":function(){return\"false\"!==e.getAttribute(\"aria-expanded\")},\"aria-describedby\":function(){axe.commons.aria.validateAttrValue(e,\"aria-describedby\")||(r='aria-describedby=\"'.concat(e.getAttribute(\"aria-describedby\"),'\"'),n=\"noId\")}},u=0,c=i.length;u<c;u++){var d=i[u],p=d.name;s.includes(p)||-1!==t.indexOf(p)||!o.test(p)||l[p]&&!l[p]()||axe.commons.aria.validateAttrValue(e,p)||a.push(\"\".concat(p,'=\"').concat(d.nodeValue,'\"'))}if(!r)return!a.length||(this.data(a),!1);this.data({messageKey:n,needsReview:r})},options:[]},{id:\"aria-valid-attr\",evaluate:function(e,t){t=Array.isArray(t)?t:[];for(var r,n=[],a=/^aria-/,o=axe.utils.getNodeAttributes(e),i=0,s=o.length;i<s;i++)r=o[i].name,-1===t.indexOf(r)&&a.test(r)&&!axe.commons.aria.validateAttr(r)&&n.push(r);return!n.length||(this.data(n),!1)},options:[]},{id:\"valid-scrollable-semantics\",evaluate:function(e){var t,r,n,a={ARTICLE:!0,ASIDE:!0,NAV:!0,SECTION:!0},o={application:!0,banner:!1,complementary:!0,contentinfo:!0,form:!0,main:!0,navigation:!0,region:!0,search:!1};return(n=(t=e).getAttribute(\"role\"))&&o[n.toLowerCase()]||(r=t.nodeName.toUpperCase(),a[r]||!1)},options:[]},{id:\"color-contrast\",evaluate:function(e,t,r){var n=axe.commons,a=n.dom,o=n.color,i=n.text;if(!a.isVisible(e,!1))return!0;var s=i.visibleVirtual(r,!1,!0),l=!!(t||{}).ignoreUnicode;if(!i.hasUnicode(s,{nonBmp:!0})||\"\"!==i.sanitize(i.removeUnicode(s,{nonBmp:!0}))||!l){var u,c=!!(t||{}).noScroll,d=[],p=o.getBackgroundColor(e,d,c),m=o.getForegroundColor(e,c,p),f=window.getComputedStyle(e),h=parseFloat(f.getPropertyValue(\"font-size\")),b=parseFloat(f.getPropertyValue(\"font-weight\")),g=!isNaN(b)&&700<=b,y=o.hasValidContrastRatio(p,m,h,g),v=Math.floor(100*y.contrastRatio)/100;null===p&&(u=o.incompleteData.get(\"bgColor\"));var w=1==v,x=1===s.length,D=!!(t||{}).ignoreLength;w?u=o.incompleteData.set(\"bgColor\",\"equalRatio\"):x&&!D&&(u=\"shortTextContent\");var k={fgColor:m?m.toHexString():void 0,bgColor:p?p.toHexString():void 0,contrastRatio:y?v:void 0,fontSize:\"\".concat((72*h/96).toFixed(1),\"pt (\").concat(h,\"px)\"),fontWeight:g?\"bold\":\"normal\",messageKey:u,expectedContrastRatio:y.expectedContrastRatio+\":1\"};return(this.data(k),null===m||null===p||w||x&&!D&&!y.isValid)?(u=null,o.incompleteData.clear(),void this.relatedNodes(d)):(y.isValid||this.relatedNodes(d),y.isValid)}this.data({messageKey:\"nonBmp\"})},options:{noScroll:!1,ignoreUnicode:!0,ignoreLength:!1}},{id:\"link-in-text-block\",evaluate:function(e){var t=axe.commons,r=t.color,n=t.dom;function a(e,t){var r=e.getRelativeLuminance(),n=t.getRelativeLuminance();return(Math.max(r,n)+.05)/(Math.min(r,n)+.05)}var o=[\"block\",\"list-item\",\"table\",\"flex\",\"grid\",\"inline-block\"];function i(e){var t=window.getComputedStyle(e).getPropertyValue(\"display\");return-1!==o.indexOf(t)||\"table-\"===t.substr(0,6)}if(i(e))return!1;for(var s,l,u=n.getComposedParent(e);1===u.nodeType&&!i(u);)u=n.getComposedParent(u);if(this.relatedNodes([u]),r.elementIsDistinct(e,u))return!0;if(s=r.getForegroundColor(e),l=r.getForegroundColor(u),s&&l){var c,d=a(s,l);return 1===d||(3<=d?(axe.commons.color.incompleteData.set(\"fgColor\",\"bgContrast\"),this.data({messageKey:axe.commons.color.incompleteData.get(\"fgColor\")}),void axe.commons.color.incompleteData.clear()):(s=r.getBackgroundColor(e),l=r.getBackgroundColor(u),(!s||!l||3<=a(s,l))&&(c=s&&l?\"bgContrast\":axe.commons.color.incompleteData.get(\"bgColor\"),axe.commons.color.incompleteData.set(\"fgColor\",c),this.data({messageKey:axe.commons.color.incompleteData.get(\"fgColor\")}),void axe.commons.color.incompleteData.clear())))}}},{id:\"autocomplete-appropriate\",evaluate:function(e,t,r){if(\"input\"!==r.props.nodeName)return!0;var n=[\"text\",\"search\",\"number\"],a=[\"text\",\"search\",\"url\"],o={bday:[\"text\",\"search\",\"date\"],email:[\"text\",\"search\",\"email\"],\"cc-exp\":[\"text\",\"search\",\"month\"],\"street-address\":[\"text\"],tel:[\"text\",\"search\",\"tel\"],\"cc-exp-month\":n,\"cc-exp-year\":n,\"transaction-amount\":n,\"bday-day\":n,\"bday-month\":n,\"bday-year\":n,\"new-password\":[\"text\",\"search\",\"password\"],\"current-password\":[\"text\",\"search\",\"password\"],url:a,photo:a,impp:a};\"object\"===W(t)&&Object.keys(t).forEach(function(e){o[e]||(o[e]=[]),o[e]=o[e].concat(t[e])});var i=r.attr(\"autocomplete\").split(/\\s+/g).map(function(e){return e.toLowerCase()}),s=i[i.length-1];if(axe.commons.text.autocomplete.stateTerms.includes(s))return!0;var l=o[s],u=r.hasAttr(\"type\")?axe.commons.text.sanitize(r.attr(\"type\")).toLowerCase():\"text\";return u=axe.utils.validInputTypes().includes(u)?u:\"text\",void 0===l?\"text\"===u:l.includes(u)}},{id:\"autocomplete-valid\",evaluate:function(e,t,r){var n=r.attr(\"autocomplete\")||\"\";return axe.commons.text.isValidAutocomplete(n,t)}},{id:\"fieldset\",evaluate:function(e,t,r){var s,l=this;function u(e,t){return axe.utils.toArray(e.querySelectorAll('select,textarea,button,input:not([name=\"'+t+'\"]):not([type=\"hidden\"])'))}var n={name:e.getAttribute(\"name\"),type:e.getAttribute(\"type\")},a=function(e){var t=axe.utils.escapeSelector(e.actualNode.name),r=axe.commons.dom.getRootNode(e.actualNode).querySelectorAll('input[type=\"'+axe.utils.escapeSelector(e.actualNode.type)+'\"][name=\"'+t+'\"]');if(r.length<2)return!0;var n,a,o=axe.commons.dom.findUpVirtual(e,\"fieldset\"),i=axe.commons.dom.findUpVirtual(e,'[role=\"group\"]'+(\"radio\"===e.actualNode.type?',[role=\"radiogroup\"]':\"\"));return i||o?o?function(e,t){var r=e.firstElementChild;if(!r||\"LEGEND\"!==r.nodeName.toUpperCase())return l.relatedNodes([e]),!(s=\"no-legend\");if(!axe.commons.text.accessibleText(r))return l.relatedNodes([r]),!(s=\"empty-legend\");var n=u(e,t);return!n.length||(l.relatedNodes(n),!(s=\"mixed-inputs\"))}(o,t):function(e,t){var r=axe.commons.dom.idrefs(e,\"aria-labelledby\").some(function(e){return e&&axe.commons.text.accessibleText(e)}),n=e.getAttribute(\"aria-label\");if(!(r||n&&axe.commons.text.sanitize(n)))return l.relatedNodes(e),!(s=\"no-group-label\");var a=u(e,t);return!a.length||(l.relatedNodes(a),!(s=\"group-mixed-inputs\"))}(i,t):(s=\"no-group\",l.relatedNodes((n=r,a=e.actualNode,axe.utils.toArray(n).filter(function(e){return e!==a}))),!1)}(r);return a||(n.messageKey=s),this.data(n),a},after:function(e){var n={};return e.filter(function(e){if(e.result)return!0;var t=e.data;if(t){if(n[t.type]=n[t.type]||{},!n[t.type][t.name])return n[t.type][t.name]=[t],!0;var r=n[t.type][t.name].some(function(e){return e.failureCode===t.failureCode});return r||n[t.type][t.name].push(t),!r}return!1})},deprecated:!0},{id:\"group-labelledby\",evaluate:function(r){var e=axe.commons,n=e.dom,t=e.text,a=axe.utils.escapeSelector(r.type),o=axe.utils.escapeSelector(r.name),i=n.getRootNode(r),s={name:r.name,type:r.type},l=Array.from(i.querySelectorAll('input[type=\"'.concat(a,'\"][name=\"').concat(o,'\"]')));if(l.length<=1)return this.data(s),!0;var u=n.idrefs(r,\"aria-labelledby\").filter(function(e){return!!e}),c=u.slice();l.forEach(function(e){if(e!==r){var t=n.idrefs(e,\"aria-labelledby\").filter(function(e){return e});u=u.filter(function(e){return t.includes(e)}),c=c.filter(function(e){return!t.includes(e)})}});var d={inLabelledByContext:!0};return c=c.filter(function(e){return t.accessibleText(e,d)}),u=u.filter(function(e){return t.accessibleText(e,d)}),0<c.length&&0<u.length?(this.data(s),!0):(0<c.length&&0===u.length?s.messageKey=\"no-shared-label\":0===c.length&&0<u.length&&(s.messageKey=\"no-unique-label\"),this.data(s),!1)},after:function(e){var r={};return e.filter(function(e){var t=e.data;return!(!t||(r[t.type]=r[t.type]||{},r[t.type][t.name]))&&(r[t.type][t.name]=!0)})},deprecated:!0},{id:\"accesskeys\",evaluate:function(e){return axe.commons.dom.isVisible(e,!1)&&(this.data(e.getAttribute(\"accesskey\")),this.relatedNodes([e])),!0},after:function(e){var r={};return e.filter(function(e){if(!e.data)return!1;var t=e.data.toUpperCase();return r[t]?(r[t].relatedNodes.push(e.relatedNodes[0]),!1):((r[t]=e).relatedNodes=[],!0)}).map(function(e){return e.result=!!e.relatedNodes.length,e})}},{id:\"focusable-content\",evaluate:function(e,t,r){var n=r.tabbableElements;return!!n&&0<n.filter(function(e){return e!==r}).length}},{id:\"focusable-disabled\",evaluate:function(e,t,r){var a=[\"BUTTON\",\"FIELDSET\",\"INPUT\",\"SELECT\",\"TEXTAREA\"],n=r.tabbableElements;if(!n||!n.length)return!0;var o=n.reduce(function(e,t){var r=t.actualNode,n=r.nodeName.toUpperCase();return a.includes(n)&&e.push(r),e},[]);return this.relatedNodes(o),!(!o.length||!axe.commons.dom.isModalOpen())||0===o.length}},{id:\"focusable-element\",evaluate:function(e,t,r){var n=r.isFocusable,a=parseInt(r.actualNode.getAttribute(\"tabindex\"),10);return(a=isNaN(a)?null:a)?n&&0<=a:n}},{id:\"focusable-modal-open\",evaluate:function(e,t,r){var n=r.tabbableElements.map(function(e){return e.actualNode});return!n||!n.length||(!axe.commons.dom.isModalOpen()||void this.relatedNodes(n))}},{id:\"focusable-no-name\",evaluate:function(e,t,r){var n=e.getAttribute(\"tabindex\");return!!(axe.commons.dom.isFocusable(e)&&-1<n)&&!axe.commons.text.accessibleTextVirtual(r)}},{id:\"focusable-not-tabbable\",evaluate:function(e,t,r){var a=[\"BUTTON\",\"FIELDSET\",\"INPUT\",\"SELECT\",\"TEXTAREA\"],n=r.tabbableElements;if(!n||!n.length)return!0;var o=n.reduce(function(e,t){var r=t.actualNode,n=r.nodeName.toUpperCase();return a.includes(n)||e.push(r),e},[]);return this.relatedNodes(o),!!(0<o.length&&axe.commons.dom.isModalOpen())||0===o.length}},{id:\"landmark-is-top-level\",evaluate:function(e){var t=axe.commons.aria.getRolesByType(\"landmark\"),r=axe.commons.dom.getComposedParent(e);for(this.data({role:e.getAttribute(\"role\")||axe.commons.aria.implicitRole(e)});r;){var n=r.getAttribute(\"role\");if(n||\"FORM\"===r.nodeName.toUpperCase()||(n=axe.commons.aria.implicitRole(r)),n&&t.includes(n))return!1;r=axe.commons.dom.getComposedParent(r)}return!0}},{id:\"page-has-heading-one\",evaluate:function(e,t,r){if(!t||!t.selector||\"string\"!=typeof t.selector)throw new TypeError(\"visible-in-page requires options.selector to be a string\");var n=axe.utils.querySelectorAllFilter(r,t.selector,function(e){return axe.commons.dom.isVisible(e.actualNode,!0)});return this.relatedNodes(n.map(function(e){return e.actualNode})),0<n.length},after:function(e){return e.some(function(e){return!0===e.result})&&e.forEach(function(e){e.result=!0}),e},options:{selector:'h1:not([role]), [role=\"heading\"][aria-level=\"1\"]'}},{id:\"page-has-main\",evaluate:function(e,t,r){if(!t||!t.selector||\"string\"!=typeof t.selector)throw new TypeError(\"visible-in-page requires options.selector to be a string\");var n=axe.utils.querySelectorAllFilter(r,t.selector,function(e){return axe.commons.dom.isVisible(e.actualNode,!0)});return this.relatedNodes(n.map(function(e){return e.actualNode})),0<n.length},after:function(e){return e.some(function(e){return!0===e.result})&&e.forEach(function(e){e.result=!0}),e},options:{selector:\"main:not([role]), [role='main']\"}},{id:\"page-no-duplicate-banner\",evaluate:function(e,t,r){if(!t||!t.selector||\"string\"!=typeof t.selector)throw new TypeError(\"visible-in-page requires options.selector to be a string\");var n=\"page-no-duplicate;\"+t.selector;if(!axe._cache.get(n)){axe._cache.set(n,!0);var a=axe.utils.querySelectorAllFilter(axe._tree[0],t.selector,function(e){return axe.commons.dom.isVisible(e.actualNode)});return\"string\"==typeof t.nativeScopeFilter&&(a=a.filter(function(e){return e.actualNode.hasAttribute(\"role\")||!axe.commons.dom.findUpVirtual(e,t.nativeScopeFilter)})),this.relatedNodes(a.filter(function(e){return e!==r}).map(function(e){return e.actualNode})),a.length<=1}this.data(\"ignored\")},after:function(e){return e.filter(function(e){return\"ignored\"!==e.data})},options:{selector:\"header:not([role]), [role=banner]\",nativeScopeFilter:\"article, aside, main, nav, section\"}},{id:\"page-no-duplicate-contentinfo\",evaluate:function(e,t,r){if(!t||!t.selector||\"string\"!=typeof t.selector)throw new TypeError(\"visible-in-page requires options.selector to be a string\");var n=\"page-no-duplicate;\"+t.selector;if(!axe._cache.get(n)){axe._cache.set(n,!0);var a=axe.utils.querySelectorAllFilter(axe._tree[0],t.selector,function(e){return axe.commons.dom.isVisible(e.actualNode)});return\"string\"==typeof t.nativeScopeFilter&&(a=a.filter(function(e){return e.actualNode.hasAttribute(\"role\")||!axe.commons.dom.findUpVirtual(e,t.nativeScopeFilter)})),this.relatedNodes(a.filter(function(e){return e!==r}).map(function(e){return e.actualNode})),a.length<=1}this.data(\"ignored\")},after:function(e){return e.filter(function(e){return\"ignored\"!==e.data})},options:{selector:\"footer:not([role]), [role=contentinfo]\",nativeScopeFilter:\"article, aside, main, nav, section\"}},{id:\"page-no-duplicate-main\",evaluate:function(e,t,r){if(!t||!t.selector||\"string\"!=typeof t.selector)throw new TypeError(\"visible-in-page requires options.selector to be a string\");var n=\"page-no-duplicate;\"+t.selector;if(!axe._cache.get(n)){axe._cache.set(n,!0);var a=axe.utils.querySelectorAllFilter(axe._tree[0],t.selector,function(e){return axe.commons.dom.isVisible(e.actualNode)});return\"string\"==typeof t.nativeScopeFilter&&(a=a.filter(function(e){return e.actualNode.hasAttribute(\"role\")||!axe.commons.dom.findUpVirtual(e,t.nativeScopeFilter)})),this.relatedNodes(a.filter(function(e){return e!==r}).map(function(e){return e.actualNode})),a.length<=1}this.data(\"ignored\")},after:function(e){return e.filter(function(e){return\"ignored\"!==e.data})},options:{selector:\"main:not([role]), [role='main']\"}},{id:\"tabindex\",evaluate:function(e){var t=parseInt(e.getAttribute(\"tabindex\"),10);return!!isNaN(t)||t<=0}},{id:\"alt-space-value\",evaluate:function(e,t,r){var n=r.attr(\"alt\");return\"string\"==typeof n&&/^\\s+$/.test(n)}},{id:\"duplicate-img-label\",evaluate:function(e,t,r){var n=axe.commons,a=n.aria,o=n.text,i=n.dom;if([\"none\",\"presentation\"].includes(a.getRole(e)))return!1;var s=i.findUpVirtual(r,'button, [role=\"button\"], a[href], p, li, td, th');if(!s)return!1;var l=axe.utils.getNodeFromTree(s),u=o.visibleVirtual(l,!0).toLowerCase();return\"\"!==u&&u===o.accessibleTextVirtual(r).toLowerCase()}},{id:\"explicit-label\",evaluate:function(e){if(e.getAttribute(\"id\")){var t=axe.commons.dom.getRootNode(e),r=axe.utils.escapeSelector(e.getAttribute(\"id\")),n=t.querySelector('label[for=\"'.concat(r,'\"]'));if(n)return!axe.commons.dom.isVisible(n)||!!axe.commons.text.accessibleText(n)}return!1}},{id:\"help-same-as-label\",evaluate:function(e,t,r){var n=axe.commons.text.labelVirtual(r),a=e.getAttribute(\"title\");if(!n)return!1;a||(a=\"\",e.getAttribute(\"aria-describedby\")&&(a=axe.commons.dom.idrefs(e,\"aria-describedby\").map(function(e){return e?axe.commons.text.accessibleText(e):\"\"}).join(\"\")));return axe.commons.text.sanitize(a)===axe.commons.text.sanitize(n)},enabled:!1},{id:\"hidden-explicit-label\",evaluate:function(e,t,r){if(e.getAttribute(\"id\")){var n=axe.commons.dom.getRootNode(e),a=axe.utils.escapeSelector(e.getAttribute(\"id\")),o=n.querySelector('label[for=\"'.concat(a,'\"]'));if(o&&!axe.commons.dom.isVisible(o,!0))return\"\"===axe.commons.text.accessibleTextVirtual(r).trim()}return!1}},{id:\"implicit-label\",evaluate:function(e,t,r){var n=axe.commons,a=n.dom,o=n.text,i=a.findUpVirtual(r,\"label\");return!!i&&!!o.accessibleText(i,{inControlContext:!0})}},{id:\"label-content-name-mismatch\",evaluate:function(e,t,r){var n=axe.commons.text,a=t||{},o=a.pixelThreshold,i=a.occuranceThreshold,s=n.accessibleText(e).toLowerCase();if(!(n.isHumanInterpretable(s)<1)){var l=n.visibleTextNodes(r).filter(function(e){return!n.isIconLigature(e,o,i)}).map(function(e){return e.actualNode.nodeValue}).join(\"\"),u=n.sanitize(l).toLowerCase();return!u||(n.isHumanInterpretable(u)<1?!!c(u,s)||void 0:c(u,s))}function c(e,t){var r=d(t),n=d(e);return!(!r||!n)&&r.includes(n)}function d(e){var t=n.removeUnicode(e,{emoji:!0,nonBmp:!0,punctuations:!0});return n.sanitize(t)}},options:{pixelThreshold:.1,occuranceThreshold:3}},{id:\"multiple-label\",evaluate:function(e){var t=axe.utils.escapeSelector(e.getAttribute(\"id\")),r=e.parentNode,n=axe.commons.dom.getRootNode(e);n=n.documentElement||n;var a=Array.from(n.querySelectorAll('label[for=\"'.concat(t,'\"]')));for(a.length&&(a=a.filter(function(e){return axe.commons.dom.isVisible(e)}));r;)\"LABEL\"===r.nodeName.toUpperCase()&&-1===a.indexOf(r)&&a.push(r),r=r.parentNode;if(this.relatedNodes(a),1<a.length){var o=a.filter(function(e){return axe.commons.dom.isVisible(e,!0)});if(1<o.length)return;return!axe.commons.dom.idrefs(e,\"aria-labelledby\").includes(o[0])&&void 0}return!1}},{id:\"title-only\",evaluate:function(e,t,r){return!(axe.commons.text.labelVirtual(r)||!e.getAttribute(\"title\")&&!e.getAttribute(\"aria-describedby\"))}},{id:\"landmark-is-unique\",evaluate:function(e,t,r){var n=axe.commons.aria.getRole(e),a=axe.commons.text.accessibleTextVirtual(r);return a=a?a.toLowerCase():null,this.data({role:n,accessibleText:a}),this.relatedNodes([e]),!0},after:function(e){var r=[];return e.filter(function(t){var e=r.find(function(e){return t.data.role===e.data.role&&t.data.accessibleText===e.data.accessibleText});return e?(e.result=!1,e.relatedNodes.push(t.relatedNodes[0]),!1):(r.push(t),t.relatedNodes=[],!0)})}},{id:\"has-lang\",evaluate:function(e){var t=axe.utils.isXHTML,r=(e.getAttribute(\"lang\")||\"\").trim(),n=(e.getAttribute(\"xml:lang\")||\"\").trim();return r||!n||t(document)?!(!r&&!n)||(this.data({messageKey:\"noLang\"}),!1):(this.data({messageKey:\"noXHTML\"}),!1)}},{id:\"valid-lang\",evaluate:function(a,e){var o,t;return o=(e||axe.utils.validLangs()).map(axe.utils.getBaseLang),!!(t=[\"lang\",\"xml:lang\"].reduce(function(e,t){var r=a.getAttribute(t);if(\"string\"!=typeof r)return e;var n=axe.utils.getBaseLang(r);return\"\"!==n&&-1===o.indexOf(n)&&e.push(t+'=\"'+a.getAttribute(t)+'\"'),e},[])).length&&(this.data(t),!0)}},{id:\"xml-lang-mismatch\",evaluate:function(e){var t=axe.utils.getBaseLang;return t(e.getAttribute(\"lang\"))===t(e.getAttribute(\"xml:lang\"))}},{id:\"dlitem\",evaluate:function(e){var t=axe.commons.dom.getComposedParent(e),r=t.nodeName.toUpperCase(),n=axe.commons.aria.getRole(t,{noImplicit:!0});return\"DIV\"===r&&[\"presentation\",\"none\",null].includes(n)&&(r=(t=axe.commons.dom.getComposedParent(t)).nodeName.toUpperCase(),n=axe.commons.aria.getRole(t,{noImplicit:!0})),\"DL\"===r&&(!n||\"list\"===n)}},{id:\"listitem\",evaluate:function(e){var t=axe.commons.dom.getComposedParent(e);if(t){var r=t.nodeName.toUpperCase(),n=(t.getAttribute(\"role\")||\"\").toLowerCase();return\"list\"===n||(n&&axe.commons.aria.isValidRole(n)?(this.data({messageKey:\"roleNotValid\"}),!1):[\"UL\",\"OL\"].includes(r))}}},{id:\"only-dlitems\",evaluate:function(e,t,r){var n=axe.commons,o=n.dom,i=n.aria,s=[\"definition\",\"term\",\"list\"],a=r.children.reduce(function(e,t){var r=t.actualNode;return\"DIV\"===r.nodeName.toUpperCase()&&null===i.getRole(r)?e.concat(t.children):e.concat(t)},[]).reduce(function(e,t){var r=t.actualNode,n=r.nodeName.toUpperCase();if(1===r.nodeType&&o.isVisible(r,!0,!1)){var a=i.getRole(r,{noImplicit:!0});(\"DT\"!==n&&\"DD\"!==n||a)&&(s.includes(a)||e.badNodes.push(r))}else 3===r.nodeType&&\"\"!==r.nodeValue.trim()&&(e.hasNonEmptyTextNode=!0);return e},{badNodes:[],hasNonEmptyTextNode:!1});return a.badNodes.length&&this.relatedNodes(a.badNodes),!!a.badNodes.length||a.hasNonEmptyTextNode}},{id:\"only-listitems\",evaluate:function(e,t,r){var n=axe.commons,o=n.dom,i=n.aria,s=!1,l=!1,u=!0,c=[],d=[],p=[];return r.children.forEach(function(e){var t=e.actualNode;if(3!==t.nodeType||\"\"===t.nodeValue.trim()){if(1===t.nodeType&&o.isVisible(t,!0,!1)){u=!1;var r=\"LI\"===t.nodeName.toUpperCase(),n=i.getRole(e),a=\"listitem\"===n;r||a||c.push(t),r&&!a&&(d.push(t),p.includes(n)||p.push(n)),a&&(l=!0)}}else s=!0}),s||c.length?(this.relatedNodes(c),!0):!u&&!l&&(this.relatedNodes(d),this.data({messageKey:\"roleNotValid\",roles:p.join(\", \")}),!0)}},{id:\"structured-dlitems\",evaluate:function(e,t,r){var n=r.children;if(!n||!n.length)return!1;for(var a,o=!1,i=!1,s=0;s<n.length;s++){if(\"DT\"===(a=n[s].actualNode.nodeName.toUpperCase())&&(o=!0),o&&\"DD\"===a)return!1;\"DD\"===a&&(i=!0)}return o||i}},{id:\"caption\",evaluate:function(e,t,r){return!axe.utils.querySelectorAll(r,\"track\").some(function(e){return\"captions\"===(e.actualNode.getAttribute(\"kind\")||\"\").toLowerCase()})&&void 0}},{id:\"description\",evaluate:function(e,t,r){return!axe.utils.querySelectorAll(r,\"track\").some(function(e){return\"descriptions\"===(e.actualNode.getAttribute(\"kind\")||\"\").toLowerCase()})&&void 0}},{id:\"frame-tested\",evaluate:function(e,t){var r=this.async(),n=Object.assign({isViolation:!1,timeout:500},t),a=n.isViolation,o=n.timeout,i=setTimeout(function(){i=setTimeout(function(){i=null,r(!a&&void 0)},0)},o);axe.utils.respondable(e.contentWindow,\"axe.ping\",null,void 0,function(){null!==i&&(clearTimeout(i),r(!0))})},options:{isViolation:!1}},{id:\"no-autoplay-audio\",evaluate:function(e,t){if(e.duration){var r=t.allowedDuration,n=void 0===r?3:r;return function(e){if(!e.currentSrc)return 0;var t=function(e){var t=e.match(/#t=(.*)/);return t?X(t,2)[1].split(\",\").map(function(e){return(/:/.test(e)?function(e){var t=e.split(\":\"),r=0,n=1;for(;0<t.length;)r+=n*parseInt(t.pop(),10),n*=60;return parseFloat(r)}:parseFloat)(e)}):void 0}(e.currentSrc);return t?1!==t.length?Math.abs(t[1]-t[0]):Math.abs(e.duration-t[0]):Math.abs(e.duration-(e.currentTime||0))}(e)<=n&&!e.hasAttribute(\"loop\")||!!e.hasAttribute(\"controls\")}console.warn(\"axe.utils.preloadMedia did not load metadata\")},options:{allowedDuration:3}},{id:\"css-orientation-lock\",evaluate:function(e,t,r,n){var a=(n||{}).cssom,o=void 0===a?void 0:a,i=(t||{}).degreeThreshold,u=void 0===i?0:i;if(o&&o.length){function s(){var e=m[p],t=d[e],n=t.root,r=t.rules.filter(f);if(!r.length)return\"continue\";r.forEach(function(e){var t=e.cssRules;Array.from(t).forEach(function(e){var t=function(e){var t=e.selectorText,r=e.style;if(!t||r.length<=0)return!1;var n=r.transform||r.webkitTransform||r.msTransform||!1;if(!n)return!1;var a=n.match(/(rotate|rotateZ|rotate3d|matrix|matrix3d)\\(([^)]+)\\)(?!.*(rotate|rotateZ|rotate3d|matrix|matrix3d))/);if(!a)return!1;var o=X(a,3),i=o[1],s=o[2],l=function(e,t){switch(e){case\"rotate\":case\"rotateZ\":return h(t);case\"rotate3d\":var r=t.split(\",\").map(function(e){return e.trim()}),n=X(r,4),a=n[2],o=n[3];if(0===parseInt(a))return;return h(o);case\"matrix\":case\"matrix3d\":return function(e){var t=e.split(\",\");if(t.length<=6){var r=X(t,2),n=r[0],a=r[1];return b(Math.atan2(parseFloat(a),parseFloat(n)))}var o=parseFloat(t[8]),i=Math.asin(o),s=Math.cos(i);return b(Math.acos(parseFloat(t[0])/s))}(t);default:return}}(i,s);if(!l)return!1;if(l=Math.abs(l),Math.abs(l-180)%180<=u)return!1;return Math.abs(l-90)%90<=u}(e);if(t&&\"HTML\"!==e.selectorText.toUpperCase()){var r=Array.from(n.querySelectorAll(e.selectorText))||[];c=c.concat(r)}l=l||t})})}for(var l=!1,c=[],d=o.reduce(function(e,t){var r=t.sheet,n=t.root,a=t.shadowId,o=a||\"topDocument\";if(e[o]||(e[o]={root:n,rules:[]}),!r||!r.cssRules)return e;var i=Array.from(r.cssRules);return e[o].rules=e[o].rules.concat(i),e},{}),p=0,m=Object.keys(d);p<m.length;p++)s();return l?(c.length&&this.relatedNodes(c),!1):!0}function f(e){var t=e.type,r=e.cssText;return 4===t&&(/orientation:\\s*landscape/i.test(r)||/orientation:\\s*portrait/i.test(r))}function h(e){var t=e.match(/(deg|grad|rad|turn)/)||[],r=X(t,1)[0];if(r){var n,a=parseFloat(e.replace(r,\"\"));switch(r){case\"rad\":return b(a);case\"grad\":return function(e){(e%=400)<0&&(e+=400);return Math.round(e/400*360)}(a);case\"turn\":return n=a,Math.round(360/(1/n));case\"deg\":default:return parseInt(a)}}}function b(e){return Math.round(e*(180/Math.PI))}},options:{degreeThreshold:2}},{id:\"meta-viewport-large\",evaluate:function(e,t){var r=t||{},n=r.scaleMinimum,a=void 0===n?2:n,o=r.lowerBound,i=void 0!==o&&o,s=e.getAttribute(\"content\")||\"\";if(!s)return!0;var l=s.split(/[;,]/).reduce(function(e,t){var r=t.trim();if(!r)return e;var n=r.split(\"=\"),a=X(n,2),o=a[0],i=a[1],s=o.toLowerCase().trim(),l=i.toLowerCase().trim();return\"maximum-scale\"===s&&\"yes\"===l&&(l=1),\"maximum-scale\"===s&&parseFloat(l)<0||(e[s]=l),e},{});return!!(i&&l[\"maximum-scale\"]&&parseFloat(l[\"maximum-scale\"])<i)||(i||\"no\"!==l[\"user-scalable\"]?!(l[\"maximum-scale\"]&&parseFloat(l[\"maximum-scale\"])<a)||(this.data(\"maximum-scale\"),!1):(this.data(\"user-scalable=no\"),!1))},options:{scaleMinimum:5,lowerBound:2}},{id:\"meta-viewport\",evaluate:function(e,t){var r=t||{},n=r.scaleMinimum,a=void 0===n?2:n,o=r.lowerBound,i=void 0!==o&&o,s=e.getAttribute(\"content\")||\"\";if(!s)return!0;var l=s.split(/[;,]/).reduce(function(e,t){var r=t.trim();if(!r)return e;var n=r.split(\"=\"),a=X(n,2),o=a[0],i=a[1],s=o.toLowerCase().trim(),l=i.toLowerCase().trim();return\"maximum-scale\"===s&&\"yes\"===l&&(l=1),\"maximum-scale\"===s&&parseFloat(l)<0||(e[s]=l),e},{});return!!(i&&l[\"maximum-scale\"]&&parseFloat(l[\"maximum-scale\"])<i)||(i||\"no\"!==l[\"user-scalable\"]?!(l[\"maximum-scale\"]&&parseFloat(l[\"maximum-scale\"])<a)||(this.data(\"maximum-scale\"),!1):(this.data(\"user-scalable=no\"),!1))},options:{scaleMinimum:2}},{id:\"header-present\",evaluate:function(e,t,r){return!!axe.utils.querySelectorAll(r,'h1, h2, h3, h4, h5, h6, [role=\"heading\"]')[0]}},{id:\"heading-order\",evaluate:function(e){var t=e.getAttribute(\"aria-level\");if(null!==t)return this.data(parseInt(t,10)),!0;var r=e.nodeName.toUpperCase().match(/H(\\d)/);return r&&this.data(parseInt(r[1],10)),!0},after:function(e){if(e.length<2)return e;for(var t=e[0].data,r=1;r<e.length;r++)e[r].result&&e[r].data>t+1&&(e[r].result=!1),t=e[r].data;return e}},{id:\"identical-links-same-purpose\",evaluate:function(e,t,r){var n=axe.commons,a=n.dom,o=n.text,i=o.accessibleTextVirtual(r),s=o.sanitize(o.removeUnicode(i,{emoji:!0,nonBmp:!0,punctuations:!0})).toLowerCase();if(s){var l={name:s,urlProps:a.urlPropsFromAttribute(e,\"href\")};return this.data(l),this.relatedNodes([e]),!0}},after:function(e){if(e.length<2)return e;function t(r){var e,t=l[r],n=t.data,a=n.name,o=n.urlProps;if(c[a])return\"continue\";var i=l.filter(function(e,t){return e.data.name===a&&t!==r}),s=i.every(function(e){return function n(a,o){if(!a||!o)return!1;var e=Object.getOwnPropertyNames(a);var t=Object.getOwnPropertyNames(o);if(e.length!==t.length)return!1;var r=e.every(function(e){var t=a[e],r=o[e];return W(t)===W(r)&&(\"object\"==typeof t||\"object\"==typeof r?n(t,r):t===r)});return r}(e.data.urlProps,o)});i.length&&!s&&(t.result=void 0),t.relatedNodes=[],(e=t.relatedNodes).push.apply(e,Pe(i.map(function(e){return e.relatedNodes[0]}))),c[a]=i,u.push(t)}for(var l=e.filter(function(e){return void 0!==e.result}),u=[],c={},r=0;r<l.length;r++)t(r);return u}},{id:\"internal-link-present\",evaluate:function(e,t,r){return axe.utils.querySelectorAll(r,\"a[href]\").some(function(e){return/^#[^/!]/.test(e.actualNode.getAttribute(\"href\"))})}},{id:\"landmark\",evaluate:function(e,t,r){return 0<axe.utils.querySelectorAll(r,'main, [role=\"main\"]').length}},{id:\"meta-refresh\",evaluate:function(e){var t=e.getAttribute(\"content\")||\"\",r=t.split(/[;,]/);return\"\"===t||\"0\"===r[0]}},{id:\"p-as-heading\",evaluate:function(e,t,r){var n=Array.from(e.parentNode.children),a=n.indexOf(e),o=(t=t||{}).margins||[],i=n.slice(a+1).find(function(e){return\"P\"===e.nodeName.toUpperCase()}),s=n.slice(0,a).reverse().find(function(e){return\"P\"===e.nodeName.toUpperCase()});function l(e){var t=window.getComputedStyle(function(e){for(var t=e,r=e.textContent.trim(),n=r;n===r&&void 0!==t;){var a=-1;if(0===(e=t).children.length)return e;for(;a++,\"\"===(n=e.children[a].textContent.trim())&&a+1<e.children.length;);t=e.children[a]}return e}(e));return{fontWeight:function(e){switch(e){case\"lighter\":return 100;case\"normal\":return 400;case\"bold\":return 700;case\"bolder\":return 900}return e=parseInt(e),isNaN(e)?400:e}(t.getPropertyValue(\"font-weight\")),fontSize:parseInt(t.getPropertyValue(\"font-size\")),isItalic:\"italic\"===t.getPropertyValue(\"font-style\")}}function u(r,n,e){return e.reduce(function(e,t){return e||(!t.size||r.fontSize/t.size>n.fontSize)&&(!t.weight||r.fontWeight-t.weight>n.fontWeight)&&(!t.italic||r.isItalic&&!n.isItalic)},!1)}var c=l(e),d=i?l(i):null,p=s?l(s):null;if(!d||!u(c,d,o))return!0;var m=axe.commons.dom.findUpVirtual(r,\"blockquote\");return!!(m&&\"BLOCKQUOTE\"===m.nodeName.toUpperCase()||p&&!u(c,p,o))&&void 0},options:{margins:[{weight:150,italic:!0},{weight:150,size:1.15},{italic:!0,size:1.15},{size:1.4}]}},{id:\"region\",evaluate:function(e,t,r){var n=axe.commons,l=n.dom,u=n.aria,c=u.getRolesByType(\"landmark\"),d=[\"alert\",\"log\",\"status\"],a=axe._cache.get(\"regionlessNodes\");if(a)return!a.includes(r);var p=c.reduce(function(e,t){return e.concat(u.implicitNodes(t))},[]).filter(function(e){return null!==e});return a=function e(t){var a,o,r,n,i=t.actualNode;if(o=(a=t).actualNode,r=axe.commons.aria.getRole(o,{noImplicit:!0}),n=(o.getAttribute(\"aria-live\")||\"\").toLowerCase().trim(),[\"assertive\",\"polite\"].includes(n)||d.includes(r)||(r?\"dialog\"===r||c.includes(r):p.some(function(e){var t=axe.utils.matchesSelector(o,e);if(\"FORM\"!==o.nodeName.toUpperCase())return t;var r=o.getAttribute(\"title\"),n=r&&\"\"!==r.trim()?axe.commons.text.sanitize(r):null;return t&&(!!u.labelVirtual(a)||!!n)}))||l.isSkipLink(t.actualNode)&&l.getElementByReference(t.actualNode,\"href\")||!l.isVisible(i,!0)){for(var s=t;s;)s._hasRegionDescendant=!0,s=s.parent;return[]}return i!==document.body&&l.hasContent(i,!0)?[t]:t.children.filter(function(e){return 1===e.actualNode.nodeType}).map(e).reduce(function(e,t){return e.concat(t)},[])}(axe._tree[0]).map(function(e){for(;e.parent&&!e.parent._hasRegionDescendant&&e.parent.actualNode!==document.body;)e=e.parent;return e}).filter(function(e,t,r){return r.indexOf(e)===t}),axe._cache.set(\"regionlessNodes\",a),!a.includes(r)}},{id:\"skip-link\",evaluate:function(e){var t=axe.commons.dom.getElementByReference(e,\"href\");return!!t&&(axe.commons.dom.isVisible(t,!0)||void 0)}},{id:\"unique-frame-title\",evaluate:function(e){var t=axe.commons.text.sanitize(e.title).trim().toLowerCase();return this.data(t),!0},after:function(e){var t={};return e.forEach(function(e){t[e.data]=void 0!==t[e.data]?++t[e.data]:0}),e.forEach(function(e){e.result=!!t[e.data]}),e}},{id:\"duplicate-id-active\",evaluate:function(t){var e=t.getAttribute(\"id\").trim();if(!e)return!0;var r=axe.commons.dom.getRootNode(t),n=Array.from(r.querySelectorAll('[id=\"'.concat(axe.utils.escapeSelector(e),'\"]'))).filter(function(e){return e!==t});return n.length&&this.relatedNodes(n),this.data(e),0===n.length},after:function(e){var t=[];return e.filter(function(e){return-1===t.indexOf(e.data)&&(t.push(e.data),!0)})}},{id:\"duplicate-id-aria\",evaluate:function(t){var e=t.getAttribute(\"id\").trim();if(!e)return!0;var r=axe.commons.dom.getRootNode(t),n=Array.from(r.querySelectorAll('[id=\"'.concat(axe.utils.escapeSelector(e),'\"]'))).filter(function(e){return e!==t});return n.length&&this.relatedNodes(n),this.data(e),0===n.length},after:function(e){var t=[];return e.filter(function(e){return-1===t.indexOf(e.data)&&(t.push(e.data),!0)})}},{id:\"duplicate-id\",evaluate:function(t){var e=t.getAttribute(\"id\").trim();if(!e)return!0;var r=axe.commons.dom.getRootNode(t),n=Array.from(r.querySelectorAll('[id=\"'.concat(axe.utils.escapeSelector(e),'\"]'))).filter(function(e){return e!==t});return n.length&&this.relatedNodes(n),this.data(e),0===n.length},after:function(e){var t=[];return e.filter(function(e){return-1===t.indexOf(e.data)&&(t.push(e.data),!0)})}},{id:\"aria-label\",evaluate:function(e,t,r){var n=axe.commons,a=n.text,o=n.aria;return!!a.sanitize(o.arialabelText(r))}},{id:\"aria-labelledby\",evaluate:function(e){var t=axe.commons,r=t.text,n=t.aria;return!!r.sanitize(n.arialabelledbyText(e))}},{id:\"avoid-inline-spacing\",evaluate:function(t){var e=[\"line-height\",\"letter-spacing\",\"word-spacing\"].filter(function(e){if(\"important\"===t.style.getPropertyPriority(e))return e});return!(0<e.length)||(this.data(e),!1)}},{id:\"button-has-visible-text\",evaluate:function(e,t,r){var n,a=e.nodeName.toUpperCase(),o=e.getAttribute(\"role\");return(\"BUTTON\"===a||\"button\"===o&&\"INPUT\"!==a)&&(n=axe.commons.text.accessibleTextVirtual(r),this.data(n),!!n)}},{id:\"doc-has-title\",evaluate:function(){var e=document.title;return!(!e||!axe.commons.text.sanitize(e).trim())}},{id:\"exists\",evaluate:function(){}},{id:\"has-alt\",evaluate:function(e,t,r){var n=r.props.nodeName;return!![\"img\",\"input\",\"area\"].includes(n)&&r.hasAttr(\"alt\")}},{id:\"has-visible-text\",evaluate:function(e,t,r){return 0<axe.commons.text.accessibleTextVirtual(r).length}},{id:\"is-on-screen\",evaluate:function(e){return axe.commons.dom.isVisible(e,!1)&&!axe.commons.dom.isOffscreen(e)}},{id:\"non-empty-alt\",evaluate:function(e,t,r){var n=r.attr(\"alt\");return!(!n||!axe.commons.text.sanitize(n).trim())}},{id:\"non-empty-if-present\",evaluate:function(e){var t=e.nodeName.toUpperCase(),r=(e.getAttribute(\"type\")||\"\").toLowerCase(),n=e.getAttribute(\"value\");return n&&this.data({messageKey:\"has-label\"}),!(\"INPUT\"!==t||![\"submit\",\"reset\"].includes(r))&&null===n}},{id:\"non-empty-title\",evaluate:function(e){var t=axe.commons.text;return!!t.sanitize(t.titleText(e))}},{id:\"non-empty-value\",evaluate:function(e){var t=e.getAttribute(\"value\");return!(!t||!axe.commons.text.sanitize(t).trim())}},{id:\"role-none\",evaluate:function(e){return\"none\"===e.getAttribute(\"role\")}},{id:\"role-presentation\",evaluate:function(e){return\"presentation\"===e.getAttribute(\"role\")}},{id:\"svg-non-empty-title\",evaluate:function(e,t,r){var n=r.children.find(function(e){return\"title\"===e.props.nodeName});return!!n&&\"\"!==n.actualNode.textContent.trim()}},{id:\"caption-faked\",evaluate:function(e){var t=axe.commons.table.toGrid(e),n=t[0];return t.length<=1||n.length<=1||e.rows.length<=1||n.reduce(function(e,t,r){return e||t!==n[r+1]&&void 0!==n[r+1]},!1)}},{id:\"has-caption\",evaluate:function(e){return!!e.caption},deprecated:!0},{id:\"has-summary\",evaluate:function(e){return!!e.summary},deprecated:!0},{id:\"has-th\",evaluate:function(e){for(var t,r,n=[],a=0,o=e.rows.length;a<o;a++)for(var i=0,s=(t=e.rows[a]).cells.length;i<s;i++)\"TH\"!==(r=t.cells[i]).nodeName.toUpperCase()&&-1===[\"rowheader\",\"columnheader\"].indexOf(r.getAttribute(\"role\"))||n.push(r);return!!n.length&&(this.relatedNodes(n),!0)},deprecated:!0},{id:\"html5-scope\",evaluate:function(e){return!axe.commons.dom.isHTML5(document)||\"TH\"===e.nodeName.toUpperCase()}},{id:\"same-caption-summary\",evaluate:function(e){return!(!e.summary||!e.caption)&&e.summary.toLowerCase()===axe.commons.text.accessibleText(e.caption).toLowerCase()}},{id:\"scope-value\",evaluate:function(e){var t=e.getAttribute(\"scope\").toLowerCase();return-1!==[\"row\",\"col\",\"rowgroup\",\"colgroup\"].indexOf(t)}},{id:\"td-has-header\",evaluate:function(e){var t=axe.commons.table,r=[],n=t.getAllCells(e),a=t.toGrid(e);return n.forEach(function(e){axe.commons.dom.hasContent(e)&&t.isDataCell(e)&&!axe.commons.aria.label(e)&&(t.getHeaders(e,a).some(function(e){return null!==e&&!!axe.commons.dom.hasContent(e)})||r.push(e))}),!r.length||(this.relatedNodes(r),!1)}},{id:\"td-headers-attr\",evaluate:function(e){for(var t=[],o=[],i=[],r=0;r<e.rows.length;r++)for(var n=e.rows[r],a=0;a<n.cells.length;a++)t.push(n.cells[a]);var s=t.reduce(function(e,t){return t.getAttribute(\"id\")&&e.push(t.getAttribute(\"id\")),e},[]);return t.forEach(function(e){var t=!1,r=!1;if(e.hasAttribute(\"headers\")){var n=e.getAttribute(\"headers\").trim();if(!n)return o.push(e);var a=axe.utils.tokenList(n);0!==a.length&&(e.getAttribute(\"id\")&&(t=-1!==a.indexOf(e.getAttribute(\"id\").trim())),r=a.some(function(e){return!s.includes(e)}),(t||r)&&i.push(e))}}),0<i.length?(this.relatedNodes(i),!1):!o.length||void this.relatedNodes(o)}},{id:\"th-has-data-cells\",evaluate:function(e){var n=axe.commons.table,t=n.getAllCells(e),a=this,o=[];t.forEach(function(e){var t=e.getAttribute(\"headers\");t&&(o=o.concat(t.split(/\\s+/)));var r=e.getAttribute(\"aria-labelledby\");r&&(o=o.concat(r.split(/\\s+/)))});var r=t.filter(function(e){return\"\"!==axe.commons.text.sanitize(e.textContent)&&(\"TH\"===e.nodeName.toUpperCase()||-1!==[\"rowheader\",\"columnheader\"].indexOf(e.getAttribute(\"role\")))}),i=n.toGrid(e),s=!0;return r.forEach(function(t){if(!t.getAttribute(\"id\")||!o.includes(t.getAttribute(\"id\"))){var e=n.getCellPosition(t,i),r=!1;n.isColumnHeader(t)&&(r=n.traverse(\"down\",e,i).find(function(e){return!n.isColumnHeader(e)&&n.getHeaders(e,i).includes(t)})),!r&&n.isRowHeader(t)&&(r=n.traverse(\"right\",e,i).find(function(e){return!n.isRowHeader(e)&&n.getHeaders(e,i).includes(t)})),r||a.relatedNodes(t),s=s&&r}}),!!s||void 0}},{id:\"hidden-content\",evaluate:function(e,t,r){if(![\"SCRIPT\",\"HEAD\",\"TITLE\",\"NOSCRIPT\",\"STYLE\",\"TEMPLATE\"].includes(e.nodeName.toUpperCase())&&axe.commons.dom.hasContentVirtual(r)){var n=window.getComputedStyle(e);if(\"none\"===n.getPropertyValue(\"display\"))return;if(\"hidden\"===n.getPropertyValue(\"visibility\")){var a=axe.commons.dom.getComposedParent(e),o=a&&window.getComputedStyle(a);if(!o||\"hidden\"!==o.getPropertyValue(\"visibility\"))return}}return!0}}],commons:function(){function e(e){return null===e}function t(e){return null!==e}var commons={},u=commons.aria={},r=u.lookupTable={};r.attributes={\"aria-activedescendant\":{type:\"idref\",allowEmpty:!0,unsupported:!1},\"aria-atomic\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-autocomplete\":{type:\"nmtoken\",values:[\"inline\",\"list\",\"both\",\"none\"],unsupported:!1},\"aria-busy\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-checked\":{type:\"nmtoken\",values:[\"true\",\"false\",\"mixed\",\"undefined\"],unsupported:!1},\"aria-colcount\":{type:\"int\",unsupported:!1},\"aria-colindex\":{type:\"int\",unsupported:!1},\"aria-colspan\":{type:\"int\",unsupported:!1},\"aria-controls\":{type:\"idrefs\",allowEmpty:!0,unsupported:!1},\"aria-current\":{type:\"nmtoken\",allowEmpty:!0,values:[\"page\",\"step\",\"location\",\"date\",\"time\",\"true\",\"false\"],unsupported:!1},\"aria-describedby\":{type:\"idrefs\",allowEmpty:!0,unsupported:!1},\"aria-describedat\":{unsupported:!0,unstandardized:!0},\"aria-details\":{type:\"idref\",allowEmpty:!0,unsupported:!1},\"aria-disabled\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-dropeffect\":{type:\"nmtokens\",values:[\"copy\",\"move\",\"reference\",\"execute\",\"popup\",\"none\"],unsupported:!1},\"aria-errormessage\":{type:\"idref\",allowEmpty:!0,unsupported:!1},\"aria-expanded\":{type:\"nmtoken\",values:[\"true\",\"false\",\"undefined\"],unsupported:!1},\"aria-flowto\":{type:\"idrefs\",allowEmpty:!0,unsupported:!1},\"aria-grabbed\":{type:\"nmtoken\",values:[\"true\",\"false\",\"undefined\"],unsupported:!1},\"aria-haspopup\":{type:\"nmtoken\",allowEmpty:!0,values:[\"true\",\"false\",\"menu\",\"listbox\",\"tree\",\"grid\",\"dialog\"],unsupported:!1},\"aria-hidden\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-invalid\":{type:\"nmtoken\",allowEmpty:!0,values:[\"true\",\"false\",\"spelling\",\"grammar\"],unsupported:!1},\"aria-keyshortcuts\":{type:\"string\",allowEmpty:!0,unsupported:!1},\"aria-label\":{type:\"string\",allowEmpty:!0,unsupported:!1},\"aria-labelledby\":{type:\"idrefs\",allowEmpty:!0,unsupported:!1},\"aria-level\":{type:\"int\",unsupported:!1},\"aria-live\":{type:\"nmtoken\",values:[\"off\",\"polite\",\"assertive\"],unsupported:!1},\"aria-modal\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-multiline\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-multiselectable\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-orientation\":{type:\"nmtoken\",values:[\"horizontal\",\"vertical\"],unsupported:!1},\"aria-owns\":{type:\"idrefs\",allowEmpty:!0,unsupported:!1},\"aria-placeholder\":{type:\"string\",allowEmpty:!0,unsupported:!1},\"aria-posinset\":{type:\"int\",unsupported:!1},\"aria-pressed\":{type:\"nmtoken\",values:[\"true\",\"false\",\"mixed\",\"undefined\"],unsupported:!1},\"aria-readonly\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-relevant\":{type:\"nmtokens\",values:[\"additions\",\"removals\",\"text\",\"all\"],unsupported:!1},\"aria-required\":{type:\"boolean\",values:[\"true\",\"false\"],unsupported:!1},\"aria-roledescription\":{type:\"string\",allowEmpty:!0,unsupported:!1},\"aria-rowcount\":{type:\"int\",unsupported:!1},\"aria-rowindex\":{type:\"int\",unsupported:!1},\"aria-rowspan\":{type:\"int\",unsupported:!1},\"aria-selected\":{type:\"nmtoken\",values:[\"true\",\"false\",\"undefined\"],unsupported:!1},\"aria-setsize\":{type:\"int\",unsupported:!1},\"aria-sort\":{type:\"nmtoken\",values:[\"ascending\",\"descending\",\"other\",\"none\"],unsupported:!1},\"aria-valuemax\":{type:\"decimal\",unsupported:!1},\"aria-valuemin\":{type:\"decimal\",unsupported:!1},\"aria-valuenow\":{type:\"decimal\",unsupported:!1},\"aria-valuetext\":{type:\"string\",unsupported:!1}},r.globalAttributes=[\"aria-atomic\",\"aria-busy\",\"aria-controls\",\"aria-current\",\"aria-describedby\",\"aria-details\",\"aria-disabled\",\"aria-dropeffect\",\"aria-flowto\",\"aria-grabbed\",\"aria-haspopup\",\"aria-hidden\",\"aria-invalid\",\"aria-keyshortcuts\",\"aria-label\",\"aria-labelledby\",\"aria-live\",\"aria-owns\",\"aria-relevant\",\"aria-roledescription\"],r.role={alert:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},alertdialog:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-modal\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"dialog\",\"section\"]},application:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"article\",\"audio\",\"embed\",\"iframe\",\"object\",\"section\",\"svg\",\"video\"]},article:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-posinset\",\"aria-setsize\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"article\"],unsupported:!1},banner:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"header\"],unsupported:!1,allowedElements:[\"section\"]},button:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-pressed\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,implicit:[\"button\",'input[type=\"button\"]','input[type=\"image\"]','input[type=\"reset\"]','input[type=\"submit\"]',\"summary\"],unsupported:!1,allowedElements:[{nodeName:\"a\",attributes:{href:t}}]},cell:{type:\"structure\",attributes:{allowed:[\"aria-colindex\",\"aria-colspan\",\"aria-rowindex\",\"aria-rowspan\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"row\"],implicit:[\"td\",\"th\"],unsupported:!1},checkbox:{type:\"widget\",attributes:{allowed:[\"aria-checked\",\"aria-required\",\"aria-readonly\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,implicit:['input[type=\"checkbox\"]'],unsupported:!1,allowedElements:[\"button\"]},columnheader:{type:\"structure\",attributes:{allowed:[\"aria-colindex\",\"aria-colspan\",\"aria-expanded\",\"aria-rowindex\",\"aria-rowspan\",\"aria-required\",\"aria-readonly\",\"aria-selected\",\"aria-sort\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"row\"],implicit:[\"th\"],unsupported:!1},combobox:{type:\"composite\",attributes:{allowed:[\"aria-autocomplete\",\"aria-required\",\"aria-activedescendant\",\"aria-orientation\",\"aria-errormessage\"],required:[\"aria-expanded\"]},owned:{all:[\"listbox\",\"tree\",\"grid\",\"dialog\",\"textbox\"]},nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[{nodeName:\"input\",properties:{type:[\"text\",\"search\",\"tel\",\"url\",\"email\"]}}]},command:{nameFrom:[\"author\"],type:\"abstract\",unsupported:!1},complementary:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"aside\"],unsupported:!1,allowedElements:[\"section\"]},composite:{nameFrom:[\"author\"],type:\"abstract\",unsupported:!1},contentinfo:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"footer\"],unsupported:!1,allowedElements:[\"section\"]},definition:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"dd\",\"dfn\"],unsupported:!1},dialog:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-modal\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"dialog\"],unsupported:!1,allowedElements:[\"section\"]},directory:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,unsupported:!1,allowedElements:[\"ol\",\"ul\"]},document:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"body\"],unsupported:!1,allowedElements:[\"article\",\"embed\",\"iframe\",\"object\",\"section\",\"svg\"]},\"doc-abstract\":{type:\"section\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-acknowledgments\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-afterword\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-appendix\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-backlink\":{type:\"link\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,unsupported:!1,allowedElements:[{nodeName:\"a\",attributes:{href:t}}]},\"doc-biblioentry\":{type:\"listitem\",attributes:{allowed:[\"aria-expanded\",\"aria-level\",\"aria-posinset\",\"aria-setsize\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:[\"doc-bibliography\"],unsupported:!1,allowedElements:[\"li\"]},\"doc-bibliography\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:{one:[\"doc-biblioentry\"]},nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-biblioref\":{type:\"link\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,unsupported:!1,allowedElements:[{nodeName:\"a\",attributes:{href:t}}]},\"doc-chapter\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-colophon\":{type:\"section\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-conclusion\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-cover\":{type:\"img\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1},\"doc-credit\":{type:\"section\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-credits\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-dedication\":{type:\"section\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-endnote\":{type:\"listitem\",attributes:{allowed:[\"aria-expanded\",\"aria-level\",\"aria-posinset\",\"aria-setsize\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:[\"doc-endnotes\"],unsupported:!1,allowedElements:[\"li\"]},\"doc-endnotes\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:{one:[\"doc-endnote\"]},namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-epigraph\":{type:\"section\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1},\"doc-epilogue\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-errata\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-example\":{type:\"section\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"aside\",\"section\"]},\"doc-footnote\":{type:\"section\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"aside\",\"footer\",\"header\"]},\"doc-foreword\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-glossary\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:[\"term\",\"definition\"],namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"dl\"]},\"doc-glossref\":{type:\"link\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\",\"contents\"],context:null,unsupported:!1,allowedElements:[{nodeName:\"a\",attributes:{href:t}}]},\"doc-index\":{type:\"navigation\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"nav\",\"section\"]},\"doc-introduction\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-noteref\":{type:\"link\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\",\"contents\"],context:null,unsupported:!1,allowedElements:[{nodeName:\"a\",attributes:{href:t}}]},\"doc-notice\":{type:\"note\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-pagebreak\":{type:\"separator\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"hr\"]},\"doc-pagelist\":{type:\"navigation\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"nav\",\"section\"]},\"doc-part\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-preface\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-prologue\":{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-pullquote\":{type:\"none\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"aside\",\"section\"]},\"doc-qna\":{type:\"section\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},\"doc-subtitle\":{type:\"sectionhead\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:{nodeName:[\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\"]}},\"doc-tip\":{type:\"note\",attributes:{allowed:[\"aria-expanded\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"aside\"]},\"doc-toc\":{type:\"navigation\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,namefrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"nav\",\"section\"]},feed:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:{one:[\"article\"]},nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"article\",\"aside\",\"section\"]},figure:{type:\"structure\",unsupported:!1},form:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"form\"],unsupported:!1},grid:{type:\"composite\",attributes:{allowed:[\"aria-activedescendant\",\"aria-expanded\",\"aria-colcount\",\"aria-level\",\"aria-multiselectable\",\"aria-readonly\",\"aria-rowcount\",\"aria-errormessage\"]},owned:{one:[\"rowgroup\",\"row\"]},nameFrom:[\"author\"],context:null,implicit:[\"table\"],unsupported:!1},gridcell:{type:\"widget\",attributes:{allowed:[\"aria-colindex\",\"aria-colspan\",\"aria-expanded\",\"aria-rowindex\",\"aria-rowspan\",\"aria-selected\",\"aria-readonly\",\"aria-required\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"row\"],implicit:[\"td\",\"th\"],unsupported:!1},group:{type:\"structure\",attributes:{allowed:[\"aria-activedescendant\",\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"details\",\"optgroup\"],unsupported:!1,allowedElements:[\"dl\",\"figcaption\",\"fieldset\",\"figure\",\"footer\",\"header\",\"ol\",\"ul\"]},heading:{type:\"structure\",attributes:{required:[\"aria-level\"],allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,implicit:[\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\"],unsupported:!1},img:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"img\"],unsupported:!1,allowedElements:[\"embed\",\"iframe\",\"object\",\"svg\"]},input:{nameFrom:[\"author\"],type:\"abstract\",unsupported:!1},landmark:{nameFrom:[\"author\"],type:\"abstract\",unsupported:!1},link:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,implicit:[\"a[href]\"],unsupported:!1,allowedElements:[\"button\",{nodeName:\"input\",properties:{type:[\"image\",\"button\"]}}]},list:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:{all:[\"listitem\"]},nameFrom:[\"author\"],context:null,implicit:[\"ol\",\"ul\",\"dl\"],unsupported:!1},listbox:{type:\"composite\",attributes:{allowed:[\"aria-activedescendant\",\"aria-multiselectable\",\"aria-readonly\",\"aria-required\",\"aria-expanded\",\"aria-orientation\",\"aria-errormessage\"]},owned:{all:[\"option\"]},nameFrom:[\"author\"],context:null,implicit:[\"select\"],unsupported:!1,allowedElements:[\"ol\",\"ul\"]},listitem:{type:\"structure\",attributes:{allowed:[\"aria-level\",\"aria-posinset\",\"aria-setsize\",\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"list\"],implicit:[\"li\",\"dt\"],unsupported:!1},log:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},main:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"main\"],unsupported:!1,allowedElements:[\"article\",\"section\"]},marquee:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},math:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"math\"],unsupported:!1},menu:{type:\"composite\",attributes:{allowed:[\"aria-activedescendant\",\"aria-expanded\",\"aria-orientation\",\"aria-errormessage\"]},owned:{one:[\"menuitem\",\"menuitemradio\",\"menuitemcheckbox\"]},nameFrom:[\"author\"],context:null,implicit:['menu[type=\"context\"]'],unsupported:!1,allowedElements:[\"ol\",\"ul\"]},menubar:{type:\"composite\",attributes:{allowed:[\"aria-activedescendant\",\"aria-expanded\",\"aria-orientation\",\"aria-errormessage\"]},owned:{one:[\"menuitem\",\"menuitemradio\",\"menuitemcheckbox\"]},nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"ol\",\"ul\"]},menuitem:{type:\"widget\",attributes:{allowed:[\"aria-posinset\",\"aria-setsize\",\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"menu\",\"menubar\"],implicit:['menuitem[type=\"command\"]'],unsupported:!1,allowedElements:[\"button\",\"li\",{nodeName:\"iput\",properties:{type:[\"image\",\"button\"]}},{nodeName:\"a\",attributes:{href:t}}]},menuitemcheckbox:{type:\"widget\",attributes:{allowed:[\"aria-checked\",\"aria-posinset\",\"aria-setsize\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"menu\",\"menubar\"],implicit:['menuitem[type=\"checkbox\"]'],unsupported:!1,allowedElements:[{nodeName:[\"button\",\"li\"]},{nodeName:\"input\",properties:{type:[\"checkbox\",\"image\",\"button\"]}},{nodeName:\"a\",attributes:{href:t}}]},menuitemradio:{type:\"widget\",attributes:{allowed:[\"aria-checked\",\"aria-selected\",\"aria-posinset\",\"aria-setsize\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"menu\",\"menubar\"],implicit:['menuitem[type=\"radio\"]'],unsupported:!1,allowedElements:[{nodeName:[\"button\",\"li\"]},{nodeName:\"input\",properties:{type:[\"image\",\"button\",\"radio\"]}},{nodeName:\"a\",attributes:{href:t}}]},navigation:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"nav\"],unsupported:!1,allowedElements:[\"section\"]},none:{type:\"structure\",attributes:null,owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[{nodeName:[\"article\",\"aside\",\"dl\",\"embed\",\"figcaption\",\"fieldset\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"iframe\",\"li\",\"ol\",\"section\",\"ul\"]},{nodeName:\"img\",attributes:{alt:t}}]},note:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"aside\"]},option:{type:\"widget\",attributes:{allowed:[\"aria-selected\",\"aria-posinset\",\"aria-setsize\",\"aria-checked\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"listbox\"],implicit:[\"option\"],unsupported:!1,allowedElements:[{nodeName:[\"button\",\"li\"]},{nodeName:\"input\",properties:{type:[\"checkbox\",\"button\"]}},{nodeName:\"a\",attributes:{href:t}}]},presentation:{type:\"structure\",attributes:null,owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[{nodeName:[\"article\",\"aside\",\"dl\",\"embed\",\"figcaption\",\"fieldset\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"iframe\",\"li\",\"ol\",\"section\",\"ul\"]},{nodeName:\"img\",attributes:{alt:t}}]},progressbar:{type:\"widget\",attributes:{allowed:[\"aria-valuetext\",\"aria-valuenow\",\"aria-valuemax\",\"aria-valuemin\",\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"progress\"],unsupported:!1},radio:{type:\"widget\",attributes:{allowed:[\"aria-selected\",\"aria-posinset\",\"aria-setsize\",\"aria-required\",\"aria-errormessage\",\"aria-checked\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,implicit:['input[type=\"radio\"]'],unsupported:!1,allowedElements:[{nodeName:[\"button\",\"li\"]},{nodeName:\"input\",properties:{type:[\"image\",\"button\"]}}]},radiogroup:{type:\"composite\",attributes:{allowed:[\"aria-activedescendant\",\"aria-required\",\"aria-expanded\",\"aria-readonly\",\"aria-errormessage\"]},owned:{all:[\"radio\"]},nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:{nodeName:[\"ol\",\"ul\"]}},range:{nameFrom:[\"author\"],type:\"abstract\",unsupported:!1},region:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"section[aria-label]\",\"section[aria-labelledby]\",\"section[title]\"],unsupported:!1,allowedElements:{nodeName:[\"article\",\"aside\"]}},roletype:{type:\"abstract\",unsupported:!1},row:{type:\"structure\",attributes:{allowed:[\"aria-activedescendant\",\"aria-colindex\",\"aria-expanded\",\"aria-level\",\"aria-selected\",\"aria-rowindex\",\"aria-errormessage\"]},owned:{one:[\"cell\",\"columnheader\",\"rowheader\",\"gridcell\"]},nameFrom:[\"author\",\"contents\"],context:[\"rowgroup\",\"grid\",\"treegrid\",\"table\"],implicit:[\"tr\"],unsupported:!1},rowgroup:{type:\"structure\",attributes:{allowed:[\"aria-activedescendant\",\"aria-expanded\",\"aria-errormessage\"]},owned:{all:[\"row\"]},nameFrom:[\"author\",\"contents\"],context:[\"grid\",\"table\",\"treegrid\"],implicit:[\"tbody\",\"thead\",\"tfoot\"],unsupported:!1},rowheader:{type:\"structure\",attributes:{allowed:[\"aria-colindex\",\"aria-colspan\",\"aria-expanded\",\"aria-rowindex\",\"aria-rowspan\",\"aria-required\",\"aria-readonly\",\"aria-selected\",\"aria-sort\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"row\"],implicit:[\"th\"],unsupported:!1},scrollbar:{type:\"widget\",attributes:{required:[\"aria-controls\",\"aria-valuenow\"],allowed:[\"aria-valuetext\",\"aria-orientation\",\"aria-errormessage\",\"aria-valuemax\",\"aria-valuemin\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1},search:{type:\"landmark\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:{nodeName:[\"aside\",\"form\",\"section\"]}},searchbox:{type:\"widget\",attributes:{allowed:[\"aria-activedescendant\",\"aria-autocomplete\",\"aria-multiline\",\"aria-readonly\",\"aria-required\",\"aria-placeholder\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:['input[type=\"search\"]'],unsupported:!1,allowedElements:{nodeName:\"input\",properties:{type:\"text\"}}},section:{nameFrom:[\"author\",\"contents\"],type:\"abstract\",unsupported:!1},sectionhead:{nameFrom:[\"author\",\"contents\"],type:\"abstract\",unsupported:!1},select:{nameFrom:[\"author\"],type:\"abstract\",unsupported:!1},separator:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-orientation\",\"aria-valuenow\",\"aria-valuemax\",\"aria-valuemin\",\"aria-valuetext\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"hr\"],unsupported:!1,allowedElements:[\"li\"]},slider:{type:\"widget\",attributes:{allowed:[\"aria-valuetext\",\"aria-orientation\",\"aria-readonly\",\"aria-errormessage\",\"aria-valuemax\",\"aria-valuemin\"],required:[\"aria-valuenow\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:['input[type=\"range\"]'],unsupported:!1},spinbutton:{type:\"widget\",attributes:{allowed:[\"aria-valuetext\",\"aria-required\",\"aria-readonly\",\"aria-errormessage\",\"aria-valuemax\",\"aria-valuemin\"],required:[\"aria-valuenow\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:['input[type=\"number\"]'],unsupported:!1,allowedElements:{nodeName:\"input\",properties:{type:[\"text\",\"tel\"]}}},status:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:[\"output\"],unsupported:!1,allowedElements:[\"section\"]},structure:{type:\"abstract\",unsupported:!1},switch:{type:\"widget\",attributes:{allowed:[\"aria-errormessage\"],required:[\"aria-checked\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,unsupported:!1,allowedElements:[\"button\",{nodeName:\"input\",properties:{type:[\"checkbox\",\"image\",\"button\"]}},{nodeName:\"a\",attributes:{href:t}}]},tab:{type:\"widget\",attributes:{allowed:[\"aria-selected\",\"aria-expanded\",\"aria-setsize\",\"aria-posinset\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"tablist\"],unsupported:!1,allowedElements:[{nodeName:[\"button\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"li\"]},{nodeName:\"input\",properties:{type:\"button\"}},{nodeName:\"a\",attributes:{href:t}}]},table:{type:\"structure\",attributes:{allowed:[\"aria-colcount\",\"aria-rowcount\",\"aria-errormessage\"]},owned:{one:[\"rowgroup\",\"row\"]},nameFrom:[\"author\"],context:null,implicit:[\"table\"],unsupported:!1},tablist:{type:\"composite\",attributes:{allowed:[\"aria-activedescendant\",\"aria-expanded\",\"aria-level\",\"aria-multiselectable\",\"aria-orientation\",\"aria-errormessage\"]},owned:{all:[\"tab\"]},nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"ol\",\"ul\"]},tabpanel:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"section\"]},term:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,implicit:[\"dt\"],unsupported:!1},textbox:{type:\"widget\",attributes:{allowed:[\"aria-activedescendant\",\"aria-autocomplete\",\"aria-multiline\",\"aria-readonly\",\"aria-required\",\"aria-placeholder\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:['input[type=\"text\"]','input[type=\"email\"]','input[type=\"password\"]','input[type=\"tel\"]','input[type=\"url\"]',\"input:not([type])\",\"textarea\"],unsupported:!1},timer:{type:\"widget\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,unsupported:!1},toolbar:{type:\"structure\",attributes:{allowed:[\"aria-activedescendant\",\"aria-expanded\",\"aria-orientation\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\"],context:null,implicit:['menu[type=\"toolbar\"]'],unsupported:!1,allowedElements:[\"ol\",\"ul\"]},tooltip:{type:\"structure\",attributes:{allowed:[\"aria-expanded\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:null,unsupported:!1},tree:{type:\"composite\",attributes:{allowed:[\"aria-activedescendant\",\"aria-multiselectable\",\"aria-required\",\"aria-expanded\",\"aria-orientation\",\"aria-errormessage\"]},owned:{all:[\"treeitem\"]},nameFrom:[\"author\"],context:null,unsupported:!1,allowedElements:[\"ol\",\"ul\"]},treegrid:{type:\"composite\",attributes:{allowed:[\"aria-activedescendant\",\"aria-colcount\",\"aria-expanded\",\"aria-level\",\"aria-multiselectable\",\"aria-readonly\",\"aria-required\",\"aria-rowcount\",\"aria-orientation\",\"aria-errormessage\"]},owned:{one:[\"rowgroup\",\"row\"]},nameFrom:[\"author\"],context:null,unsupported:!1},treeitem:{type:\"widget\",attributes:{allowed:[\"aria-checked\",\"aria-selected\",\"aria-expanded\",\"aria-level\",\"aria-posinset\",\"aria-setsize\",\"aria-errormessage\"]},owned:null,nameFrom:[\"author\",\"contents\"],context:[\"group\",\"tree\"],unsupported:!1,allowedElements:[\"li\",{nodeName:\"a\",attributes:{href:t}}]},widget:{type:\"abstract\",unsupported:!1},window:{nameFrom:[\"author\"],type:\"abstract\",unsupported:!1}},r.elementsAllowedNoRole=[{nodeName:[\"base\",\"body\",\"caption\",\"col\",\"colgroup\",\"datalist\",\"dd\",\"details\",\"dt\",\"head\",\"html\",\"keygen\",\"label\",\"legend\",\"main\",\"map\",\"math\",\"meta\",\"meter\",\"noscript\",\"optgroup\",\"param\",\"picture\",\"progress\",\"script\",\"source\",\"style\",\"template\",\"textarea\",\"title\",\"track\"]},{nodeName:\"area\",attributes:{href:t}},{nodeName:\"input\",properties:{type:[\"color\",\"data\",\"datatime\",\"file\",\"hidden\",\"month\",\"number\",\"password\",\"range\",\"reset\",\"submit\",\"time\",\"week\"]}},{nodeName:\"link\",attributes:{href:t}},{nodeName:\"menu\",attributes:{type:\"context\"}},{nodeName:\"menuitem\",attributes:{type:[\"command\",\"checkbox\",\"radio\"]}},{nodeName:\"select\",condition:function(e){return e instanceof axe.AbstractVirtualNode||(e=axe.utils.getNodeFromTree(e)),1<Number(e.attr(\"size\"))},properties:{multiple:!0}},{nodeName:[\"clippath\",\"cursor\",\"defs\",\"desc\",\"feblend\",\"fecolormatrix\",\"fecomponenttransfer\",\"fecomposite\",\"feconvolvematrix\",\"fediffuselighting\",\"fedisplacementmap\",\"fedistantlight\",\"fedropshadow\",\"feflood\",\"fefunca\",\"fefuncb\",\"fefuncg\",\"fefuncr\",\"fegaussianblur\",\"feimage\",\"femerge\",\"femergenode\",\"femorphology\",\"feoffset\",\"fepointlight\",\"fespecularlighting\",\"fespotlight\",\"fetile\",\"feturbulence\",\"filter\",\"hatch\",\"hatchpath\",\"lineargradient\",\"marker\",\"mask\",\"meshgradient\",\"meshpatch\",\"meshrow\",\"metadata\",\"mpath\",\"pattern\",\"radialgradient\",\"solidcolor\",\"stop\",\"switch\",\"view\"]}],r.elementsAllowedAnyRole=[{nodeName:\"a\",attributes:{href:e}},{nodeName:\"img\",attributes:{alt:e}},{nodeName:[\"abbr\",\"address\",\"canvas\",\"div\",\"p\",\"pre\",\"blockquote\",\"ins\",\"del\",\"output\",\"span\",\"table\",\"tbody\",\"thead\",\"tfoot\",\"td\",\"em\",\"strong\",\"small\",\"s\",\"cite\",\"q\",\"dfn\",\"abbr\",\"time\",\"code\",\"var\",\"samp\",\"kbd\",\"sub\",\"sup\",\"i\",\"b\",\"u\",\"mark\",\"ruby\",\"rt\",\"rp\",\"bdi\",\"bdo\",\"br\",\"wbr\",\"th\",\"tr\"]}],r.evaluateRoleForElement={A:function(e){var t=e.node,r=e.out;return\"http://www.w3.org/2000/svg\"===t.namespaceURI||(!t.href.length||r)},AREA:function(e){return!e.node.href},BUTTON:function(e){var t=e.node,r=e.role,n=e.out;return\"menu\"===t.getAttribute(\"type\")?\"menuitem\"===r:n},IMG:function(e){var t=e.node,r=e.role,n=e.out;switch(t.alt){case null:return n;case\"\":return\"presentation\"===r||\"none\"===r;default:return\"presentation\"!==r&&\"none\"!==r}},INPUT:function(e){var t=e.node,r=e.role,n=e.out;switch(t.type){case\"button\":case\"image\":return n;case\"checkbox\":return\"button\"===r&&t.hasAttribute(\"aria-pressed\")?!0:n;case\"radio\":return\"menuitemradio\"===r;case\"text\":return\"combobox\"===r||\"searchbox\"===r||\"spinbutton\"===r;case\"tel\":return\"combobox\"===r||\"spinbutton\"===r;case\"url\":case\"search\":case\"email\":return\"combobox\"===r;default:return!1}},LI:function(e){var t=e.node,r=e.out;return!axe.utils.matchesSelector(t,\"ol li, ul li\")||r},MENU:function(e){return\"context\"!==e.node.getAttribute(\"type\")},OPTION:function(e){var t=e.node;return!axe.utils.matchesSelector(t,\"select > option, datalist > option, optgroup > option\")},SELECT:function(e){var t=e.node,r=e.role;return!t.multiple&&t.size<=1&&\"menu\"===r},SVG:function(e){var t=e.node,r=e.out;return!(!t.parentNode||\"http://www.w3.org/2000/svg\"!==t.parentNode.namespaceURI)||r}},r.rolesOfType={widget:[\"button\",\"checkbox\",\"dialog\",\"gridcell\",\"link\",\"log\",\"marquee\",\"menuitem\",\"menuitemcheckbox\",\"menuitemradio\",\"option\",\"progressbar\",\"radio\",\"scrollbar\",\"searchbox\",\"slider\",\"spinbutton\",\"status\",\"switch\",\"tab\",\"tabpanel\",\"textbox\",\"timer\",\"tooltip\",\"tree\",\"treeitem\"]};var l={};commons.color=l;var h=commons.dom={},n={};function i(e,t){return i.fromDefinition(e,t)}commons.forms=n,commons.matches=i;var m=commons.table={},v=commons.text={EdgeFormDefaults:{}};commons.utils=axe.utils;u.arialabelText=function(e){if(e instanceof axe.AbstractVirtualNode==!1){if(1!==e.nodeType)return\"\";e=axe.utils.getNodeFromTree(e)}return e.attr(\"aria-label\")||\"\"},u.arialabelledbyText=function(n,e){var a=1<arguments.length&&void 0!==e?e:{};return 1!==(n=n.actualNode||n).nodeType||a.inLabelledByContext||a.inControlContext?\"\":h.idrefs(n,\"aria-labelledby\").filter(function(e){return e}).reduce(function(e,t){var r=v.accessibleText(t,Y({inLabelledByContext:!0,startNode:a.startNode||n},a));return e?\"\".concat(e,\" \").concat(r):r},\"\")},u.requiredAttr=function(e){var t=u.lookupTable.role[e];return t&&t.attributes&&t.attributes.required||[]},u.allowedAttr=function(e){var t=u.lookupTable.role[e],r=t&&t.attributes&&t.attributes.allowed||[],n=t&&t.attributes&&t.attributes.required||[];return r.concat(u.lookupTable.globalAttributes).concat(n)},u.validateAttr=function(e){return!!u.lookupTable.attributes[e]};var s=[\"doc-backlink\",\"doc-biblioentry\",\"doc-biblioref\",\"doc-cover\",\"doc-endnote\",\"doc-glossref\",\"doc-noteref\"];u.getElementUnallowedRoles=function(r,e){var n=!(1<arguments.length&&void 0!==e)||e,a=r.nodeName.toUpperCase();if(!axe.utils.isHtmlElement(r))return[];var t=function(e){var t=[];if(!e)return t;if(e.hasAttribute(\"role\")){var r=axe.utils.tokenList(e.getAttribute(\"role\").toLowerCase());t=t.concat(r)}if(e.hasAttributeNS(\"http://www.idpf.org/2007/ops\",\"type\")){var n=axe.utils.tokenList(e.getAttributeNS(\"http://www.idpf.org/2007/ops\",\"type\").toLowerCase()).map(function(e){return\"doc-\".concat(e)});t=t.concat(n)}return t=t.filter(function(e){return axe.commons.aria.isValidRole(e)})}(r),o=axe.commons.aria.implicitRole(r);return t.filter(function(e){if(n&&e===o)return!1;if(n&&s.includes(e)){var t=axe.commons.aria.getRoleType(e);if(o!==t)return!0}return!(n||\"row\"===e&&\"TR\"===a&&axe.utils.matchesSelector(r,'table[role=\"grid\"] > tr'))||!u.isAriaRoleAllowedOnElement(r,e)})},u.getOwnedVirtual=function(e){var t=e.actualNode,r=e.children;if(!t||!r)throw new Error(\"getOwnedVirtual requires a virtual node\");return h.idrefs(t,\"aria-owns\").reduce(function(e,t){if(t){var r=axe.utils.getNodeFromTree(t);e.push(r)}return e},r)},u.getRole=function(e,t){var r=1<arguments.length&&void 0!==t?t:{},n=r.noImplicit,a=r.fallback,o=r.abstracts,i=r.dpub;if(1!==(e=e.actualNode||e).nodeType)return null;var s=(e.getAttribute(\"role\")||\"\").trim().toLowerCase(),l=(a?axe.utils.tokenList(s):[s]).filter(function(e){return!(!i&&\"doc-\"===e.substr(0,4))&&u.isValidRole(e,{allowAbstract:o})})[0];return l||n?l||null:u.implicitRole(e)};var a,o=/^idrefs?$/;function c(e){return e.getPropertyValue(\"font-family\").split(/[,;]/g).map(function(e){return e.trim().toLowerCase()})}function d(e,t){var r=e.getClientRects()[0],n=h.shadowElementsFromPoint(r.left,r.top);if(n)for(var a=0;a<n.length;a++)if(n[a]!==e&&n[a]===t)return 1}u.isAccessibleRef=function(e){e=e.actualNode||e;var t=h.getRootNode(e);t=t.documentElement||t;var r=e.id;axe._cache.get(\"idRefs\")||(axe._cache.set(\"idRefs\",{}),function e(t,r){if(t.hasAttribute){var n=axe._cache.get(\"idRefs\");\"LABEL\"===t.nodeName.toUpperCase()&&t.hasAttribute(\"for\")&&(n[t.getAttribute(\"for\")]=!0);for(var a=0;a<r.length;++a){var o=r[a];if(t.hasAttribute(o))for(var i=t.getAttribute(o),s=axe.utils.tokenList(i),l=0;l<s.length;++l)n[s[l]]=!0}}for(var u=0;u<t.children.length;u++)e(t.children[u],r)}(t,Object.keys(u.lookupTable.attributes).filter(function(e){var t=u.lookupTable.attributes[e].type;return o.test(t)})));return!0===axe._cache.get(\"idRefs\")[r]},u.isAriaRoleAllowedOnElement=function(e,t){var r=e.nodeName.toUpperCase(),n=axe.commons.aria.lookupTable;if(i(e,n.elementsAllowedNoRole))return!1;if(i(e,n.elementsAllowedAnyRole))return!0;var a=n.role[t];if(!a||!a.allowedElements)return!1;var o=i(e,a.allowedElements);return Object.keys(n.evaluateRoleForElement).includes(r)?n.evaluateRoleForElement[r]({node:e,role:t,out:o}):o},u.isUnsupportedRole=function(e){var t=u.lookupTable.role[e];return!!t&&t.unsupported},u.labelVirtual=function(e){var t,r=e.actualNode;return r.getAttribute(\"aria-labelledby\")&&(t=h.idrefs(r,\"aria-labelledby\").map(function(e){var t=axe.utils.getNodeFromTree(e);return t?v.visibleVirtual(t,!0):\"\"}).join(\" \").trim())||(t=(t=r.getAttribute(\"aria-label\"))&&v.sanitize(t).trim())?t:null},u.label=function(e){return e=axe.utils.getNodeFromTree(e),u.labelVirtual(e)},u.namedFromContents=function(e,t){var r=(1<arguments.length&&void 0!==t?t:{}).strict;if(1!==(e=e.actualNode||e).nodeType)return!1;var n=u.getRole(e),a=u.lookupTable.role[n];return!!(a&&a.nameFrom.includes(\"contents\")||\"TABLE\"===e.nodeName.toUpperCase())||!r&&(!a||[\"presentation\",\"none\"].includes(n))},u.isValidRole=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},r=t.allowAbstract,n=t.flagUnsupported,a=void 0!==n&&n,o=u.lookupTable.role[e],i=!!o&&o.unsupported;return!(!o||a&&i)&&(!!r||\"abstract\"!==o.type)},u.getRolesWithNameFromContents=function(){return Object.keys(u.lookupTable.role).filter(function(e){return u.lookupTable.role[e].nameFrom&&-1!==u.lookupTable.role[e].nameFrom.indexOf(\"contents\")})},u.getRolesByType=function(t){return Object.keys(u.lookupTable.role).filter(function(e){return u.lookupTable.role[e].type===t})},u.getRoleType=function(e){var t=u.lookupTable.role[e];return t&&t.type||null},u.requiredOwned=function(e){\"use strict\";var t=null,r=u.lookupTable.role[e];return r&&(t=axe.utils.clone(r.owned)),t},u.requiredContext=function(e){\"use strict\";var t=null,r=u.lookupTable.role[e];return r&&(t=axe.utils.clone(r.context)),t},u.implicitNodes=function(e){\"use strict\";var t=null,r=u.lookupTable.role[e];return r&&r.implicit&&(t=axe.utils.clone(r.implicit)),t},u.implicitRole=function(r){\"use strict\";var e=Object.keys(u.lookupTable.role).map(function(e){var t=u.lookupTable.role[e];return{name:e,implicit:t&&t.implicit}}).reduce(function(e,t){return t.implicit&&t.implicit.some(function(e){return axe.utils.matchesSelector(r,e)})&&e.push(t.name),e},[]);if(!e.length)return null;for(var n,t=axe.utils.getNodeAttributes(r),a=[],o=0,i=t.length;o<i;o++){var s=t[o];s.name.match(/^aria-/)&&a.push(s.name)}return n=a,e.map(function(e){return{score:(t=e,u.allowedAttr(t).reduce(function(e,t){return e+(-1<n.indexOf(t)?1:0)},0)),name:e};var t}).sort(function(e,t){return t.score-e.score}).map(function(e){return e.name}).shift()},u.validateAttrValue=function(e,t){\"use strict\";var r,n,a=e.getAttribute(t),o=u.lookupTable.attributes[t],i=h.getRootNode(e);if(!o)return!0;if(o.allowEmpty&&(!a||\"\"===a.trim()))return!0;switch(o.type){case\"boolean\":case\"nmtoken\":return\"string\"==typeof a&&o.values.includes(a.toLowerCase());case\"nmtokens\":return(n=axe.utils.tokenList(a)).reduce(function(e,t){return e&&o.values.includes(t)},0!==n.length);case\"idref\":return!(!a||!i.getElementById(a));case\"idrefs\":return(n=axe.utils.tokenList(a)).some(function(e){return i.getElementById(e)});case\"string\":return\"\"!==a.trim();case\"decimal\":return!(!(r=a.match(/^[-+]?([0-9]*)\\.?([0-9]*)$/))||!r[1]&&!r[2]);case\"int\":return/^[-+]?[0-9]+$/.test(a)}},l.centerPointOfRect=function(e){if(!(e.left>window.innerWidth)&&!(e.top>window.innerHeight))return{x:Math.min(Math.ceil(e.left+e.width/2),window.innerWidth-1),y:Math.min(Math.ceil(e.top+e.height/2),window.innerHeight-1)}},l.Color=function(e,t,r,n){this.red=e,this.green=t,this.blue=r,this.alpha=n,this.toHexString=function(){var e=Math.round(this.red).toString(16),t=Math.round(this.green).toString(16),r=Math.round(this.blue).toString(16);return\"#\"+(15.5<this.red?e:\"0\"+e)+(15.5<this.green?t:\"0\"+t)+(15.5<this.blue?r:\"0\"+r)};var a=/^rgb\\((\\d+), (\\d+), (\\d+)\\)$/,o=/^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/;this.parseRgbString=function(e){if(\"transparent\"===e)return this.red=0,this.green=0,this.blue=0,void(this.alpha=0);var t=e.match(a);return t?(this.red=parseInt(t[1],10),this.green=parseInt(t[2],10),this.blue=parseInt(t[3],10),void(this.alpha=1)):(t=e.match(o))?(this.red=parseInt(t[1],10),this.green=parseInt(t[2],10),this.blue=parseInt(t[3],10),void(this.alpha=Math.round(100*parseFloat(t[4]))/100)):void 0},this.getRelativeLuminance=function(){var e=this.red/255,t=this.green/255,r=this.blue/255;return.2126*(e<=.03928?e/12.92:Math.pow((.055+e)/1.055,2.4))+.7152*(t<=.03928?t/12.92:Math.pow((.055+t)/1.055,2.4))+.0722*(r<=.03928?r/12.92:Math.pow((.055+r)/1.055,2.4))}},l.flattenColors=function(e,t){var r=e.alpha,n=(1-r)*t.red+r*e.red,a=(1-r)*t.green+r*e.green,o=(1-r)*t.blue+r*e.blue,i=e.alpha+t.alpha*(1-e.alpha);return new l.Color(n,a,o,i)},l.getContrast=function(e,t){if(!t||!e)return null;t.alpha<1&&(t=l.flattenColors(t,e));var r=e.getRelativeLuminance(),n=t.getRelativeLuminance();return(Math.max(n,r)+.05)/(Math.min(n,r)+.05)},l.hasValidContrastRatio=function(e,t,r,n){var a=l.getContrast(e,t),o=n&&Math.ceil(72*r)/96<14||!n&&Math.ceil(72*r)/96<18?4.5:3;return{isValid:o<a,contrastRatio:a,expectedContrastRatio:o}},l.elementHasImage=function(e,t){var r=e.nodeName.toUpperCase();if([\"IMG\",\"CANVAS\",\"OBJECT\",\"IFRAME\",\"VIDEO\",\"SVG\"].includes(r))return axe.commons.color.incompleteData.set(\"bgColor\",\"imgNode\"),!0;var n=(t=t||window.getComputedStyle(e)).getPropertyValue(\"background-image\"),a=\"none\"!==n;if(a){var o=/gradient/.test(n);axe.commons.color.incompleteData.set(\"bgColor\",o?\"bgGradient\":\"bgImage\")}return a},l.elementIsDistinct=function(e,t){var n=window.getComputedStyle(e);if(\"none\"!==n.getPropertyValue(\"background-image\"))return!0;if([\"border-bottom\",\"border-top\",\"outline\"].reduce(function(e,t){var r=new l.Color;return r.parseRgbString(n.getPropertyValue(t+\"-color\")),e||\"none\"!==n.getPropertyValue(t+\"-style\")&&0<parseFloat(n.getPropertyValue(t+\"-width\"))&&0!==r.alpha},!1))return!0;var r=window.getComputedStyle(t);if(c(n)[0]!==c(r)[0])return!0;var a=[\"text-decoration-line\",\"text-decoration-style\",\"font-weight\",\"font-style\",\"font-size\"].reduce(function(e,t){return e||n.getPropertyValue(t)!==r.getPropertyValue(t)},!1),o=n.getPropertyValue(\"text-decoration\");return o.split(\" \").length<3&&(a=a||o!==r.getPropertyValue(\"text-decoration\")),a},l.getBackgroundColor=function(n,e){var a=1<arguments.length&&void 0!==e?e:[],o=[],t=l.getBackgroundStack(n);return(t||[]).some(function(e){var t=window.getComputedStyle(e),r=l.getOwnBackgroundColor(t);return function(e,t,r){var n=e!==t&&!h.visuallyContains(e,t)&&0!==r.alpha;n&&axe.commons.color.incompleteData.set(\"bgColor\",\"elmPartiallyObscured\");return n}(n,e,r)||l.elementHasImage(e,t)?(o=null,a.push(e),!0):0!==r.alpha&&(a.push(e),o.push(r),1===r.alpha)}),null===o||null===t?null:(o.push(new l.Color(255,255,255,1)),o.reduce(l.flattenColors))},l.getBackgroundStack=function(e){var t=l.filteredRectStack(e);if(null===t)return null;var r=(t=function(e){var t=e.indexOf(document.body),r=e;(1<t||-1===t)&&!l.elementHasImage(document.documentElement)&&0===l.getOwnBackgroundColor(window.getComputedStyle(document.documentElement)).alpha&&(1<t&&r.splice(t,1),r.splice(e.indexOf(document.documentElement),1),r.push(document.body));return r}(t=h.reduceToElementsBelowFloating(t,e))).indexOf(e);return function(e,t,r){if(0<e)for(var n=e-1;0<=n;n--){var a=t[n];if(d(r,a))return 1;t.splice(n,1)}return}(r,t,e)?(axe.commons.color.incompleteData.set(\"bgColor\",\"bgOverlap\"),null):-1!==r?t:null},l.filteredRectStack=function(a){var o=l.getRectStack(a);if(o&&1===o.length)return o[0];if(o&&1<o.length){var i,s=o.shift();return o.forEach(function(e,t){if(0!==t){var r=o[t-1],n=o[t];i=r.every(function(e,t){return e===n[t]})||s.includes(a)}}),i?o[0]:(axe.commons.color.incompleteData.set(\"bgColor\",\"elmPartiallyObscuring\"),null)}return axe.commons.color.incompleteData.set(\"bgColor\",\"outsideViewport\"),null},l.getRectStack=function(e){var t=axe.commons.dom.getElementStack(e),r=axe.commons.dom.getTextElementStack(e);return!r||r.length<=1?[t]:r.some(function(e){return void 0===e})?null:(r.splice(0,0,t),r)},h.isOpaque=function(e){var t=window.getComputedStyle(e);return l.elementHasImage(e,t)||1===l.getOwnBackgroundColor(t).alpha},l.getForegroundColor=function(e,t,r){var n=window.getComputedStyle(e),a=new l.Color;a.parseRgbString(n.getPropertyValue(\"color\"));var o=function e(t){if(!t)return 1;var r=axe.utils.getNodeFromTree(t);if(r&&void 0!==r._opacity&&null!==r._opacity)return r._opacity;var n=window.getComputedStyle(t).getPropertyValue(\"opacity\")*e(t.parentElement);return r&&(r._opacity=n),n}(e);if(a.alpha=a.alpha*o,1===a.alpha)return a;if(null!==(r=r||l.getBackgroundColor(e,[],t)))return l.flattenColors(a,r);var i=axe.commons.color.incompleteData.get(\"bgColor\");return axe.commons.color.incompleteData.set(\"fgColor\",i),null},l.getOwnBackgroundColor=function(e){var t=new l.Color;if(t.parseRgbString(e.getPropertyValue(\"background-color\")),0!==t.alpha){var r=e.getPropertyValue(\"opacity\");t.alpha=t.alpha*r}return t},l.incompleteData=(a={},{set:function(e,t){if(\"string\"!=typeof e)throw new Error(\"Incomplete data: key must be a string\");return t&&(a[e]=t),a[e]},get:function(e){return a[e]},clear:function(){a={}}}),h.reduceToElementsBelowFloating=function(e,t){var r,n,a,o=[\"fixed\",\"sticky\"],i=[],s=!1;for(r=0;r<e.length;++r)(n=e[r])===t&&(s=!0),a=window.getComputedStyle(n),s||-1===o.indexOf(a.position)?i.push(n):i=[];return i},h.findElmsInContext=function(e){var t,r=e.context,n=e.value,a=e.attr,o=e.elm,i=void 0===o?\"\":o,s=axe.utils.escapeSelector(n);return t=9===r.nodeType||11===r.nodeType?r:h.getRootNode(r),Array.from(t.querySelectorAll(i+\"[\"+a+\"=\"+s+\"]\"))},h.findUp=function(e,t){return h.findUpVirtual(axe.utils.getNodeFromTree(e),t)},h.findUpVirtual=function(e,t){var r;if(r=e.actualNode,!e.shadowId&&\"function\"==typeof e.actualNode.closest){var n=e.actualNode.closest(t);return n?n:null}for(;(r=r.assignedSlot?r.assignedSlot:r.parentNode)&&11===r.nodeType&&(r=r.host),r&&!axe.utils.matchesSelector(r,t)&&r!==document.documentElement;);return r&&axe.utils.matchesSelector(r,t)?r:null},h.getComposedParent=function e(t){if(t.assignedSlot)return e(t.assignedSlot);if(t.parentNode){var r=t.parentNode;if(1===r.nodeType)return r;if(r.host)return r.host}return null},h.getElementByReference=function(e,t){var r=e.getAttribute(t);if(!r)return null;\"#\"===r.charAt(0)?r=decodeURIComponent(r.substring(1)):\"/#\"===r.substr(0,2)&&(r=decodeURIComponent(r.substring(2)));var n=document.getElementById(r);return n||((n=document.getElementsByName(r)).length?n[0]:null)},h.getElementCoordinates=function(e){\"use strict\";var t=h.getScrollOffset(document),r=t.left,n=t.top,a=e.getBoundingClientRect();return{top:a.top+n,right:a.right+r,bottom:a.bottom+n,left:a.left+r,width:a.right-a.left,height:a.bottom-a.top}};var p=200;function b(e){return\"static\"===e.getComputedStylePropertyValue(\"position\")?-1!==e.getComputedStylePropertyValue(\"display\").indexOf(\"inline\")?2:\"none\"!==e.getComputedStylePropertyValue(\"float\")?1:0:3}function f(e,t){for(var r=0;r<e._stackingOrder.length;r++){if(void 0===t._stackingOrder[r])return-1;if(t._stackingOrder[r]>e._stackingOrder[r])return 1;if(t._stackingOrder[r]<e._stackingOrder[r])return-1}var n=e.actualNode,a=t.actualNode;if(n.getRootNode&&n.getRootNode()!==a.getRootNode()){for(var o=[];n;)o.push({root:n.getRootNode(),node:n}),n=n.getRootNode().host;for(;a&&!o.find(function(e){return e.root===a.getRootNode()});)a=a.getRootNode().host;if((n=o.find(function(e){return e.root===a.getRootNode()}).node)===a)return e.actualNode.getRootNode()!==n.getRootNode()?-1:1}var i=window.Node,s=i.DOCUMENT_POSITION_FOLLOWING,l=i.DOCUMENT_POSITION_CONTAINS,u=i.DOCUMENT_POSITION_CONTAINED_BY,c=n.compareDocumentPosition(a),d=c&s?1:-1,p=c&l||c&u,m=b(e),f=b(t);return m===f||p?d:f-m}function g(e,t){var r=t._stackingOrder.slice(),n=e.getComputedStylePropertyValue(\"z-index\");return\"auto\"!==n&&(r[r.length-1]=parseInt(n)),function(e,t){var r=e.getComputedStylePropertyValue(\"position\"),n=e.getComputedStylePropertyValue(\"z-index\");if(\"fixed\"===r||\"sticky\"===r)return 1;if(\"auto\"!==n&&\"static\"!==r)return 1;if(\"1\"!==e.getComputedStylePropertyValue(\"opacity\"))return 1;if(\"none\"!==(e.getComputedStylePropertyValue(\"-webkit-transform\")||e.getComputedStylePropertyValue(\"-ms-transform\")||e.getComputedStylePropertyValue(\"transform\")||\"none\"))return 1;var a=e.getComputedStylePropertyValue(\"mix-blend-mode\");if(a&&\"normal\"!==a)return 1;var o=e.getComputedStylePropertyValue(\"filter\");if(o&&\"none\"!==o)return 1;var i=e.getComputedStylePropertyValue(\"perspective\");if(i&&\"none\"!==i)return 1;var s=e.getComputedStylePropertyValue(\"clip-path\");if(s&&\"none\"!==s)return 1;if(\"none\"!==(e.getComputedStylePropertyValue(\"-webkit-mask\")||e.getComputedStylePropertyValue(\"mask\")||\"none\"))return 1;if(\"none\"!==(e.getComputedStylePropertyValue(\"-webkit-mask-image\")||e.getComputedStylePropertyValue(\"mask-image\")||\"none\"))return 1;if(\"none\"!==(e.getComputedStylePropertyValue(\"-webkit-mask-border\")||e.getComputedStylePropertyValue(\"mask-border\")||\"none\"))return 1;if(\"isolate\"===e.getComputedStylePropertyValue(\"isolation\"))return 1;var l=e.getComputedStylePropertyValue(\"will-change\");if(\"transform\"===l||\"opacity\"===l)return 1;if(\"touch\"===e.getComputedStylePropertyValue(\"-webkit-overflow-scrolling\"))return 1;var u=e.getComputedStylePropertyValue(\"contain\");if([\"layout\",\"paint\",\"strict\",\"content\"].includes(u))return 1;if(\"auto\"!==n&&t){var c=t.getComputedStylePropertyValue(\"display\");if([\"flex\",\"inline-flex\",\"inline flex\",\"grid\",\"inline-grid\",\"inline grid\"].includes(c))return 1}}(e,t)&&r.push(0),r}function y(e,t){for(var r=null,n=[e];t;){if(t._scrollRegionParent){r=t._scrollRegionParent;break}if(axe.utils.getScroll(t.actualNode)){r=t;break}n.push(t),t=axe.utils.getNodeFromTree(t.actualNode.parentElement||t.actualNode.parentNode)}return n.forEach(function(e){return e._scrollRegionParent=r}),r}function w(u,c){c._grid=u,c.clientRects.forEach(function(e){for(var t=e.left,r=e.top,n=r/p|0,a=t/p|0,o=(r+e.height)/p|0,i=(t+e.width)/p|0,s=n;s<=o;s++){u.cells[s]=u.cells[s]||[];for(var l=a;l<=i;l++)u.cells[s][l]=u.cells[s][l]||[],u.cells[s][l].includes(c)||u.cells[s][l].push(c)}})}function x(e,t,r){var n=0<arguments.length&&void 0!==e?e:document.body,a=1<arguments.length&&void 0!==t?t:{container:null,cells:[]},o=2<arguments.length&&void 0!==r?r:null;if(!o){var i=axe.utils.getNodeFromTree(document.documentElement);if((i=i||new K(document.documentElement))._stackingOrder=[0],w(a,i),axe.utils.getScroll(i.actualNode)){var s={container:i,cells:[]};i._subGrid=s}}for(var l=document.createTreeWalker(n,window.NodeFilter.SHOW_ELEMENT,null,!1),u=o?l.nextNode():l.currentNode;u;){var c=axe.utils.getNodeFromTree(u);u.parentElement?o=axe.utils.getNodeFromTree(u.parentElement):u.parentNode&&axe.utils.getNodeFromTree(u.parentNode)&&(o=axe.utils.getNodeFromTree(u.parentNode)),(c=c||new K(u,o))._stackingOrder=g(c,o);var d=y(c,o),p=d?d._subGrid:a;if(axe.utils.getScroll(c.actualNode)){var m={container:c,cells:[]};c._subGrid=m}var f=c.boundingClientRect;0!==f.width&&0!==f.height&&h.isVisible(u)&&w(p,c),axe.utils.isShadowRoot(u)&&x(u.shadowRoot,p,c),u=l.nextNode()}}function D(e,t,r){var n=2<arguments.length&&void 0!==r&&r,a=t.left+t.width/2,o=t.top+t.height/2,i=o/p|0,s=a/p|0,l=e.cells[i][s].filter(function(e){return e.clientRects.find(function(e){var t=e.left,r=e.top;return a<=t+e.width&&t<=a&&o<=r+e.height&&r<=o})}),u=e.container;return u&&(l=D(u._grid,u.boundingClientRect,!0).concat(l)),n||(l=l.sort(f).map(function(e){return e.actualNode}).concat(document.documentElement).filter(function(e,t,r){return r.indexOf(e)===t})),l}h.getElementStack=function(e){axe._cache.get(\"gridCreated\")||(x(),axe._cache.set(\"gridCreated\",!0));var t=axe.utils.getNodeFromTree(e),r=t._grid;return r?D(r,t.boundingClientRect):[]},h.getTextElementStack=function(e){axe._cache.get(\"gridCreated\")||(x(),axe._cache.set(\"gridCreated\",!0));var t=axe.utils.getNodeFromTree(e)._grid;if(!t)return[];var o=[];return Array.from(e.childNodes).forEach(function(e){if(3===e.nodeType&&\"\"!==axe.commons.text.sanitize(e.textContent)){var t=document.createRange();t.selectNodeContents(e);for(var r=t.getClientRects(),n=0;n<r.length;n++){var a=r[n];1<=a.width&&1<=a.height&&o.push(a)}}}),o.map(function(e){return D(t,e)})},h.getRootNode=axe.utils.getRootNode,h.getScrollOffset=function(e){\"use strict\";if(!e.nodeType&&e.document&&(e=e.document),9!==e.nodeType)return{left:e.scrollLeft,top:e.scrollTop};var t=e.documentElement,r=e.body;return{left:t&&t.scrollLeft||r&&r.scrollLeft||0,top:t&&t.scrollTop||r&&r.scrollTop||0}},h.getTabbableElements=function(e){return axe.utils.querySelectorAll(e,\"*\").filter(function(e){var t=e.isFocusable,r=e.actualNode.getAttribute(\"tabindex\");return(r=r&&!isNaN(parseInt(r,10))?parseInt(r):null)?t&&0<=r:t})},h.getViewportSize=function(e){\"use strict\";var t,r=e.document,n=r.documentElement;return e.innerWidth?{width:e.innerWidth,height:e.innerHeight}:n?{width:n.clientWidth,height:n.clientHeight}:{width:(t=r.body).clientWidth,height:t.clientHeight}};var k=[\"HEAD\",\"TITLE\",\"TEMPLATE\",\"SCRIPT\",\"STYLE\",\"IFRAME\",\"OBJECT\",\"VIDEO\",\"AUDIO\",\"NOSCRIPT\"];function E(e){return e.disabled||\"AREA\"!==e.nodeName.toUpperCase()&&h.isHiddenWithCSS(e)}function A(e,t){if(9===e.nodeType)return!1;if(11===e.nodeType&&(e=e.host),[\"STYLE\",\"SCRIPT\"].includes(e.nodeName.toUpperCase()))return!1;var r=window.getComputedStyle(e,null);if(!r)throw new Error(\"Style does not exist for the given element.\");if(\"none\"===r.getPropertyValue(\"display\"))return!0;var n=[\"hidden\",\"collapse\"],a=r.getPropertyValue(\"visibility\");if(n.includes(a)&&!t)return!0;if(n.includes(a)&&t&&n.includes(t))return!0;var o=h.getComposedParent(e);return!(!o||n.includes(a))&&h.isHiddenWithCSS(o,a)}h.hasContentVirtual=function(e,t,r){return function(e){if(!k.includes(e.actualNode.nodeName.toUpperCase()))return e.children.some(function(e){var t=e.actualNode;return 3===t.nodeType&&t.nodeValue.trim()})}(e)||h.isVisualContent(e.actualNode)||!r&&!!u.labelVirtual(e)||!t&&e.children.some(function(e){return 1===e.actualNode.nodeType&&h.hasContentVirtual(e)})},h.hasContent=function(e,t,r){return e=axe.utils.getNodeFromTree(e),h.hasContentVirtual(e,t,r)},h.idrefs=function(e,t){\"use strict\";var r,n,a=h.getRootNode(e),o=[],i=e.getAttribute(t);if(i)for(r=0,n=(i=axe.utils.tokenList(i)).length;r<n;r++)o.push(a.getElementById(i[r]));return o},h.isFocusable=function(e){\"use strict\";if(E(e))return!1;if(h.isNativelyFocusable(e))return!0;var t=e.getAttribute(\"tabindex\");return!(!t||isNaN(parseInt(t,10)))},h.isNativelyFocusable=function(e){\"use strict\";if(!e||E(e))return!1;switch(e.nodeName.toUpperCase()){case\"A\":case\"AREA\":if(e.href)return!0;break;case\"INPUT\":return\"hidden\"!==e.type;case\"TEXTAREA\":case\"SELECT\":case\"SUMMARY\":case\"BUTTON\":return!0;case\"DETAILS\":return!e.querySelector(\"summary\")}return!1},h.insertedIntoFocusOrder=function(e){return-1<parseInt(e.getAttribute(\"tabindex\"),10)&&h.isFocusable(e)&&!h.isNativelyFocusable(e)},h.isHiddenWithCSS=function(e,t){var r=axe.utils.getNodeFromTree(e);return r?(void 0===r._isHiddenWithCSS&&(r._isHiddenWithCSS=A(e,t)),r._isHiddenWithCSS):A(e,t)},h.isHTML5=function(e){var t=e.doctype;return null!==t&&(\"html\"===t.name&&!t.publicId&&!t.systemId)};var j=[\"block\",\"list-item\",\"table\",\"flex\",\"grid\",\"inline-block\"];function C(e){var t=window.getComputedStyle(e).getPropertyValue(\"display\");return j.includes(t)||\"table-\"===t.substr(0,6)}h.isInTextBlock=function(r){if(C(r))return!1;var e=function(e){for(var t=h.getComposedParent(e);t&&!C(t);)t=h.getComposedParent(t);return axe.utils.getNodeFromTree(t)}(r),n=\"\",a=\"\",o=0;return function t(e,r){!1!==r(e.actualNode)&&e.children.forEach(function(e){return t(e,r)})}(e,function(e){if(2===o)return!1;if(3===e.nodeType&&(n+=e.nodeValue),1===e.nodeType){var t=(e.nodeName||\"\").toUpperCase();if([\"BR\",\"HR\"].includes(t))0===o?a=n=\"\":o=2;else{if(\"none\"===e.style.display||\"hidden\"===e.style.overflow||![\"\",null,\"none\"].includes(e.style.float)||![\"\",null,\"relative\"].includes(e.style.position))return!1;if(\"A\"===t&&e.href||\"link\"===(e.getAttribute(\"role\")||\"\").toLowerCase())return e===r&&(o=1),a+=e.textContent,!1}}}),n=axe.commons.text.sanitize(n),a=axe.commons.text.sanitize(a),n.length>a.length},h.isModalOpen=function(e){var t=(e=e||{}).modalPercent||.75;if(axe._cache.get(\"isModalOpen\"))return axe._cache.get(\"isModalOpen\");if(axe.utils.querySelectorAllFilter(axe._tree[0],\"dialog, [role=dialog], [aria-modal=true]\",function(e){return h.isVisible(e.actualNode)}).length)return axe._cache.set(\"isModalOpen\",!0),!0;function r(e){var t=l[e].find(function(e){var t=window.getComputedStyle(e);return parseInt(t.width,10)>=a&&parseInt(t.height,10)>=o&&\"none\"!==t.getPropertyValue(\"pointer-events\")&&(\"absolute\"===t.position||\"fixed\"===t.position)});if(t&&l.every(function(e){return e.includes(t)}))return axe._cache.set(\"isModalOpen\",!0),{v:!0}}for(var n=h.getViewportSize(window),a=n.width*t,o=n.height*t,i=(n.width-a)/2,s=(n.height-o)/2,l=[{x:i,y:s},{x:n.width-i,y:s},{x:n.width/2,y:n.height/2},{x:i,y:n.height-s},{x:n.width-i,y:n.height-s}].map(function(e){return Array.from(document.elementsFromPoint(e.x,e.y))}),u=0;u<l.length;u++){var c=r(u);if(\"object\"===W(c))return c.v}axe._cache.set(\"isModalOpen\",void 0)},h.isNode=function(e){\"use strict\";return e instanceof Node},h.isOffscreen=function(e){var t,r=document.documentElement,n=window.getComputedStyle(e),a=window.getComputedStyle(document.body||r).getPropertyValue(\"direction\"),o=h.getElementCoordinates(e);if(o.bottom<0&&(function(e,t){for(e=h.getComposedParent(e);e&&\"html\"!==e.nodeName.toLowerCase();){if(e.scrollTop&&0<=(t+=e.scrollTop))return;e=h.getComposedParent(e)}return 1}(e,o.bottom)||\"absolute\"===n.position))return!0;if(0===o.left&&0===o.right)return!1;if(\"ltr\"===a){if(o.right<=0)return!0}else if(t=Math.max(r.scrollWidth,h.getViewportSize(window).width),o.left>=t)return!0;return!1};var F=/^\\/?#[^/!]/;h.isSkipLink=function(e){return!!F.test(e.getAttribute(\"href\"))&&(void 0!==axe._cache.get(\"firstPageLink\")?t=axe._cache.get(\"firstPageLink\"):(t=axe.utils.querySelectorAll(axe._tree,'a:not([href^=\"#\"]):not([href^=\"/#\"]):not([href^=\"javascript\"])')[0],axe._cache.set(\"firstPageLink\",t||null)),!t||e.compareDocumentPosition(t.actualNode)===e.DOCUMENT_POSITION_FOLLOWING);var t};var T=/rect\\s*\\(([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px\\s*\\)/,N=/(\\w+)\\((\\d+)/;h.isVisible=function(e,t,r){\"use strict\";var n=axe.utils.getNodeFromTree(e),a=\"_isVisible\"+(t?\"ScreenReader\":\"\");if(9===e.nodeType)return!0;if(11===e.nodeType&&(e=e.host),n&&void 0!==n[a])return n[a];var o=window.getComputedStyle(e,null);if(null===o)return!1;var i=e.nodeName.toUpperCase();if(\"AREA\"!==i&&\"none\"===o.getPropertyValue(\"display\")||[\"STYLE\",\"SCRIPT\",\"NOSCRIPT\",\"TEMPLATE\"].includes(i)||!t&&function(e){\"use strict\";var t=e.getPropertyValue(\"clip\").match(T),r=e.getPropertyValue(\"clip-path\").match(N);if(t&&5===t.length)return t[3]-t[1]<=0&&t[2]-t[4]<=0;if(r){var n=r[1],a=parseInt(r[2],10);switch(n){case\"inset\":return 50<=a;case\"circle\":return 0===a}}}(o)||!r&&(\"hidden\"===o.getPropertyValue(\"visibility\")||!t&&h.isOffscreen(e))||t&&\"true\"===e.getAttribute(\"aria-hidden\"))return!1;if(\"AREA\"===i)return function(e,r,n){var t=h.findUp(e,\"map\");if(!t)return!1;var a=t.getAttribute(\"name\");if(!a)return!1;var o=h.getRootNode(e);if(!o||9!==o.nodeType)return!1;var i=axe.utils.querySelectorAll(axe._tree,'img[usemap=\"#'.concat(axe.utils.escapeSelector(a),'\"]'));return!(!i||!i.length)&&i.some(function(e){var t=e.actualNode;return h.isVisible(t,r,n)})}(e,t,r);var s=e.assignedSlot?e.assignedSlot:e.parentNode,l=!1;return s&&(l=h.isVisible(s,t,!0)),n&&(n[a]=l),l};var S=[\"checkbox\",\"img\",\"radio\",\"range\",\"slider\",\"spinbutton\",\"textbox\"];function z(e){for(var t=axe.utils.getNodeFromTree(e).parent;t;){if(axe.utils.getScroll(t.actualNode))return t.actualNode;t=t.parent}}h.isVisualContent=function(e){var t=e.getAttribute(\"role\");if(t)return-1!==S.indexOf(t);switch(e.nodeName.toUpperCase()){case\"IMG\":case\"IFRAME\":case\"OBJECT\":case\"VIDEO\":case\"AUDIO\":case\"CANVAS\":case\"SVG\":case\"MATH\":case\"BUTTON\":case\"SELECT\":case\"TEXTAREA\":case\"KEYGEN\":case\"PROGRESS\":case\"METER\":return!0;case\"INPUT\":return\"hidden\"!==e.type;default:return!1}},h.shadowElementsFromPoint=function(n,a){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:document,o=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0;if(999<o)throw new Error(\"Infinite loop detected\");return Array.from(t.elementsFromPoint(n,a)||[]).filter(function(e){return h.getRootNode(e)===t}).reduce(function(e,t){if(axe.utils.isShadowRoot(t)){var r=h.shadowElementsFromPoint(n,a,t.shadowRoot,o+1);(e=e.concat(r)).length&&axe.commons.dom.visuallyContains(e[0],t)&&e.push(t)}else e.push(t);return e},[])},h.urlPropsFromAttribute=function(e,t){if(e.hasAttribute(t)){var r=e.nodeName.toUpperCase(),n=e;[\"A\",\"AREA\"].includes(r)&&!e.ownerSVGElement||((n=document.createElement(\"a\")).href=e.getAttribute(t));var a,o,i,s=[\"https:\",\"ftps:\"].includes(n.protocol)?n.protocol.replace(/s:$/,\":\"):n.protocol,l=/^\\//.test(n.pathname)?n.pathname:\"/\".concat(n.pathname),u=(o=(a=l).split(\"/\").pop())&&-1!==o.indexOf(\".\")?{pathname:a.replace(o,\"\"),filename:/index./.test(o)?\"\":o}:{pathname:a,filename:\"\"},c=u.pathname,d=u.filename;return{protocol:s,hostname:n.hostname,port:(i=n.port,[\"443\",\"80\"].includes(i)?\"\":i),pathname:/\\/$/.test(c)?c:\"\".concat(c,\"/\"),search:function(e){var t={};if(!e||!e.length)return t;var r=e.substring(1).split(\"&\");if(!r||!r.length)return t;for(var n=0;n<r.length;n++){var a=r[n].split(\"=\"),o=X(a,2),i=o[0],s=o[1],l=void 0===s?\"\":s;t[decodeURIComponent(i)]=decodeURIComponent(l)}return t}(n.search),hash:function(e){if(!e)return\"\";var t=e.match(/#!?\\/?/g);return t&&\"#\"!==X(t,1)[0]?e:\"\"}(n.hash),filename:d}}},h.visuallyContains=function(e,t){var r,n,a,o,i,s,l,u,c,d,p,m,f,h,b=z(t);do{var g=z(e);if(g===b||g===t)return r=t,h=f=m=p=d=s=i=o=a=void 0,n=e.getBoundingClientRect(),a=n.top+.01,o=n.bottom-.01,i=n.left+.01,s=n.right-.01,l=r.getBoundingClientRect(),u=l.top,c=l.left,d=u-r.scrollTop,p=u-r.scrollTop+r.scrollHeight,m=c-r.scrollLeft,f=c-r.scrollLeft+r.scrollWidth,\"inline\"===(h=window.getComputedStyle(r)).getPropertyValue(\"display\")||!(i<m&&i<l.left||a<d&&a<l.top||f<s&&s>l.right||p<o&&o>l.bottom)&&(!(s>l.right||o>l.bottom)||\"scroll\"===h.overflow||\"auto\"===h.overflow||\"hidden\"===h.overflow||r instanceof HTMLBodyElement||r instanceof HTMLHtmlElement);e=g}while(e);return!1},h.visuallyOverlaps=function(e,t){var r=t.getBoundingClientRect(),n=r.top,a=r.left,o=n-t.scrollTop,i=n-t.scrollTop+t.scrollHeight,s=a-t.scrollLeft,l=a-t.scrollLeft+t.scrollWidth;if(e.left>l&&e.left>r.right||e.top>i&&e.top>r.bottom||e.right<s&&e.right<r.left||e.bottom<o&&e.bottom<r.top)return!1;var u=window.getComputedStyle(t);return!(e.left>r.right||e.top>r.bottom)||(\"scroll\"===u.overflow||\"auto\"===u.overflow||t instanceof HTMLBodyElement||t instanceof HTMLHtmlElement)},n.isAriaCombobox=function(e){return\"combobox\"===axe.commons.aria.getRole(e,{noImplicit:!0})},n.isAriaListbox=function(e){return\"listbox\"===axe.commons.aria.getRole(e,{noImplicit:!0})};var q=[\"progressbar\",\"scrollbar\",\"slider\",\"spinbutton\"];n.isAriaRange=function(e){var t=axe.commons.aria.getRole(e,{noImplicit:!0});return q.includes(t)},n.isAriaTextbox=function(e){return\"textbox\"===axe.commons.aria.getRole(e,{noImplicit:!0})},n.isNativeSelect=function(e){return\"SELECT\"===e.nodeName.toUpperCase()};var O=[\"button\",\"checkbox\",\"color\",\"file\",\"hidden\",\"image\",\"password\",\"radio\",\"reset\",\"submit\"];n.isNativeTextbox=function(e){var t=e.nodeName.toUpperCase();return\"TEXTAREA\"===t||\"INPUT\"===t&&!O.includes(e.type)},i.attributes=function(t,e){return t instanceof axe.AbstractVirtualNode||(t=axe.utils.getNodeFromTree(t)),i.fromFunction(function(e){return t.attr(e)},e)},i.condition=function(e,t){return!!t(e)};var _=[\"nodeName\",\"attributes\",\"properties\",\"condition\"];function R(e,t,r){for(var n,a=\"row\"===e?\"_rowHeaders\":\"_colHeaders\",o=\"row\"===e?m.isRowHeader:m.isColumnHeader,i=\"row\"===e?t.y:0,s=\"row\"===e?0:t.x,l=[],u=t.y;i<=u&&!n;u--)for(var c=t.x;s<=c;c--){var d=r[u]?r[u][c]:void 0;if(d){var p=axe.utils.getNodeFromTree(d);if(p[a]){n=p[a];break}l.push(d)}}return n=(n||[]).concat(l.filter(o)),l.forEach(function(e){axe.utils.getNodeFromTree(e)[a]=n}),n}function P(e){var t=e.actualNode;return 3!==t.nodeType?\"\":t.textContent}i.fromDefinition=function(n,a){return n instanceof axe.AbstractVirtualNode||(n=axe.utils.getNodeFromTree(n)),Array.isArray(a)?a.some(function(e){return i(n,e)}):\"string\"==typeof a?axe.utils.matches(n,a):Object.keys(a).every(function(e){if(!_.includes(e))throw new Error('Unknown matcher type \"'.concat(e,'\"'));var t=i[e],r=a[e];return t(n,r)})},i.fromFunction=function(t,r){if(\"object\"!==W(r)||Array.isArray(r)||r instanceof RegExp)throw new Error(\"Expect matcher to be an object\");return Object.keys(r).every(function(e){return i.fromPrimative(t(e),r[e])})},i.fromPrimative=function(e,t){var r=W(t);return Array.isArray(t)&&void 0!==e?t.includes(e):\"function\"===r?!!t(e):t instanceof RegExp?t.test(e):t===e},i.nodeName=function(e,t){return e instanceof axe.AbstractVirtualNode||(e=axe.utils.getNodeFromTree(e)),i.fromPrimative(e.props.nodeName,t)},i.properties=function(t,e){return t instanceof axe.AbstractVirtualNode||(t=axe.utils.getNodeFromTree(t)),i.fromFunction(function(e){return t.props[e]},e)},m.getAllCells=function(e){var t,r,n,a,o=[];for(t=0,n=e.rows.length;t<n;t++)for(r=0,a=e.rows[t].cells.length;r<a;r++)o.push(e.rows[t].cells[r]);return o},m.getCellPosition=axe.utils.memoize(function(e,t){var r,n;for(t=t||m.toGrid(h.findUp(e,\"table\")),r=0;r<t.length;r++)if(t[r]&&-1!==(n=t[r].indexOf(e)))return{x:n,y:r}}),m.getHeaders=function(e,t){if(e.getAttribute(\"headers\")){var r=commons.dom.idrefs(e,\"headers\");if(r.filter(function(e){return e}).length)return r}t=t||commons.table.toGrid(commons.dom.findUp(e,\"table\"));var n=commons.table.getCellPosition(e,t),a=R(\"row\",n,t),o=R(\"col\",n,t);return[].concat(a,o).reverse()},m.getScope=function(e){var t=e.getAttribute(\"scope\"),r=e.getAttribute(\"role\");if(e instanceof Element==!1||-1===[\"TD\",\"TH\"].indexOf(e.nodeName.toUpperCase()))throw new TypeError(\"Expected TD or TH element\");if(\"columnheader\"===r)return\"col\";if(\"rowheader\"===r)return\"row\";if(\"col\"===t||\"row\"===t)return t;if(\"TH\"!==e.nodeName.toUpperCase())return!1;var n=m.toGrid(h.findUp(e,\"table\")),a=m.getCellPosition(e,n);return n[a.y].reduce(function(e,t){return e&&\"TH\"===t.nodeName.toUpperCase()},!0)?\"col\":n.map(function(e){return e[a.x]}).reduce(function(e,t){return e&&t&&\"TH\"===t.nodeName.toUpperCase()},!0)?\"row\":\"auto\"},m.isColumnHeader=function(e){return-1!==[\"col\",\"auto\"].indexOf(m.getScope(e))},m.isDataCell=function(e){if(!e.children.length&&!e.textContent.trim())return!1;var t=e.getAttribute(\"role\");return axe.commons.aria.isValidRole(t)?[\"cell\",\"gridcell\"].includes(t):\"TD\"===e.nodeName.toUpperCase()},m.isDataTable=function(e){var t=(e.getAttribute(\"role\")||\"\").toLowerCase();if((\"presentation\"===t||\"none\"===t)&&!h.isFocusable(e))return!1;if(\"true\"===e.getAttribute(\"contenteditable\")||h.findUp(e,'[contenteditable=\"true\"]'))return!0;if(\"grid\"===t||\"treegrid\"===t||\"table\"===t)return!0;if(\"landmark\"===commons.aria.getRoleType(t))return!0;if(\"0\"===e.getAttribute(\"datatable\"))return!1;if(e.getAttribute(\"summary\"))return!0;if(e.tHead||e.tFoot||e.caption)return!0;for(var r=0,n=e.children.length;r<n;r++)if(\"COLGROUP\"===e.children[r].nodeName.toUpperCase())return!0;for(var a,o,i=0,s=e.rows.length,l=!1,u=0;u<s;u++)for(var c=0,d=(a=e.rows[u]).cells.length;c<d;c++){if(\"TH\"===(o=a.cells[c]).nodeName.toUpperCase())return!0;if(l||o.offsetWidth===o.clientWidth&&o.offsetHeight===o.clientHeight||(l=!0),o.getAttribute(\"scope\")||o.getAttribute(\"headers\")||o.getAttribute(\"abbr\"))return!0;if([\"columnheader\",\"rowheader\"].includes((o.getAttribute(\"role\")||\"\").toLowerCase()))return!0;if(1===o.children.length&&\"ABBR\"===o.children[0].nodeName.toUpperCase())return!0;i++}if(e.getElementsByTagName(\"table\").length)return!1;if(s<2)return!1;var p,m,f=e.rows[Math.ceil(s/2)];if(1===f.cells.length&&1===f.cells[0].colSpan)return!1;if(5<=f.cells.length)return!0;if(l)return!0;for(u=0;u<s;u++){if(a=e.rows[u],p&&p!==window.getComputedStyle(a).getPropertyValue(\"background-color\"))return!0;if(p=window.getComputedStyle(a).getPropertyValue(\"background-color\"),m&&m!==window.getComputedStyle(a).getPropertyValue(\"background-image\"))return!0;m=window.getComputedStyle(a).getPropertyValue(\"background-image\")}return 20<=s||!(h.getElementCoordinates(e).width>.95*h.getViewportSize(window).width)&&(!(i<10)&&!e.querySelector(\"object, embed, iframe, applet\"))},m.isHeader=function(e){if(m.isColumnHeader(e)||m.isRowHeader(e))return!0;if(e.getAttribute(\"id\")){var t=axe.utils.escapeSelector(e.getAttribute(\"id\"));return!!document.querySelector('[headers~=\"'.concat(t,'\"]'))}return!1},m.isRowHeader=function(e){return[\"row\",\"auto\"].includes(m.getScope(e))},m.toGrid=axe.utils.memoize(function(e){for(var t=[],r=e.rows,n=0,a=r.length;n<a;n++){var o=r[n].cells;t[n]=t[n]||[];for(var i=0,s=0,l=o.length;s<l;s++)for(var u=0;u<o[s].colSpan;u++){for(var c=0;c<o[s].rowSpan;c++){for(t[n+c]=t[n+c]||[];t[n+c][i];)i++;t[n+c][i]=o[s]}i++}}return t}),m.toArray=m.toGrid,m.traverse=function(e,t,r,n){if(Array.isArray(t)&&(n=r,r=t,t={x:0,y:0}),\"string\"==typeof e)switch(e){case\"left\":e={x:-1,y:0};break;case\"up\":e={x:0,y:-1};break;case\"right\":e={x:1,y:0};break;case\"down\":e={x:0,y:1}}return function e(t,r,n,a){var o,i=n[r.y]?n[r.y][r.x]:void 0;return i?\"function\"==typeof a&&!0===(o=a(i,r,n))?[i]:((o=e(t,{x:r.x+t.x,y:r.y+t.y},n,a)).unshift(i),o):[]}(e,{x:t.x+e.x,y:t.y+e.y},r,n)},v.accessibleText=function(e,t){var r=axe.utils.getNodeFromTree(e);return v.accessibleTextVirtual(r,t)},v.accessibleTextVirtual=function(r,e){var n=1<arguments.length&&void 0!==e?e:{},t=r.actualNode;if(n=function(e,t){var r=e.actualNode;t.startNode||(t=Y({startNode:e},t));1===r.nodeType&&t.inLabelledByContext&&void 0===t.includeHidden&&(t=Y({includeHidden:!h.isVisible(r,!0)},t));return t}(r,n),function(e,t){var r=e.actualNode;if(1!==r.nodeType||t.includeHidden)return;return!h.isVisible(r,!0)}(r,n))return\"\";var a=[u.arialabelledbyText,u.arialabelText,v.nativeTextAlternative,v.formControlValue,v.subtreeText,P,v.titleText].reduce(function(e,t){return n.startNode===r&&(e=v.sanitize(e)),\"\"!==e?e:t(r,n)},\"\");return n.debug&&axe.log(a||\"{empty-value}\",t,n),a},v.accessibleTextVirtual.alreadyProcessed=function(e,t){return t.processed=t.processed||[],!!t.processed.includes(e)||(t.processed.push(e),!1)};var I=[\"textbox\",\"progressbar\",\"scrollbar\",\"slider\",\"spinbutton\",\"combobox\",\"listbox\"];v.formControlValueMethods={nativeTextboxValue:function(e){if(e=e.actualNode||e,axe.commons.forms.isNativeTextbox(e))return e.value||\"\";return\"\"},nativeSelectValue:function(e){return e=e.actualNode||e,axe.commons.forms.isNativeSelect(e)&&Array.from(e.options).filter(function(e){return e.selected}).map(function(e){return e.text}).join(\" \")||\"\"},ariaTextboxValue:function(e){var t=e.actualNode;if(!axe.commons.forms.isAriaTextbox(t))return\"\";return h.isHiddenWithCSS(t)?t.textContent:v.visibleVirtual(e,!0)},ariaListboxValue:function(e,t){var r=e.actualNode;if(!axe.commons.forms.isAriaListbox(r))return\"\";var n=u.getOwnedVirtual(e).filter(function(e){return\"option\"===u.getRole(e)&&\"true\"===e.actualNode.getAttribute(\"aria-selected\")});return 0!==n.length?axe.commons.text.accessibleTextVirtual(n[0],t):\"\"},ariaComboboxValue:function(e,t){var r,n=e.actualNode;return axe.commons.forms.isAriaCombobox(n)&&(r=u.getOwnedVirtual(e).filter(function(e){return\"listbox\"===u.getRole(e)})[0])?v.formControlValueMethods.ariaListboxValue(r,t):\"\"},ariaRangeValue:function(e){if(e=e.actualNode||e,!axe.commons.forms.isAriaRange(e)||!e.hasAttribute(\"aria-valuenow\"))return\"\";var t=+e.getAttribute(\"aria-valuenow\");return isNaN(t)?\"0\":String(t)}},v.formControlValue=function(r,e){var n=1<arguments.length&&void 0!==e?e:{},t=r.actualNode,a=v.unsupported.accessibleNameFromFieldValue||[],o=u.getRole(t);if(n.startNode===r||!I.includes(o)||a.includes(o))return\"\";var i=Object.keys(v.formControlValueMethods).map(function(e){return v.formControlValueMethods[e]}).reduce(function(e,t){return e||t(r,n)},\"\");return n.debug&&axe.log(i||\"{empty-value}\",t,n),i},v.isHumanInterpretable=function(e){if(!e.length)return 0;if([\"x\",\"i\"].includes(e))return 0;var t=v.removeUnicode(e,{emoji:!0,nonBmp:!0,punctuations:!0});return v.sanitize(t)?1:0},v.isIconLigature=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:.15,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:3,n=e.actualNode.nodeValue.trim();if(!v.sanitize(n)||v.hasUnicode(n,{emoji:!0,nonBmp:!0}))return!1;axe._cache.get(\"canvasContext\")||axe._cache.set(\"canvasContext\",document.createElement(\"canvas\").getContext(\"2d\"));var a=axe._cache.get(\"canvasContext\"),o=a.canvas;axe._cache.get(\"fonts\")||axe._cache.set(\"fonts\",{});var i=axe._cache.get(\"fonts\"),s=window.getComputedStyle(e.parent.actualNode).getPropertyValue(\"font-family\");i[s]||(i[s]={occurances:0,numLigatures:0});var l=i[s];if(l.occurances>=r){if(l.numLigatures/l.occurances==1)return!0;if(0===l.numLigatures)return!1}l.occurances++;var u=30,c=\"\".concat(u,\"px \").concat(s);a.font=c;var d=n.charAt(0),p=a.measureText(d).width;if(p<30){var m=30/p;p*=m,c=\"\".concat(u*=m,\"px \").concat(s)}o.width=p,o.height=u,a.font=c,a.textAlign=\"left\",a.textBaseline=\"top\",a.fillText(d,0,0);var f=new Uint32Array(a.getImageData(0,0,p,u).data.buffer);if(!f.some(function(e){return e}))return l.numLigatures++,!0;a.clearRect(0,0,p,u),a.fillText(n,0,0);var h=new Uint32Array(a.getImageData(0,0,p,u).data.buffer),b=f.reduce(function(e,t,r){return 0===t&&0===h[r]||0!==t&&0!==h[r]?e:++e},0),g=n.split(\"\").reduce(function(e,t){return e+a.measureText(t).width},0),y=a.measureText(n).width;return t<=b/f.length&&t<=1-y/g&&(l.numLigatures++,!0)};v.autocomplete={stateTerms:[\"on\",\"off\"],standaloneTerms:[\"name\",\"honorific-prefix\",\"given-name\",\"additional-name\",\"family-name\",\"honorific-suffix\",\"nickname\",\"username\",\"new-password\",\"current-password\",\"organization-title\",\"organization\",\"street-address\",\"address-line1\",\"address-line2\",\"address-line3\",\"address-level4\",\"address-level3\",\"address-level2\",\"address-level1\",\"country\",\"country-name\",\"postal-code\",\"cc-name\",\"cc-given-name\",\"cc-additional-name\",\"cc-family-name\",\"cc-number\",\"cc-exp\",\"cc-exp-month\",\"cc-exp-year\",\"cc-csc\",\"cc-type\",\"transaction-currency\",\"transaction-amount\",\"language\",\"bday\",\"bday-day\",\"bday-month\",\"bday-year\",\"sex\",\"url\",\"photo\"],qualifiers:[\"home\",\"work\",\"mobile\",\"fax\",\"pager\"],qualifiedTerms:[\"tel\",\"tel-country-code\",\"tel-national\",\"tel-area-code\",\"tel-local\",\"tel-local-prefix\",\"tel-local-suffix\",\"tel-extension\",\"email\",\"impp\"],locations:[\"billing\",\"shipping\"]},v.isValidAutocomplete=function(e,t){var r=1<arguments.length&&void 0!==t?t:{},n=r.looseTyped,a=void 0!==n&&n,o=r.stateTerms,i=void 0===o?[]:o,s=r.locations,l=void 0===s?[]:s,u=r.qualifiers,c=void 0===u?[]:u,d=r.standaloneTerms,p=void 0===d?[]:d,m=r.qualifiedTerms,f=void 0===m?[]:m;if(e=e.toLowerCase().trim(),(i=i.concat(v.autocomplete.stateTerms)).includes(e)||\"\"===e)return!0;c=c.concat(v.autocomplete.qualifiers),l=l.concat(v.autocomplete.locations),p=p.concat(v.autocomplete.standaloneTerms),f=f.concat(v.autocomplete.qualifiedTerms);var h=e.split(/\\s+/g);if(!a&&(8<h[0].length&&\"section-\"===h[0].substr(0,8)&&h.shift(),l.includes(h[0])&&h.shift(),c.includes(h[0])&&(h.shift(),p=[]),1!==h.length))return!1;var b=h[h.length-1];return p.includes(b)||f.includes(b)},v.labelText=function(e,t){var r=1<arguments.length&&void 0!==t?t:{},n=v.accessibleTextVirtual.alreadyProcessed;if(r.inControlContext||r.inLabelledByContext||n(e,r))return\"\";r.startNode||(r.startNode=e);var a,o,i=Y({inControlContext:!0},r),s=(a=e.actualNode).id?h.findElmsInContext({elm:\"label\",attr:\"for\",value:a.id,context:a}):[],l=h.findUpVirtual(e,\"label\");return l?(o=[].concat(Pe(s),[l])).sort(axe.utils.nodeSorter):o=s,o.map(function(e){return v.accessibleText(e,i)}).filter(function(e){return\"\"!==e}).join(\" \")},v.labelVirtual=function(e){var t,r;if(r=u.labelVirtual(e))return r;if(e.actualNode.id){var n=axe.utils.escapeSelector(e.actualNode.getAttribute(\"id\"));if(r=(t=axe.commons.dom.getRootNode(e.actualNode).querySelector('label[for=\"'+n+'\"]'))&&v.visible(t,!0))return r}return(r=(t=h.findUpVirtual(e,\"label\"))&&v.visible(t,!0))||null},v.label=function(e){return e=axe.utils.getNodeFromTree(e),v.labelVirtual(e)},v.nativeElementType=[{matches:[{nodeName:\"textarea\"},{nodeName:\"input\",properties:{type:[\"text\",\"password\",\"search\",\"tel\",\"email\",\"url\"]}}],namingMethods:\"labelText\"},{matches:{nodeName:\"input\",properties:{type:[\"button\",\"submit\",\"reset\"]}},namingMethods:[\"valueText\",\"titleText\",\"buttonDefaultText\"]},{matches:{nodeName:\"input\",properties:{type:\"image\"}},namingMethods:[\"altText\",\"valueText\",\"labelText\",\"titleText\",\"buttonDefaultText\"]},{matches:\"button\",namingMethods:\"subtreeText\"},{matches:\"fieldset\",namingMethods:\"fieldsetLegendText\"},{matches:\"OUTPUT\",namingMethods:\"subtreeText\"},{matches:[{nodeName:\"select\"},{nodeName:\"input\",properties:{type:/^(?!text|password|search|tel|email|url|button|submit|reset)/}}],namingMethods:\"labelText\"},{matches:\"summary\",namingMethods:\"subtreeText\"},{matches:\"figure\",namingMethods:[\"figureText\",\"titleText\"]},{matches:\"img\",namingMethods:\"altText\"},{matches:\"table\",namingMethods:[\"tableCaptionText\",\"tableSummaryText\"]},{matches:[\"hr\",\"br\"],namingMethods:[\"titleText\",\"singleSpace\"]}],v.nativeTextAlternative=function(r,e){var n=1<arguments.length&&void 0!==e?e:{},t=r.actualNode;if(1!==t.nodeType||[\"presentation\",\"none\"].includes(u.getRole(t)))return\"\";var a,o,i,s,l=(a=r,o=v.nativeElementType,i=v.nativeTextMethods,((s=o.find(function(e){var t=e.matches;return axe.commons.matches(a,t)}))?[].concat(s.namingMethods):[]).map(function(e){return i[e]})).reduce(function(e,t){return e||t(r,n)},\"\");return n.debug&&axe.log(l||\"{empty-value}\",t,n),l};var L={submit:\"Submit\",image:\"Submit\",reset:\"Reset\",button:\"\"};function B(e,t){return t.actualNode.getAttribute(e)||\"\"}function M(e,t,r){var n=t.actualNode,a=[e=e.toLowerCase(),n.nodeName.toLowerCase()].join(\",\"),o=n.querySelector(a);return o&&o.nodeName.toLowerCase()===e?v.accessibleText(o,r):\"\"}v.nativeTextMethods={valueText:function(e){return e.actualNode.value||\"\"},buttonDefaultText:function(e){var t=e.actualNode;return L[t.type]||\"\"},tableCaptionText:M.bind(null,\"caption\"),figureText:M.bind(null,\"figcaption\"),fieldsetLegendText:M.bind(null,\"legend\"),altText:B.bind(null,\"alt\"),tableSummaryText:B.bind(null,\"summary\"),titleText:function(e,t){return v.titleText(e,t)},subtreeText:function(e,t){return v.subtreeText(e,t)},labelText:function(e,t){return v.labelText(e,t)},singleSpace:function(){return\" \"}},v.sanitize=function(e){\"use strict\";return e.replace(/\\r\\n/g,\"\\n\").replace(/\\u00A0/g,\" \").replace(/[\\s]{2,}/g,\" \").trim()},v.subtreeText=function(e,t){var r=1<arguments.length&&void 0!==t?t:{},n=v.accessibleTextVirtual.alreadyProcessed;r.startNode=r.startNode||e;var a=r.strict;return n(e,r)||!u.namedFromContents(e,{strict:a})?\"\":u.getOwnedVirtual(e).reduce(function(e,t){return function(e,t,r){var n=t.actualNode.nodeName.toUpperCase(),a=v.accessibleTextVirtual(t,r);if(!a)return e;V.includes(n)||(\" \"!==a[0]&&(a+=\" \"),e&&\" \"!==e[e.length-1]&&(a=\" \"+a));return e+a}(e,t,r)},\"\")};var V=[\"A\",\"EM\",\"STRONG\",\"SMALL\",\"MARK\",\"ABBR\",\"DFN\",\"I\",\"B\",\"S\",\"U\",\"CODE\",\"VAR\",\"SAMP\",\"KBD\",\"SUP\",\"SUB\",\"Q\",\"CITE\",\"SPAN\",\"BDO\",\"BDI\",\"WBR\",\"INS\",\"DEL\",\"MAP\",\"AREA\",\"NOSCRIPT\",\"RUBY\",\"BUTTON\",\"LABEL\",\"OUTPUT\",\"DATALIST\",\"KEYGEN\",\"PROGRESS\",\"COMMAND\",\"CANVAS\",\"TIME\",\"METER\",\"#TEXT\"];var U=[\"button\",\"iframe\",\"a[href]\",{nodeName:\"input\",properties:{type:\"button\"}}];function H(){return/[\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u20A0-\\u20CF\\u20D0-\\u20FF\\u2100-\\u214F\\u2150-\\u218F\\u2190-\\u21FF\\u2200-\\u22FF\\u2300-\\u23FF\\u2400-\\u243F\\u2440-\\u245F\\u2460-\\u24FF\\u2500-\\u257F\\u2580-\\u259F\\u25A0-\\u25FF\\u2600-\\u26FF\\u2700-\\u27BF\\uE000-\\uF8FF]/g}function $(){return/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&\\xa3\\xa2\\xa5\\xa7\\u20ac()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~\\xb1]/g}function G(){return/[\\uDB80-\\uDBBF][\\uDC00-\\uDFFF]/g}return v.titleText=function(e){return 1!==(e=e.actualNode||e).nodeType||!e.hasAttribute(\"title\")||!axe.commons.matches(e,U)&&[\"none\",\"presentation\"].includes(u.getRole(e))?\"\":e.getAttribute(\"title\")},v.hasUnicode=function(e,t){var r=t.emoji,n=t.nonBmp,a=t.punctuations;return r?axe.imports.emojiRegexText().test(e):n?H().test(e)||G().test(e):!!a&&$().test(e)},v.removeUnicode=function(e,t){var r=t.emoji,n=t.nonBmp,a=t.punctuations;return r&&(e=e.replace(axe.imports.emojiRegexText(),\"\")),n&&(e=(e=e.replace(H(),\"\")).replace(G(),\"\")),a&&(e=e.replace($(),\"\")),e},v.unsupported={accessibleNameFromFieldValue:[\"combobox\",\"listbox\",\"progressbar\"]},v.visibleTextNodes=function(e){var t=axe.commons.dom.isVisible(e.actualNode),r=[];return e.children.forEach(function(e){3===e.actualNode.nodeType?t&&r.push(e):r=r.concat(v.visibleTextNodes(e))}),r},v.visibleVirtual=function(r,n,a){var e=r.children.map(function(e){if(3===e.actualNode.nodeType){var t=e.actualNode.nodeValue;if(t&&h.isVisible(r.actualNode,n))return t}else if(!a)return v.visibleVirtual(e,n)}).join(\"\");return v.sanitize(e)},v.visible=function(e,t,r){return e=axe.utils.getNodeFromTree(e),v.visibleVirtual(e,t,r)},commons}()})}(\"object\"==typeof window?window:this);";
const pageFunctions=require('../../lib/page-functions.js');








function runA11yChecks(){

return window.axe.run(document,{
elementRef:true,
runOnly:{
type:'tag',
values:[
'wcag2a',
'wcag2aa']},


resultTypes:['violations','inapplicable'],
rules:{
'tabindex':{enabled:true},
'accesskeys':{enabled:true},
'heading-order':{enabled:true},
'meta-viewport':{enabled:true},
'duplicate-id':{enabled:false},
'table-fake-caption':{enabled:false},
'td-has-header':{enabled:false},
'marquee':{enabled:false},
'area-alt':{enabled:false},
'aria-dpub-role-fallback':{enabled:false},
'html-xml-lang-mismatch':{enabled:false},
'blink':{enabled:false},
'server-side-image-map':{enabled:false},
'identical-links-same-purpose':{enabled:false},
'no-autoplay-audio':{enabled:false},
'svg-img-alt':{enabled:false},
'audio-caption':{enabled:false}}}).


then(axeResult=>{

const augmentAxeNodes=result=>{

result.nodes.forEach(node=>{

node.path=getNodePath(node.element);

node.snippet=getOuterHTMLSnippet(node.element);

node.nodeLabel=getNodeLabel(node.element);

node.element=node.any=node.all=node.none=undefined;
});


if(result.error instanceof Error){
result.error={
name:result.error.name,
message:result.error.message,
stack:result.error.stack,
errorNode:result.error.errorNode};

}
};


axeResult.violations.forEach(augmentAxeNodes);
axeResult.incomplete.forEach(augmentAxeNodes);


axeResult={
violations:axeResult.violations,
notApplicable:axeResult.inapplicable,
incomplete:axeResult.incomplete};

return axeResult;
});
}

class Accessibility extends Gatherer{




afterPass(passContext){
const driver=passContext.driver;
const expression=`(function () {
      ${pageFunctions.getOuterHTMLSnippetString};
      ${pageFunctions.getNodePathString};
      ${pageFunctions.getNodeLabelString};
      ${axeLibSource};
      return (${runA11yChecks.toString()}());
    })()`;

return driver.evaluateAsync(expression,{useIsolation:true}).then(returnedValue=>{
if(!returnedValue){
throw new Error('No axe-core results returned');
}
if(!Array.isArray(returnedValue.violations)){
throw new Error('Unable to parse axe results'+returnedValue);
}
return returnedValue;
});
}}


module.exports=Accessibility;

},{"../../lib/page-functions.js":87,"./gatherer.js":61}],"../gather/gatherers/anchor-elements":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');
const pageFunctions=require('../../lib/page-functions.js');













function collectAnchorElements(){

const resolveURLOrEmpty=url=>{
try{
return new URL(url,window.location.href).href;
}catch(_){
return'';
}
};



const anchorElements=getElementsInDocument('a');

return anchorElements.map(node=>{

const outerHTML=getOuterHTMLSnippet(node);

const nodePath=getNodePath(node);

const selector=getNodeSelector(node);

const nodeLabel=getNodeLabel(node);

if(node instanceof HTMLAnchorElement){
return{
href:node.href,
text:node.innerText,
rel:node.rel,
target:node.target,
devtoolsNodePath:nodePath,
selector,
nodeLabel,
outerHTML};

}

return{
href:resolveURLOrEmpty(node.href.baseVal),
text:node.textContent||'',
rel:'',
target:node.target.baseVal||'',
devtoolsNodePath:nodePath,
selector,
nodeLabel,
outerHTML};

});
}

class AnchorElements extends Gatherer{




async afterPass(passContext){
const driver=passContext.driver;
const expression=`(() => {
      ${pageFunctions.getOuterHTMLSnippetString};
      ${pageFunctions.getElementsInDocumentString};
      ${pageFunctions.getNodePathString};
      ${pageFunctions.getNodeSelectorString};
      ${pageFunctions.getNodeLabelString};

      return (${collectAnchorElements})();
    })()`;


return driver.evaluateAsync(expression,{useIsolation:true});
}}


module.exports=AnchorElements;

},{"../../lib/page-functions.js":87,"./gatherer.js":61}],"../gather/gatherers/cache-contents":[function(require,module,exports){





'use strict';



const Gatherer=require('./gatherer.js');






function getCacheContents(){

return caches.keys().


then(cacheNames=>Promise.all(cacheNames.map(cacheName=>caches.open(cacheName)))).

then(caches=>{

const requests=[];


return Promise.all(caches.map(cache=>{
return cache.keys().
then(reqs=>{
requests.push(...reqs.map(r=>r.url));
});
})).then(_=>{
return requests;
});
});
}

class CacheContents extends Gatherer{





async afterPass(passContext){
const driver=passContext.driver;


const cacheUrls=await driver.evaluateAsync(`(${getCacheContents.toString()}())`);
if(!cacheUrls||!Array.isArray(cacheUrls)){
throw new Error('Unable to retrieve cache contents');
}

return cacheUrls;
}}


module.exports=CacheContents;

},{"./gatherer.js":61}],"../gather/gatherers/console-messages":[function(require,module,exports){










'use strict';

const Gatherer=require('./gatherer.js');

class ConsoleMessages extends Gatherer{
constructor(){
super();

this._logEntries=[];
this._onConsoleEntryAdded=this.onConsoleEntry.bind(this);
}




onConsoleEntry(entry){
this._logEntries.push(entry);
}




async beforePass(passContext){
const driver=passContext.driver;
driver.on('Log.entryAdded',this._onConsoleEntryAdded);
await driver.sendCommand('Log.enable');
await driver.sendCommand('Log.startViolationsReport',{
config:[{name:'discouragedAPIUse',threshold:-1}]});

}





async afterPass(passContext){
await passContext.driver.sendCommand('Log.stopViolationsReport');
await passContext.driver.off('Log.entryAdded',this._onConsoleEntryAdded);
await passContext.driver.sendCommand('Log.disable');
return this._logEntries;
}}


module.exports=ConsoleMessages;

},{"./gatherer.js":61}],"../gather/gatherers/css-usage":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');




class CSSUsage extends Gatherer{




async afterPass(passContext){
const driver=passContext.driver;


const stylesheets=[];

const onStylesheetAdded=sheet=>stylesheets.push(sheet);
driver.on('CSS.styleSheetAdded',onStylesheetAdded);

await driver.sendCommand('DOM.enable');
await driver.sendCommand('CSS.enable');
await driver.sendCommand('CSS.startRuleUsageTracking');
await driver.evaluateAsync('getComputedStyle(document.body)');
driver.off('CSS.styleSheetAdded',onStylesheetAdded);


const promises=stylesheets.map(sheet=>{
const styleSheetId=sheet.header.styleSheetId;
return driver.sendCommand('CSS.getStyleSheetText',{styleSheetId}).then(content=>{
return{
header:sheet.header,
content:content.text};

});
});
const styleSheetInfo=await Promise.all(promises);

const ruleUsageResponse=await driver.sendCommand('CSS.stopRuleUsageTracking');
await driver.sendCommand('CSS.disable');
await driver.sendCommand('DOM.disable');

const dedupedStylesheets=new Map(styleSheetInfo.map(sheet=>{
return[sheet.content,sheet];
}));
return{
rules:ruleUsageResponse.ruleUsage,
stylesheets:Array.from(dedupedStylesheets.values())};

}}


module.exports=CSSUsage;

},{"./gatherer.js":61}],"../gather/gatherers/dobetterweb/appcache":[function(require,module,exports){





'use strict';

const Gatherer=require('../gatherer.js');

class AppCacheManifest extends Gatherer{






afterPass(passContext){
const driver=passContext.driver;

return driver.querySelector('html').
then(node=>node&&node.getAttribute('manifest'));
}}


module.exports=AppCacheManifest;

},{"../gatherer.js":61}],"../gather/gatherers/dobetterweb/doctype":[function(require,module,exports){





'use strict';

const Gatherer=require('../gatherer.js');






function getDoctype(){

if(!document.doctype){
return null;
}

const{name,publicId,systemId}=document.doctype;
return{name,publicId,systemId};
}

class Doctype extends Gatherer{




afterPass(passContext){
const driver=passContext.driver;
return driver.evaluateAsync(`(${getDoctype.toString()}())`);
}}


module.exports=Doctype;

},{"../gatherer.js":61}],"../gather/gatherers/dobetterweb/domstats":[function(require,module,exports){













'use strict';

const Gatherer=require('../gatherer.js');
const pageFunctions=require('../../../lib/page-functions.js');








function createSelectorsLabel(element){
let name=element.localName||'';
const idAttr=element.getAttribute&&element.getAttribute('id');
if(idAttr){
name+=`#${idAttr}`;
}


if(element.classList){
const className=element.classList.toString();
if(className){
name+=`.${className.trim().replace(/\s+/g,'.')}`;
}
}else if(ShadowRoot.prototype.isPrototypeOf(element)){
name+='#shadow-root';
}

return name;
}






function elementPathInDOM(element){
const visited=new Set();
const path=[createSelectorsLabel(element)];
let node=element;
while(node){
visited.add(node);



if(ShadowRoot.prototype.isPrototypeOf(node)){
const isShadowHost=node.host&&node.localName!=='a';
node=isShadowHost?node.host:node.parentElement;
}else{
const isShadowHost=node.parentNode&&node.parentNode.host&&
node.parentNode.localName!=='a';
node=isShadowHost?node.parentNode.host:node.parentElement;
}

if(visited.has(node)){
node=null;
}

if(node){
path.unshift(createSelectorsLabel(node));
}
}
return path;
}








function getDOMStats(element,deep=true){
let deepestElement=null;
let maxDepth=-1;
let maxWidth=-1;
let numElements=0;
let parentWithMostChildren=null;





const _calcDOMWidthAndHeight=function(element,depth=1){
if(depth>maxDepth){
deepestElement=element;
maxDepth=depth;
}
if(element.children.length>maxWidth){
parentWithMostChildren=element;
maxWidth=element.children.length;
}

let child=element.firstElementChild;
while(child){
_calcDOMWidthAndHeight(child,depth+1);

if(deep&&child.shadowRoot){
_calcDOMWidthAndHeight(child.shadowRoot,depth+1);
}
child=child.nextElementSibling;
numElements++;
}

return{maxDepth,maxWidth,numElements};
};

const result=_calcDOMWidthAndHeight(element);

return{
depth:{
max:result.maxDepth,
pathToElement:elementPathInDOM(deepestElement),

snippet:getOuterHTMLSnippet(deepestElement,['style'])},

width:{
max:result.maxWidth,
pathToElement:elementPathInDOM(parentWithMostChildren),
snippet:getOuterHTMLSnippet(parentWithMostChildren,['style'])},

totalBodyElements:result.numElements};

}

class DOMStats extends Gatherer{




async afterPass(passContext){
const driver=passContext.driver;

const expression=`(function() {
      ${pageFunctions.getOuterHTMLSnippetString};
      ${createSelectorsLabel.toString()};
      ${elementPathInDOM.toString()};
      return (${getDOMStats.toString()}(document.body));
    })()`;
await driver.sendCommand('DOM.enable');
const results=await driver.evaluateAsync(expression,{useIsolation:true});
await driver.sendCommand('DOM.disable');
return results;
}}


module.exports=DOMStats;

},{"../../../lib/page-functions.js":87,"../gatherer.js":61}],"../gather/gatherers/dobetterweb/optimized-images":[function(require,module,exports){










'use strict';

const log=require('lighthouse-logger');
const Gatherer=require('../gatherer.js');
const URL=require('../../../lib/url-shim.js');
const NetworkRequest=require('../../../lib/network-request.js');
const Sentry=require('../../../lib/sentry.js');
const Driver=require('../../driver.js');



const MAX_TIME_TO_SPEND_ENCODING=5000;

const MAX_RESOURCE_SIZE_TO_ENCODE=2000*1024;

const JPEG_QUALITY=0.92;
const WEBP_QUALITY=0.85;

const MINIMUM_IMAGE_SIZE=4096;

const IMAGE_REGEX=/^image\/((x|ms|x-ms)-)?(png|bmp|jpeg)$/;



class OptimizedImages extends Gatherer{
constructor(){
super();
this._encodingStartAt=0;
}





static filterImageRequests(networkRecords){

const seenUrls=new Set();
return networkRecords.reduce((prev,record)=>{

if(seenUrls.has(record.url)||!record.finished||record.sessionId){
return prev;
}

seenUrls.add(record.url);
const isOptimizableImage=record.resourceType===NetworkRequest.TYPES.Image&&
IMAGE_REGEX.test(record.mimeType);

const actualResourceSize=Math.min(record.resourceSize||0,record.transferSize||0);
if(isOptimizableImage&&actualResourceSize>MINIMUM_IMAGE_SIZE){
prev.push({
requestId:record.requestId,
url:record.url,
mimeType:record.mimeType,
resourceSize:actualResourceSize});

}

return prev;
},[]);
}







_getEncodedResponse(driver,requestId,encoding){
requestId=NetworkRequest.getRequestIdForBackend(requestId);

const quality=encoding==='jpeg'?JPEG_QUALITY:WEBP_QUALITY;
const params={requestId,encoding,quality,sizeOnly:true};
return driver.sendCommand('Audits.getEncodedResponse',params);
}






async calculateImageStats(driver,networkRecord){
const originalSize=networkRecord.resourceSize;


if(Date.now()-this._encodingStartAt>MAX_TIME_TO_SPEND_ENCODING||
originalSize>MAX_RESOURCE_SIZE_TO_ENCODE){
return{originalSize,jpegSize:undefined,webpSize:undefined};
}

const jpegData=await this._getEncodedResponse(driver,networkRecord.requestId,'jpeg');
const webpData=await this._getEncodedResponse(driver,networkRecord.requestId,'webp');

return{
originalSize,
jpegSize:jpegData.encodedSize,
webpSize:webpData.encodedSize};

}






async computeOptimizedImages(driver,imageRecords){
this._encodingStartAt=Date.now();


const results=[];

for(const record of imageRecords){
try{
const stats=await this.calculateImageStats(driver,record);

const image={failed:false,...stats,...record};
results.push(image);
}catch(err){
log.warn('optimized-images',err.message);



Sentry.captureException(err,{
tags:{gatherer:'OptimizedImages'},
extra:{imageUrl:URL.elideDataURI(record.url)},
level:'warning'});



const imageError={failed:true,errMsg:err.message,...record};
results.push(imageError);
}
}

return results;
}






afterPass(passContext,loadData){
const networkRecords=loadData.networkRecords;
const imageRecords=OptimizedImages.
filterImageRequests(networkRecords).
sort((a,b)=>b.resourceSize-a.resourceSize);

return Promise.resolve().
then(_=>this.computeOptimizedImages(passContext.driver,imageRecords)).
then(results=>{
const successfulResults=results.filter(result=>!result.failed);
if(results.length&&!successfulResults.length){
throw new Error('All image optimizations failed');
}

return results;
});
}}


module.exports=OptimizedImages;

},{"../../../lib/network-request.js":86,"../../../lib/sentry.js":89,"../../../lib/url-shim.js":"url","../../driver.js":58,"../gatherer.js":61,"lighthouse-logger":135}],"../gather/gatherers/dobetterweb/password-inputs-with-prevented-paste":[function(require,module,exports){





'use strict';



const Gatherer=require('../gatherer.js');
const pageFunctions=require('../../../lib/page-functions.js');






function findPasswordInputsWithPreventedPaste(){
return Array.from(document.querySelectorAll('input[type="password"]')).
filter(passwordInput=>
!passwordInput.dispatchEvent(
new ClipboardEvent('paste',{cancelable:true}))).


map(passwordInput=>({

snippet:getOuterHTMLSnippet(passwordInput)}));

}

class PasswordInputsWithPreventedPaste extends Gatherer{




afterPass(passContext){
return passContext.driver.evaluateAsync(`(() => {
      ${pageFunctions.getOuterHTMLSnippetString};
      return (${findPasswordInputsWithPreventedPaste.toString()}());
    })()`);
}}



module.exports=PasswordInputsWithPreventedPaste;

},{"../../../lib/page-functions.js":87,"../gatherer.js":61}],"../gather/gatherers/dobetterweb/response-compression":[function(require,module,exports){
(function(Buffer){










'use strict';

const Gatherer=require('../gatherer.js');
const URL=require('../../../lib/url-shim.js');
const Sentry=require('../../../lib/sentry.js');
const NetworkRequest=require('../../../lib/network-request.js');
const gzip=require('zlib').gzip;

const CHROME_EXTENSION_PROTOCOL='chrome-extension:';
const compressionHeaders=['content-encoding','x-original-content-encoding'];
const compressionTypes=['gzip','br','deflate'];
const binaryMimeTypes=['image','audio','video'];

const textResourceTypes=[
NetworkRequest.TYPES.Document,
NetworkRequest.TYPES.Script,
NetworkRequest.TYPES.Stylesheet,
NetworkRequest.TYPES.XHR,
NetworkRequest.TYPES.Fetch,
NetworkRequest.TYPES.EventSource];


class ResponseCompression extends Gatherer{




static filterUnoptimizedResponses(networkRecords){

const unoptimizedResponses=[];

networkRecords.forEach(record=>{

if(record.sessionId)return;

const mimeType=record.mimeType;
const resourceType=record.resourceType||NetworkRequest.TYPES.Other;
const resourceSize=record.resourceSize;

const isBinaryResource=mimeType&&binaryMimeTypes.some(type=>mimeType.startsWith(type));
const isTextResource=!isBinaryResource&&textResourceTypes.includes(resourceType);
const isChromeExtensionResource=record.url.startsWith(CHROME_EXTENSION_PROTOCOL);

if(!isTextResource||!resourceSize||!record.finished||
isChromeExtensionResource||!record.transferSize||record.statusCode===304){
return;
}

const isContentEncoded=(record.responseHeaders||[]).find(header=>
compressionHeaders.includes(header.name.toLowerCase())&&
compressionTypes.includes(header.value));


if(!isContentEncoded){
unoptimizedResponses.push({
requestId:record.requestId,
url:record.url,
mimeType:mimeType,
transferSize:record.transferSize,
resourceSize:resourceSize,
gzipSize:0});

}
});

return unoptimizedResponses;
}






afterPass(passContext,loadData){
const networkRecords=loadData.networkRecords;
const textRecords=ResponseCompression.filterUnoptimizedResponses(networkRecords);

const driver=passContext.driver;
return Promise.all(textRecords.map(record=>{
return driver.getRequestContent(record.requestId).then(content=>{

if(!content){
return record;
}

return new Promise((resolve,reject)=>{
return gzip(content,(err,res)=>{
if(err){
return reject(err);
}


record.gzipSize=Buffer.byteLength(res,'utf8');

resolve(record);
});
});
}).catch(err=>{
Sentry.captureException(err,{
tags:{gatherer:'ResponseCompression'},
extra:{url:URL.elideDataURI(record.url)},
level:'warning'});


record.gzipSize=undefined;
return record;
});
}));
}}


module.exports=ResponseCompression;

}).call(this,require("buffer").Buffer);
},{"../../../lib/network-request.js":86,"../../../lib/sentry.js":89,"../../../lib/url-shim.js":"url","../gatherer.js":61,"buffer":114,"zlib":112}],"../gather/gatherers/dobetterweb/tags-blocking-first-paint":[function(require,module,exports){



















'use strict';

const Gatherer=require('../gatherer.js');
const Driver=require('../../driver.js');




function installMediaListener(){
window.___linkMediaChanges=[];
Object.defineProperty(HTMLLinkElement.prototype,'media',{
set:function(val){
window.___linkMediaChanges.push({
href:this.href,
media:val,
msSinceHTMLEnd:Date.now()-window.performance.timing.responseEnd,
matches:window.matchMedia(val).matches});


return this.setAttribute('media',val);
}});

}





function collectTagsThatBlockFirstPaint(){
return new Promise((resolve,reject)=>{
try{
const tagList=[...document.querySelectorAll('link, head script[src]')].
filter(tag=>{
if(tag.tagName==='SCRIPT'){
const scriptTag=tag;
return(
!scriptTag.hasAttribute('async')&&
!scriptTag.hasAttribute('defer')&&
!/^data:/.test(scriptTag.src)&&
!/^blob:/.test(scriptTag.src)&&
scriptTag.getAttribute('type')!=='module');

}else if(tag.tagName==='LINK'){



const linkTag=tag;
const blockingStylesheet=linkTag.rel==='stylesheet'&&
window.matchMedia(linkTag.media).matches&&!linkTag.disabled;
const blockingImport=linkTag.rel==='import'&&!linkTag.hasAttribute('async');
return blockingStylesheet||blockingImport;
}

return false;
}).
map(tag=>{
return{
tagName:tag.tagName,
url:tag.tagName==='LINK'?tag.href:tag.src,
src:tag.src,
href:tag.href,
rel:tag.rel,
media:tag.media,
disabled:tag.disabled,
mediaChanges:window.___linkMediaChanges.filter(item=>item.href===tag.href)};

});
resolve(tagList);
}catch(e){
const friendly='Unable to gather Scripts/Stylesheets/HTML Imports on the page';
reject(new Error(`${friendly}: ${e.message}`));
}
});
}

class TagsBlockingFirstPaint extends Gatherer{



static _filteredAndIndexedByUrl(networkRecords){

const result={};

return networkRecords.reduce((prev,record)=>{
if(!record.finished){
return prev;
}

const isParserGenerated=record.initiator.type==='parser';


const isParserScriptOrStyle=/(css|script)/.test(record.mimeType)&&isParserGenerated;
const isFailedRequest=record._failed;
const isHtml=record.mimeType&&record.mimeType.includes('html');



if(isHtml||isParserScriptOrStyle||isFailedRequest&&isParserGenerated){
prev[record.url]={
isLinkPreload:!!record.isLinkPreload,
transferSize:record.transferSize,
startTime:record.startTime,
endTime:record.endTime};

}

return prev;
},result);
}





static findBlockingTags(driver,networkRecords){
const scriptSrc=`(${collectTagsThatBlockFirstPaint.toString()}())`;
const firstRequestEndTime=networkRecords.reduce(
(min,record)=>Math.min(min,record.endTime),
Infinity);

return driver.evaluateAsync(scriptSrc).then(tags=>{
const requests=TagsBlockingFirstPaint._filteredAndIndexedByUrl(networkRecords);

return tags.reduce((prev,tag)=>{
const request=requests[tag.url];
if(request&&!request.isLinkPreload){



const timesResourceBecameNonBlocking=(tag.mediaChanges||[]).
filter(change=>!change.matches).
map(change=>change.msSinceHTMLEnd);
const earliestNonBlockingTime=Math.min(...timesResourceBecameNonBlocking);
const lastTimeResourceWasBlocking=Math.max(
request.startTime,
firstRequestEndTime+earliestNonBlockingTime/1000);


prev.push({
tag,
transferSize:request.transferSize||0,
startTime:request.startTime,
endTime:Math.min(request.endTime,lastTimeResourceWasBlocking)});



requests[tag.url]=null;
}

return prev;
},[]);
});
}




beforePass(passContext){
return passContext.driver.evaluateScriptOnNewDocument(`(${installMediaListener.toString()})()`);
}






afterPass(passContext,loadData){
return TagsBlockingFirstPaint.findBlockingTags(passContext.driver,loadData.networkRecords);
}}


module.exports=TagsBlockingFirstPaint;

},{"../../driver.js":58,"../gatherer.js":61}],"../gather/gatherers/html-without-javascript":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');









function getBodyText(){

const body=document.querySelector('body');
return Promise.resolve({
bodyText:body?body.innerText:'',
hasNoScript:!!document.querySelector('noscript')});

}

class HTMLWithoutJavaScript extends Gatherer{



beforePass(passContext){
passContext.disableJavaScript=true;
}





async afterPass(passContext){

passContext.disableJavaScript=false;

const expression=`(${getBodyText.toString()}())`;
const{bodyText,hasNoScript}=await passContext.driver.evaluateAsync(expression);
if(typeof bodyText!=='string'){
throw new Error('document body innerText returned by protocol was not a string');
}

return{
bodyText,
hasNoScript};

}}


module.exports=HTMLWithoutJavaScript;

},{"./gatherer.js":61}],"../gather/gatherers/http-redirect":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');






class HTTPRedirect extends Gatherer{
constructor(){
super();
this._preRedirectURL='';
}




beforePass(passContext){
this._preRedirectURL=passContext.url;
passContext.url=this._preRedirectURL.replace(/^https/,'http');
}





async afterPass(passContext){

passContext.url=this._preRedirectURL;

const expression=`new URL(window.location).protocol === 'https:'`;
const isHttps=await passContext.driver.evaluateAsync(expression,{useIsolation:true});
return{
value:isHttps};

}}


module.exports=HTTPRedirect;

},{"./gatherer.js":61}],"../gather/gatherers/iframe-elements":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');
const pageFunctions=require('../../lib/page-functions.js');







function collectIFrameElements(){

const iFrameElements=getElementsInDocument('iframe');
return iFrameElements.map(node=>{
const clientRect=node.getBoundingClientRect();
const{top,bottom,left,right,width,height}=clientRect;
return{
id:node.id,
src:node.src,
clientRect:{top,bottom,left,right,width,height},

isPositionFixed:isPositionFixed(node)};

});
}

class IFrameElements extends Gatherer{





async afterPass(passContext){
const driver=passContext.driver;

const expression=`(() => {
      ${pageFunctions.getOuterHTMLSnippetString};
      ${pageFunctions.getElementsInDocumentString};
      ${pageFunctions.isPositionFixedString};
      return (${collectIFrameElements})();
    })()`;


const iframeElements=await driver.evaluateAsync(expression,{useIsolation:true});
return iframeElements;
}}


module.exports=IFrameElements;

},{"../../lib/page-functions.js":87,"./gatherer.js":61}],"../gather/gatherers/image-elements":[function(require,module,exports){









'use strict';

const Gatherer=require('./gatherer.js');
const pageFunctions=require('../../lib/page-functions.js');
const Driver=require('../driver.js');






function getClientRect(element){
const clientRect=element.getBoundingClientRect();
return{

top:clientRect.top,
bottom:clientRect.bottom,
left:clientRect.left,
right:clientRect.right};

}






function getHTMLImages(allElements){
const allImageElements=allElements.filter(element=>{
return element.localName==='img';
});

return allImageElements.map(element=>{
const computedStyle=window.getComputedStyle(element);
return{


src:element.currentSrc,
displayedWidth:element.width,
displayedHeight:element.height,
clientRect:getClientRect(element),
naturalWidth:element.naturalWidth,
naturalHeight:element.naturalHeight,
isCss:false,

loading:element.loading,
resourceSize:0,
isPicture:!!element.parentElement&&element.parentElement.tagName==='PICTURE',
usesObjectFit:['cover','contain','scale-down','none'].includes(
computedStyle.getPropertyValue('object-fit')),

usesPixelArtScaling:['pixelated','crisp-edges'].includes(
computedStyle.getPropertyValue('image-rendering')),


usesSrcSetDensityDescriptor:/ \d+(\.\d+)?x/.test(element.srcset)};

});
}






function getCSSImages(allElements){


const CSS_URL_REGEX=/^url\("([^"]+)"\)$/;


const images=[];

for(const element of allElements){
const style=window.getComputedStyle(element);

if(!style.backgroundImage||!CSS_URL_REGEX.test(style.backgroundImage))continue;

const imageMatch=style.backgroundImage.match(CSS_URL_REGEX);

const url=imageMatch[1];

images.push({
src:url,
displayedWidth:element.clientWidth,
displayedHeight:element.clientHeight,
clientRect:getClientRect(element),

naturalWidth:0,
naturalHeight:0,
isCss:true,
isPicture:false,
usesObjectFit:false,
usesPixelArtScaling:['pixelated','crisp-edges'].includes(
style.getPropertyValue('image-rendering')),

usesSrcSetDensityDescriptor:false,
resourceSize:0});

}

return images;
}



function collectImageElementInfo(){


const allElements=getElementsInDocument();
return getHTMLImages(allElements).concat(getCSSImages(allElements));
}






function determineNaturalSize(url){
return new Promise((resolve,reject)=>{
const img=new Image();
img.addEventListener('error',_=>reject(new Error('determineNaturalSize failed img load')));
img.addEventListener('load',()=>{
resolve({
naturalWidth:img.naturalWidth,
naturalHeight:img.naturalHeight});

});

img.src=url;
});
}

class ImageElements extends Gatherer{
constructor(){
super();

this._naturalSizeCache=new Map();
}






async fetchElementWithSizeInformation(driver,element){
const url=JSON.stringify(element.src);
if(this._naturalSizeCache.has(url)){
return Object.assign(element,this._naturalSizeCache.get(url));
}

try{

driver.setNextProtocolTimeout(250);

const size=await driver.evaluateAsync(`(${determineNaturalSize.toString()})(${url})`);
this._naturalSizeCache.set(url,size);
return Object.assign(element,size);
}catch(_){

return element;
}
}






async afterPass(passContext,loadData){
const driver=passContext.driver;
const indexedNetworkRecords=loadData.networkRecords.reduce((map,record)=>{


if(/^image/.test(record.mimeType)&&record.finished&&record.statusCode===200){
map[record.url]=record;
}

return map;
},{});

const expression=`(function() {
      ${pageFunctions.getElementsInDocumentString}; // define function on page
      ${getClientRect.toString()};
      ${getHTMLImages.toString()};
      ${getCSSImages.toString()};
      ${collectImageElementInfo.toString()};

      return collectImageElementInfo();
    })()`;


const elements=await driver.evaluateAsync(expression);


const imageUsage=[];
const top50Images=Object.values(indexedNetworkRecords).
sort((a,b)=>b.resourceSize-a.resourceSize).
slice(0,50);

for(let element of elements){

const networkRecord=indexedNetworkRecords[element.src]||{};
element.mimeType=networkRecord.mimeType;





const{resourceSize=0,transferSize=0}=networkRecord;
element.resourceSize=Math.min(resourceSize,transferSize);





if(
(element.isPicture||element.isCss)&&
networkRecord&&
top50Images.includes(networkRecord))
{
element=await this.fetchElementWithSizeInformation(driver,element);
}

imageUsage.push(element);
}

return imageUsage;
}}


module.exports=ImageElements;

},{"../../lib/page-functions.js":87,"../driver.js":58,"./gatherer.js":61}],"../gather/gatherers/js-usage":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');




class JsUsage extends Gatherer{



async beforePass(passContext){
await passContext.driver.sendCommand('Profiler.enable');
await passContext.driver.sendCommand('Profiler.startPreciseCoverage',{detailed:false});
}





async afterPass(passContext){
const driver=passContext.driver;

const coverageResponse=await driver.sendCommand('Profiler.takePreciseCoverage');
const scriptUsages=coverageResponse.result;
await driver.sendCommand('Profiler.stopPreciseCoverage');
await driver.sendCommand('Profiler.disable');


const usageByUrl={};
for(const scriptUsage of scriptUsages){
const scripts=usageByUrl[scriptUsage.url]||[];
scripts.push(scriptUsage);
usageByUrl[scriptUsage.url]=scripts;
}

return usageByUrl;
}}


module.exports=JsUsage;

},{"./gatherer.js":61}],"../gather/gatherers/link-elements":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');
const URL=require('../../lib/url-shim.js').URL;
const NetworkAnalyzer=require('../../lib/dependency-graph/simulator/network-analyzer.js');
const LinkHeader=require('http-link-header');
const{getElementsInDocumentString}=require('../../lib/page-functions.js');















function normalizeUrlOrNull(url,finalUrl){
try{
return new URL(url,finalUrl).href;
}catch(_){
return null;
}
}





function getCrossoriginFromHeader(value){
if(value==='anonymous')return'anonymous';
if(value==='use-credentials')return'use-credentials';
return null;
}





function getLinkElementsInDOM(){


const browserElements=getElementsInDocument('link');

const linkElements=[];

for(const link of browserElements){


if(!(link instanceof HTMLLinkElement))continue;

linkElements.push({
rel:link.rel,
href:link.href,
hrefRaw:link.href,
hreflang:link.hreflang,
as:link.as,
crossOrigin:link.crossOrigin,
source:link.closest('head')?'head':'body'});

}

return linkElements;
}

class LinkElements extends Gatherer{




static getLinkElementsInDOM(passContext){


return passContext.driver.evaluateAsync(`(() => {
      ${getElementsInDocumentString};
      ${getLinkElementsInDOM};

      return getLinkElementsInDOM();
    })()`,{useIsolation:true});
}






static getLinkElementsInHeaders(passContext,loadData){
const finalUrl=passContext.url;
const records=loadData.networkRecords;
const mainDocument=NetworkAnalyzer.findMainDocument(records,finalUrl);


const linkElements=[];

for(const header of mainDocument.responseHeaders){
if(header.name.toLowerCase()!=='link')continue;

for(const link of LinkHeader.parse(header.value).refs){
linkElements.push({
rel:link.rel||'',
href:normalizeUrlOrNull(link.uri,finalUrl),
hrefRaw:link.uri||'',
hreflang:link.hreflang||'',
as:link.as||'',
crossOrigin:getCrossoriginFromHeader(link.crossorigin),
source:'headers'});

}
}

return linkElements;
}






async afterPass(passContext,loadData){
const fromDOM=await LinkElements.getLinkElementsInDOM(passContext);
const fromHeaders=LinkElements.getLinkElementsInHeaders(passContext,loadData);
const linkElements=fromDOM.concat(fromHeaders);

for(const link of linkElements){

link.rel=link.rel.toLowerCase();
}

return linkElements;
}}


module.exports=LinkElements;

},{"../../lib/dependency-graph/simulator/network-analyzer.js":73,"../../lib/page-functions.js":87,"../../lib/url-shim.js":"url","./gatherer.js":61,"http-link-header":119}],"../gather/gatherers/main-document-content":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');
const NetworkAnalyzer=require('../../lib/dependency-graph/simulator/network-analyzer.js');




class MainDocumentContent extends Gatherer{





async afterPass(passContext,loadData){
const mainResource=NetworkAnalyzer.findMainDocument(loadData.networkRecords,passContext.url);

const driver=passContext.driver;
return driver.getRequestContent(mainResource.requestId);
}}


module.exports=MainDocumentContent;

},{"../../lib/dependency-graph/simulator/network-analyzer.js":73,"./gatherer.js":61}],"../gather/gatherers/meta-elements":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');
const getElementsInDocumentString=require('../../lib/page-functions.js').getElementsInDocumentString;

class MetaElements extends Gatherer{




async afterPass(passContext){
const driver=passContext.driver;



return driver.evaluateAsync(`(() => {
      ${getElementsInDocumentString};

      return getElementsInDocument('head meta').map(meta => {
        return {
          name: meta.name.toLowerCase(),
          content: meta.content,
          property: meta.attributes.property ? meta.attributes.property.value : undefined,
          httpEquiv: meta.httpEquiv ? meta.httpEquiv.toLowerCase() : undefined,
          charset: meta.attributes.charset ? meta.attributes.charset.value : undefined,
        };
      });
    })()`,{useIsolation:true});
}}


module.exports=MetaElements;

},{"../../lib/page-functions.js":87,"./gatherer.js":61}],"../gather/gatherers/offline":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');
const URL=require('../../lib/url-shim.js');

class Offline extends Gatherer{



beforePass(passContext){



return passContext.driver.goOffline();
}






async afterPass(passContext,loadData){
const navigationRecord=loadData.networkRecords.filter(record=>{
return URL.equalWithExcludedFragments(record.url,passContext.url)&&
record.fetchedViaServiceWorker;
}).pop();

return navigationRecord?navigationRecord.statusCode:-1;
}}


module.exports=Offline;

},{"../../lib/url-shim.js":"url","./gatherer.js":61}],"../gather/gatherers/runtime-exceptions":[function(require,module,exports){










'use strict';

const Gatherer=require('./gatherer.js');

class RuntimeExceptions extends Gatherer{
constructor(){
super();

this._exceptions=[];
this._onRuntimeExceptionThrown=this.onRuntimeExceptionThrown.bind(this);
}




onRuntimeExceptionThrown(entry){
this._exceptions.push(entry);
}




beforePass(passContext){
const driver=passContext.driver;
driver.on('Runtime.exceptionThrown',this._onRuntimeExceptionThrown);
}





async afterPass(passContext){
await passContext.driver.off('Runtime.exceptionThrown',this._onRuntimeExceptionThrown);
return this._exceptions;
}}


module.exports=RuntimeExceptions;

},{"./gatherer.js":61}],"../gather/gatherers/script-elements":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');
const NetworkAnalyzer=require('../../lib/dependency-graph/simulator/network-analyzer.js');
const NetworkRequest=require('../../lib/network-request.js');
const getElementsInDocumentString=require('../../lib/page-functions.js').getElementsInDocumentString;
const pageFunctions=require('../../lib/page-functions.js');







function collectAllScriptElements(){


const scripts=getElementsInDocument('script');

return scripts.map(script=>{
return{
type:script.type||null,
src:script.src||null,
id:script.id||null,
async:script.async,
defer:script.defer,
source:script.closest('head')?'head':'body',

devtoolsNodePath:getNodePath(script),
content:script.src?null:script.text,
requestId:null};

});
}








async function runInSeriesOrParallel(values,promiseMapper,runInSeries){
if(runInSeries){
const results=[];
for(const value of values){
const result=await promiseMapper(value);
results.push(result);
}
return results;
}else{
const promises=values.map(promiseMapper);
return await Promise.all(promises);
}
}




class ScriptElements extends Gatherer{





async afterPass(passContext,loadData){
const driver=passContext.driver;
const mainResource=NetworkAnalyzer.findMainDocument(loadData.networkRecords,passContext.url);


const scripts=await driver.evaluateAsync(`(() => {
      ${getElementsInDocumentString}
      ${pageFunctions.getNodePathString};
      return (${collectAllScriptElements.toString()})();
    })()`,{useIsolation:true});

for(const script of scripts){
if(script.content)script.requestId=mainResource.requestId;
}

const scriptRecords=loadData.networkRecords.

filter(record=>!record.sessionId).

filter(record=>record.resourceType===NetworkRequest.TYPES.Script);



const scriptRecordContents=await runInSeriesOrParallel(
scriptRecords,
record=>driver.getRequestContent(record.requestId).catch(()=>''),
passContext.baseArtifacts.HostFormFactor==='mobile');

for(let i=0;i<scriptRecords.length;i++){
const record=scriptRecords[i];
const content=scriptRecordContents[i];
if(!content)continue;

const matchedScriptElement=scripts.find(script=>script.src===record.url);
if(matchedScriptElement){
matchedScriptElement.requestId=record.requestId;
matchedScriptElement.content=content;
}else{
scripts.push({
devtoolsNodePath:'',
type:null,
src:record.url,
id:null,
async:false,
defer:false,
source:'network',
requestId:record.requestId,
content});

}
}

return scripts;
}}


module.exports=ScriptElements;

},{"../../lib/dependency-graph/simulator/network-analyzer.js":73,"../../lib/network-request.js":86,"../../lib/page-functions.js":87,"./gatherer.js":61}],"../gather/gatherers/seo/embedded-content":[function(require,module,exports){





'use strict';

const Gatherer=require('../gatherer.js');
const pageFunctions=require('../../../lib/page-functions.js');

class EmbeddedContent extends Gatherer{




afterPass(passContext){
const expression=`(function() {
      ${pageFunctions.getElementsInDocumentString}; // define function on page
      const selector = 'object, embed, applet';
      const elements = getElementsInDocument(selector);
      return elements
        .map(node => ({
          tagName: node.tagName,
          type: node.getAttribute('type'),
          src: node.getAttribute('src'),
          data: node.getAttribute('data'),
          code: node.getAttribute('code'),
          params: Array.from(node.children)
            .filter(el => el.tagName === 'PARAM')
            .map(el => ({
              name: el.getAttribute('name') || '',
              value: el.getAttribute('value') || '',
            })),
        }));
    })()`;

return passContext.driver.evaluateAsync(expression);
}}


module.exports=EmbeddedContent;

},{"../../../lib/page-functions.js":87,"../gatherer.js":61}],"../gather/gatherers/seo/font-size":[function(require,module,exports){





'use strict';












const Gatherer=require('../gatherer.js');
const FONT_SIZE_PROPERTY_NAME='font-size';
const MINIMAL_LEGIBLE_FONT_SIZE_PX=12;

const MAX_NODES_SOURCE_RULE_FETCHED=50;










function nodeInBody(node){
if(!node){
return false;
}
if(node.nodeName==='BODY'){
return true;
}
return nodeInBody(node.parentNode);
}







async function getAllNodesFromBody(driver){
const nodes=await driver.getNodesInDocument();

const nodeMap=new Map();
nodes.forEach(node=>nodeMap.set(node.nodeId,node));
nodes.forEach(node=>node.parentNode=nodeMap.get(node.parentId));
return nodes.filter(nodeInBody);
}





function hasFontSizeDeclaration(style){
return!!style&&!!style.cssProperties.find(({name})=>name===FONT_SIZE_PROPERTY_NAME);
}











function computeSelectorSpecificity(selector){
const tokens=selector.split(' ');

let numIDs=0;
let numClasses=0;
let numTypes=0;

for(const token of tokens){
const ids=token.match(/\b#[a-z0-9]+/g)||[];
const classes=token.match(/\b\.[a-z0-9]+/g)||[];
const types=token.match(/^[a-z]+/)?[1]:[];
numIDs+=ids.length;
numClasses+=classes.length;
numTypes+=types.length;
}

return Math.min(9,numIDs)*100+Math.min(9,numClasses)*10+Math.min(9,numTypes);
}







function findMostSpecificMatchedCSSRule(matchedCSSRules=[]){
let maxSpecificity=-Infinity;

let maxSpecificityRule;

for(const{rule,matchingSelectors}of matchedCSSRules){
if(hasFontSizeDeclaration(rule.style)){
const specificities=matchingSelectors.map(idx=>
computeSelectorSpecificity(rule.selectorList.selectors[idx].text));

const specificity=Math.max(...specificities);

if(specificity>=maxSpecificity){
maxSpecificity=specificity;
maxSpecificityRule=rule;
}
}
}

if(maxSpecificityRule){
return{
type:'Regular',
...maxSpecificityRule.style,
parentRule:{
origin:maxSpecificityRule.origin,
selectors:maxSpecificityRule.selectorList.selectors}};


}
}







function findInheritedCSSRule(inheritedEntries=[]){




for(const{inlineStyle,matchedCSSRules}of inheritedEntries){
if(hasFontSizeDeclaration(inlineStyle))return{type:'Inline',...inlineStyle};

const directRule=findMostSpecificMatchedCSSRule(matchedCSSRules);
if(directRule)return directRule;
}
}









function getEffectiveFontRule({attributesStyle,inlineStyle,matchedCSSRules,inherited}){

if(hasFontSizeDeclaration(inlineStyle))return{type:'Inline',...inlineStyle};


const matchedRule=findMostSpecificMatchedCSSRule(matchedCSSRules);
if(matchedRule)return matchedRule;


if(hasFontSizeDeclaration(attributesStyle))return{type:'Attributes',...attributesStyle};


const inheritedRule=findInheritedCSSRule(inherited);
if(inheritedRule)return inheritedRule;

return undefined;
}





function getTextLength(text){

return!text?0:Array.from(text.trim()).length;
}






async function fetchSourceRule(driver,node){
const matchedRules=await driver.sendCommand('CSS.getMatchedStylesForNode',{
nodeId:node.nodeId});

const sourceRule=getEffectiveFontRule(matchedRules);
if(!sourceRule)return undefined;

return{
type:sourceRule.type,
range:sourceRule.range,
styleSheetId:sourceRule.styleSheetId,
parentRule:sourceRule.parentRule&&{
origin:sourceRule.parentRule.origin,
selectors:sourceRule.parentRule.selectors}};


}

class FontSize extends Gatherer{




static async fetchFailingNodeSourceRules(driver,failingNodes){
const analysisPromises=failingNodes.
sort((a,b)=>b.textLength-a.textLength).
slice(0,MAX_NODES_SOURCE_RULE_FETCHED).
map(async failingNode=>{
try{
const cssRule=await fetchSourceRule(driver,failingNode.node);
failingNode.cssRule=cssRule;
}catch(err){


failingNode.cssRule=undefined;
}
return failingNode;
});

const analyzedFailingNodesData=await Promise.all(analysisPromises);

const analyzedFailingTextLength=analyzedFailingNodesData.reduce(
(sum,{textLength})=>sum+=textLength,
0);


return{analyzedFailingNodesData,analyzedFailingTextLength};
}







calculateBackendIdsToFontData(snapshot){
const strings=snapshot.strings;


const backendIdsToFontData=new Map();

for(let j=0;j<snapshot.documents.length;j++){


const doc=snapshot.documents[j];

if(!doc.nodes.backendNodeId){
throw new Error('Unexpected response from DOMSnapshot.captureSnapshot.');
}

for(const layoutIndex of doc.textBoxes.layoutIndex){
const text=strings[doc.layout.text[layoutIndex]];
if(!text)continue;

const nodeIndex=doc.layout.nodeIndex[layoutIndex];
const styles=doc.layout.styles[layoutIndex];
const[fontSizeStringId]=styles;

const fontSize=parseFloat(strings[fontSizeStringId]);
backendIdsToFontData.set(doc.nodes.backendNodeId[nodeIndex],{
fontSize,
textLength:getTextLength(text)});

}
}

return backendIdsToFontData;
}








findFailingNodes(backendIdsToFontData,crdpNodes){

const failingNodes=[];
let totalTextLength=0;
let failingTextLength=0;

for(const crdpNode of crdpNodes){
const partialFontData=backendIdsToFontData.get(crdpNode.backendNodeId);
if(!partialFontData)continue;


const{fontSize,textLength}=partialFontData;
totalTextLength+=textLength;
if(fontSize<MINIMAL_LEGIBLE_FONT_SIZE_PX){

failingTextLength+=textLength;
failingNodes.push({
node:crdpNode.parentNode,
textLength,
fontSize});

}
}

return{totalTextLength,failingTextLength,failingNodes};
}





async afterPass(passContext){

const stylesheets=new Map();

const onStylesheetAdded=sheet=>stylesheets.set(sheet.header.styleSheetId,sheet.header);
passContext.driver.on('CSS.styleSheetAdded',onStylesheetAdded);

await Promise.all([
passContext.driver.sendCommand('DOMSnapshot.enable'),
passContext.driver.sendCommand('DOM.enable'),
passContext.driver.sendCommand('CSS.enable')]);



const snapshotPromise=passContext.driver.sendCommand('DOMSnapshot.captureSnapshot',{
computedStyles:['font-size']});

const allNodesPromise=getAllNodesFromBody(passContext.driver);
const[snapshot,crdpNodes]=await Promise.all([snapshotPromise,allNodesPromise]);
const backendIdsToFontData=this.calculateBackendIdsToFontData(snapshot);



const{
totalTextLength,
failingTextLength,
failingNodes}=
this.findFailingNodes(backendIdsToFontData,crdpNodes);
const{
analyzedFailingNodesData,
analyzedFailingTextLength}=
await FontSize.fetchFailingNodeSourceRules(passContext.driver,failingNodes);

passContext.driver.off('CSS.styleSheetAdded',onStylesheetAdded);



analyzedFailingNodesData.
filter(data=>data.cssRule&&data.cssRule.styleSheetId).

forEach(data=>data.cssRule.stylesheet=stylesheets.get(data.cssRule.styleSheetId));

await Promise.all([
passContext.driver.sendCommand('DOMSnapshot.disable'),
passContext.driver.sendCommand('DOM.disable'),
passContext.driver.sendCommand('CSS.disable')]);


return{
analyzedFailingNodesData,
analyzedFailingTextLength,
failingTextLength,
totalTextLength};

}}


module.exports=FontSize;
module.exports.computeSelectorSpecificity=computeSelectorSpecificity;
module.exports.getEffectiveFontRule=getEffectiveFontRule;

},{"../gatherer.js":61}],"../gather/gatherers/seo/robots-txt":[function(require,module,exports){





'use strict';

const Gatherer=require('../gatherer.js');





async function getRobotsTxtContent(){
try{
const response=await fetch(new URL('/robots.txt',location.href).href);
if(!response.ok){
return{status:response.status,content:null};
}

const content=await response.text();
return{status:response.status,content};
}catch(_){
return{status:null,content:null};
}
}


class RobotsTxt extends Gatherer{




afterPass(passContext){
return passContext.driver.evaluateAsync(`(${getRobotsTxtContent.toString()}())`,{
useIsolation:true});

}}


module.exports=RobotsTxt;

},{"../gatherer.js":61}],"../gather/gatherers/seo/tap-targets":[function(require,module,exports){





'use strict';



const Gatherer=require('../gatherer.js');
const pageFunctions=require('../../../lib/page-functions.js');
const{
rectContains,
getRectArea,
getRectCenterPoint,
getLargestRect}=
require('../../../lib/rect-helpers.js');

const TARGET_SELECTORS=[
'button',
'a',
'input',
'textarea',
'select',
'option',
'[role=button]',
'[role=checkbox]',
'[role=link]',
'[role=menuitem]',
'[role=menuitemcheckbox]',
'[role=menuitemradio]',
'[role=option]',
'[role=scrollbar]',
'[role=slider]',
'[role=spinbutton]'];

const tapTargetsSelector=TARGET_SELECTORS.join(',');






function elementIsVisible(element){
return!!(element.offsetWidth||element.offsetHeight||element.getClientRects().length);
}






function getClientRects(element){
const clientRects=Array.from(
element.getClientRects()).
map(clientRect=>{


const{width,height,left,top,right,bottom}=clientRect;
return{width,height,left,top,right,bottom};
});

for(const child of element.children){
clientRects.push(...getClientRects(child));
}

return clientRects;
}






function elementHasAncestorTapTarget(element){
if(!element.parentElement){
return false;
}
if(element.parentElement.matches(tapTargetsSelector)){
return true;
}
return elementHasAncestorTapTarget(element.parentElement);
}





function hasTextNodeSiblingsFormingTextBlock(element){
if(!element.parentElement){
return false;
}

const parentElement=element.parentElement;

const nodeText=element.textContent||'';
const parentText=parentElement.textContent||'';
if(parentText.length-nodeText.length<5){


return false;
}

for(const sibling of element.parentElement.childNodes){
if(sibling===element){
continue;
}
const siblingTextContent=(sibling.textContent||'').trim();




if(sibling.nodeType===Node.TEXT_NODE&&siblingTextContent.length>0){
return true;
}
}

return false;
}









function elementIsInTextBlock(element){
const{display}=getComputedStyle(element);
if(display!=='inline'&&display!=='inline-block'){
return false;
}

if(hasTextNodeSiblingsFormingTextBlock(element)){
return true;
}else if(element.parentElement){
return elementIsInTextBlock(element.parentElement);
}else{
return false;
}
}







function truncate(str,maxLength){
if(str.length<=maxLength){
return str;
}
return str.slice(0,maxLength-1)+'…';
}






function elementCenterIsAtZAxisTop(el,elCenterPoint){
const viewportHeight=window.innerHeight;
const targetScrollY=Math.floor(elCenterPoint.y/viewportHeight)*viewportHeight;
if(window.scrollY!==targetScrollY){
window.scrollTo(0,targetScrollY);
}

const topEl=document.elementFromPoint(
elCenterPoint.x,
elCenterPoint.y-window.scrollY);


return topEl===el||el.contains(topEl);
}







function disableFixedAndStickyElementPointerEvents(){
const className='lighthouse-disable-pointer-events';
const styleTag=document.createElement('style');
styleTag.textContent=`.${className} { pointer-events: none !important }`;
document.body.appendChild(styleTag);

document.querySelectorAll('*').forEach(el=>{
const position=getComputedStyle(el).position;
if(position==='fixed'||position==='sticky'){
el.classList.add(className);
}
});

return function undo(){
Array.from(document.getElementsByClassName(className)).forEach(el=>{
el.classList.remove(className);
});
styleTag.remove();
};
}





function gatherTapTargets(){

const targets=[];


window.scrollTo(0,0);



const tapTargetElements=getElementsInDocument(tapTargetsSelector);





const tapTargetsWithClientRects=[];
tapTargetElements.forEach(tapTargetElement=>{

if(elementHasAncestorTapTarget(tapTargetElement)){


return;
}
if(elementIsInTextBlock(tapTargetElement)){


return;
}
if(!elementIsVisible(tapTargetElement)){
return;
}

tapTargetsWithClientRects.push({
tapTargetElement,
clientRects:getClientRects(tapTargetElement)});

});




const reenableFixedAndStickyElementPointerEvents=disableFixedAndStickyElementPointerEvents();





const tapTargetsWithVisibleClientRects=[];



tapTargetsWithClientRects.forEach(({tapTargetElement,clientRects})=>{

let visibleClientRects=clientRects.filter(cr=>cr.width!==0&&cr.height!==0);






visibleClientRects=visibleClientRects.filter(rect=>{


const rectCenterPoint=getRectCenterPoint(rect);
return elementCenterIsAtZAxisTop(tapTargetElement,rectCenterPoint);
});

if(visibleClientRects.length>0){
tapTargetsWithVisibleClientRects.push({
tapTargetElement,
visibleClientRects});

}
});

for(const{tapTargetElement,visibleClientRects}of tapTargetsWithVisibleClientRects){
targets.push({
clientRects:visibleClientRects,
snippet:truncate(tapTargetElement.outerHTML,300),

path:getNodePath(tapTargetElement),

selector:getNodeSelector(tapTargetElement),

nodeLabel:getNodeLabel(tapTargetElement),
href:tapTargetElement['href']||''});

}

reenableFixedAndStickyElementPointerEvents();

return targets;
}

class TapTargets extends Gatherer{




afterPass(passContext){
const expression=`(function() {
      const tapTargetsSelector = "${tapTargetsSelector}";
      ${pageFunctions.getElementsInDocumentString};
      ${disableFixedAndStickyElementPointerEvents.toString()};
      ${elementIsVisible.toString()};
      ${elementHasAncestorTapTarget.toString()};
      ${elementCenterIsAtZAxisTop.toString()}
      ${truncate.toString()};
      ${getClientRects.toString()};
      ${hasTextNodeSiblingsFormingTextBlock.toString()};
      ${elementIsInTextBlock.toString()};
      ${getRectArea.toString()};
      ${getLargestRect.toString()};
      ${getRectCenterPoint.toString()};
      ${rectContains.toString()};
      ${pageFunctions.getNodePathString};
      ${pageFunctions.getNodeSelectorString};
      ${pageFunctions.getNodeLabelString};
      ${gatherTapTargets.toString()};

      return gatherTapTargets();
    })()`;

return passContext.driver.evaluateAsync(expression,{useIsolation:true});
}}


module.exports=TapTargets;

},{"../../../lib/page-functions.js":87,"../../../lib/rect-helpers.js":88,"../gatherer.js":61}],"../gather/gatherers/service-worker":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');

class ServiceWorker extends Gatherer{




async beforePass(passContext){
const{versions}=await passContext.driver.getServiceWorkerVersions();
const{registrations}=await passContext.driver.getServiceWorkerRegistrations();

return{
versions,
registrations};

}}


module.exports=ServiceWorker;

},{"./gatherer.js":61}],"../gather/gatherers/source-maps":[function(require,module,exports){
(function(Buffer){





'use strict';



const Gatherer=require('./gatherer.js');
const URL=require('../../lib/url-shim.js');




class SourceMaps extends Gatherer{
constructor(){
super();

this._scriptParsedEvents=[];
this.onScriptParsed=this.onScriptParsed.bind(this);
}






async fetchSourceMap(driver,sourceMapUrl){

const sourceMapJson=await driver.fetcher.fetchResource(sourceMapUrl,{timeout:1500});
return JSON.parse(sourceMapJson);
}





parseSourceMapFromDataUrl(sourceMapURL){
const buffer=Buffer.from(sourceMapURL.split(',')[1],'base64');
return JSON.parse(buffer.toString());
}




onScriptParsed(event){
if(event.sourceMapURL){
this._scriptParsedEvents.push(event);
}
}




async beforePass(passContext){
const driver=passContext.driver;
driver.on('Debugger.scriptParsed',this.onScriptParsed);
await driver.sendCommand('Debugger.enable');
}






_resolveUrl(url,base){
try{
return new URL(url,base).href;
}catch(e){
return;
}
}






async _retrieveMapFromScriptParsedEvent(driver,event){
if(!event.sourceMapURL){
throw new Error('precondition failed: event.sourceMapURL should exist');
}



const isSourceMapADataUri=event.sourceMapURL.startsWith('data:');
const scriptUrl=event.url;
const rawSourceMapUrl=isSourceMapADataUri?
event.sourceMapURL:
this._resolveUrl(event.sourceMapURL,event.url);

if(!rawSourceMapUrl){
return{
scriptUrl,
errorMessage:`Could not resolve map url: ${event.sourceMapURL}`};

}


const sourceMapUrl=isSourceMapADataUri?undefined:rawSourceMapUrl;

try{
const map=isSourceMapADataUri?
this.parseSourceMapFromDataUrl(rawSourceMapUrl):
await this.fetchSourceMap(driver,rawSourceMapUrl);
if(map.sections){
map.sections=map.sections.filter(section=>section.map);
}
return{
scriptUrl,
sourceMapUrl,
map};

}catch(err){
return{
scriptUrl,
sourceMapUrl,
errorMessage:err.toString()};

}
}





async afterPass(passContext){
const driver=passContext.driver;

driver.off('Debugger.scriptParsed',this.onScriptParsed);
await driver.sendCommand('Debugger.disable');

await driver.fetcher.enableRequestInterception();
const eventProcessPromises=this._scriptParsedEvents.
map(event=>this._retrieveMapFromScriptParsedEvent(driver,event));
return Promise.all(eventProcessPromises);
}}


module.exports=SourceMaps;

}).call(this,require("buffer").Buffer);
},{"../../lib/url-shim.js":"url","./gatherer.js":61,"buffer":114}],"../gather/gatherers/start-url":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');
const URL=require('../../lib/url-shim.js');



class StartUrl extends Gatherer{





async afterPass(passContext){

await passContext.driver.goOffline();
const result=await this._determineStartUrlAvailability(passContext);
await passContext.driver.goOnline(passContext);

return result;
}






async _determineStartUrlAvailability(passContext){
const WebAppManifest=passContext.baseArtifacts.WebAppManifest;
const startUrlInfo=this._readManifestStartUrl(WebAppManifest);
if(startUrlInfo.isReadFailure){
return{statusCode:-1,explanation:startUrlInfo.reason};
}

try{
const statusAndExplanation=
await this._attemptStartURLFetch(passContext.driver,startUrlInfo.startUrl);
return{url:startUrlInfo.startUrl,...statusAndExplanation};
}catch(err){
return{
url:startUrlInfo.startUrl,
statusCode:-1,
explanation:'Error while fetching start_url via service worker.'};

}
}






_readManifestStartUrl(WebAppManifest){
if(!WebAppManifest||!WebAppManifest.value){
const detailedMsg=WebAppManifest&&WebAppManifest.warning;

if(detailedMsg){
return{isReadFailure:true,reason:`Error fetching web app manifest: ${detailedMsg}.`};
}else{
return{isReadFailure:true,reason:`No usable web app manifest found on page.`};
}
}


return{isReadFailure:false,startUrl:WebAppManifest.value.start_url.value};
}








_attemptStartURLFetch(driver,startUrl){


const timeoutPromise=new Promise(resolve=>
setTimeout(
()=>resolve({
statusCode:-1,
explanation:`Timed out waiting for start_url (${startUrl}) to respond.`}),

3000));



const fetchPromise=new Promise(resolve=>{
driver.on('Network.responseReceived',onResponseReceived);


function onResponseReceived(responseEvent){
const{response}=responseEvent;

if(!URL.equalWithExcludedFragments(response.url,startUrl))return;

driver.off('Network.responseReceived',onResponseReceived);

if(!response.fromServiceWorker){
return resolve({
statusCode:-1,
explanation:'The start_url did respond, but not via a service worker.'});

}

return resolve({statusCode:response.status});
}
});

return driver.
evaluateAsync(`window.location = '${startUrl}'`).
then(()=>Promise.race([fetchPromise,timeoutPromise]));
}}


module.exports=StartUrl;

},{"../../lib/url-shim.js":"url","./gatherer.js":61}],"../gather/gatherers/trace-elements":[function(require,module,exports){





'use strict';







const Gatherer=require('./gatherer.js');
const pageFunctions=require('../../lib/page-functions.js');
const TraceProcessor=require('../../lib/tracehouse/trace-processor.js');
const RectHelpers=require('../../lib/rect-helpers.js');







function setAttributeMarker(metricName){
const elem=this.nodeType===document.ELEMENT_NODE?this:this.parentElement;
let traceElement;
if(elem){
traceElement={
metricName,

devtoolsNodePath:getNodePath(elem),

selector:getNodeSelector(elem),

nodeLabel:getNodeLabel(elem),

snippet:getOuterHTMLSnippet(elem)};

}
return traceElement;
}

class TraceElements extends Gatherer{




static getNodeIDFromTraceEvent(event){
return event&&event.args&&
event.args.data&&event.args.data.nodeId;
}





static traceRectToLHRect(rect){
const rectArgs={
x:rect[0],
y:rect[1],
width:rect[2],
height:rect[3]};

return RectHelpers.addRectTopAndBottom(rectArgs);
}





static getCLSNodeIdsFromMainThreadEvents(mainThreadEvents){
const clsPerNodeMap=new Map();

const clsNodeIds=new Set();
const shiftEvents=mainThreadEvents.
filter(e=>e.name==='LayoutShift').
map(e=>e.args&&e.args.data);

shiftEvents.forEach(event=>{
if(!event){
return;
}

event.impacted_nodes&&event.impacted_nodes.forEach(node=>{
if(!node.node_id||!node.old_rect||!node.new_rect){
return;
}

const oldRect=TraceElements.traceRectToLHRect(node.old_rect);
const newRect=TraceElements.traceRectToLHRect(node.new_rect);
const areaOfImpact=RectHelpers.getRectArea(oldRect)+
RectHelpers.getRectArea(newRect)-
RectHelpers.getRectOverlapArea(oldRect,newRect);

let prevShiftTotal=0;
if(clsPerNodeMap.has(node.node_id)){
prevShiftTotal+=clsPerNodeMap.get(node.node_id);
}
clsPerNodeMap.set(node.node_id,prevShiftTotal+areaOfImpact);
clsNodeIds.add(node.node_id);
});
});

const topFive=[...clsPerNodeMap.entries()].
sort((a,b)=>b[1]-a[1]).
slice(0,5).map(entry=>Number(entry[0]));

return topFive;
}






async afterPass(passContext,loadData){
const driver=passContext.driver;
if(!loadData.trace){
throw new Error('Trace is missing!');
}
const{largestContentfulPaintEvt,mainThreadEvents}=
TraceProcessor.computeTraceOfTab(loadData.trace);

const backendNodeIds=[];

const lcpNodeId=TraceElements.getNodeIDFromTraceEvent(largestContentfulPaintEvt);
const clsNodeIds=TraceElements.getCLSNodeIdsFromMainThreadEvents(mainThreadEvents);
if(lcpNodeId){
backendNodeIds.push(lcpNodeId);
}
backendNodeIds.push(...clsNodeIds);

const traceElements=[];
for(let i=0;i<backendNodeIds.length;i++){
const metricName=
lcpNodeId===backendNodeIds[i]?'largest-contentful-paint':'cumulative-layout-shift';
const resolveNodeResponse=
await driver.sendCommand('DOM.resolveNode',{backendNodeId:backendNodeIds[i]});
const objectId=resolveNodeResponse.object.objectId;
const response=await driver.sendCommand('Runtime.callFunctionOn',{
objectId,
functionDeclaration:`function () {
          ${setAttributeMarker.toString()};
          ${pageFunctions.getNodePathString};
          ${pageFunctions.getNodeSelectorString};
          ${pageFunctions.getNodeLabelString};
          ${pageFunctions.getOuterHTMLSnippetString};
          return setAttributeMarker.call(this, '${metricName}');
        }`,
returnByValue:true,
awaitPromise:true});


if(response&&response.result&&response.result.value){
traceElements.push(response.result.value);
}
}

return traceElements;
}}


module.exports=TraceElements;

},{"../../lib/page-functions.js":87,"../../lib/rect-helpers.js":88,"../../lib/tracehouse/trace-processor.js":96,"./gatherer.js":61}],"../gather/gatherers/viewport-dimensions":[function(require,module,exports){





'use strict';

const Gatherer=require('./gatherer.js');







function getViewportDimensions(){



return Promise.resolve({
innerWidth:window.innerWidth,
innerHeight:window.innerHeight,
outerWidth:window.outerWidth,
outerHeight:window.outerHeight,
devicePixelRatio:window.devicePixelRatio});

}

class ViewportDimensions extends Gatherer{




async afterPass(passContext){
const driver=passContext.driver;


const dimensions=await driver.evaluateAsync(`(${getViewportDimensions.toString()}())`,
{useIsolation:true});

const allNumeric=Object.values(dimensions).every(Number.isFinite);
if(!allNumeric){
const results=JSON.stringify(dimensions);
throw new Error(`ViewportDimensions results were not numeric: ${results}`);
}

return dimensions;
}}


module.exports=ViewportDimensions;

},{"./gatherer.js":61}],1:[function(require,module,exports){
(function(global){





'use strict';

const lighthouse=require('../lighthouse-core/index.js');
const RawProtocol=require('../lighthouse-core/gather/connections/raw.js');
const log=require('lighthouse-logger');
const{registerLocaleData,lookupLocale}=require('../lighthouse-core/lib/i18n/i18n.js');
const desktopDense4G=require('../lighthouse-core/config/constants.js').throttling.desktopDense4G;














function createConfig(categoryIDs,device){

const settings={
onlyCategories:categoryIDs};

if(device==='desktop'){
settings.throttling=desktopDense4G;
}

return{
extends:'lighthouse:default',
plugins:['lighthouse-plugin-publisher-ads'],
settings};

}





function setUpWorkerConnection(port){
return new RawProtocol(port);
}


function listenForStatus(listenCallback){
log.events.addListener('status',listenCallback);
}


if(typeof module!=='undefined'&&module.exports){





global.runBundledLighthouse=lighthouse;
}



if(typeof self!=='undefined'){

global.isDevtools=true;


self.setUpWorkerConnection=setUpWorkerConnection;

self.runLighthouse=lighthouse;

self.createConfig=createConfig;

self.listenForStatus=listenForStatus;

self.registerLocaleData=registerLocaleData;

self.lookupLocale=lookupLocale;
}

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"../lighthouse-core/config/constants.js":53,"../lighthouse-core/gather/connections/raw.js":56,"../lighthouse-core/index.js":62,"../lighthouse-core/lib/i18n/i18n.js":77,"lighthouse-logger":135}],2:[function(require,module,exports){
(function(__filename){





'use strict';






const Audit=require('../audit.js');
const i18n=require('../../lib/i18n/i18n.js');

const UIStrings={

failingElementsHeader:'Failing Elements'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

class AxeAudit extends Audit{








static audit(artifacts){



const notApplicables=artifacts.Accessibility.notApplicable||[];
const isNotApplicable=notApplicables.find(result=>result.id===this.meta.id);
if(isNotApplicable){
return{
score:1,
notApplicable:true};

}




const incomplete=artifacts.Accessibility.incomplete||[];
const incompleteResult=incomplete.find(result=>result.id===this.meta.id);
if(incompleteResult&&incompleteResult.error){
return{
score:null,
errorMessage:`axe-core Error: ${incompleteResult.error.message||'Unknown error'}`};

}

const isInformative=this.meta.scoreDisplayMode===Audit.SCORING_MODES.INFORMATIVE;
const violations=artifacts.Accessibility.violations||[];
const failureCases=isInformative?violations.concat(incomplete):violations;
const rule=failureCases.find(result=>result.id===this.meta.id);
const impact=rule&&rule.impact;
const tags=rule&&rule.tags;




if(isInformative&&!rule){
return{
score:1,
notApplicable:true};

}


let items=[];
if(rule&&rule.nodes){
items=rule.nodes.map(node=>({
node:{
type:'node',
selector:Array.isArray(node.target)?node.target.join(' '):'',
path:node.path,
snippet:node.html||node.snippet,
explanation:node.failureSummary,
nodeLabel:node.nodeLabel}}));


}


const headings=[
{key:'node',itemType:'node',text:str_(UIStrings.failingElementsHeader)}];



let debugData;
if(impact||tags){
debugData={
type:'debugdata',
impact,
tags};

}

return{
score:Number(rule===undefined),
extendedInfo:{
value:rule},

details:{...Audit.makeTableDetails(headings,items),debugData}};

}}


module.exports=AxeAudit;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/audits/accessibility/axe-audit.js");
},{"../../lib/i18n/i18n.js":77,"../audit.js":3}],3:[function(require,module,exports){





'use strict';

const statistics=require('../lib/statistics.js');
const Util=require('../report/html/renderer/util.js');

const DEFAULT_PASS='defaultPass';






const clampTo2Decimals=val=>Math.round(val*100)/100;

class Audit{



static get DEFAULT_PASS(){
return DEFAULT_PASS;
}




static get SCORING_MODES(){
return{
NUMERIC:'numeric',
BINARY:'binary',
MANUAL:'manual',
INFORMATIVE:'informative',
NOT_APPLICABLE:'notApplicable',
ERROR:'error'};

}




static get meta(){
throw new Error('Audit meta information must be overridden.');
}




static get defaultOptions(){
return{};
}









static audit(artifacts,context){
throw new Error('audit() method must be overriden');
}












static computeLogNormalScore(controlPoints,value){
const percentile=statistics.getLogNormalScore(controlPoints,value);
return clampTo2Decimals(percentile);
}







static makeTableDetails(headings,results,summary){
if(results.length===0){
return{
type:'table',
headings:[],
items:[],
summary};

}

return{
type:'table',
headings:headings,
items:results,
summary};

}





static makeListDetails(items){
return{
type:'list',
items:items};

}














static makeSnippetDetails({
content,
title,
lineMessages,
generalMessages,
node,
maxLineLength=200,
maxLinesAroundMessage=20})
{
const allLines=Audit._makeSnippetLinesArray(content,maxLineLength);
const lines=Util.filterRelevantLines(allLines,lineMessages,maxLinesAroundMessage);
return{
type:'snippet',
lines,
title,
lineMessages,
generalMessages,
lineCount:allLines.length,
node};

}






static _makeSnippetLinesArray(content,maxLineLength){
return content.split('\n').map((line,lineIndex)=>{
const lineNumber=lineIndex+1;

const lineDetail={
content:line.slice(0,maxLineLength),
lineNumber};

if(line.length>maxLineLength){
lineDetail.truncated=true;
}
return lineDetail;
});
}








static makeOpportunityDetails(headings,items,overallSavingsMs,overallSavingsBytes){
return{
type:'opportunity',
headings:items.length===0?[]:headings,
items,
overallSavingsMs,
overallSavingsBytes};

}







static _normalizeAuditScore(score,scoreDisplayMode,auditId){
if(scoreDisplayMode!==Audit.SCORING_MODES.BINARY&&
scoreDisplayMode!==Audit.SCORING_MODES.NUMERIC){
return null;
}


if(score===null||!Number.isFinite(score)){
throw new Error(`Invalid score for ${auditId}: ${score}`);
}
if(score>1)throw new Error(`Audit score for ${auditId} is > 1`);
if(score<0)throw new Error(`Audit score for ${auditId} is < 0`);

score=clampTo2Decimals(score);

return score;
}






static generateErrorAuditResult(audit,errorMessage){
return Audit.generateAuditResult(audit,{
score:null,
errorMessage});

}






static generateAuditResult(audit,product){
if(product.score===undefined){
throw new Error('generateAuditResult requires a score');
}


let scoreDisplayMode=audit.meta.scoreDisplayMode||Audit.SCORING_MODES.BINARY;


if(product.errorMessage){

scoreDisplayMode=Audit.SCORING_MODES.ERROR;
}else if(product.notApplicable){

scoreDisplayMode=Audit.SCORING_MODES.NOT_APPLICABLE;
}

const score=Audit._normalizeAuditScore(product.score,scoreDisplayMode,audit.meta.id);

let auditTitle=audit.meta.title;
if(audit.meta.failureTitle){
if(score!==null&&score<Util.PASS_THRESHOLD){
auditTitle=audit.meta.failureTitle;
}
}





const numericProduct='numericUnit'in product?product:undefined;

return{
id:audit.meta.id,
title:auditTitle,
description:audit.meta.description,

score,
scoreDisplayMode,
numericValue:numericProduct&&numericProduct.numericValue,
numericUnit:numericProduct&&numericProduct.numericUnit,

displayValue:product.displayValue,
explanation:product.explanation,
errorMessage:product.errorMessage,
warnings:product.warnings,

details:product.details};

}}


module.exports=Audit;

},{"../lib/statistics.js":92,"../report/html/renderer/util.js":99}],4:[function(require,module,exports){
(function(__filename){





'use strict';

const Audit=require('../audit.js');
const linearInterpolation=require('../../lib/statistics.js').linearInterpolation;
const Interactive=require('../../computed/metrics/lantern-interactive.js');
const i18n=require('../../lib/i18n/i18n.js');
const NetworkRecords=require('../../computed/network-records.js');
const LoadSimulator=require('../../computed/load-simulator.js');
const PageDependencyGraph=require('../../computed/page-dependency-graph.js');

const str_=i18n.createMessageInstanceIdFn(__filename,{});




const KB_IN_BYTES=1024;

const WASTED_MS_FOR_AVERAGE=300;
const WASTED_MS_FOR_POOR=750;
const WASTED_MS_FOR_SCORE_OF_ZERO=5000;















class UnusedBytes extends Audit{






static scoreForWastedMs(wastedMs){
if(wastedMs===0){
return 1;
}else if(wastedMs<WASTED_MS_FOR_AVERAGE){
return linearInterpolation(0,1,WASTED_MS_FOR_AVERAGE,0.75,wastedMs);
}else if(wastedMs<WASTED_MS_FOR_POOR){
return linearInterpolation(WASTED_MS_FOR_AVERAGE,0.75,WASTED_MS_FOR_POOR,0.5,wastedMs);
}else{
return Math.max(
0,
linearInterpolation(WASTED_MS_FOR_POOR,0.5,WASTED_MS_FOR_SCORE_OF_ZERO,0,wastedMs));

}
}










static estimateTransferSize(networkRecord,totalBytes,resourceType){
if(!networkRecord){




switch(resourceType){
case'Stylesheet':

return Math.round(totalBytes*0.2);
case'Script':
case'Document':

return Math.round(totalBytes*0.33);
default:

return Math.round(totalBytes*0.5);}

}else if(networkRecord.resourceType===resourceType){

return networkRecord.transferSize||0;
}else{


const transferSize=networkRecord.transferSize||0;
const resourceSize=networkRecord.resourceSize||0;

const compressionRatio=Number.isFinite(resourceSize)&&resourceSize>0?
transferSize/resourceSize:1;
return Math.round(totalBytes*compressionRatio);
}
}






static audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const settings=context&&context.settings||{};
const simulatorOptions={
devtoolsLog,
settings};


return NetworkRecords.request(devtoolsLog,context).
then(networkRecords=>
Promise.all([
this.audit_(artifacts,networkRecords,context),
PageDependencyGraph.request({trace,devtoolsLog},context),
LoadSimulator.request(simulatorOptions,context)])).


then(([result,graph,simulator])=>this.createAuditProduct(result,graph,simulator));
}













static computeWasteWithTTIGraph(results,graph,simulator,options){
options=Object.assign({includeLoad:true,label:this.meta.id},options);
const beforeLabel=`${options.label}-before`;
const afterLabel=`${options.label}-after`;

const simulationBeforeChanges=simulator.simulate(graph,{label:beforeLabel});

const wastedBytesByUrl=options.providedWastedBytesByUrl||new Map();
if(!options.providedWastedBytesByUrl){
for(const{url,wastedBytes}of results){
wastedBytesByUrl.set(url,(wastedBytesByUrl.get(url)||0)+wastedBytes);
}
}



const originalTransferSizes=new Map();
graph.traverse(node=>{
if(node.type!=='network')return;
const wastedBytes=wastedBytesByUrl.get(node.record.url);
if(!wastedBytes)return;

const original=node.record.transferSize;
originalTransferSizes.set(node.record.requestId,original);

node.record.transferSize=Math.max(original-wastedBytes,0);
});

const simulationAfterChanges=simulator.simulate(graph,{label:afterLabel});


graph.traverse(node=>{
if(node.type!=='network')return;
const originalTransferSize=originalTransferSizes.get(node.record.requestId);
if(originalTransferSize===undefined)return;
node.record.transferSize=originalTransferSize;
});

const savingsOnOverallLoad=simulationBeforeChanges.timeInMs-simulationAfterChanges.timeInMs;
const savingsOnTTI=Interactive.getLastLongTaskEndTime(simulationBeforeChanges.nodeTimings)-
Interactive.getLastLongTaskEndTime(simulationAfterChanges.nodeTimings);

let savings=savingsOnTTI;
if(options.includeLoad)savings=Math.max(savings,savingsOnOverallLoad);


return Math.round(Math.max(savings,0)/10)*10;
}







static createAuditProduct(result,graph,simulator){
const results=result.items.sort((itemA,itemB)=>itemB.wastedBytes-itemA.wastedBytes);

const wastedBytes=results.reduce((sum,item)=>sum+item.wastedBytes,0);
const wastedKb=Math.round(wastedBytes/KB_IN_BYTES);
const wastedMs=this.computeWasteWithTTIGraph(results,graph,simulator,{
providedWastedBytesByUrl:result.wastedBytesByUrl});


let displayValue=result.displayValue||'';
if(typeof result.displayValue==='undefined'&&wastedBytes){
displayValue=str_(i18n.UIStrings.displayValueByteSavings,{wastedBytes});
}

const details=Audit.makeOpportunityDetails(result.headings,results,wastedMs,wastedBytes);

return{
explanation:result.explanation,
warnings:result.warnings,
displayValue,
numericValue:wastedMs,
numericUnit:'millisecond',
score:UnusedBytes.scoreForWastedMs(wastedMs),
extendedInfo:{
value:{
wastedMs,
wastedKb,
results}},


details};

}









static audit_(artifacts,networkRecords,context){
throw new Error('audit_ unimplemented');
}}




module.exports=UnusedBytes;

}).call(this,"/lighthouse-core/audits/byte-efficiency/byte-efficiency-audit.js");
},{"../../computed/load-simulator.js":11,"../../computed/metrics/lantern-interactive.js":25,"../../computed/network-records.js":39,"../../computed/page-dependency-graph.js":40,"../../lib/i18n/i18n.js":77,"../../lib/statistics.js":92,"../audit.js":3}],5:[function(require,module,exports){





'use strict';






const Audit=require('../audit.js');

class ManualAudit extends Audit{



static get partialMeta(){
return{
scoreDisplayMode:Audit.SCORING_MODES.MANUAL,
requiredArtifacts:[]};

}




static audit(){
return{
score:0};


}}


module.exports=ManualAudit;

},{"../audit.js":3}],6:[function(require,module,exports){





'use strict';





const Audit=require('./audit.js');

class MultiCheckAudit extends Audit{





static async audit(artifacts,context){
const multiProduct=await this.audit_(artifacts,context);
return this.createAuditProduct(multiProduct);
}





static createAuditProduct(result){

const detailsItem={
...result,
...result.manifestValues,
manifestValues:undefined,
allChecks:undefined};


if(result.manifestValues&&result.manifestValues.allChecks){
result.manifestValues.allChecks.forEach(check=>{
detailsItem[check.id]=check.passing;
});
}



const details={
type:'debugdata',

items:[detailsItem]};



if(result.failures.length>0){
return{
score:0,

explanation:`Failures: ${result.failures.join(',\n')}.`,
details};

}


return{
score:1,
details};

}








static audit_(artifacts,context){
throw new Error('audit_ unimplemented');
}}




module.exports=MultiCheckAudit;

},{"./audit.js":3}],7:[function(require,module,exports){





'use strict';

const Audit=require('./audit.js');

class ViolationAudit extends Audit{





static getViolationResults(artifacts,pattern){
const seen=new Set();
return artifacts.ConsoleMessages.
map(message=>message.entry).
filter(entry=>entry.url&&entry.source==='violation'&&pattern.test(entry.text)).
map(entry=>({label:`line: ${entry.lineNumber}`,url:entry.url})).
filter(entry=>{


const key=`${entry.url}!${entry.label}`;
if(seen.has(key))return false;
seen.add(key);
return true;
});
}}


module.exports=ViolationAudit;

},{"./audit.js":3}],8:[function(require,module,exports){





'use strict';

const ArbitraryEqualityMap=require('../lib/arbitrary-equality-map.js');
const log=require('lighthouse-logger');







function makeComputedArtifact(computableArtifact){









const request=(artifacts,context)=>{

const computedCache=context.computedCache;
const computedName=computableArtifact.name;

const cache=computedCache.get(computedName)||new ArbitraryEqualityMap();
computedCache.set(computedName,cache);

const computed=cache.get(artifacts);
if(computed){
return computed;
}

const status={msg:`Computing artifact: ${computedName}`,id:`lh:computed:${computedName}`};
log.time(status,'verbose');

const artifactPromise=
computableArtifact.compute_(artifacts,context);
cache.set(artifacts,artifactPromise);

artifactPromise.then(()=>log.timeEnd(status)).catch(()=>log.timeEnd(status));

return artifactPromise;
};

return Object.assign(computableArtifact,{request});
}

module.exports=makeComputedArtifact;

},{"../lib/arbitrary-equality-map.js":63,"lighthouse-logger":135}],9:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const NetworkRequest=require('../lib/network-request.js');
const NetworkRecords=require('./network-records.js');
const MainResource=require('./main-resource.js');

class CriticalRequestChains{








static isCritical(request,mainResource){
if(!mainResource){
throw new Error('mainResource not provided');
}


if(request.isLinkPreload){
return false;
}





while(request.redirectDestination){
request=request.redirectDestination;
}


const isIframe=request.resourceType===NetworkRequest.TYPES.Document&&
request.frameId!==mainResource.frameId;




const nonCriticalResourceTypes=[
NetworkRequest.TYPES.Image,
NetworkRequest.TYPES.XHR,
NetworkRequest.TYPES.Fetch,
NetworkRequest.TYPES.EventSource];

if(nonCriticalResourceTypes.includes(request.resourceType||'Other')||
isIframe||
request.mimeType&&request.mimeType.startsWith('image/')){
return false;
}

return['VeryHigh','High','Medium'].includes(request.priority);
}






static extractChain(networkRecords,mainResource){
networkRecords=networkRecords.filter(req=>req.finished);



const requestIdToRequests=new Map();
for(const request of networkRecords){
requestIdToRequests.set(request.requestId,request);
}



const criticalRequests=networkRecords.filter(request=>
CriticalRequestChains.isCritical(request,mainResource));



const criticalRequestChains={};
for(const request of criticalRequests){




const ancestors=[];
let ancestorRequest=request.initiatorRequest;

let node=criticalRequestChains;
while(ancestorRequest){
const ancestorIsCritical=CriticalRequestChains.isCritical(ancestorRequest,mainResource);





if(!ancestorIsCritical||ancestors.includes(ancestorRequest.requestId)){


ancestors.length=0;
node=undefined;
break;
}
ancestors.push(ancestorRequest.requestId);
ancestorRequest=ancestorRequest.initiatorRequest;
}



let ancestor=ancestors.pop();
while(ancestor&&node){
const parentRequest=requestIdToRequests.get(ancestor);
if(!parentRequest){
throw new Error(`request with id ${ancestor} not found.`);
}

const parentRequestId=parentRequest.requestId;
if(!node[parentRequestId]){
node[parentRequestId]={
request:parentRequest,
children:{}};

}


ancestor=ancestors.pop();
node=node[parentRequestId].children;
}

if(!node){
continue;
}


if(node[request.requestId]){
continue;
}


node[request.requestId]={
request,
children:{}};

}

return criticalRequestChains;
}






static async compute_(data,context){
const[networkRecords,mainResource]=await Promise.all([
NetworkRecords.request(data.devtoolsLog,context),
MainResource.request(data,context)]);


return CriticalRequestChains.extractChain(networkRecords,mainResource);
}}


module.exports=makeComputedArtifact(CriticalRequestChains);

},{"../lib/network-request.js":86,"./computed-artifact.js":8,"./main-resource.js":12,"./network-records.js":39}],10:[function(require,module,exports){





'use strict';

const log=require('lighthouse-logger');
const makeComputedArtifact=require('./computed-artifact.js');
const SDK=require('../lib/cdt/SDK.js');







function computeGeneratedFileSizes(map,content){
const lines=content.split('\n');

const files={};
const totalBytes=content.length;
let unmappedBytes=totalBytes;



const failureResult={files:{},unmappedBytes,totalBytes};


map.computeLastGeneratedColumns();

for(const mapping of map.mappings()){
const source=mapping.sourceURL;
const lineNum=mapping.lineNumber;
const colNum=mapping.columnNumber;

const lastColNum=mapping.lastColumnNumber;



if(!source)continue;



const line=lines[lineNum];
if(line===null){
log.error('JSBundles',`${map.url()} mapping for line out of bounds: ${lineNum+1}`);
return failureResult;
}

if(colNum>line.length){

log.error('JSBundles',`${map.url()} mapping for column out of bounds: ${lineNum+1}:${colNum}`);
return failureResult;
}

let mappingLength=0;
if(lastColNum!==undefined){
if(lastColNum>line.length){

log.error('JSBundles',`${map.url()} mapping for last column out of bounds: ${lineNum+1}:${lastColNum}`);
return failureResult;
}
mappingLength=lastColNum-colNum;
}else{

mappingLength=line.length-colNum+1;
}
files[source]=(files[source]||0)+mappingLength;
unmappedBytes-=mappingLength;
}

return{
files,
unmappedBytes,
totalBytes};

}

class JSBundles{



static async compute_(artifacts){
const{SourceMaps,ScriptElements}=artifacts;


const bundles=[];


for(const SourceMap of SourceMaps){
if(!SourceMap.map)continue;
const{scriptUrl,map:rawMap}=SourceMap;

if(!rawMap.mappings)continue;

const scriptElement=ScriptElements.find(s=>s.src===scriptUrl);
if(!scriptElement)continue;

const compiledUrl=SourceMap.scriptUrl||'compiled.js';
const mapUrl=SourceMap.sourceMapUrl||'compiled.js.map';

const rawMapForCdt=rawMap;
const map=new SDK.TextSourceMap(compiledUrl,mapUrl,rawMapForCdt);

const content=scriptElement&&scriptElement.content?scriptElement.content:'';
const sizes=computeGeneratedFileSizes(map,content);

const bundle={
rawMap,
script:scriptElement,
map,
sizes};

bundles.push(bundle);
}

return bundles;
}}


module.exports=makeComputedArtifact(JSBundles);

},{"../lib/cdt/SDK.js":66,"./computed-artifact.js":8,"lighthouse-logger":135}],11:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const constants=require('../config/constants.js');
const Simulator=require('../lib/dependency-graph/simulator/simulator.js');
const NetworkAnalysis=require('./network-analysis.js');

class LoadSimulator{





static async compute_(data,context){
const{throttlingMethod,throttling,precomputedLanternData}=data.settings;
const networkAnalysis=await NetworkAnalysis.request(data.devtoolsLog,context);


const options={
additionalRttByOrigin:networkAnalysis.additionalRttByOrigin,
serverResponseTimeByOrigin:networkAnalysis.serverResponseTimeByOrigin};




if(precomputedLanternData){
options.additionalRttByOrigin=new Map(Object.entries(
precomputedLanternData.additionalRttByOrigin));
options.serverResponseTimeByOrigin=new Map(Object.entries(
precomputedLanternData.serverResponseTimeByOrigin));
}

switch(throttlingMethod){
case'provided':
options.rtt=networkAnalysis.rtt;
options.throughput=networkAnalysis.throughput;
options.cpuSlowdownMultiplier=1;
options.layoutTaskMultiplier=1;
break;
case'devtools':
if(throttling){
options.rtt=
throttling.requestLatencyMs/constants.throttling.DEVTOOLS_RTT_ADJUSTMENT_FACTOR;
options.throughput=
throttling.downloadThroughputKbps*1024/
constants.throttling.DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR;
}

options.cpuSlowdownMultiplier=1;
options.layoutTaskMultiplier=1;
break;
case'simulate':
if(throttling){
options.rtt=throttling.rttMs;
options.throughput=throttling.throughputKbps*1024;
options.cpuSlowdownMultiplier=throttling.cpuSlowdownMultiplier;
}
break;
default:

break;}


return new Simulator(options);
}





static convertAnalysisToSaveableLanternData(networkAnalysis){

const lanternData={additionalRttByOrigin:{},serverResponseTimeByOrigin:{}};
for(const[origin,value]of networkAnalysis.additionalRttByOrigin.entries()){
if(origin.startsWith('http'))lanternData.additionalRttByOrigin[origin]=value;
}

for(const[origin,value]of networkAnalysis.serverResponseTimeByOrigin.entries()){
if(origin.startsWith('http'))lanternData.serverResponseTimeByOrigin[origin]=value;
}

return lanternData;
}}


module.exports=makeComputedArtifact(LoadSimulator);

},{"../config/constants.js":53,"../lib/dependency-graph/simulator/simulator.js":74,"./computed-artifact.js":8,"./network-analysis.js":38}],12:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const NetworkAnalyzer=require('../lib/dependency-graph/simulator/network-analyzer.js');
const NetworkRecords=require('./network-records.js');





class MainResource{





static async compute_(data,context){
const finalUrl=data.URL.finalUrl;
const requests=await NetworkRecords.request(data.devtoolsLog,context);
const mainResource=NetworkAnalyzer.findMainDocument(requests,finalUrl);
if(!mainResource){
throw new Error('Unable to identify the main resource');
}

return mainResource;
}}


module.exports=makeComputedArtifact(MainResource);

},{"../lib/dependency-graph/simulator/network-analyzer.js":73,"./computed-artifact.js":8,"./network-records.js":39}],13:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const MainThreadTasks_=require('../lib/tracehouse/main-thread-tasks.js');
const TraceOfTab=require('./trace-of-tab.js');

class MainThreadTasks{





static async compute_(trace,context){
const{mainThreadEvents,frames,timestamps}=await TraceOfTab.request(trace,context);
return MainThreadTasks_.getMainThreadTasks(mainThreadEvents,frames,timestamps.traceEnd);
}}


module.exports=makeComputedArtifact(MainThreadTasks);

},{"../lib/tracehouse/main-thread-tasks.js":94,"./computed-artifact.js":8,"./trace-of-tab.js":44}],14:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const icons=require('../lib/icons.js');

const PWA_DISPLAY_VALUES=['minimal-ui','fullscreen','standalone'];



const SUGGESTED_SHORTNAME_LENGTH=12;

class ManifestValues{





static get manifestChecks(){
return[
{
id:'hasStartUrl',
failureText:'Manifest does not contain a `start_url`',
validate:manifestValue=>!!manifestValue.start_url.value},

{
id:'hasIconsAtLeast144px',
failureText:'Manifest does not have a PNG icon of at least 144px',
validate:manifestValue=>icons.doExist(manifestValue)&&
icons.pngSizedAtLeast(144,manifestValue).length>0},

{
id:'hasIconsAtLeast512px',
failureText:'Manifest does not have a PNG icon of at least 512px',
validate:manifestValue=>icons.doExist(manifestValue)&&
icons.pngSizedAtLeast(512,manifestValue).length>0},

{
id:'fetchesIcon',
failureText:'Manifest icon failed to be fetched',
validate:(manifestValue,errors)=>{
const failedToFetchIconErrorIds=[
'cannot-download-icon',
'no-icon-available'];

return icons.doExist(manifestValue)&&
!errors.some(error=>failedToFetchIconErrorIds.includes(error.errorId));
}},

{
id:'hasPWADisplayValue',
failureText:'Manifest\'s `display` value is not one of: '+PWA_DISPLAY_VALUES.join(' | '),
validate:manifestValue=>PWA_DISPLAY_VALUES.includes(manifestValue.display.value)},

{
id:'hasBackgroundColor',
failureText:'Manifest does not have `background_color`',
validate:manifestValue=>!!manifestValue.background_color.value},

{
id:'hasThemeColor',
failureText:'Manifest does not have `theme_color`',
validate:manifestValue=>!!manifestValue.theme_color.value},

{
id:'hasShortName',
failureText:'Manifest does not have `short_name`',
validate:manifestValue=>!!manifestValue.short_name.value},

{
id:'shortNameLength',
failureText:`Manifest's \`short_name\` is too long (>${SUGGESTED_SHORTNAME_LENGTH} `+
`characters) to be displayed on a homescreen without truncation`,

validate:manifestValue=>!!manifestValue.short_name.value&&
manifestValue.short_name.value.length<=SUGGESTED_SHORTNAME_LENGTH},

{
id:'hasName',
failureText:'Manifest does not have `name`',
validate:manifestValue=>!!manifestValue.name.value},

{
id:'hasMaskableIcon',
failureText:'Manifest does not have at least one icon that is maskable',
validate:ManifestValue=>icons.doExist(ManifestValue)&&
icons.containsMaskableIcon(ManifestValue)}];


}






static async compute_({WebAppManifest,InstallabilityErrors}){

if(WebAppManifest===null){
return{
isParseFailure:true,
parseFailureReason:'No manifest was fetched',
allChecks:[]};

}
const manifestValue=WebAppManifest.value;
if(manifestValue===undefined){
return{
isParseFailure:true,
parseFailureReason:'Manifest failed to parse as valid JSON',
allChecks:[]};

}


const remainingChecks=ManifestValues.manifestChecks.map(item=>{
return{
id:item.id,
failureText:item.failureText,
passing:item.validate(manifestValue,InstallabilityErrors.errors)};

});

return{
isParseFailure:false,
allChecks:remainingChecks};

}}


module.exports=makeComputedArtifact(ManifestValues);

},{"../lib/icons.js":79,"./computed-artifact.js":8}],15:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const TraceOfTab=require('../trace-of-tab.js');
const LHError=require('../../lib/lh-error.js');

class CumulativeLayoutShift{





static async compute_(trace,context){
const traceOfTab=await TraceOfTab.request(trace,context);


let finalLayoutShift;
for(let i=traceOfTab.mainThreadEvents.length-1;i>=0;i--){
const evt=traceOfTab.mainThreadEvents[i];
if(evt.name==='LayoutShift'&&evt.args&&evt.args.data&&evt.args.data.is_main_frame){
finalLayoutShift=evt;
break;
}
}

const finalLayoutShiftTraceEventFound=!!finalLayoutShift;


if(!finalLayoutShift){
return{
value:0,
debugInfo:{
finalLayoutShiftTraceEventFound}};


}

const cumulativeLayoutShift=
finalLayoutShift.args&&
finalLayoutShift.args.data&&
finalLayoutShift.args.data.cumulative_score;

if(cumulativeLayoutShift===undefined){
throw new LHError(LHError.errors.LAYOUT_SHIFT_MISSING_DATA);
}

return{
value:cumulativeLayoutShift,
debugInfo:{
finalLayoutShiftTraceEventFound}};


}}


module.exports=makeComputedArtifact(CumulativeLayoutShift);

},{"../../lib/lh-error.js":82,"../computed-artifact.js":8,"../trace-of-tab.js":44}],16:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const ComputedMetric=require('./metric.js');
const LHError=require('../../lib/lh-error.js');
const TracingProcessor=require('../../lib/tracehouse/trace-processor.js');
const LanternEstimatedInputLatency=require('./lantern-estimated-input-latency.js');

const ROLLING_WINDOW_SIZE=5000;






class EstimatedInputLatency extends ComputedMetric{




static calculateRollingWindowEIL(events){
const candidateStartEvts=events.filter(evt=>evt.duration>=10);

let worst90thPercentileLatency=16;
for(const startEvt of candidateStartEvts){
const latencyPercentiles=TracingProcessor.getRiskToResponsiveness(
events,
startEvt.start,
startEvt.start+ROLLING_WINDOW_SIZE,
[0.9]);


worst90thPercentileLatency=Math.max(latencyPercentiles[0].time,worst90thPercentileLatency);
}

return worst90thPercentileLatency;
}






static computeSimulatedMetric(data,context){
return LanternEstimatedInputLatency.request(data,context);
}





static computeObservedMetric(data){
const{firstMeaningfulPaint}=data.traceOfTab.timings;
if(!firstMeaningfulPaint){
throw new LHError(LHError.errors.NO_FMP);
}

const events=TracingProcessor.getMainThreadTopLevelEvents(
data.traceOfTab,
firstMeaningfulPaint).
filter(evt=>evt.duration>=1);

return Promise.resolve({
timing:EstimatedInputLatency.calculateRollingWindowEIL(events)});

}}


module.exports=makeComputedArtifact(EstimatedInputLatency);

},{"../../lib/lh-error.js":82,"../../lib/tracehouse/trace-processor.js":96,"../computed-artifact.js":8,"./lantern-estimated-input-latency.js":21,"./metric.js":33}],17:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const ComputedMetric=require('./metric.js');
const LanternFirstContentfulPaint=require('./lantern-first-contentful-paint.js');

class FirstContentfulPaint extends ComputedMetric{





static computeSimulatedMetric(data,context){
return LanternFirstContentfulPaint.request(data,context);
}





static async computeObservedMetric(data){
const{traceOfTab}=data;

return{
timing:traceOfTab.timings.firstContentfulPaint,
timestamp:traceOfTab.timestamps.firstContentfulPaint};

}}


module.exports=makeComputedArtifact(FirstContentfulPaint);

},{"../computed-artifact.js":8,"./lantern-first-contentful-paint.js":22,"./metric.js":33}],18:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const ComputedMetric=require('./metric.js');
const TracingProcessor=require('../../lib/tracehouse/trace-processor.js');
const LHError=require('../../lib/lh-error.js');
const LanternFirstCPUIdle=require('./lantern-first-cpu-idle.js');

const LONG_TASK_THRESHOLD=50;

const MAX_TASK_CLUSTER_DURATION=250;
const MIN_TASK_CLUSTER_PADDING=1000;
const MIN_TASK_CLUSTER_FMP_DISTANCE=5000;

const MAX_QUIET_WINDOW_SIZE=5000;


const EXPONENTIATION_COEFFICIENT=-Math.log(3-1)/15;





























class FirstCPUIdle extends ComputedMetric{




static getRequiredWindowSizeInMs(t){
const tInSeconds=t/1000;
const exponentiationComponent=Math.exp(EXPONENTIATION_COEFFICIENT*tInSeconds);
return(4*exponentiationComponent+1)*1000;
}










static getTaskClustersInWindow(tasks,startIndex,windowEnd){
const clusters=[];

let previousTaskEndTime=-Infinity;

let currentCluster=[];





const clusteringWindowEnd=windowEnd+MIN_TASK_CLUSTER_PADDING;

const isInClusteringWindow=task=>task.start<clusteringWindowEnd;
for(let i=startIndex;i<tasks.length;i++){
if(!isInClusteringWindow(tasks[i])){
break;
}

const task=tasks[i];


if(task.start-previousTaskEndTime>MIN_TASK_CLUSTER_PADDING){
currentCluster=[];
clusters.push(currentCluster);
}

currentCluster.push(task);
previousTaskEndTime=task.end;
}

return clusters.

map(tasks=>{
const start=tasks[0].start;
const end=tasks[tasks.length-1].end;
const duration=end-start;
return{start,end,duration};
}).

filter(cluster=>cluster.start<windowEnd);
}










static findQuietWindow(FMP,traceEnd,longTasks){

if(longTasks.length===0||
longTasks[0].start>FMP+FirstCPUIdle.getRequiredWindowSizeInMs(0)){
return FMP;
}


const isTooCloseToFMP=cluster=>cluster.start<FMP+MIN_TASK_CLUSTER_FMP_DISTANCE;

const isTooLong=cluster=>cluster.duration>MAX_TASK_CLUSTER_DURATION;

const isBadCluster=cluster=>isTooCloseToFMP(cluster)||isTooLong(cluster);



for(let i=0;i<longTasks.length;i++){
const windowStart=longTasks[i].end;
const windowSize=FirstCPUIdle.getRequiredWindowSizeInMs(windowStart-FMP);
const windowEnd=windowStart+windowSize;


if(windowEnd>traceEnd){
throw new LHError(LHError.errors.NO_FCPUI_IDLE_PERIOD);
}


if(i+1<longTasks.length&&
longTasks[i+1].start-windowStart<=MIN_TASK_CLUSTER_PADDING){
continue;
}

const taskClusters=FirstCPUIdle.getTaskClustersInWindow(longTasks,i+1,windowEnd);
const hasBadTaskClusters=taskClusters.some(isBadCluster);

if(!hasBadTaskClusters){
return windowStart;
}
}

throw new LHError(LHError.errors.NO_FCPUI_IDLE_PERIOD);
}






static computeSimulatedMetric(data,context){
return LanternFirstCPUIdle.request(data,context);
}





static async computeObservedMetric(data){
const{traceOfTab}=data;
const navStart=traceOfTab.timestamps.navigationStart;
const FMP=traceOfTab.timings.firstMeaningfulPaint;
const DCL=traceOfTab.timings.domContentLoaded;
const traceEnd=traceOfTab.timings.traceEnd;

if(!FMP||!DCL){
throw new LHError(FMP?LHError.errors.NO_DCL:LHError.errors.NO_FMP);
}

if(traceEnd-FMP<MAX_QUIET_WINDOW_SIZE){
throw new LHError(LHError.errors.FMP_TOO_LATE_FOR_FCPUI);
}

const longTasksAfterFMP=TracingProcessor.getMainThreadTopLevelEvents(traceOfTab,FMP).
filter(evt=>evt.duration>=LONG_TASK_THRESHOLD);
const firstInteractive=FirstCPUIdle.findQuietWindow(FMP,traceEnd,longTasksAfterFMP);

const valueInMs=Math.max(firstInteractive,DCL);

return Promise.resolve({
timing:valueInMs,
timestamp:valueInMs*1000+navStart});

}}







module.exports=makeComputedArtifact(FirstCPUIdle);

},{"../../lib/lh-error.js":82,"../../lib/tracehouse/trace-processor.js":96,"../computed-artifact.js":8,"./lantern-first-cpu-idle.js":23,"./metric.js":33}],19:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const ComputedMetric=require('./metric.js');
const LHError=require('../../lib/lh-error.js');
const LanternFirstMeaningfulPaint=require('./lantern-first-meaningful-paint.js');

class FirstMeaningfulPaint extends ComputedMetric{





static computeSimulatedMetric(data,context){
return LanternFirstMeaningfulPaint.request(data,context);
}





static async computeObservedMetric(data){
const{traceOfTab}=data;
if(!traceOfTab.timestamps.firstMeaningfulPaint){
throw new LHError(LHError.errors.NO_FMP);
}

return{

timing:traceOfTab.timings.firstMeaningfulPaint,
timestamp:traceOfTab.timestamps.firstMeaningfulPaint};

}}


module.exports=makeComputedArtifact(FirstMeaningfulPaint);

},{"../../lib/lh-error.js":82,"../computed-artifact.js":8,"./lantern-first-meaningful-paint.js":24,"./metric.js":33}],20:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const ComputedMetric=require('./metric.js');
const LanternInteractive=require('./lantern-interactive.js');

const NetworkRecorder=require('../../lib/network-recorder.js');
const TracingProcessor=require('../../lib/tracehouse/trace-processor.js');
const LHError=require('../../lib/lh-error.js');

const REQUIRED_QUIET_WINDOW=5000;
const ALLOWED_CONCURRENT_REQUESTS=2;






class Interactive extends ComputedMetric{







static _findNetworkQuietPeriods(networkRecords,traceOfTab){
const traceEndTsInMs=traceOfTab.timestamps.traceEnd/1000;

const filteredNetworkRecords=networkRecords.filter(record=>{
return record.finished&&record.requestMethod==='GET'&&!record.failed&&

record.statusCode<400;
});
return NetworkRecorder.findNetworkQuietPeriods(filteredNetworkRecords,
ALLOWED_CONCURRENT_REQUESTS,traceEndTsInMs);
}







static _findCPUQuietPeriods(longTasks,traceOfTab){
const navStartTsInMs=traceOfTab.timestamps.navigationStart/1000;
const traceEndTsInMs=traceOfTab.timestamps.traceEnd/1000;
if(longTasks.length===0){
return[{start:0,end:traceEndTsInMs}];
}


const quietPeriods=[];
longTasks.forEach((task,index)=>{
if(index===0){
quietPeriods.push({
start:0,
end:task.start+navStartTsInMs});

}

if(index===longTasks.length-1){
quietPeriods.push({
start:task.end+navStartTsInMs,
end:traceEndTsInMs});

}else{
quietPeriods.push({
start:task.end+navStartTsInMs,
end:longTasks[index+1].start+navStartTsInMs});

}
});

return quietPeriods;
}








static findOverlappingQuietPeriods(longTasks,networkRecords,traceOfTab){
const FcpTsInMs=traceOfTab.timestamps.firstContentfulPaint/1000;


const isLongEnoughQuietPeriod=period=>
period.end>FcpTsInMs+REQUIRED_QUIET_WINDOW&&
period.end-period.start>=REQUIRED_QUIET_WINDOW;
const networkQuietPeriods=this._findNetworkQuietPeriods(networkRecords,traceOfTab).
filter(isLongEnoughQuietPeriod);
const cpuQuietPeriods=this._findCPUQuietPeriods(longTasks,traceOfTab).
filter(isLongEnoughQuietPeriod);

const cpuQueue=cpuQuietPeriods.slice();
const networkQueue=networkQuietPeriods.slice();


let cpuCandidate=cpuQueue.shift();
let networkCandidate=networkQueue.shift();
while(cpuCandidate&&networkCandidate){
if(cpuCandidate.start>=networkCandidate.start){

if(networkCandidate.end>=cpuCandidate.start+REQUIRED_QUIET_WINDOW){
return{
cpuQuietPeriod:cpuCandidate,
networkQuietPeriod:networkCandidate,
cpuQuietPeriods,
networkQuietPeriods};

}else{
networkCandidate=networkQueue.shift();
}
}else{

if(cpuCandidate.end>=networkCandidate.start+REQUIRED_QUIET_WINDOW){
return{
cpuQuietPeriod:cpuCandidate,
networkQuietPeriod:networkCandidate,
cpuQuietPeriods,
networkQuietPeriods};

}else{
cpuCandidate=cpuQueue.shift();
}
}
}

throw new LHError(
cpuCandidate?
LHError.errors.NO_TTI_NETWORK_IDLE_PERIOD:
LHError.errors.NO_TTI_CPU_IDLE_PERIOD);

}






static computeSimulatedMetric(data,context){
return LanternInteractive.request(data,context);
}





static computeObservedMetric(data){
const{traceOfTab,networkRecords}=data;

if(!traceOfTab.timestamps.domContentLoaded){
throw new LHError(LHError.errors.NO_DCL);
}

const longTasks=TracingProcessor.getMainThreadTopLevelEvents(traceOfTab).
filter(event=>event.duration>=50);
const quietPeriodInfo=Interactive.findOverlappingQuietPeriods(
longTasks,
networkRecords,
traceOfTab);


const cpuQuietPeriod=quietPeriodInfo.cpuQuietPeriod;

const timestamp=Math.max(
cpuQuietPeriod.start,
traceOfTab.timestamps.firstContentfulPaint/1000,
traceOfTab.timestamps.domContentLoaded/1000)*
1000;
const timing=(timestamp-traceOfTab.timestamps.navigationStart)/1000;
return Promise.resolve({timing,timestamp});
}}


module.exports=makeComputedArtifact(Interactive);







},{"../../lib/lh-error.js":82,"../../lib/network-recorder.js":85,"../../lib/tracehouse/trace-processor.js":96,"../computed-artifact.js":8,"./lantern-interactive.js":25,"./metric.js":33}],21:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const LanternMetric=require('./lantern-metric.js');
const BaseNode=require('../../lib/dependency-graph/base-node.js');
const LanternFirstMeaningfulPaint=require('./lantern-first-meaningful-paint.js');



class LanternEstimatedInputLatency extends LanternMetric{



static get COEFFICIENTS(){
return{
intercept:0,
optimistic:0.4,
pessimistic:0.4};

}





static getOptimisticGraph(dependencyGraph){
return dependencyGraph;
}





static getPessimisticGraph(dependencyGraph){
return dependencyGraph;
}






static getEstimateFromSimulation(simulation,extras){
if(!extras.fmpResult)throw new Error('missing fmpResult');



const fmpTimeInMs=extras.optimistic?
extras.fmpResult.pessimisticEstimate.timeInMs:
extras.fmpResult.optimisticEstimate.timeInMs;

const events=LanternEstimatedInputLatency.getEventsAfterFMP(
simulation.nodeTimings,
fmpTimeInMs);



const EstimatedInputLatency=require('./estimated-input-latency.js');

return{
timeInMs:EstimatedInputLatency.calculateRollingWindowEIL(events),
nodeTimings:simulation.nodeTimings};

}






static async compute_(data,context){
const fmpResult=await LanternFirstMeaningfulPaint.request(data,context);
return this.computeMetricWithGraphs(data,context,{fmpResult});
}





static getEventsAfterFMP(nodeTimings,fmpTimeInMs){

const events=[];
for(const[node,timing]of nodeTimings.entries()){
if(node.type!==BaseNode.TYPES.CPU)continue;
if(timing.endTime<fmpTimeInMs)continue;

events.push({
start:timing.startTime,
end:timing.endTime,
duration:timing.duration});

}

return events.sort((a,b)=>a.start-b.start);
}}


module.exports=makeComputedArtifact(LanternEstimatedInputLatency);

},{"../../lib/dependency-graph/base-node.js":68,"../computed-artifact.js":8,"./estimated-input-latency.js":16,"./lantern-first-meaningful-paint.js":24,"./lantern-metric.js":28}],22:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const LanternMetric=require('./lantern-metric.js');
const BaseNode=require('../../lib/dependency-graph/base-node.js');





class LanternFirstContentfulPaint extends LanternMetric{



static get COEFFICIENTS(){
return{
intercept:0,
optimistic:0.5,
pessimistic:0.5};

}
















static getBlockingNodeData(
graph,
filterTimestamp,
blockingScriptFilter,
extraBlockingCpuNodesToIncludeFilter)
{

const scriptUrlToNodeMap=new Map();


const cpuNodes=[];
graph.traverse(node=>{
if(node.type===BaseNode.TYPES.CPU){


if(node.startTime<=filterTimestamp)cpuNodes.push(node);


const scriptUrls=node.getEvaluateScriptURLs();
for(const url of scriptUrls){

const existing=scriptUrlToNodeMap.get(url)||node;
scriptUrlToNodeMap.set(url,node.startTime<existing.startTime?node:existing);
}
}
});

cpuNodes.sort((a,b)=>a.startTime-b.startTime);


const possiblyRenderBlockingScriptUrls=LanternMetric.getScriptUrls(graph,node=>{
return node.endTime<=filterTimestamp&&blockingScriptFilter(node);
});



const definitelyNotRenderBlockingScriptUrls=new Set();

const blockingCpuNodeIds=new Set();
for(const url of possiblyRenderBlockingScriptUrls){

const cpuNodeForUrl=scriptUrlToNodeMap.get(url);


if(!cpuNodeForUrl)continue;


if(cpuNodes.includes(cpuNodeForUrl)){
blockingCpuNodeIds.add(cpuNodeForUrl.id);
continue;
}



definitelyNotRenderBlockingScriptUrls.add(url);
}



const firstLayout=cpuNodes.find(node=>node.didPerformLayout());
if(firstLayout)blockingCpuNodeIds.add(firstLayout.id);
const firstPaint=cpuNodes.find(node=>node.childEvents.some(e=>e.name==='Paint'));
if(firstPaint)blockingCpuNodeIds.add(firstPaint.id);
const firstParse=cpuNodes.find(node=>node.childEvents.some(e=>e.name==='ParseHTML'));
if(firstParse)blockingCpuNodeIds.add(firstParse.id);


if(extraBlockingCpuNodesToIncludeFilter){
cpuNodes.
filter(extraBlockingCpuNodesToIncludeFilter).
forEach(node=>blockingCpuNodeIds.add(node.id));
}

return{
definitelyNotRenderBlockingScriptUrls,
blockingCpuNodeIds};

}













static getFirstPaintBasedGraph(
dependencyGraph,
paintTs,
blockingResourcesFilter,
extraBlockingCpuNodesToIncludeFilter)
{
const{
definitelyNotRenderBlockingScriptUrls,
blockingCpuNodeIds}=
this.getBlockingNodeData(
dependencyGraph,
paintTs,
blockingResourcesFilter,
extraBlockingCpuNodesToIncludeFilter);


return dependencyGraph.cloneWithRelationships(node=>{
if(node.type===BaseNode.TYPES.NETWORK){

if(node.endTime>paintTs&&!node.isMainDocument())return false;

const url=node.record.url;

if(definitelyNotRenderBlockingScriptUrls.has(url)){
return false;
}

return blockingResourcesFilter(node);
}else{

return blockingCpuNodeIds.has(node.id);
}
});
}






static getOptimisticGraph(dependencyGraph,traceOfTab){
return this.getFirstPaintBasedGraph(
dependencyGraph,
traceOfTab.timestamps.firstContentfulPaint,



node=>node.hasRenderBlockingPriority()&&node.initiatorType!=='script');

}






static getPessimisticGraph(dependencyGraph,traceOfTab){
return this.getFirstPaintBasedGraph(
dependencyGraph,
traceOfTab.timestamps.firstContentfulPaint,
node=>node.hasRenderBlockingPriority());

}}


module.exports=makeComputedArtifact(LanternFirstContentfulPaint);

},{"../../lib/dependency-graph/base-node.js":68,"../computed-artifact.js":8,"./lantern-metric.js":28}],23:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const BaseNode=require('../../lib/dependency-graph/base-node.js');
const LanternInteractive=require('./lantern-interactive.js');

class LanternFirstCPUIdle extends LanternInteractive{



static get COEFFICIENTS(){
return{
intercept:0,
optimistic:1,
pessimistic:0};

}







static getEstimateFromSimulation(simulation,extras){
const fmpTimeInMs=extras.optimistic?
extras.fmpResult.optimisticEstimate.timeInMs:
extras.fmpResult.pessimisticEstimate.timeInMs;

return{
timeInMs:LanternFirstCPUIdle.getFirstCPUIdleWindowStart(simulation.nodeTimings,fmpTimeInMs),
nodeTimings:simulation.nodeTimings};

}






static getFirstCPUIdleWindowStart(nodeTimings,fmpTimeInMs,longTaskLength=50){

const longTasks=[];
for(const[node,timing]of nodeTimings.entries()){
if(node.type!==BaseNode.TYPES.CPU)continue;
if(timing.duration<longTaskLength)continue;
longTasks.push({start:timing.startTime,end:timing.endTime});
}

longTasks.sort((a,b)=>a.start-b.start);

const FirstCPUIdle=require('./first-cpu-idle.js');
return FirstCPUIdle.findQuietWindow(fmpTimeInMs,Infinity,longTasks);
}






static async compute_(data,context){
return super.compute_(data,context);
}}


module.exports=makeComputedArtifact(LanternFirstCPUIdle);

},{"../../lib/dependency-graph/base-node.js":68,"../computed-artifact.js":8,"./first-cpu-idle.js":18,"./lantern-interactive.js":25}],24:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const LanternMetric=require('./lantern-metric.js');
const LHError=require('../../lib/lh-error.js');
const LanternFirstContentfulPaint=require('./lantern-first-contentful-paint.js');



class LanternFirstMeaningfulPaint extends LanternMetric{



static get COEFFICIENTS(){
return{
intercept:0,
optimistic:0.5,
pessimistic:0.5};

}






static getOptimisticGraph(dependencyGraph,traceOfTab){
const fmp=traceOfTab.timestamps.firstMeaningfulPaint;
if(!fmp){
throw new LHError(LHError.errors.NO_FMP);
}

return LanternFirstContentfulPaint.getFirstPaintBasedGraph(
dependencyGraph,
fmp,


node=>node.hasRenderBlockingPriority()&&node.initiatorType!=='script');

}






static getPessimisticGraph(dependencyGraph,traceOfTab){
const fmp=traceOfTab.timestamps.firstMeaningfulPaint;
if(!fmp){
throw new LHError(LHError.errors.NO_FMP);
}

return LanternFirstContentfulPaint.getFirstPaintBasedGraph(
dependencyGraph,
fmp,
node=>node.hasRenderBlockingPriority(),

node=>node.didPerformLayout());

}






static async compute_(data,context){
const fcpResult=await LanternFirstContentfulPaint.request(data,context);
const metricResult=await this.computeMetricWithGraphs(data,context);
metricResult.timing=Math.max(metricResult.timing,fcpResult.timing);
return metricResult;
}}


module.exports=makeComputedArtifact(LanternFirstMeaningfulPaint);

},{"../../lib/lh-error.js":82,"../computed-artifact.js":8,"./lantern-first-contentful-paint.js":22,"./lantern-metric.js":28}],25:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const LanternMetric=require('./lantern-metric.js');
const BaseNode=require('../../lib/dependency-graph/base-node.js');
const NetworkRequest=require('../../lib/network-request.js');
const LanternFirstMeaningfulPaint=require('./lantern-first-meaningful-paint.js');




const CRITICAL_LONG_TASK_THRESHOLD=20;

class LanternInteractive extends LanternMetric{



static get COEFFICIENTS(){
return{
intercept:0,
optimistic:0.5,
pessimistic:0.5};

}





static getOptimisticGraph(dependencyGraph){

const minimumCpuTaskDuration=CRITICAL_LONG_TASK_THRESHOLD*1000;

return dependencyGraph.cloneWithRelationships(node=>{

if(node.type===BaseNode.TYPES.CPU){
return node.event.dur>minimumCpuTaskDuration;
}


const isImage=node.record.resourceType===NetworkRequest.TYPES.Image;
const isScript=node.record.resourceType===NetworkRequest.TYPES.Script;
return(
!isImage&&(
isScript||
node.record.priority==='High'||
node.record.priority==='VeryHigh'));

});
}





static getPessimisticGraph(dependencyGraph){
return dependencyGraph;
}






static getEstimateFromSimulation(simulationResult,extras){
if(!extras.fmpResult)throw new Error('missing fmpResult');

const lastTaskAt=LanternInteractive.getLastLongTaskEndTime(simulationResult.nodeTimings);
const minimumTime=extras.optimistic?
extras.fmpResult.optimisticEstimate.timeInMs:
extras.fmpResult.pessimisticEstimate.timeInMs;
return{
timeInMs:Math.max(minimumTime,lastTaskAt),
nodeTimings:simulationResult.nodeTimings};

}






static async compute_(data,context){
const fmpResult=await LanternFirstMeaningfulPaint.request(data,context);
const metricResult=await this.computeMetricWithGraphs(data,context,{fmpResult});
metricResult.timing=Math.max(metricResult.timing,fmpResult.timing);
return metricResult;
}





static getLastLongTaskEndTime(nodeTimings,duration=50){
return Array.from(nodeTimings.entries()).
filter(([node,timing])=>{
if(node.type!==BaseNode.TYPES.CPU)return false;
return timing.duration>duration;
}).
map(([_,timing])=>timing.endTime).
reduce((max,x)=>Math.max(max||0,x||0),0);
}}


module.exports=makeComputedArtifact(LanternInteractive);

},{"../../lib/dependency-graph/base-node.js":68,"../../lib/network-request.js":86,"../computed-artifact.js":8,"./lantern-first-meaningful-paint.js":24,"./lantern-metric.js":28}],26:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const LanternMetric=require('./lantern-metric.js');
const LHError=require('../../lib/lh-error.js');
const LanternFirstContentfulPaint=require('./lantern-first-contentful-paint.js');



class LanternLargestContentfulPaint extends LanternMetric{



static get COEFFICIENTS(){
return{
intercept:0,
optimistic:0.5,
pessimistic:0.5};

}








static isNotLowPriorityImageNode(node){
if(node.type!=='network')return true;

const isImage=node.record.resourceType==='Image';
const isLowPriority=node.record.priority==='Low'||node.record.priority==='VeryLow';
return!isImage||!isLowPriority;
}






static getOptimisticGraph(dependencyGraph,traceOfTab){
const lcp=traceOfTab.timestamps.largestContentfulPaint;
if(!lcp){
throw new LHError(LHError.errors.NO_LCP);
}

return LanternFirstContentfulPaint.getFirstPaintBasedGraph(
dependencyGraph,
lcp,
LanternLargestContentfulPaint.isNotLowPriorityImageNode);

}






static getPessimisticGraph(dependencyGraph,traceOfTab){
const lcp=traceOfTab.timestamps.largestContentfulPaint;
if(!lcp){
throw new LHError(LHError.errors.NO_LCP);
}

return LanternFirstContentfulPaint.getFirstPaintBasedGraph(
dependencyGraph,
lcp,
_=>true,

node=>node.didPerformLayout());

}





static getEstimateFromSimulation(simulationResult){
const nodeTimesNotOffscreenImages=Array.from(simulationResult.nodeTimings.entries()).
filter(entry=>LanternLargestContentfulPaint.isNotLowPriorityImageNode(entry[0])).
map(entry=>entry[1].endTime);

return{
timeInMs:Math.max(...nodeTimesNotOffscreenImages),
nodeTimings:simulationResult.nodeTimings};

}






static async compute_(data,context){
const fcpResult=await LanternFirstContentfulPaint.request(data,context);
const metricResult=await this.computeMetricWithGraphs(data,context);
metricResult.timing=Math.max(metricResult.timing,fcpResult.timing);
return metricResult;
}}


module.exports=makeComputedArtifact(LanternLargestContentfulPaint);

},{"../../lib/lh-error.js":82,"../computed-artifact.js":8,"./lantern-first-contentful-paint.js":22,"./lantern-metric.js":28}],27:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const LanternMetricArtifact=require('./lantern-metric.js');
const BaseNode=require('../../lib/dependency-graph/base-node.js');
const LanternFirstContentfulPaint=require('./lantern-first-contentful-paint.js');



class LanternMaxPotentialFID extends LanternMetricArtifact{



static get COEFFICIENTS(){
return{
intercept:0,
optimistic:0.5,
pessimistic:0.5};

}





static getOptimisticGraph(dependencyGraph){
return dependencyGraph;
}





static getPessimisticGraph(dependencyGraph){
return dependencyGraph;
}






static getEstimateFromSimulation(simulation,extras){
if(!extras.fcpResult)throw new Error('missing fcpResult');



const fcpTimeInMs=extras.optimistic?
extras.fcpResult.pessimisticEstimate.timeInMs:
extras.fcpResult.optimisticEstimate.timeInMs;

const timings=LanternMaxPotentialFID.getTimingsAfterFCP(
simulation.nodeTimings,
fcpTimeInMs);


return{
timeInMs:Math.max(...timings.map(timing=>timing.duration),16),
nodeTimings:simulation.nodeTimings};

}






static async compute_(data,context){
const fcpResult=await LanternFirstContentfulPaint.request(data,context);
return super.computeMetricWithGraphs(data,context,{fcpResult});
}






static getTimingsAfterFCP(nodeTimings,fcpTimeInMs){
return Array.from(nodeTimings.entries()).
filter(([node,timing])=>node.type===BaseNode.TYPES.CPU&&timing.endTime>fcpTimeInMs).
map(([_,timing])=>timing);
}}


module.exports=makeComputedArtifact(LanternMaxPotentialFID);

},{"../../lib/dependency-graph/base-node.js":68,"../computed-artifact.js":8,"./lantern-first-contentful-paint.js":22,"./lantern-metric.js":28}],28:[function(require,module,exports){





'use strict';

const BaseNode=require('../../lib/dependency-graph/base-node.js');
const NetworkRequest=require('../../lib/network-request.js');
const TraceOfTab=require('../trace-of-tab.js');
const PageDependencyGraph=require('../page-dependency-graph.js');
const LoadSimulator=require('../load-simulator.js');














class LanternMetricArtifact{





static getScriptUrls(dependencyGraph,condition){

const scriptUrls=new Set();

dependencyGraph.traverse(node=>{
if(node.type===BaseNode.TYPES.CPU)return;
if(node.record.resourceType!==NetworkRequest.TYPES.Script)return;
if(condition&&!condition(node))return;
scriptUrls.add(node.record.url);
});

return scriptUrls;
}




static get COEFFICIENTS(){
throw new Error('COEFFICIENTS unimplemented!');
}










static getScaledCoefficients(rttMs){
return this.COEFFICIENTS;
}






static getOptimisticGraph(dependencyGraph,traceOfTab){
throw new Error('Optimistic graph unimplemented!');
}






static getPessimisticGraph(dependencyGraph,traceOfTab){
throw new Error('Pessmistic graph unimplemented!');
}






static getEstimateFromSimulation(simulationResult,extras){
return simulationResult;
}







static async computeMetricWithGraphs(data,context,extras){
const{trace,devtoolsLog,settings}=data;
const metricName=this.name.replace('Lantern','');
const graph=await PageDependencyGraph.request({trace,devtoolsLog},context);
const traceOfTab=await TraceOfTab.request(trace,context);
const simulator=data.simulator||(
await LoadSimulator.request({devtoolsLog,settings},context));

const optimisticGraph=this.getOptimisticGraph(graph,traceOfTab);
const pessimisticGraph=this.getPessimisticGraph(graph,traceOfTab);


let simulateOptions={label:`optimistic${metricName}`};
const optimisticSimulation=simulator.simulate(optimisticGraph,simulateOptions);

simulateOptions={label:`optimisticFlex${metricName}`,flexibleOrdering:true};
const optimisticFlexSimulation=simulator.simulate(optimisticGraph,simulateOptions);

simulateOptions={label:`pessimistic${metricName}`};
const pessimisticSimulation=simulator.simulate(pessimisticGraph,simulateOptions);

const optimisticEstimate=this.getEstimateFromSimulation(
optimisticSimulation.timeInMs<optimisticFlexSimulation.timeInMs?
optimisticSimulation:optimisticFlexSimulation,{...extras,optimistic:true});


const pessimisticEstimate=this.getEstimateFromSimulation(
pessimisticSimulation,
{...extras,optimistic:false});


const coefficients=this.getScaledCoefficients(simulator.rtt);

const interceptMultiplier=coefficients.intercept>0?
Math.min(1,optimisticEstimate.timeInMs/1000):1;
const timing=
coefficients.intercept*interceptMultiplier+
coefficients.optimistic*optimisticEstimate.timeInMs+
coefficients.pessimistic*pessimisticEstimate.timeInMs;

return{
timing,
optimisticEstimate,
pessimisticEstimate,
optimisticGraph,
pessimisticGraph};

}






static async compute_(data,context){
return this.computeMetricWithGraphs(data,context);
}}


module.exports=LanternMetricArtifact;

},{"../../lib/dependency-graph/base-node.js":68,"../../lib/network-request.js":86,"../load-simulator.js":11,"../page-dependency-graph.js":40,"../trace-of-tab.js":44}],29:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const LanternMetric=require('./lantern-metric.js');
const BaseNode=require('../../lib/dependency-graph/base-node.js');
const Speedline=require('../speedline.js');
const LanternFirstContentfulPaint=require('./lantern-first-contentful-paint.js');
const defaultThrottling=require('../../config/constants.js').throttling;



class LanternSpeedIndex extends LanternMetric{



static get COEFFICIENTS(){
return{



intercept:-250,
optimistic:1.4,
pessimistic:0.65};

}





static getScaledCoefficients(rttMs){











const defaultCoefficients=this.COEFFICIENTS;
const defaultRttExcess=defaultThrottling.mobileSlow4G.rttMs-30;
const multiplier=Math.max((rttMs-30)/defaultRttExcess,0);

return{
intercept:defaultCoefficients.intercept*multiplier,
optimistic:0.5+(defaultCoefficients.optimistic-0.5)*multiplier,
pessimistic:0.5+(defaultCoefficients.pessimistic-0.5)*multiplier};

}





static getOptimisticGraph(dependencyGraph){
return dependencyGraph;
}





static getPessimisticGraph(dependencyGraph){
return dependencyGraph;
}






static getEstimateFromSimulation(simulationResult,extras){
if(!extras.fcpResult)throw new Error('missing fcpResult');
if(!extras.speedline)throw new Error('missing speedline');

const fcpTimeInMs=extras.fcpResult.pessimisticEstimate.timeInMs;
const estimate=extras.optimistic?
extras.speedline.speedIndex:
LanternSpeedIndex.computeLayoutBasedSpeedIndex(simulationResult.nodeTimings,fcpTimeInMs);
return{
timeInMs:estimate,
nodeTimings:simulationResult.nodeTimings};

}






static async compute_(data,context){
const speedline=await Speedline.request(data.trace,context);
const fcpResult=await LanternFirstContentfulPaint.request(data,context);
const metricResult=await this.computeMetricWithGraphs(data,context,{
speedline,
fcpResult});

metricResult.timing=Math.max(metricResult.timing,fcpResult.timing);
return metricResult;
}
















static computeLayoutBasedSpeedIndex(nodeTimings,fcpTimeInMs){

const layoutWeights=[];
for(const[node,timing]of nodeTimings.entries()){
if(node.type!==BaseNode.TYPES.CPU)continue;

if(node.childEvents.some(x=>x.name==='Layout')){
const timingWeight=Math.max(Math.log2(timing.endTime-timing.startTime),0);
layoutWeights.push({time:timing.endTime,weight:timingWeight});
}
}

if(!layoutWeights.length){
return fcpTimeInMs;
}

const totalWeightedTime=layoutWeights.
map(evt=>evt.weight*Math.max(evt.time,fcpTimeInMs)).
reduce((a,b)=>a+b,0);
const totalWeight=layoutWeights.map(evt=>evt.weight).reduce((a,b)=>a+b,0);
return totalWeightedTime/totalWeight;
}}


module.exports=makeComputedArtifact(LanternSpeedIndex);

},{"../../config/constants.js":53,"../../lib/dependency-graph/base-node.js":68,"../computed-artifact.js":8,"../speedline.js":43,"./lantern-first-contentful-paint.js":22,"./lantern-metric.js":28}],30:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const LanternMetric=require('./lantern-metric.js');
const BaseNode=require('../../lib/dependency-graph/base-node.js');
const LanternFirstContentfulPaint=require('./lantern-first-contentful-paint.js');
const LanternInteractive=require('./lantern-interactive.js');



class LanternTotalBlockingTime extends LanternMetric{



static get COEFFICIENTS(){
return{
intercept:0,
optimistic:0.5,
pessimistic:0.5};

}





static getOptimisticGraph(dependencyGraph){
return dependencyGraph;
}





static getPessimisticGraph(dependencyGraph){
return dependencyGraph;
}






static getEstimateFromSimulation(simulation,extras){
if(!extras.fcpResult)throw new Error('missing fcpResult');
if(!extras.interactiveResult)throw new Error('missing interactiveResult');





const fcpTimeInMs=extras.optimistic?
extras.fcpResult.pessimisticEstimate.timeInMs:
extras.fcpResult.optimisticEstimate.timeInMs;





const interactiveTimeMs=extras.optimistic?
extras.interactiveResult.optimisticEstimate.timeInMs:
extras.interactiveResult.pessimisticEstimate.timeInMs;


const TotalBlockingTime=require('./total-blocking-time.js');
const minDurationMs=TotalBlockingTime.BLOCKING_TIME_THRESHOLD;

const events=LanternTotalBlockingTime.getTopLevelEvents(
simulation.nodeTimings,
minDurationMs);


return{
timeInMs:TotalBlockingTime.calculateSumOfBlockingTime(
events,
fcpTimeInMs,
interactiveTimeMs),

nodeTimings:simulation.nodeTimings};

}






static async compute_(data,context){
const fcpResult=await LanternFirstContentfulPaint.request(data,context);
const interactiveResult=await LanternInteractive.request(data,context);
return this.computeMetricWithGraphs(data,context,{fcpResult,interactiveResult});
}





static getTopLevelEvents(nodeTimings,minDurationMs){


const events=[];

for(const[node,timing]of nodeTimings.entries()){
if(node.type!==BaseNode.TYPES.CPU)continue;

if(timing.duration<minDurationMs)continue;

events.push({
start:timing.startTime,
end:timing.endTime,
duration:timing.duration});

}

return events;
}}


module.exports=makeComputedArtifact(LanternTotalBlockingTime);

},{"../../lib/dependency-graph/base-node.js":68,"../computed-artifact.js":8,"./lantern-first-contentful-paint.js":22,"./lantern-interactive.js":25,"./lantern-metric.js":28,"./total-blocking-time.js":36}],31:[function(require,module,exports){





'use strict';









const makeComputedArtifact=require('../computed-artifact.js');
const ComputedMetric=require('./metric.js');
const LHError=require('../../lib/lh-error.js');
const LanternLargestContentfulPaint=require('./lantern-largest-contentful-paint.js');

class LargestContentfulPaint extends ComputedMetric{





static computeSimulatedMetric(data,context){
return LanternLargestContentfulPaint.request(data,context);
}





static async computeObservedMetric(data){
const{traceOfTab}=data;
if(!traceOfTab.timestamps.largestContentfulPaint){
throw new LHError(LHError.errors.NO_LCP);
}

return{

timing:traceOfTab.timings.largestContentfulPaint,
timestamp:traceOfTab.timestamps.largestContentfulPaint};

}}


module.exports=makeComputedArtifact(LargestContentfulPaint);

},{"../../lib/lh-error.js":82,"../computed-artifact.js":8,"./lantern-largest-contentful-paint.js":26,"./metric.js":33}],32:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const MetricArtifact=require('./metric.js');
const LanternMaxPotentialFID=require('./lantern-max-potential-fid.js');
const LHError=require('../../lib/lh-error.js');
const TracingProcessor=require('../../lib/tracehouse/trace-processor.js');

class MaxPotentialFID extends MetricArtifact{





static computeSimulatedMetric(data,context){
return LanternMaxPotentialFID.request(data,context);
}





static computeObservedMetric(data){
const{firstContentfulPaint}=data.traceOfTab.timings;
if(!firstContentfulPaint){
throw new LHError(LHError.errors.NO_FCP);
}

const events=TracingProcessor.getMainThreadTopLevelEvents(
data.traceOfTab,
firstContentfulPaint).
filter(evt=>evt.duration>=1);

return Promise.resolve({
timing:Math.max(...events.map(evt=>evt.duration),16)});

}}


module.exports=makeComputedArtifact(MaxPotentialFID);

},{"../../lib/lh-error.js":82,"../../lib/tracehouse/trace-processor.js":96,"../computed-artifact.js":8,"./lantern-max-potential-fid.js":27,"./metric.js":33}],33:[function(require,module,exports){





'use strict';

const TracingProcessor=require('../../lib/tracehouse/trace-processor.js');
const TraceOfTab=require('../trace-of-tab.js');
const NetworkRecords=require('../network-records.js');










class ComputedMetric{
constructor(){}






static computeSimulatedMetric(data,context){
throw new Error('Unimplemented');
}






static computeObservedMetric(data,context){
throw new Error('Unimplemented');
}






static async compute_(data,context){
const{trace,devtoolsLog,settings}=data;
if(!trace||!devtoolsLog||!settings){
throw new Error('Did not provide necessary metric computation data');
}

const augmentedData=Object.assign({
networkRecords:await NetworkRecords.request(devtoolsLog,context),
traceOfTab:await TraceOfTab.request(trace,context)},
data);

TracingProcessor.assertHasToplevelEvents(augmentedData.traceOfTab.mainThreadEvents);

switch(settings.throttlingMethod){
case'simulate':
return this.computeSimulatedMetric(augmentedData,context);
case'provided':
case'devtools':
return this.computeObservedMetric(augmentedData,context);
default:
throw new TypeError(`Unrecognized throttling method: ${settings.throttlingMethod}`);}

}}


module.exports=ComputedMetric;

},{"../../lib/tracehouse/trace-processor.js":96,"../network-records.js":39,"../trace-of-tab.js":44}],34:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const ComputedMetric=require('./metric.js');
const LanternSpeedIndex=require('./lantern-speed-index.js');
const Speedline=require('../speedline.js');

class SpeedIndex extends ComputedMetric{





static computeSimulatedMetric(data,context){
return LanternSpeedIndex.request(data,context);
}






static async computeObservedMetric(data,context){
const speedline=await Speedline.request(data.trace,context);
const timing=Math.round(speedline.speedIndex);
const timestamp=(timing+speedline.beginning)*1000;
return Promise.resolve({timing,timestamp});
}}


module.exports=makeComputedArtifact(SpeedIndex);

},{"../computed-artifact.js":8,"../speedline.js":43,"./lantern-speed-index.js":29,"./metric.js":33}],35:[function(require,module,exports){





'use strict';

const TraceOfTab=require('../trace-of-tab.js');
const Speedline=require('../speedline.js');
const FirstContentfulPaint=require('./first-contentful-paint.js');
const FirstMeaningfulPaint=require('./first-meaningful-paint.js');
const LargestContentfulPaint=require('./largest-contentful-paint.js');
const FirstCPUIdle=require('./first-cpu-idle.js');
const Interactive=require('./interactive.js');
const CumulativeLayoutShift=require('./cumulative-layout-shift.js');
const SpeedIndex=require('./speed-index.js');
const EstimatedInputLatency=require('./estimated-input-latency.js');
const MaxPotentialFID=require('./max-potential-fid.js');
const TotalBlockingTime=require('./total-blocking-time.js');
const makeComputedArtifact=require('../computed-artifact.js');

class TimingSummary{






static async summarize(trace,devtoolsLog,context){
const metricComputationData={trace,devtoolsLog,settings:context.settings};







const requestOrUndefined=(Artifact,artifact)=>{
return Artifact.request(artifact,context).catch(_=>undefined);
};

const traceOfTab=await TraceOfTab.request(trace,context);
const speedline=await Speedline.request(trace,context);
const firstContentfulPaint=await FirstContentfulPaint.request(metricComputationData,context);
const firstMeaningfulPaint=await FirstMeaningfulPaint.request(metricComputationData,context);
const largestContentfulPaint=await requestOrUndefined(LargestContentfulPaint,metricComputationData);
const firstCPUIdle=await requestOrUndefined(FirstCPUIdle,metricComputationData);
const interactive=await requestOrUndefined(Interactive,metricComputationData);
const cumulativeLayoutShift=await requestOrUndefined(CumulativeLayoutShift,trace);
const maxPotentialFID=await requestOrUndefined(MaxPotentialFID,metricComputationData);
const speedIndex=await requestOrUndefined(SpeedIndex,metricComputationData);
const estimatedInputLatency=await EstimatedInputLatency.request(metricComputationData,context);
const totalBlockingTime=await TotalBlockingTime.request(metricComputationData,context);

const cumulativeLayoutShiftValue=cumulativeLayoutShift&&
cumulativeLayoutShift.value!==null?
cumulativeLayoutShift.value:undefined;


const metrics={

firstContentfulPaint:firstContentfulPaint.timing,
firstContentfulPaintTs:firstContentfulPaint.timestamp,
firstMeaningfulPaint:firstMeaningfulPaint.timing,
firstMeaningfulPaintTs:firstMeaningfulPaint.timestamp,
largestContentfulPaint:largestContentfulPaint&&largestContentfulPaint.timing,
largestContentfulPaintTs:largestContentfulPaint&&largestContentfulPaint.timestamp,
firstCPUIdle:firstCPUIdle&&firstCPUIdle.timing,
firstCPUIdleTs:firstCPUIdle&&firstCPUIdle.timestamp,
interactive:interactive&&interactive.timing,
interactiveTs:interactive&&interactive.timestamp,
speedIndex:speedIndex&&speedIndex.timing,
speedIndexTs:speedIndex&&speedIndex.timestamp,
estimatedInputLatency:estimatedInputLatency.timing,
estimatedInputLatencyTs:estimatedInputLatency.timestamp,
totalBlockingTime:totalBlockingTime.timing,
maxPotentialFID:maxPotentialFID&&maxPotentialFID.timing,
cumulativeLayoutShift:cumulativeLayoutShiftValue,


observedNavigationStart:traceOfTab.timings.navigationStart,
observedNavigationStartTs:traceOfTab.timestamps.navigationStart,
observedFirstPaint:traceOfTab.timings.firstPaint,
observedFirstPaintTs:traceOfTab.timestamps.firstPaint,
observedFirstContentfulPaint:traceOfTab.timings.firstContentfulPaint,
observedFirstContentfulPaintTs:traceOfTab.timestamps.firstContentfulPaint,
observedFirstMeaningfulPaint:traceOfTab.timings.firstMeaningfulPaint,
observedFirstMeaningfulPaintTs:traceOfTab.timestamps.firstMeaningfulPaint,
observedLargestContentfulPaint:traceOfTab.timings.largestContentfulPaint,
observedLargestContentfulPaintTs:traceOfTab.timestamps.largestContentfulPaint,
observedTraceEnd:traceOfTab.timings.traceEnd,
observedTraceEndTs:traceOfTab.timestamps.traceEnd,
observedLoad:traceOfTab.timings.load,
observedLoadTs:traceOfTab.timestamps.load,
observedDomContentLoaded:traceOfTab.timings.domContentLoaded,
observedDomContentLoadedTs:traceOfTab.timestamps.domContentLoaded,
observedCumulativeLayoutShift:cumulativeLayoutShiftValue,


observedFirstVisualChange:speedline.first,
observedFirstVisualChangeTs:(speedline.first+speedline.beginning)*1000,
observedLastVisualChange:speedline.complete,
observedLastVisualChangeTs:(speedline.complete+speedline.beginning)*1000,
observedSpeedIndex:speedline.speedIndex,
observedSpeedIndexTs:(speedline.speedIndex+speedline.beginning)*1000};


const debugInfo={lcpInvalidated:traceOfTab.lcpInvalidated};

return{metrics,debugInfo};
}





static async compute_(data,context){
return TimingSummary.summarize(data.trace,data.devtoolsLog,context);
}}


module.exports=makeComputedArtifact(TimingSummary);

},{"../computed-artifact.js":8,"../speedline.js":43,"../trace-of-tab.js":44,"./cumulative-layout-shift.js":15,"./estimated-input-latency.js":16,"./first-contentful-paint.js":17,"./first-cpu-idle.js":18,"./first-meaningful-paint.js":19,"./interactive.js":20,"./largest-contentful-paint.js":31,"./max-potential-fid.js":32,"./speed-index.js":34,"./total-blocking-time.js":36}],36:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('../computed-artifact.js');
const ComputedMetric=require('./metric.js');
const LHError=require('../../lib/lh-error.js');
const TracingProcessor=require('../../lib/tracehouse/trace-processor.js');
const LanternTotalBlockingTime=require('./lantern-total-blocking-time.js');
const TimetoInteractive=require('./interactive.js');














class TotalBlockingTime extends ComputedMetric{



static get BLOCKING_TIME_THRESHOLD(){
return 50;
}






static calculateSumOfBlockingTime(topLevelEvents,fcpTimeInMs,interactiveTimeMs){
if(interactiveTimeMs<=fcpTimeInMs)return 0;

const threshold=TotalBlockingTime.BLOCKING_TIME_THRESHOLD;
let sumBlockingTime=0;
for(const event of topLevelEvents){

if(event.duration<threshold)continue;





if(event.end<fcpTimeInMs)continue;



if(event.start>interactiveTimeMs)continue;






const clippedStart=Math.max(event.start,fcpTimeInMs);
const clippedEnd=Math.min(event.end,interactiveTimeMs);
const clippedDuration=clippedEnd-clippedStart;
if(clippedDuration<threshold)continue;





sumBlockingTime+=clippedDuration-threshold;
}

return sumBlockingTime;
}






static computeSimulatedMetric(data,context){
return LanternTotalBlockingTime.request(data,context);
}






static async computeObservedMetric(data,context){
const{firstContentfulPaint}=data.traceOfTab.timings;
if(!firstContentfulPaint){
throw new LHError(LHError.errors.NO_FCP);
}

const interactiveTimeMs=(await TimetoInteractive.request(data,context)).timing;

const events=TracingProcessor.getMainThreadTopLevelEvents(data.traceOfTab);

return{
timing:TotalBlockingTime.calculateSumOfBlockingTime(
events,
firstContentfulPaint,
interactiveTimeMs)};


}}


module.exports=makeComputedArtifact(TotalBlockingTime);

},{"../../lib/lh-error.js":82,"../../lib/tracehouse/trace-processor.js":96,"../computed-artifact.js":8,"./interactive.js":20,"./lantern-total-blocking-time.js":30,"./metric.js":33}],37:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const JsBundles=require('./js-bundles.js');

class ModuleDuplication{



static _normalizeSource(source){

source=source.replace(/\?$/,'');


const lastNodeModulesIndex=source.lastIndexOf('node_modules');
if(lastNodeModulesIndex!==-1){
source=source.substring(lastNodeModulesIndex);
}

return source;
}




static _shouldIgnoreSource(source){

if(source.includes('webpack/bootstrap'))return true;
if(source.includes('(webpack)/buildin'))return true;


if(source.includes('external '))return true;

return false;
}





static async compute_(artifacts,context){
const bundles=await JsBundles.request(artifacts,context);








const sourceDatasMap=new Map();


for(const{rawMap,sizes}of bundles){

const sourceDataArray=[];
sourceDatasMap.set(rawMap,sourceDataArray);

for(let i=0;i<rawMap.sources.length;i++){
if(this._shouldIgnoreSource(rawMap.sources[i]))continue;

const sourceKey=(rawMap.sourceRoot||'')+rawMap.sources[i];
const sourceSize=sizes.files[sourceKey];
sourceDataArray.push({
source:ModuleDuplication._normalizeSource(rawMap.sources[i]),
size:sourceSize});

}
}


const sourceDataAggregated=new Map();
for(const{rawMap,script}of bundles){
const sourceDataArray=sourceDatasMap.get(rawMap);
if(!sourceDataArray)continue;

for(const sourceData of sourceDataArray){
let data=sourceDataAggregated.get(sourceData.source);
if(!data){
data=[];
sourceDataAggregated.set(sourceData.source,data);
}
data.push({
scriptUrl:script.src||'',
size:sourceData.size});

}
}

for(const[key,value]of sourceDataAggregated.entries()){
if(value.length===1)sourceDataAggregated.delete(key);else
value.sort((a,b)=>b.size-a.size);
}

return sourceDataAggregated;
}}


module.exports=makeComputedArtifact(ModuleDuplication);

},{"./computed-artifact.js":8,"./js-bundles.js":10}],38:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const NetworkAnalyzer=require('../lib/dependency-graph/simulator/network-analyzer.js');
const NetworkRecords=require('./network-records.js');

class NetworkAnalysis{




static computeRTTAndServerResponseTime(records){


const rttByOrigin=new Map();
for(const[origin,summary]of NetworkAnalyzer.estimateRTTByOrigin(records).entries()){
rttByOrigin.set(origin,summary.min);
}



const minimumRtt=Math.min(...Array.from(rttByOrigin.values()));

const responseTimeSummaries=NetworkAnalyzer.estimateServerResponseTimeByOrigin(records,{
rttByOrigin});



const additionalRttByOrigin=new Map();

const serverResponseTimeByOrigin=new Map();
for(const[origin,summary]of responseTimeSummaries.entries()){

const rttForOrigin=rttByOrigin.get(origin)||minimumRtt;
additionalRttByOrigin.set(origin,rttForOrigin-minimumRtt);
serverResponseTimeByOrigin.set(origin,summary.median);
}

return{
rtt:minimumRtt,
additionalRttByOrigin,
serverResponseTimeByOrigin};

}






static async compute_(devtoolsLog,context){
const records=await NetworkRecords.request(devtoolsLog,context);
const throughput=NetworkAnalyzer.estimateThroughput(records);
const rttAndServerResponseTime=NetworkAnalysis.computeRTTAndServerResponseTime(records);
return{throughput,...rttAndServerResponseTime};
}}


module.exports=makeComputedArtifact(NetworkAnalysis);

},{"../lib/dependency-graph/simulator/network-analyzer.js":73,"./computed-artifact.js":8,"./network-records.js":39}],39:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const NetworkRecorder=require('../lib/network-recorder.js');

class NetworkRecords{




static async compute_(devtoolsLog){
return NetworkRecorder.recordsFromLogs(devtoolsLog);
}}


module.exports=makeComputedArtifact(NetworkRecords);

},{"../lib/network-recorder.js":85,"./computed-artifact.js":8}],40:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const NetworkNode=require('../lib/dependency-graph/network-node.js');
const CPUNode=require('../lib/dependency-graph/cpu-node.js');
const NetworkAnalyzer=require('../lib/dependency-graph/simulator/network-analyzer.js');
const TracingProcessor=require('../lib/tracehouse/trace-processor.js');
const NetworkRequest=require('../lib/network-request.js');
const TraceOfTab=require('./trace-of-tab.js');
const NetworkRecords=require('./network-records.js');




const SIGNIFICANT_DUR_THRESHOLD_MS=10;



const IGNORED_MIME_TYPES_REGEX=/^video/;

class PageDependencyGraph{




static getNetworkInitiators(record){
if(!record.initiator)return[];
if(record.initiator.url)return[record.initiator.url];
if(record.initiator.type==='script'){




const scriptURLs=new Set();
let stack=record.initiator.stack;
while(stack){
const callFrames=stack.callFrames||[];
for(const frame of callFrames){
if(frame.url)scriptURLs.add(frame.url);
}

stack=stack.parent;
}

return Array.from(scriptURLs);
}

return[];
}





static getNetworkNodeOutput(networkRecords){

const nodes=[];

const idToNodeMap=new Map();

const urlToNodeMap=new Map();

const frameIdToNodeMap=new Map();

networkRecords.forEach(record=>{
if(IGNORED_MIME_TYPES_REGEX.test(record.mimeType))return;





while(idToNodeMap.has(record.requestId)){
record.requestId+=':duplicate';
}

const node=new NetworkNode(record);
nodes.push(node);

const urlList=urlToNodeMap.get(record.url)||[];
urlList.push(node);

idToNodeMap.set(record.requestId,node);
urlToNodeMap.set(record.url,urlList);



if(record.frameId&&
record.resourceType===NetworkRequest.TYPES.Document&&
record.documentURL===record.url){

const value=frameIdToNodeMap.has(record.frameId)?null:node;
frameIdToNodeMap.set(record.frameId,value);
}
});

return{nodes,idToNodeMap,urlToNodeMap,frameIdToNodeMap};
}





static getCPUNodes(traceOfTab){

const nodes=[];
let i=0;

TracingProcessor.assertHasToplevelEvents(traceOfTab.mainThreadEvents);

while(i<traceOfTab.mainThreadEvents.length){
const evt=traceOfTab.mainThreadEvents[i];
i++;


if(!TracingProcessor.isScheduleableTask(evt)||!evt.dur){
continue;
}



const children=[];
for(
const endTime=evt.ts+evt.dur;
i<traceOfTab.mainThreadEvents.length&&traceOfTab.mainThreadEvents[i].ts<endTime;
i++)
{
children.push(traceOfTab.mainThreadEvents[i]);
}

nodes.push(new CPUNode(evt,children));
}

return nodes;
}





static linkNetworkNodes(rootNode,networkNodeOutput){
networkNodeOutput.nodes.forEach(node=>{
const directInitiatorRequest=node.record.initiatorRequest||rootNode.record;
const directInitiatorNode=
networkNodeOutput.idToNodeMap.get(directInitiatorRequest.requestId)||rootNode;
const initiators=PageDependencyGraph.getNetworkInitiators(node.record);
if(initiators.length){
initiators.forEach(initiator=>{
const parentCandidates=networkNodeOutput.urlToNodeMap.get(initiator)||[];

if(parentCandidates.length===1&&parentCandidates[0].startTime<=node.startTime){
node.addDependency(parentCandidates[0]);
}else{
directInitiatorNode.addDependent(node);
}
});
}else if(node!==directInitiatorNode){
directInitiatorNode.addDependent(node);
}

if(!node.record.redirects)return;

const redirects=[...node.record.redirects,node.record];
for(let i=1;i<redirects.length;i++){
const redirectNode=networkNodeOutput.idToNodeMap.get(redirects[i-1].requestId);
const actualNode=networkNodeOutput.idToNodeMap.get(redirects[i].requestId);
if(actualNode&&redirectNode){
actualNode.addDependency(redirectNode);
}
}
});
}






static linkCPUNodes(rootNode,networkNodeOutput,cpuNodes){

function addDependentNetworkRequest(cpuNode,reqId){
const networkNode=networkNodeOutput.idToNodeMap.get(reqId);
if(!networkNode||

networkNode.record.resourceType!==NetworkRequest.TYPES.XHR||


networkNode.startTime<=cpuNode.startTime)return;
cpuNode.addDependent(networkNode);
}








function addDependencyOnFrame(cpuNode,frameId){
if(!frameId)return;
const networkNode=networkNodeOutput.frameIdToNodeMap.get(frameId);
if(!networkNode)return;


if(networkNode.startTime>=cpuNode.startTime)return;
cpuNode.addDependency(networkNode);
}


function addDependencyOnUrl(cpuNode,url){
if(!url)return;


const minimumAllowableTimeSinceNetworkNodeEnd=-100*1000;
const candidates=networkNodeOutput.urlToNodeMap.get(url)||[];

let minCandidate=null;
let minDistance=Infinity;

for(const candidate of candidates){


if(cpuNode.startTime<=candidate.startTime)return;

const distance=cpuNode.startTime-candidate.endTime;
if(distance>=minimumAllowableTimeSinceNetworkNodeEnd&&distance<minDistance){
minCandidate=candidate;
minDistance=distance;
}
}

if(!minCandidate)return;
cpuNode.addDependency(minCandidate);
}


const timers=new Map();
for(const node of cpuNodes){
for(const evt of node.childEvents){
if(!evt.args.data)continue;

const argsUrl=evt.args.data.url;
const stackTraceUrls=(evt.args.data.stackTrace||[]).map(l=>l.url).filter(Boolean);

switch(evt.name){
case'TimerInstall':

timers.set(evt.args.data.timerId,node);
stackTraceUrls.forEach(url=>addDependencyOnUrl(node,url));
break;
case'TimerFire':{

const installer=timers.get(evt.args.data.timerId);
if(!installer||installer.endTime>node.startTime)break;
installer.addDependent(node);
break;
}

case'InvalidateLayout':
case'ScheduleStyleRecalculation':
addDependencyOnFrame(node,evt.args.data.frame);
stackTraceUrls.forEach(url=>addDependencyOnUrl(node,url));
break;

case'EvaluateScript':
addDependencyOnFrame(node,evt.args.data.frame);

addDependencyOnUrl(node,argsUrl);
stackTraceUrls.forEach(url=>addDependencyOnUrl(node,url));
break;

case'XHRReadyStateChange':


if(evt.args.data.readyState!==4)break;


addDependencyOnUrl(node,argsUrl);
stackTraceUrls.forEach(url=>addDependencyOnUrl(node,url));
break;

case'FunctionCall':
case'v8.compile':
addDependencyOnFrame(node,evt.args.data.frame);

addDependencyOnUrl(node,argsUrl);
break;

case'ParseAuthorStyleSheet':
addDependencyOnFrame(node,evt.args.data.frame);

addDependencyOnUrl(node,evt.args.data.styleSheetUrl);
break;

case'ResourceSendRequest':
addDependencyOnFrame(node,evt.args.data.frame);

addDependentNetworkRequest(node,evt.args.data.requestId);
stackTraceUrls.forEach(url=>addDependencyOnUrl(node,url));
break;}

}

if(node.getNumberOfDependencies()===0){
node.addDependency(rootNode);
}
}


const minimumEvtDur=SIGNIFICANT_DUR_THRESHOLD_MS*1000;
let foundFirstLayout=false;
let foundFirstPaint=false;
let foundFirstParse=false;

for(const node of cpuNodes){


let isFirst=false;
if(!foundFirstLayout&&node.childEvents.some(evt=>evt.name==='Layout')){
isFirst=foundFirstLayout=true;
}
if(!foundFirstPaint&&node.childEvents.some(evt=>evt.name==='Paint')){
isFirst=foundFirstPaint=true;
}
if(!foundFirstParse&&node.childEvents.some(evt=>evt.name==='ParseHTML')){
isFirst=foundFirstParse=true;
}

if(isFirst||node.event.dur>=minimumEvtDur){

continue;
}




if(node.getNumberOfDependencies()===1||node.getNumberOfDependents()<=1){
PageDependencyGraph._pruneNode(node);
}
}
}






static _pruneNode(node){
const dependencies=node.getDependencies();
const dependents=node.getDependents();
for(const dependency of dependencies){
node.removeDependency(dependency);
for(const dependent of dependents){
dependency.addDependent(dependent);
}
}
for(const dependent of dependents){
node.removeDependent(dependent);
}
}






static createGraph(traceOfTab,networkRecords){
const networkNodeOutput=PageDependencyGraph.getNetworkNodeOutput(networkRecords);
const cpuNodes=PageDependencyGraph.getCPUNodes(traceOfTab);


const rootRequest=networkRecords.reduce((min,r)=>r.startTime<min.startTime?r:min);
const rootNode=networkNodeOutput.idToNodeMap.get(rootRequest.requestId);


const mainDocumentRequest=NetworkAnalyzer.findMainDocument(networkRecords);
const mainDocumentNode=networkNodeOutput.idToNodeMap.get(mainDocumentRequest.requestId);

if(!rootNode||!mainDocumentNode){

throw new Error(`${rootNode?'mainDocument':'root'}Node not found.`);
}

if(mainDocumentNode!==rootNode&&(
!mainDocumentNode.record.redirects||
!mainDocumentNode.record.redirects.includes(rootNode.record))){
throw new Error('Root node was not in redirect chain of mainDocument');
}

PageDependencyGraph.linkNetworkNodes(rootNode,networkNodeOutput);
PageDependencyGraph.linkCPUNodes(rootNode,networkNodeOutput,cpuNodes);
mainDocumentNode.setIsMainDocument(true);

if(NetworkNode.hasCycle(rootNode)){
throw new Error('Invalid dependency graph created, cycle detected');
}

return rootNode;
}





static printGraph(rootNode,widthInCharacters=100){

function padRight(str,target,padChar=' '){
return str+padChar.repeat(Math.max(target-str.length,0));
}


const nodes=[];
rootNode.traverse(node=>nodes.push(node));
nodes.sort((a,b)=>a.startTime-b.startTime);

const min=nodes[0].startTime;
const max=nodes.reduce((max,node)=>Math.max(max,node.endTime),0);

const totalTime=max-min;
const timePerCharacter=totalTime/widthInCharacters;
nodes.forEach(node=>{
const offset=Math.round((node.startTime-min)/timePerCharacter);
const length=Math.ceil((node.endTime-node.startTime)/timePerCharacter);
const bar=padRight('',offset)+padRight('',length,'=');


const displayName=node.record?node.record.url:node.type;

console.log(padRight(bar,widthInCharacters),`| ${displayName.slice(0,30)}`);
});
}






static async compute_(data,context){
const trace=data.trace;
const devtoolsLog=data.devtoolsLog;
const[traceOfTab,networkRecords]=await Promise.all([
TraceOfTab.request(trace,context),
NetworkRecords.request(devtoolsLog,context)]);


return PageDependencyGraph.createGraph(traceOfTab,networkRecords);
}}


module.exports=makeComputedArtifact(PageDependencyGraph);









},{"../lib/dependency-graph/cpu-node.js":69,"../lib/dependency-graph/network-node.js":70,"../lib/dependency-graph/simulator/network-analyzer.js":73,"../lib/network-request.js":86,"../lib/tracehouse/trace-processor.js":96,"./computed-artifact.js":8,"./network-records.js":39,"./trace-of-tab.js":44}],41:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const NetworkRecords=require('./network-records.js');
const URL=require('../lib/url-shim.js');
const MainResource=require('./main-resource.js');
const Budget=require('../config/budget.js');
const Util=require('../report/html/renderer/util.js');



class ResourceSummary{




static determineResourceType(record){
if(!record.resourceType)return'other';

const requestToResourceType={
'Stylesheet':'stylesheet',
'Image':'image',
'Media':'media',
'Font':'font',
'Script':'script',
'Document':'document'};

return requestToResourceType[record.resourceType]||'other';
}







static summarize(networkRecords,mainResourceURL,context){
const resourceSummary={
'stylesheet':{count:0,resourceSize:0,transferSize:0},
'image':{count:0,resourceSize:0,transferSize:0},
'media':{count:0,resourceSize:0,transferSize:0},
'font':{count:0,resourceSize:0,transferSize:0},
'script':{count:0,resourceSize:0,transferSize:0},
'document':{count:0,resourceSize:0,transferSize:0},
'other':{count:0,resourceSize:0,transferSize:0},
'total':{count:0,resourceSize:0,transferSize:0},
'third-party':{count:0,resourceSize:0,transferSize:0}};

const budget=Budget.getMatchingBudget(context.settings.budgets,mainResourceURL);

let firstPartyHosts=[];
if(budget&&budget.options&&budget.options.firstPartyHostnames){
firstPartyHosts=budget.options.firstPartyHostnames;
}else{
const rootDomain=Util.getRootDomain(mainResourceURL);
firstPartyHosts=[`*.${rootDomain}`];
}

networkRecords.filter(record=>{



const type=this.determineResourceType(record);
if(type==='other'&&record.url.endsWith('/favicon.ico')){
return false;
}

const url=new URL(record.url);
const protocol=url.protocol.slice(0,-1);
if(URL.NON_NETWORK_PROTOCOLS.includes(protocol)){
return false;
}
return true;
}).forEach(record=>{
const type=this.determineResourceType(record);
resourceSummary[type].count++;
resourceSummary[type].resourceSize+=record.resourceSize;
resourceSummary[type].transferSize+=record.transferSize;

resourceSummary.total.count++;
resourceSummary.total.resourceSize+=record.resourceSize;
resourceSummary.total.transferSize+=record.transferSize;

const isFirstParty=firstPartyHosts.some(hostExp=>{
const url=new URL(record.url);
if(hostExp.startsWith('*.')){
return url.hostname.endsWith(hostExp.slice(2));
}
return url.hostname===hostExp;
});

if(!isFirstParty){
resourceSummary['third-party'].count++;
resourceSummary['third-party'].resourceSize+=record.resourceSize;
resourceSummary['third-party'].transferSize+=record.transferSize;
}
});
return resourceSummary;
}






static async compute_(data,context){
const[networkRecords,mainResource]=await Promise.all([
NetworkRecords.request(data.devtoolsLog,context),
MainResource.request(data,context)]);

return ResourceSummary.summarize(networkRecords,mainResource.url,context);
}}


module.exports=makeComputedArtifact(ResourceSummary);

},{"../config/budget.js":49,"../lib/url-shim.js":"url","../report/html/renderer/util.js":99,"./computed-artifact.js":8,"./main-resource.js":12,"./network-records.js":39}],42:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');

const SCREENSHOT_TRACE_NAME='Screenshot';

class Screenshots{




static async compute_(trace){
return trace.traceEvents.
filter(evt=>evt.name===SCREENSHOT_TRACE_NAME).
map(evt=>{
return{
timestamp:evt.ts,
datauri:`data:image/jpeg;base64,${evt.args.snapshot}`};

});
}}


module.exports=makeComputedArtifact(Screenshots);

},{"./computed-artifact.js":8}],43:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const speedline=require('speedline-core');
const LHError=require('../lib/lh-error.js');
const TraceOfTab=require('./trace-of-tab.js');

class Speedline{





static async compute_(trace,context){


return TraceOfTab.request(trace,context).then(traceOfTab=>{


const traceEvents=trace.traceEvents.slice();


const navStart=traceOfTab.timestamps.navigationStart;
return speedline(traceEvents,{
timeOrigin:navStart,
fastMode:true,
include:'speedIndex'});

}).catch(err=>{
if(/No screenshots found in trace/.test(err.message)){
throw new LHError(LHError.errors.NO_SCREENSHOTS);
}

throw err;
}).then(speedline=>{
if(speedline.frames.length===0){
throw new LHError(LHError.errors.NO_SPEEDLINE_FRAMES);
}

if(speedline.speedIndex===0){
throw new LHError(LHError.errors.SPEEDINDEX_OF_ZERO);
}

return speedline;
});
}}


module.exports=makeComputedArtifact(Speedline);

},{"../lib/lh-error.js":82,"./computed-artifact.js":8,"./trace-of-tab.js":44,"speedline-core":193}],44:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const LHError=require('../lib/lh-error.js');
const TraceProcessor=require('../lib/tracehouse/trace-processor.js');



class LHTraceProcessor extends TraceProcessor{



static createNoNavstartError(){
return new LHError(LHError.errors.NO_NAVSTART);
}




static createNoTracingStartedError(){
return new LHError(LHError.errors.NO_TRACING_STARTED);
}}



class TraceOfTab{






static async compute_(trace){



const traceOfTab=await LHTraceProcessor.computeTraceOfTab(trace);
const{timings,timestamps,firstContentfulPaintEvt}=traceOfTab;
const{firstContentfulPaint:firstContentfulPaintTiming}=timings;
const{firstContentfulPaint:firstContentfulPaintTs}=timestamps;
if(
!firstContentfulPaintEvt||
firstContentfulPaintTiming===undefined||
firstContentfulPaintTs===undefined)
{
throw new LHError(LHError.errors.NO_FCP);
}



return{
...traceOfTab,
firstContentfulPaintEvt,
timings:{...timings,firstContentfulPaint:firstContentfulPaintTiming},
timestamps:{...timestamps,firstContentfulPaint:firstContentfulPaintTs}};

}}


module.exports=makeComputedArtifact(TraceOfTab);

},{"../lib/lh-error.js":82,"../lib/tracehouse/trace-processor.js":96,"./computed-artifact.js":8}],45:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const ByteEfficiencyAudit=require('../audits/byte-efficiency/byte-efficiency-audit.js');
const NetworkRecords=require('./network-records.js');

const PREVIEW_LENGTH=100;



class UnusedCSS{





static indexStylesheetsById(styles,networkRecords){
const indexedNetworkRecords=networkRecords.



filter(record=>record.resourceSize>0).
reduce((indexed,record)=>{
indexed[record.url]=record;
return indexed;
},{});

return styles.reduce((indexed,stylesheet)=>{
indexed[stylesheet.header.styleSheetId]=Object.assign({
usedRules:[],
networkRecord:indexedNetworkRecords[stylesheet.header.sourceURL]},
stylesheet);
return indexed;
},{});
}






static indexUsedRules(rules,indexedStylesheets){
rules.forEach(rule=>{
const stylesheetInfo=indexedStylesheets[rule.styleSheetId];

if(!stylesheetInfo){
return;
}

if(rule.used){
stylesheetInfo.usedRules.push(rule);
}
});
}





static computeUsage(stylesheetInfo){
let usedUncompressedBytes=0;
const totalUncompressedBytes=stylesheetInfo.content.length;

for(const usedRule of stylesheetInfo.usedRules){
usedUncompressedBytes+=usedRule.endOffset-usedRule.startOffset;
}

const totalTransferredBytes=ByteEfficiencyAudit.estimateTransferSize(
stylesheetInfo.networkRecord,totalUncompressedBytes,'Stylesheet');
const percentUnused=(totalUncompressedBytes-usedUncompressedBytes)/totalUncompressedBytes;
const wastedBytes=Math.round(percentUnused*totalTransferredBytes);

return{
wastedBytes,
wastedPercent:percentUnused*100,
totalBytes:totalTransferredBytes};

}






static determineContentPreview(content){
let preview=(content||'').
slice(0,PREVIEW_LENGTH*5).
replace(/( {2,}|\t)+/g,'  ').
replace(/\n\s+}/g,'\n}').
trim();

if(preview.length>PREVIEW_LENGTH){
const firstRuleStart=preview.indexOf('{');
const firstRuleEnd=preview.indexOf('}');

if(firstRuleStart===-1||firstRuleEnd===-1||
firstRuleStart>firstRuleEnd||
firstRuleStart>PREVIEW_LENGTH){

preview=preview.slice(0,PREVIEW_LENGTH)+'...';
}else if(firstRuleEnd<PREVIEW_LENGTH){

preview=preview.slice(0,firstRuleEnd+1)+' ...';
}else{

const lastSemicolonIndex=preview.slice(0,PREVIEW_LENGTH).lastIndexOf(';');
preview=lastSemicolonIndex<firstRuleStart?
preview.slice(0,PREVIEW_LENGTH)+'... } ...':
preview.slice(0,lastSemicolonIndex+1)+' ... } ...';
}
}

return preview;
}






static mapSheetToResult(stylesheetInfo,pageUrl){
let url=stylesheetInfo.header.sourceURL;
if(!url||url===pageUrl){
const contentPreview=UnusedCSS.determineContentPreview(stylesheetInfo.content);
url=contentPreview;
}

const usage=UnusedCSS.computeUsage(stylesheetInfo);
return{url,...usage};
}






static async compute_(data,context){
const{CSSUsage,URL,devtoolsLog}=data;
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const indexedSheets=UnusedCSS.indexStylesheetsById(CSSUsage.stylesheets,networkRecords);
UnusedCSS.indexUsedRules(CSSUsage.rules,indexedSheets);

const items=Object.keys(indexedSheets).
map(sheetId=>UnusedCSS.mapSheetToResult(indexedSheets[sheetId],URL.finalUrl));
return items;
}}


module.exports=makeComputedArtifact(UnusedCSS);

},{"../audits/byte-efficiency/byte-efficiency-audit.js":4,"./computed-artifact.js":8,"./network-records.js":39}],46:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');

























class UnusedJavascriptSummary{




static computeWaste(scriptCoverage){
let maximumEndOffset=0;
for(const func of scriptCoverage.functions){
maximumEndOffset=Math.max(maximumEndOffset,...func.ranges.map(r=>r.endOffset));
}



const unusedByIndex=new Uint8Array(maximumEndOffset);
for(const func of scriptCoverage.functions){
for(const range of func.ranges){
if(range.count===0){
for(let i=range.startOffset;i<range.endOffset;i++){
unusedByIndex[i]=1;
}
}
}
}

let unused=0;
for(const x of unusedByIndex){
unused+=x;
}

return{
unusedByIndex,
unusedLength:unused,
contentLength:maximumEndOffset};

}






static createItem(url,lengths){
const wastedRatio=lengths.unused/lengths.content||0;
const wastedBytes=Math.round(lengths.content*wastedRatio);

return{
url:url,
totalBytes:lengths.content,
wastedBytes,
wastedPercent:100*wastedRatio};

}




static determineLengths(wasteData){
let unused=0;
let content=0;


for(const usage of wasteData){
unused+=usage.unusedLength;
content+=usage.contentLength;
}

return{
content,
unused};

}





static createSourceWastedBytes(wasteData,bundle){
if(!bundle.script.content)return;


const files={};

const lineLengths=bundle.script.content.split('\n').map(l=>l.length);
let totalSoFar=0;
const lineOffsets=lineLengths.map(len=>{
const retVal=totalSoFar;
totalSoFar+=len+1;
return retVal;
});


bundle.map.computeLastGeneratedColumns();
for(const mapping of bundle.map.mappings()){
let offset=lineOffsets[mapping.lineNumber];

offset+=mapping.columnNumber;
const lastColumnOfMapping=

mapping.lastColumnNumber-1||lineLengths[mapping.lineNumber];
for(let i=mapping.columnNumber;i<=lastColumnOfMapping;i++){
if(wasteData.every(data=>data.unusedByIndex[offset]===1)){
const key=mapping.sourceURL||'(unmapped)';
files[key]=(files[key]||0)+1;
}
offset+=1;
}
}

const dataSorted=Object.entries(files).
sort(([_,unusedBytes1],[__,unusedBytes2])=>unusedBytes2-unusedBytes1);


const bundleData={};
for(const[key,unusedBytes]of dataSorted){
bundleData[key]=unusedBytes;
}
return bundleData;
}





static async compute_(data){
const{url,scriptCoverages,bundle}=data;

const wasteData=scriptCoverages.map(UnusedJavascriptSummary.computeWaste);
const lengths=UnusedJavascriptSummary.determineLengths(wasteData);
const item=UnusedJavascriptSummary.createItem(url,lengths);
if(!bundle)return item;

return{
...item,
sourcesWastedBytes:UnusedJavascriptSummary.createSourceWastedBytes(wasteData,bundle)};

}}


module.exports=makeComputedArtifact(UnusedJavascriptSummary);

},{"./computed-artifact.js":8}],47:[function(require,module,exports){





'use strict';

const makeComputedArtifact=require('./computed-artifact.js');
const TraceOfTab=require('./trace-of-tab.js');




class UserTimings{





static async compute_(trace,context){
const traceOfTab=await TraceOfTab.request(trace,context);

const userTimings=[];

const measuresStartTimes={};





traceOfTab.processEvents.filter(evt=>{
if(!evt.cat.includes('blink.user_timing')){
return false;
}



return evt.name!=='requestStart'&&
evt.name!=='navigationStart'&&
evt.name!=='paintNonDefaultBackgroundColor'&&
evt.args.frame===undefined;
}).
forEach(ut=>{

if(ut.ph==='R'||ut.ph.toUpperCase()==='I'){
userTimings.push({
name:ut.name,
isMark:true,
args:ut.args,
startTime:ut.ts});



}else if(ut.ph.toLowerCase()==='b'){
measuresStartTimes[ut.name]=ut.ts;


}else if(ut.ph.toLowerCase()==='e'){
userTimings.push({
name:ut.name,
isMark:false,
args:ut.args,
startTime:measuresStartTimes[ut.name],
endTime:ut.ts,
duration:ut.ts-measuresStartTimes[ut.name]});

}
});


userTimings.forEach(ut=>{
ut.startTime=(ut.startTime-traceOfTab.navigationStartEvt.ts)/1000;
if(!ut.isMark){
ut.endTime=(ut.endTime-traceOfTab.navigationStartEvt.ts)/1000;
ut.duration=ut.duration/1000;
}
});

return userTimings;
}}


module.exports=makeComputedArtifact(UserTimings);

},{"./computed-artifact.js":8,"./trace-of-tab.js":44}],48:[function(require,module,exports){





'use strict';

const Parser=require('metaviewport-parser');

const makeComputedArtifact=require('./computed-artifact.js');

class ViewportMeta{




static async compute_(MetaElements){
const viewportMeta=MetaElements.find(meta=>meta.name==='viewport');

if(!viewportMeta){
return{
hasViewportTag:false,
isMobileOptimized:false,
parserWarnings:[]};

}

const warnings=[];
const parsedProps=Parser.parseMetaViewPortContent(viewportMeta.content||'');

if(Object.keys(parsedProps.unknownProperties).length){
warnings.push(`Invalid properties found: ${JSON.stringify(parsedProps.unknownProperties)}`);
}
if(Object.keys(parsedProps.invalidValues).length){
warnings.push(`Invalid values found: ${JSON.stringify(parsedProps.invalidValues)}`);
}

const viewportProps=parsedProps.validProperties;
const isMobileOptimized=Boolean(viewportProps.width||viewportProps['initial-scale']);

return{
hasViewportTag:true,
isMobileOptimized,
parserWarnings:warnings};

}}


module.exports=makeComputedArtifact(ViewportMeta);








},{"./computed-artifact.js":8,"metaviewport-parser":157}],49:[function(require,module,exports){





'use strict';





function isArrayOfUnknownObjects(arr){
return Array.isArray(arr)&&arr.every(isObjectOfUnknownProperties);
}





function isObjectOfUnknownProperties(val){
return typeof val==='object'&&val!==null&&!Array.isArray(val);
}







function isNumber(val){
return typeof val==='number'&&!isNaN(val);
}

class Budget{






static assertNoExcessProperties(obj,objectName){
const invalidKeys=Object.keys(obj);
if(invalidKeys.length>0){
const keys=invalidKeys.join(', ');
throw new Error(`${objectName} has unrecognized properties: [${keys}]`);
}
}







static assertNoDuplicateStrings(strings,arrayName){
const foundStrings=new Set();
for(const string of strings){
if(foundStrings.has(string)){
throw new Error(`${arrayName} has duplicate entry of type '${string}'`);
}
foundStrings.add(string);
}
}





static validateResourceBudget(resourceBudget){
const{resourceType,budget,...invalidRest}=resourceBudget;
Budget.assertNoExcessProperties(invalidRest,'Resource Budget');


const validResourceTypes=[
'total',
'document',
'script',
'stylesheet',
'image',
'media',
'font',
'other',
'third-party'];


if(!validResourceTypes.includes(resourceType)){
throw new Error(`Invalid resource type: ${resourceType}. \n`+
`Valid resource types are: ${validResourceTypes.join(', ')}`);
}
if(!isNumber(budget)){
throw new Error(`Invalid budget: ${budget}`);
}
return{
resourceType:resourceType,
budget};

}





static throwInvalidPathError(path,error){
throw new Error(`Invalid path ${path}. ${error}\n`+
`'Path' should be specified using the 'robots.txt' format.\n`+
`Learn more about the 'robots.txt' format here:\n`+
`https://developers.google.com/search/reference/robots_txt#url-matching-based-on-path-values`);
}








static validatePath(path){
if(path===undefined){
return undefined;
}else if(typeof path!=='string'){
this.throwInvalidPathError(path,`Path should be a string.`);
return;
}else if(!path.startsWith('/')){
this.throwInvalidPathError(path,`Path should start with '/'.`);
}else if((path.match(/\*/g)||[]).length>1){
this.throwInvalidPathError(path,`Path should only contain one '*'.`);
}else if((path.match(/\$/g)||[]).length>1){
this.throwInvalidPathError(path,`Path should only contain one '$' character.`);
}else if(path.includes('$')&&!path.endsWith('$')){
this.throwInvalidPathError(path,`'$' character should only occur at end of path.`);
}
return path;
}









static getMatchingBudget(budgets,url){
if(budgets===null)return;


for(let i=budgets.length-1;i>=0;i--){
const budget=budgets[i];
if(this.urlMatchesPattern(url,budget.path)){
return budget;
}
}
}









static urlMatchesPattern(url,pattern='/'){
const urlObj=new URL(url);
const urlPath=urlObj.pathname+urlObj.search;

const hasWildcard=pattern.includes('*');
const hasDollarSign=pattern.includes('$');









if(!hasWildcard&&!hasDollarSign){
return urlPath.startsWith(pattern);





}else if(!hasWildcard&&hasDollarSign){
return urlPath===pattern.slice(0,-1);






}else if(hasWildcard&&!hasDollarSign){
const[beforeWildcard,afterWildcard]=pattern.split('*');
const remainingUrl=urlPath.slice(beforeWildcard.length);
return urlPath.startsWith(beforeWildcard)&&remainingUrl.includes(afterWildcard);






}else if(hasWildcard&&hasDollarSign){
const[beforeWildcard,afterWildcard]=pattern.split('*');
const urlEnd=urlPath.slice(beforeWildcard.length);
return urlPath.startsWith(beforeWildcard)&&urlEnd.endsWith(afterWildcard.slice(0,-1));
}
return false;
}





static validateTimingBudget(timingBudget){
const{metric,budget,...invalidRest}=timingBudget;
Budget.assertNoExcessProperties(invalidRest,'Timing Budget');


const validTimingMetrics=[
'first-contentful-paint',
'first-cpu-idle',
'interactive',
'first-meaningful-paint',
'max-potential-fid',
'estimated-input-latency',
'total-blocking-time',
'speed-index',
'largest-contentful-paint',
'cumulative-layout-shift'];


if(!validTimingMetrics.includes(metric)){
throw new Error(`Invalid timing metric: ${metric}. \n`+
`Valid timing metrics are: ${validTimingMetrics.join(', ')}`);
}
if(!isNumber(budget)){
throw new Error(`Invalid budget: ${budget}`);
}
return{
metric:metric,
budget};

}





static validateHostname(hostname){
const errMsg=`${hostname} is not a valid hostname.`;
if(hostname.length===0){
throw new Error(errMsg);
}
if(hostname.includes('/')){
throw new Error(errMsg);
}
if(hostname.includes(':')){
throw new Error(errMsg);
}
if(hostname.includes('*')){
if(!hostname.startsWith('*.')||hostname.lastIndexOf('*')>0){
throw new Error(errMsg);
}
}
return hostname;
}





static validateHostnames(hostnames){
if(Array.isArray(hostnames)&&hostnames.every(host=>typeof host==='string')){
return hostnames.map(Budget.validateHostname);
}else if(hostnames!==undefined){
throw new Error(`firstPartyHostnames should be defined as an array of strings.`);
}
}







static initializeBudget(budgetJson){

budgetJson=JSON.parse(JSON.stringify(budgetJson));
if(!isArrayOfUnknownObjects(budgetJson)){
throw new Error('Budget file is not defined as an array of budgets.');
}

const budgets=budgetJson.map((b,index)=>{

const budget={};

const{path,options,resourceSizes,resourceCounts,timings,...invalidRest}=b;
Budget.assertNoExcessProperties(invalidRest,'Budget');

budget.path=Budget.validatePath(path);

if(isObjectOfUnknownProperties(options)){
const{firstPartyHostnames,...invalidRest}=options;
Budget.assertNoExcessProperties(invalidRest,'Options property');
budget.options={};
budget.options.firstPartyHostnames=Budget.validateHostnames(firstPartyHostnames);
}else if(options!==undefined){
throw new Error(`Invalid options property in budget at index ${index}`);
}

if(isArrayOfUnknownObjects(resourceSizes)){
budget.resourceSizes=resourceSizes.map(Budget.validateResourceBudget);
Budget.assertNoDuplicateStrings(budget.resourceSizes.map(r=>r.resourceType),
`budgets[${index}].resourceSizes`);
}else if(resourceSizes!==undefined){
throw new Error(`Invalid resourceSizes entry in budget at index ${index}`);
}

if(isArrayOfUnknownObjects(resourceCounts)){
budget.resourceCounts=resourceCounts.map(Budget.validateResourceBudget);
Budget.assertNoDuplicateStrings(budget.resourceCounts.map(r=>r.resourceType),
`budgets[${index}].resourceCounts`);
}else if(resourceCounts!==undefined){
throw new Error(`Invalid resourceCounts entry in budget at index ${index}`);
}

if(isArrayOfUnknownObjects(timings)){
budget.timings=timings.map(Budget.validateTimingBudget);
Budget.assertNoDuplicateStrings(budget.timings.map(r=>r.metric),
`budgets[${index}].timings`);
}else if(timings!==undefined){
throw new Error(`Invalid timings entry in budget at index ${index}`);
}

return budget;
});

return budgets;
}}


module.exports=Budget;

},{}],50:[function(require,module,exports){
(function(process,global,__dirname){





'use strict';

const path=require('path');
const Audit=require('../audits/audit.js');
const Runner=require('../runner.js');









const mergeOptionsOfItems=function(items){

const mergedItems=[];

for(const item of items){
const existingItem=item.path&&mergedItems.find(candidate=>candidate.path===item.path);
if(!existingItem){
mergedItems.push(item);
continue;
}

existingItem.options=Object.assign({},existingItem.options,item.options);
}

return mergedItems;
};






function assertValidAudit(auditDefinition){
const{implementation,path:auditPath}=auditDefinition;
const auditName=auditPath||
implementation&&implementation.meta&&implementation.meta.id||
'Unknown audit';

if(typeof implementation.audit!=='function'||implementation.audit===Audit.audit){
throw new Error(`${auditName} has no audit() method.`);
}

if(typeof implementation.meta.id!=='string'){
throw new Error(`${auditName} has no meta.id property, or the property is not a string.`);
}

if(typeof implementation.meta.title!=='string'){
throw new Error(`${auditName} has no meta.title property, or the property is not a string.`);
}


if(
typeof implementation.meta.failureTitle!=='string'&&
implementation.meta.scoreDisplayMode===Audit.SCORING_MODES.BINARY)
{
throw new Error(`${auditName} has no failureTitle and should.`);
}

if(typeof implementation.meta.description!=='string'){
throw new Error(
`${auditName} has no meta.description property, or the property is not a string.`);

}else if(implementation.meta.description===''){
throw new Error(
`${auditName} has an empty meta.description string. Please add a description for the UI.`);

}

if(!Array.isArray(implementation.meta.requiredArtifacts)){
throw new Error(
`${auditName} has no meta.requiredArtifacts property, or the property is not an array.`);

}
}






function expandAuditShorthand(audits){
if(!audits){
return null;
}

const newAudits=audits.map(audit=>{
if(typeof audit==='string'){

return{path:audit,options:{}};
}else if('implementation'in audit&&typeof audit.implementation.audit==='function'){

return audit;
}else if('path'in audit&&typeof audit.path==='string'){

return audit;
}else if('audit'in audit&&typeof audit.audit==='function'){

return{implementation:audit,options:{}};
}else{
throw new Error('Invalid Audit type '+JSON.stringify(audit));
}
});

return newAudits;
}









function requireAudits(audits,configDir){
const expandedAudits=expandAuditShorthand(audits);
if(!expandedAudits){
return null;
}

const coreList=Runner.getAuditList();
const auditDefns=expandedAudits.map(audit=>{
let implementation;
if('implementation'in audit){
implementation=audit.implementation;
}else{

const auditPathJs=`${audit.path}.js`;
const coreAudit=coreList.find(a=>a===auditPathJs);
let requirePath=`../audits/${audit.path}`;
if(!coreAudit){

if(global.isDevtools){

requirePath=audit.path;
}else{

const absolutePath=resolveModule(audit.path,configDir,'audit');

requirePath=path.relative(__dirname,absolutePath);
}
}
implementation=require(requirePath);
}

return{
implementation,
path:audit.path,
options:audit.options||{}};

});

const mergedAuditDefns=mergeOptionsOfItems(auditDefns);
mergedAuditDefns.forEach(audit=>assertValidAudit(audit));
return mergedAuditDefns;
}











function resolveModule(moduleIdentifier,configDir,category){




try{
return require.resolve(moduleIdentifier);
}catch(e){}




const cwdPath=path.resolve(process.cwd(),moduleIdentifier);
try{
return require.resolve(cwdPath);
}catch(e){}

const errorString='Unable to locate '+(category?`${category}: `:'')+
`\`${moduleIdentifier}\`.
     Tried to require() from these locations:
       ${__dirname}
       ${cwdPath}`;

if(!configDir){
throw new Error(errorString);
}




const relativePath=path.resolve(configDir,moduleIdentifier);
try{
return require.resolve(relativePath);
}catch(requireError){}

throw new Error(errorString+`
       ${relativePath}`);
}

module.exports={
mergeOptionsOfItems,
requireAudits,
resolveModule};


}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},"/lighthouse-core/config");
},{"../audits/audit.js":3,"../runner.js":101,"_process":170,"path":168}],51:[function(require,module,exports){





'use strict';





function isArrayOfUnknownObjects(arr){
return Array.isArray(arr)&&arr.every(isObjectOfUnknownProperties);
}





function isObjectOfUnknownProperties(val){
return typeof val==='object'&&val!==null&&!Array.isArray(val);
}








function assertNoExcessProperties(obj,pluginName,objectName=''){
if(objectName){
objectName+=' ';
}

const invalidKeys=Object.keys(obj);
if(invalidKeys.length>0){
const keys=invalidKeys.join(', ');
throw new Error(`${pluginName} has unrecognized ${objectName}properties: [${keys}]`);
}
}




class ConfigPlugin{







static _parseAuditsList(auditsJson,pluginName){

if(auditsJson===undefined){
return undefined;
}else if(!isArrayOfUnknownObjects(auditsJson)){
throw new Error(`${pluginName} has an invalid audits array.`);
}

return auditsJson.map(auditDefnJson=>{
const{path,...invalidRest}=auditDefnJson;
assertNoExcessProperties(invalidRest,pluginName,'audit');

if(typeof path!=='string'){
throw new Error(`${pluginName} has a missing audit path.`);
}
return{
path};

});
}







static _parseAuditRefsList(auditRefsJson,pluginName){
if(!isArrayOfUnknownObjects(auditRefsJson)){
throw new Error(`${pluginName} has no valid auditsRefs.`);
}

return auditRefsJson.map(auditRefJson=>{
const{id,weight,group,...invalidRest}=auditRefJson;
assertNoExcessProperties(invalidRest,pluginName,'auditRef');

if(typeof id!=='string'){
throw new Error(`${pluginName} has an invalid auditRef id.`);
}
if(typeof weight!=='number'){
throw new Error(`${pluginName} has an invalid auditRef weight.`);
}
if(typeof group!=='string'&&typeof group!=='undefined'){
throw new Error(`${pluginName} has an invalid auditRef group.`);
}

const prependedGroup=group?`${pluginName}-${group}`:group;
return{
id,
weight,
group:prependedGroup};

});
}







static _parseCategory(categoryJson,pluginName){
if(!isObjectOfUnknownProperties(categoryJson)){
throw new Error(`${pluginName} has no valid category.`);
}

const{
title,
description,
manualDescription,
auditRefs:auditRefsJson,
...invalidRest}=
categoryJson;

assertNoExcessProperties(invalidRest,pluginName,'category');

if(typeof title!=='string'){
throw new Error(`${pluginName} has an invalid category tile.`);
}
if(typeof description!=='string'&&typeof description!=='undefined'){
throw new Error(`${pluginName} has an invalid category description.`);
}
if(typeof manualDescription!=='string'&&typeof manualDescription!=='undefined'){
throw new Error(`${pluginName} has an invalid category manualDescription.`);
}
const auditRefs=ConfigPlugin._parseAuditRefsList(auditRefsJson,pluginName);

return{
title,
auditRefs,
description:description,
manualDescription:manualDescription};

}








static _parseGroups(groupsJson,pluginName){
if(groupsJson===undefined){
return undefined;
}

if(!isObjectOfUnknownProperties(groupsJson)){
throw new Error(`${pluginName} groups json is not defined as an object.`);
}

const groups=Object.entries(groupsJson);


const parsedGroupsJson={};
groups.forEach(([groupId,groupJson])=>{
if(!isObjectOfUnknownProperties(groupJson)){
throw new Error(`${pluginName} has a group not defined as an object.`);
}
const{title,description,...invalidRest}=groupJson;
assertNoExcessProperties(invalidRest,pluginName,'group');

if(typeof title!=='string'){
throw new Error(`${pluginName} has an invalid group title.`);
}
if(typeof description!=='string'&&typeof description!=='undefined'){
throw new Error(`${pluginName} has an invalid group description.`);
}
parsedGroupsJson[`${pluginName}-${groupId}`]={
title,
description};

});
return parsedGroupsJson;
}








static parsePlugin(pluginJson,pluginName){

pluginJson=JSON.parse(JSON.stringify(pluginJson));
if(!isObjectOfUnknownProperties(pluginJson)){
throw new Error(`${pluginName} is not defined as an object.`);
}

const{
audits:pluginAuditsJson,
category:pluginCategoryJson,
groups:pluginGroupsJson,
...invalidRest}=
pluginJson;

assertNoExcessProperties(invalidRest,pluginName);

return{
audits:ConfigPlugin._parseAuditsList(pluginAuditsJson,pluginName),
categories:{
[pluginName]:ConfigPlugin._parseCategory(pluginCategoryJson,pluginName)},

groups:ConfigPlugin._parseGroups(pluginGroupsJson,pluginName)};

}}


module.exports=ConfigPlugin;

},{}],52:[function(require,module,exports){
(function(global,__dirname){





'use strict';

const defaultConfigPath='./default-config.js';
const defaultConfig=require('./default-config.js');
const constants=require('./constants.js');
const i18n=require('./../lib/i18n/i18n.js');

const isDeepEqual=require('lodash.isequal');
const log=require('lighthouse-logger');
const path=require('path');
const Runner=require('../runner.js');
const ConfigPlugin=require('./config-plugin.js');
const Budget=require('./budget.js');
const{requireAudits,mergeOptionsOfItems,resolveModule}=require('./config-helpers.js');








const BASE_ARTIFACT_BLANKS={
fetchTime:'',
LighthouseRunWarnings:'',
TestedAsMobileDevice:'',
HostFormFactor:'',
HostUserAgent:'',
NetworkUserAgent:'',
BenchmarkIndex:'',
WebAppManifest:'',
InstallabilityErrors:'',
Stacks:'',
traces:'',
devtoolsLogs:'',
settings:'',
URL:'',
Timing:'',
PageLoadError:''};

const BASE_ARTIFACT_NAMES=Object.keys(BASE_ARTIFACT_BLANKS);





function assertValidPasses(passes,audits){
if(!Array.isArray(passes)){
return;
}

const requestedGatherers=Config.getGatherersRequestedByAudits(audits);

const foundGatherers=new Set(BASE_ARTIFACT_NAMES);


passes.forEach((pass,passIndex)=>{
if(passIndex===0&&pass.loadFailureMode!=='fatal'){
log.warn(`"${pass.passName}" is the first pass but was marked as non-fatal. `+
`The first pass will always be treated as loadFailureMode=fatal.`);
pass.loadFailureMode='fatal';
}

pass.gatherers.forEach(gathererDefn=>{
const gatherer=gathererDefn.instance;
foundGatherers.add(gatherer.name);
const isGatherRequiredByAudits=requestedGatherers.has(gatherer.name);
if(!isGatherRequiredByAudits){
const msg=`${gatherer.name} gatherer requested, however no audit requires it.`;
log.warn('config',msg);
}
});
});


for(const auditDefn of audits||[]){
const auditMeta=auditDefn.implementation.meta;
for(const requiredArtifact of auditMeta.requiredArtifacts){
if(!foundGatherers.has(requiredArtifact)){
throw new Error(`${requiredArtifact} gatherer, required by audit ${auditMeta.id}, `+
'was not found in config.');
}
}
}


const usedNames=new Set();
passes.forEach(pass=>{
const passName=pass.passName;
if(usedNames.has(passName)){
throw new Error(`Passes must have unique names (repeated passName: ${passName}.`);
}
usedNames.add(passName);
});
}






function assertValidCategories(categories,audits,groups){
if(!categories){
return;
}

const auditsKeyedById=new Map((audits||[]).map(audit=>

[audit.implementation.meta.id,audit]));


Object.keys(categories).forEach(categoryId=>{
categories[categoryId].auditRefs.forEach((auditRef,index)=>{
if(!auditRef.id){
throw new Error(`missing an audit id at ${categoryId}[${index}]`);
}

const audit=auditsKeyedById.get(auditRef.id);
if(!audit){
throw new Error(`could not find ${auditRef.id} audit for category ${categoryId}`);
}

const auditImpl=audit.implementation;
const isManual=auditImpl.meta.scoreDisplayMode==='manual';
if(categoryId==='accessibility'&&!auditRef.group&&!isManual){
throw new Error(`${auditRef.id} accessibility audit does not have a group`);
}

if(auditRef.weight>0&&isManual){
throw new Error(`${auditRef.id} is manual but has a positive weight`);
}

if(auditRef.group&&(!groups||!groups[auditRef.group])){
throw new Error(`${auditRef.id} references unknown group ${auditRef.group}`);
}
});
});
}





function assertValidGatherer(gathererInstance,gathererName){
gathererName=gathererName||gathererInstance.name||'gatherer';

if(typeof gathererInstance.beforePass!=='function'){
throw new Error(`${gathererName} has no beforePass() method.`);
}

if(typeof gathererInstance.pass!=='function'){
throw new Error(`${gathererName} has no pass() method.`);
}

if(typeof gathererInstance.afterPass!=='function'){
throw new Error(`${gathererName} has no afterPass() method.`);
}
}







function assertValidPluginName(configJSON,pluginName){
if(!pluginName.startsWith('lighthouse-plugin-')){
throw new Error(`plugin name '${pluginName}' does not start with 'lighthouse-plugin-'`);
}

if(configJSON.categories&&configJSON.categories[pluginName]){
throw new Error(`plugin name '${pluginName}' not allowed because it is the id of a category already found in config`);
}
}







function cleanFlagsForSettings(flags={}){

const settings={};

for(const key of Object.keys(flags)){
if(key in constants.defaultSettings){

settings[key]=flags[key];
}
}

return settings;
}







function _merge(base,extension,overwriteArrays=false){

if(typeof base==='undefined'||base===null){
return extension;
}else if(typeof extension==='undefined'){
return base;
}else if(Array.isArray(extension)){
if(overwriteArrays)return extension;
if(!Array.isArray(base))throw new TypeError(`Expected array but got ${typeof base}`);
const merged=base.slice();
extension.forEach(item=>{
if(!merged.some(candidate=>isDeepEqual(candidate,item)))merged.push(item);
});

return merged;
}else if(typeof extension==='object'){
if(typeof base!=='object')throw new TypeError(`Expected object but got ${typeof base}`);
if(Array.isArray(base))throw new TypeError('Expected object but got Array');
Object.keys(extension).forEach(key=>{
const localOverwriteArrays=overwriteArrays||
key==='settings'&&typeof base[key]==='object';
base[key]=_merge(base[key],extension[key],localOverwriteArrays);
});
return base;
}

return extension;
}






const merge=_merge;






function cloneArrayWithPluginSafety(array){
return array.map(item=>{
if(typeof item==='object'){

return Object.assign(
Object.create(
Object.getPrototypeOf(item)),

item);

}

return item;
});
}








function deepClone(json){
return JSON.parse(JSON.stringify(json));
}







function deepCloneConfigJson(json){
const cloned=deepClone(json);



if(Array.isArray(cloned.passes)&&Array.isArray(json.passes)){
for(let i=0;i<cloned.passes.length;i++){
const pass=cloned.passes[i];
pass.gatherers=cloneArrayWithPluginSafety(json.passes[i].gatherers||[]);
}
}

if(Array.isArray(json.audits)){
cloned.audits=cloneArrayWithPluginSafety(json.audits);
}

return cloned;
}

class Config{






constructor(configJSON,flags){
const status={msg:'Create config',id:'lh:init:config'};
log.time(status,'verbose');
let configPath=flags&&flags.configPath;

if(!configJSON){
configJSON=defaultConfig;
configPath=path.resolve(__dirname,defaultConfigPath);
}

if(configPath&&!path.isAbsolute(configPath)){
throw new Error('configPath must be an absolute path.');
}


configJSON=deepCloneConfigJson(configJSON);


if(configJSON.extends){
configJSON=Config.extendConfigJSON(deepCloneConfigJson(defaultConfig),configJSON);
}


const configDir=configPath?path.dirname(configPath):undefined;


configJSON=Config.mergePlugins(configJSON,flags,configDir);

const settings=Config.initSettings(configJSON.settings,flags);


const passesWithDefaults=Config.augmentPassesWithDefaults(configJSON.passes);
Config.adjustDefaultPassForThrottling(settings,passesWithDefaults);
const passes=Config.requireGatherers(passesWithDefaults,configDir);


this.settings=settings;

this.passes=passes;

this.audits=Config.requireAudits(configJSON.audits,configDir);

this.categories=configJSON.categories||null;

this.groups=configJSON.groups||null;

Config.filterConfigIfNeeded(this);

assertValidPasses(this.passes,this.audits);
assertValidCategories(this.categories,this.audits,this.groups);



const configJson=this;
log.timeEnd(status);
}






getPrintString(){
const jsonConfig=deepClone(this);

if(jsonConfig.passes){
for(const pass of jsonConfig.passes){
for(const gathererDefn of pass.gatherers){
gathererDefn.implementation=undefined;

gathererDefn.instance=undefined;
if(Object.keys(gathererDefn.options).length===0){

gathererDefn.options=undefined;
}
}
}
}

if(jsonConfig.audits){
for(const auditDefn of jsonConfig.audits){

auditDefn.implementation=undefined;
if(Object.keys(auditDefn.options).length===0){

auditDefn.options=undefined;
}
}
}


i18n.replaceIcuMessageInstanceIds(jsonConfig,jsonConfig.settings.locale);

return JSON.stringify(jsonConfig,null,2);
}






static extendConfigJSON(baseJSON,extendJSON){
if(extendJSON.passes&&baseJSON.passes){
for(const pass of extendJSON.passes){

const passName=pass.passName||constants.defaultPassConfig.passName;
const basePass=baseJSON.passes.find(candidate=>candidate.passName===passName);

if(!basePass){
baseJSON.passes.push(pass);
}else{
merge(basePass,pass);
}
}

delete extendJSON.passes;
}

return merge(baseJSON,extendJSON);
}







static mergePlugins(configJSON,flags,configDir){
const configPlugins=configJSON.plugins||[];
const flagPlugins=flags&&flags.plugins||[];
const pluginNames=new Set([...configPlugins,...flagPlugins]);

for(const pluginName of pluginNames){
assertValidPluginName(configJSON,pluginName);


const pluginPath=global.isDevtools?
pluginName:
resolveModule(pluginName,configDir,'plugin');
const rawPluginJson=require(pluginPath);
const pluginJson=ConfigPlugin.parsePlugin(rawPluginJson,pluginName);

configJSON=Config.extendConfigJSON(configJSON,pluginJson);
}

return configJSON;
}





static augmentPassesWithDefaults(passes){
if(!passes){
return null;
}

const{defaultPassConfig}=constants;
return passes.map(pass=>merge(deepClone(defaultPassConfig),pass));
}






static initSettings(settingsJson={},flags){



const locale=i18n.lookupLocale(flags&&flags.locale||settingsJson.locale);


const{defaultSettings}=constants;
const settingWithDefaults=merge(deepClone(defaultSettings),settingsJson,true);


const settingsWithFlags=merge(settingWithDefaults||{},cleanFlagsForSettings(flags),true);

if(settingsWithFlags.budgets){
settingsWithFlags.budgets=Budget.initializeBudget(settingsWithFlags.budgets);
}

settingsWithFlags.locale=locale;

return settingsWithFlags;
}












static expandGathererShorthand(gatherers){
const expanded=gatherers.map(gatherer=>{
if(typeof gatherer==='string'){

return{path:gatherer,options:{}};
}else if('implementation'in gatherer||'instance'in gatherer){

return gatherer;
}else if('path'in gatherer){

if(typeof gatherer.path!=='string'){
throw new Error('Invalid Gatherer type '+JSON.stringify(gatherer));
}
return gatherer;
}else if(typeof gatherer==='function'){

return{implementation:gatherer,options:{}};
}else if(gatherer&&typeof gatherer.beforePass==='function'){

return{instance:gatherer,options:{}};
}else{
throw new Error('Invalid Gatherer type '+JSON.stringify(gatherer));
}
});

return expanded;
}







static adjustDefaultPassForThrottling(settings,passes){
if(!passes||
settings.throttlingMethod!=='devtools'&&settings.throttlingMethod!=='provided'){
return;
}

const defaultPass=passes.find(pass=>pass.passName==='defaultPass');
if(!defaultPass)return;
const overrides=constants.nonSimulatedPassConfigOverrides;
defaultPass.pauseAfterFcpMs=
Math.max(overrides.pauseAfterFcpMs,defaultPass.pauseAfterFcpMs);
defaultPass.pauseAfterLoadMs=
Math.max(overrides.pauseAfterLoadMs,defaultPass.pauseAfterLoadMs);
defaultPass.cpuQuietThresholdMs=
Math.max(overrides.cpuQuietThresholdMs,defaultPass.cpuQuietThresholdMs);
defaultPass.networkQuietThresholdMs=
Math.max(overrides.networkQuietThresholdMs,defaultPass.networkQuietThresholdMs);
}





static filterConfigIfNeeded(config){
const settings=config.settings;
if(!settings.onlyCategories&&!settings.onlyAudits&&!settings.skipAudits){
return;
}


const{categories,requestedAuditNames}=Config.filterCategoriesAndAudits(config.categories,
settings);


const audits=config.audits&&config.audits.filter(auditDefn=>
requestedAuditNames.has(auditDefn.implementation.meta.id));


const requestedGathererIds=Config.getGatherersRequestedByAudits(audits);


const passes=Config.generatePassesNeededByGatherers(config.passes,requestedGathererIds);

config.categories=categories;
config.audits=audits;
config.passes=passes;
}







static filterCategoriesAndAudits(oldCategories,settings){
if(!oldCategories){
return{categories:null,requestedAuditNames:new Set()};
}

if(settings.onlyAudits&&settings.skipAudits){
throw new Error('Cannot set both skipAudits and onlyAudits');
}


const categories={};
const filterByIncludedCategory=!!settings.onlyCategories;
const filterByIncludedAudit=!!settings.onlyAudits;
const categoryIds=settings.onlyCategories||[];
const auditIds=settings.onlyAudits||[];
const skipAuditIds=settings.skipAudits||[];


categoryIds.forEach(categoryId=>{
if(!oldCategories[categoryId]){
log.warn('config',`unrecognized category in 'onlyCategories': ${categoryId}`);
}
});


const auditsToValidate=new Set(auditIds.concat(skipAuditIds));
for(const auditId of auditsToValidate){
const foundCategory=Object.keys(oldCategories).find(categoryId=>{
const auditRefs=oldCategories[categoryId].auditRefs;
return!!auditRefs.find(candidate=>candidate.id===auditId);
});

if(!foundCategory){
const parentKeyName=skipAuditIds.includes(auditId)?'skipAudits':'onlyAudits';
log.warn('config',`unrecognized audit in '${parentKeyName}': ${auditId}`);
}else if(auditIds.includes(auditId)&&categoryIds.includes(foundCategory)){
log.warn('config',`${auditId} in 'onlyAudits' is already included by `+
`${foundCategory} in 'onlyCategories'`);
}
}

const includedAudits=new Set(auditIds);
skipAuditIds.forEach(id=>includedAudits.delete(id));

Object.keys(oldCategories).forEach(categoryId=>{
const category=deepClone(oldCategories[categoryId]);

if(filterByIncludedCategory&&filterByIncludedAudit){

if(!categoryIds.includes(categoryId)){
category.auditRefs=category.auditRefs.filter(audit=>auditIds.includes(audit.id));
}
}else if(filterByIncludedCategory){

if(!categoryIds.includes(categoryId)){
return;
}
}else if(filterByIncludedAudit){
category.auditRefs=category.auditRefs.filter(audit=>auditIds.includes(audit.id));
}


category.auditRefs=category.auditRefs.filter(audit=>!skipAuditIds.includes(audit.id));

if(category.auditRefs.length){
categories[categoryId]=category;
category.auditRefs.forEach(audit=>includedAudits.add(audit.id));
}
});

return{categories,requestedAuditNames:includedAudits};
}





static getCategories(config){
const categories=config.categories;
if(!categories){
return[];
}

return Object.keys(categories).map(id=>{
const title=categories[id].title;
return{id,title};
});
}






static getGatherersRequestedByAudits(audits){


if(!audits){
return new Set();
}

const gatherers=new Set();
for(const auditDefn of audits){
const{requiredArtifacts,__internalOptionalArtifacts}=auditDefn.implementation.meta;
requiredArtifacts.forEach(artifact=>gatherers.add(artifact));
if(__internalOptionalArtifacts){
__internalOptionalArtifacts.forEach(artifact=>gatherers.add(artifact));
}
}
return gatherers;
}







static generatePassesNeededByGatherers(passes,requestedGatherers){
if(!passes){
return null;
}

const auditsNeedTrace=requestedGatherers.has('traces');
const filteredPasses=passes.map(pass=>{

pass.gatherers=pass.gatherers.filter(gathererDefn=>{
const gatherer=gathererDefn.instance;
return requestedGatherers.has(gatherer.name);
});


if(pass.recordTrace&&!auditsNeedTrace){
const passName=pass.passName||'unknown pass';
log.warn('config',`Trace not requested by an audit, dropping trace in ${passName}`);
pass.recordTrace=false;
}

return pass;
}).filter(pass=>{

if(pass.recordTrace)return true;

if(pass.passName==='defaultPass')return true;
return pass.gatherers.length>0;
});
return filteredPasses;
}









static requireAudits(audits,configDir){
const status={msg:'Requiring audits',id:'lh:config:requireAudits'};
log.time(status,'verbose');
const auditDefns=requireAudits(audits,configDir);
log.timeEnd(status);
return auditDefns;
}








static requireGathererFromPath(path,options,coreAuditList,configDir){
const coreGatherer=coreAuditList.find(a=>a===`${path}.js`);

let requirePath=`../gather/gatherers/${path}`;
if(!coreGatherer){

requirePath=resolveModule(path,configDir,'gatherer');
}

const GathererClass=require(requirePath);

return{
instance:new GathererClass(),
implementation:GathererClass,
path,
options:options||{}};

}









static requireGatherers(passes,configDir){
if(!passes){
return null;
}
const status={msg:'Requiring gatherers',id:'lh:config:requireGatherers'};
log.time(status,'verbose');

const coreList=Runner.getGathererList();
const fullPasses=passes.map(pass=>{
const gathererDefns=Config.expandGathererShorthand(pass.gatherers).map(gathererDefn=>{
if(gathererDefn.instance){
return{
instance:gathererDefn.instance,
implementation:gathererDefn.implementation,
path:gathererDefn.path,
options:gathererDefn.options||{}};

}else if(gathererDefn.implementation){
const GathererClass=gathererDefn.implementation;
return{
instance:new GathererClass(),
implementation:gathererDefn.implementation,
path:gathererDefn.path,
options:gathererDefn.options||{}};

}else if(gathererDefn.path){
const path=gathererDefn.path;
const options=gathererDefn.options;
return Config.requireGathererFromPath(path,options,coreList,configDir);
}else{
throw new Error('Invalid expanded Gatherer: '+JSON.stringify(gathererDefn));
}
});

const mergedDefns=mergeOptionsOfItems(gathererDefns);
mergedDefns.forEach(gatherer=>assertValidGatherer(gatherer.instance,gatherer.path));

return Object.assign(pass,{gatherers:mergedDefns});
});
log.timeEnd(status);
return fullPasses;
}}


module.exports=Config;

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},"/lighthouse-core/config");
},{"../runner.js":101,"./../lib/i18n/i18n.js":77,"./budget.js":49,"./config-helpers.js":50,"./config-plugin.js":51,"./constants.js":53,"./default-config.js":54,"lighthouse-logger":135,"lodash.isequal":154,"path":168}],53:[function(require,module,exports){





'use strict';







const DEVTOOLS_RTT_ADJUSTMENT_FACTOR=3.75;
const DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR=0.9;

const throttling={
DEVTOOLS_RTT_ADJUSTMENT_FACTOR,
DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,


mobileSlow4G:{
rttMs:150,
throughputKbps:1.6*1024,
requestLatencyMs:150*DEVTOOLS_RTT_ADJUSTMENT_FACTOR,
downloadThroughputKbps:1.6*1024*DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
uploadThroughputKbps:750*DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
cpuSlowdownMultiplier:4},




mobileRegluar3G:{
rttMs:300,
throughputKbps:700,
requestLatencyMs:300*DEVTOOLS_RTT_ADJUSTMENT_FACTOR,
downloadThroughputKbps:700*DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
uploadThroughputKbps:700*DEVTOOLS_THROUGHPUT_ADJUSTMENT_FACTOR,
cpuSlowdownMultiplier:4},



desktopDense4G:{
rttMs:40,
throughputKbps:10*1024,
cpuSlowdownMultiplier:1,
requestLatencyMs:0,
downloadThroughputKbps:0,
uploadThroughputKbps:0}};




const defaultSettings={
output:'json',
maxWaitForFcp:30*1000,
maxWaitForLoad:45*1000,
throttlingMethod:'simulate',
throttling:throttling.mobileSlow4G,
auditMode:false,
gatherMode:false,
disableStorageReset:false,
emulatedFormFactor:'mobile',
internalDisableDeviceScreenEmulation:false,
channel:'node',



budgets:null,
locale:'en-US',
blockedUrlPatterns:null,
additionalTraceCategories:null,
extraHeaders:null,
precomputedLanternData:null,
onlyAudits:null,
onlyCategories:null,
skipAudits:null};



const defaultPassConfig={
passName:'defaultPass',
loadFailureMode:'fatal',
recordTrace:false,
useThrottling:false,
pauseAfterFcpMs:0,
pauseAfterLoadMs:0,
networkQuietThresholdMs:0,
cpuQuietThresholdMs:0,
blockedUrlPatterns:[],
blankPage:'about:blank',
gatherers:[]};


const nonSimulatedPassConfigOverrides={
pauseAfterFcpMs:5250,
pauseAfterLoadMs:5250,
networkQuietThresholdMs:5250,
cpuQuietThresholdMs:5250};


module.exports={
throttling,
defaultSettings,
defaultPassConfig,
nonSimulatedPassConfigOverrides};


},{}],54:[function(require,module,exports){
(function(__filename){





'use strict';



const constants=require('./constants.js');
const i18n=require('../lib/i18n/i18n.js');

const UIStrings={

performanceCategoryTitle:'Performance',

budgetsGroupTitle:'Budgets',

budgetsGroupDescription:'Performance budgets set standards for the performance of your site.',

metricGroupTitle:'Metrics',

loadOpportunitiesGroupTitle:'Opportunities',

loadOpportunitiesGroupDescription:'These suggestions can help your page load faster. They don\'t [directly affect](https://web.dev/performance-scoring/) the Performance score.',

firstPaintImprovementsGroupTitle:'First Paint Improvements',

firstPaintImprovementsGroupDescription:'The most critical aspect of performance is how quickly pixels are rendered onscreen. Key metrics: First Contentful Paint, First Meaningful Paint',

overallImprovementsGroupTitle:'Overall Improvements',

overallImprovementsGroupDescription:'Enhance the overall loading experience, so the page is responsive and ready to use as soon as possible. Key metrics: Time to Interactive, Speed Index',

diagnosticsGroupTitle:'Diagnostics',

diagnosticsGroupDescription:'More information about the performance of your application. These numbers don\'t [directly affect](https://web.dev/performance-scoring/) the Performance score.',

a11yCategoryTitle:'Accessibility',

a11yCategoryDescription:'These checks highlight opportunities to [improve the accessibility of your web app](https://developers.google.com/web/fundamentals/accessibility). Only a subset of accessibility issues can be automatically detected so manual testing is also encouraged.',

a11yCategoryManualDescription:'These items address areas which an automated testing tool cannot cover. Learn more in our guide on [conducting an accessibility review](https://developers.google.com/web/fundamentals/accessibility/how-to-review).',

a11yBestPracticesGroupTitle:'Best practices',

a11yBestPracticesGroupDescription:'These items highlight common accessibility best practices.',

a11yColorContrastGroupTitle:'Contrast',

a11yColorContrastGroupDescription:'These are opportunities to improve the legibility of your content.',

a11yNamesLabelsGroupTitle:'Names and labels',

a11yNamesLabelsGroupDescription:'These are opportunities to improve the semantics of the controls in your application. This may enhance the experience for users of assistive technology, like a screen reader.',

a11yNavigationGroupTitle:'Navigation',

a11yNavigationGroupDescription:'These are opportunities to improve keyboard navigation in your application.',

a11yAriaGroupTitle:'ARIA',

a11yAriaGroupDescription:'These are opportunities to improve the usage of ARIA in your application which may enhance the experience for users of assistive technology, like a screen reader.',

a11yLanguageGroupTitle:'Internationalization and localization',

a11yLanguageGroupDescription:'These are opportunities to improve the interpretation of your content by users in different locales.',

a11yAudioVideoGroupTitle:'Audio and video',

a11yAudioVideoGroupDescription:'These are opportunities to provide alternative content for audio and video. This may improve the experience for users with hearing or vision impairments.',

a11yTablesListsVideoGroupTitle:'Tables and lists',

a11yTablesListsVideoGroupDescription:'These are opportunities to to improve the experience of reading tabular or list data using assistive technology, like a screen reader.',

seoCategoryTitle:'SEO',

seoCategoryDescription:'These checks ensure that your page is optimized for search engine results ranking. '+
'There are additional factors Lighthouse does not check that may affect your search ranking. '+
'[Learn more](https://support.google.com/webmasters/answer/35769).',

seoCategoryManualDescription:'Run these additional validators on your site to check additional SEO best practices.',

seoMobileGroupTitle:'Mobile Friendly',

seoMobileGroupDescription:'Make sure your pages are mobile friendly so users don’t have to pinch or zoom '+
'in order to read the content pages. [Learn more](https://developers.google.com/search/mobile-sites/).',

seoContentGroupTitle:'Content Best Practices',

seoContentGroupDescription:'Format your HTML in a way that enables crawlers to better understand your app’s content.',

seoCrawlingGroupTitle:'Crawling and Indexing',

seoCrawlingGroupDescription:'To appear in search results, crawlers need access to your app.',

pwaCategoryTitle:'Progressive Web App',

pwaCategoryDescription:'These checks validate the aspects of a Progressive Web App. '+
'[Learn more](https://developers.google.com/web/progressive-web-apps/checklist).',

pwaCategoryManualDescription:'These checks are required by the baseline '+
'[PWA Checklist](https://developers.google.com/web/progressive-web-apps/checklist) but are '+
'not automatically checked by Lighthouse. They do not affect your score but it\'s important that you verify them manually.',

bestPracticesCategoryTitle:'Best Practices',

bestPracticesTrustSafetyGroupTitle:'Trust and Safety',

bestPracticesUXGroupTitle:'User Experience',

bestPracticesBrowserCompatGroupTitle:'Browser Compatibility',

bestPracticesGeneralGroupTitle:'General',

pwaFastReliableGroupTitle:'Fast and reliable',

pwaInstallableGroupTitle:'Installable',

pwaOptimizedGroupTitle:'PWA Optimized'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


const defaultConfig={
settings:constants.defaultSettings,
passes:[{
passName:'defaultPass',
recordTrace:true,
useThrottling:true,
pauseAfterFcpMs:1000,
pauseAfterLoadMs:1000,
networkQuietThresholdMs:1000,
cpuQuietThresholdMs:1000,
gatherers:[
'css-usage',
'js-usage',
'viewport-dimensions',
'runtime-exceptions',
'console-messages',
'anchor-elements',
'image-elements',
'link-elements',
'meta-elements',
'script-elements',
'iframe-elements',
'main-document-content',
'dobetterweb/appcache',
'dobetterweb/doctype',
'dobetterweb/domstats',
'dobetterweb/optimized-images',
'dobetterweb/password-inputs-with-prevented-paste',
'dobetterweb/response-compression',
'dobetterweb/tags-blocking-first-paint',
'seo/font-size',
'seo/embedded-content',
'seo/robots-txt',
'seo/tap-targets',
'accessibility',
'trace-elements']},


{
passName:'offlinePass',
loadFailureMode:'ignore',
gatherers:[
'service-worker',
'offline',
'start-url']},


{
passName:'redirectPass',
loadFailureMode:'warn',

blockedUrlPatterns:['*.css','*.jpg','*.jpeg','*.png','*.gif','*.svg','*.ttf','*.woff','*.woff2'],
gatherers:[
'http-redirect',
'html-without-javascript']}],


audits:[
'is-on-https',
'redirects-http',
'service-worker',
'works-offline',
'viewport',
'without-javascript',
'metrics/first-contentful-paint',
'metrics/largest-contentful-paint',
'metrics/first-meaningful-paint',
'load-fast-enough-for-pwa',
'metrics/speed-index',
'screenshot-thumbnails',
'final-screenshot',
'metrics/estimated-input-latency',
'metrics/total-blocking-time',
'metrics/max-potential-fid',
'metrics/cumulative-layout-shift',
'errors-in-console',
'server-response-time',
'metrics/first-cpu-idle',
'metrics/interactive',
'user-timings',
'critical-request-chains',
'redirects',
'installable-manifest',
'apple-touch-icon',
'splash-screen',
'themed-omnibox',
'maskable-icon',
'content-width',
'image-aspect-ratio',
'image-size-responsive',
'deprecations',
'mainthread-work-breakdown',
'bootup-time',
'uses-rel-preload',
'uses-rel-preconnect',
'font-display',
'diagnostics',
'network-requests',
'network-rtt',
'network-server-latency',
'main-thread-tasks',
'metrics',
'offline-start-url',
'performance-budget',
'timing-budget',
'resource-summary',
'third-party-summary',
'largest-contentful-paint-element',
'layout-shift-elements',
'manual/pwa-cross-browser',
'manual/pwa-page-transitions',
'manual/pwa-each-page-has-url',
'accessibility/accesskeys',
'accessibility/aria-allowed-attr',
'accessibility/aria-hidden-body',
'accessibility/aria-hidden-focus',
'accessibility/aria-input-field-name',
'accessibility/aria-required-attr',
'accessibility/aria-required-children',
'accessibility/aria-required-parent',
'accessibility/aria-roles',
'accessibility/aria-toggle-field-name',
'accessibility/aria-valid-attr-value',
'accessibility/aria-valid-attr',
'accessibility/button-name',
'accessibility/bypass',
'accessibility/color-contrast',
'accessibility/definition-list',
'accessibility/dlitem',
'accessibility/document-title',
'accessibility/duplicate-id-active',
'accessibility/duplicate-id-aria',
'accessibility/form-field-multiple-labels',
'accessibility/frame-title',
'accessibility/heading-order',
'accessibility/html-has-lang',
'accessibility/html-lang-valid',
'accessibility/image-alt',
'accessibility/input-image-alt',
'accessibility/label',
'accessibility/layout-table',
'accessibility/link-name',
'accessibility/list',
'accessibility/listitem',
'accessibility/meta-refresh',
'accessibility/meta-viewport',
'accessibility/object-alt',
'accessibility/tabindex',
'accessibility/td-headers-attr',
'accessibility/th-has-data-cells',
'accessibility/valid-lang',
'accessibility/video-caption',
'accessibility/video-description',
'accessibility/manual/custom-controls-labels',
'accessibility/manual/custom-controls-roles',
'accessibility/manual/focus-traps',
'accessibility/manual/focusable-controls',
'accessibility/manual/interactive-element-affordance',
'accessibility/manual/logical-tab-order',
'accessibility/manual/managed-focus',
'accessibility/manual/offscreen-content-hidden',
'accessibility/manual/use-landmarks',
'accessibility/manual/visual-order-follows-dom',
'byte-efficiency/uses-long-cache-ttl',
'byte-efficiency/total-byte-weight',
'byte-efficiency/offscreen-images',
'byte-efficiency/render-blocking-resources',
'byte-efficiency/unminified-css',
'byte-efficiency/unminified-javascript',
'byte-efficiency/unused-css-rules',
'byte-efficiency/unused-javascript',
'byte-efficiency/uses-webp-images',
'byte-efficiency/uses-optimized-images',
'byte-efficiency/uses-text-compression',
'byte-efficiency/uses-responsive-images',
'byte-efficiency/efficient-animated-content',
'dobetterweb/appcache-manifest',
'dobetterweb/doctype',
'dobetterweb/charset',
'dobetterweb/dom-size',
'dobetterweb/external-anchors-use-rel-noopener',
'dobetterweb/geolocation-on-start',
'dobetterweb/no-document-write',
'dobetterweb/no-vulnerable-libraries',
'dobetterweb/js-libraries',
'dobetterweb/notification-on-start',
'dobetterweb/password-inputs-can-be-pasted-into',
'dobetterweb/uses-http2',
'dobetterweb/uses-passive-event-listeners',
'seo/meta-description',
'seo/http-status-code',
'seo/font-size',
'seo/link-text',
'seo/is-crawlable',
'seo/robots-txt',
'seo/tap-targets',
'seo/hreflang',
'seo/plugins',
'seo/canonical',
'seo/manual/structured-data'],


groups:{
'metrics':{
title:str_(UIStrings.metricGroupTitle)},

'load-opportunities':{
title:str_(UIStrings.loadOpportunitiesGroupTitle),
description:str_(UIStrings.loadOpportunitiesGroupDescription)},

'budgets':{
title:str_(UIStrings.budgetsGroupTitle),
description:str_(UIStrings.budgetsGroupDescription)},

'diagnostics':{
title:str_(UIStrings.diagnosticsGroupTitle),
description:str_(UIStrings.diagnosticsGroupDescription)},

'pwa-fast-reliable':{
title:str_(UIStrings.pwaFastReliableGroupTitle)},

'pwa-installable':{
title:str_(UIStrings.pwaInstallableGroupTitle)},

'pwa-optimized':{
title:str_(UIStrings.pwaOptimizedGroupTitle)},

'a11y-best-practices':{
title:str_(UIStrings.a11yBestPracticesGroupTitle),
description:str_(UIStrings.a11yBestPracticesGroupDescription)},

'a11y-color-contrast':{
title:str_(UIStrings.a11yColorContrastGroupTitle),
description:str_(UIStrings.a11yColorContrastGroupDescription)},

'a11y-names-labels':{
title:str_(UIStrings.a11yNamesLabelsGroupTitle),
description:str_(UIStrings.a11yNamesLabelsGroupDescription)},

'a11y-navigation':{
title:str_(UIStrings.a11yNavigationGroupTitle),
description:str_(UIStrings.a11yNavigationGroupDescription)},

'a11y-aria':{
title:str_(UIStrings.a11yAriaGroupTitle),
description:str_(UIStrings.a11yAriaGroupDescription)},

'a11y-language':{
title:str_(UIStrings.a11yLanguageGroupTitle),
description:str_(UIStrings.a11yLanguageGroupDescription)},

'a11y-audio-video':{
title:str_(UIStrings.a11yAudioVideoGroupTitle),
description:str_(UIStrings.a11yAudioVideoGroupDescription)},

'a11y-tables-lists':{
title:str_(UIStrings.a11yTablesListsVideoGroupTitle),
description:str_(UIStrings.a11yTablesListsVideoGroupDescription)},

'seo-mobile':{
title:str_(UIStrings.seoMobileGroupTitle),
description:str_(UIStrings.seoMobileGroupDescription)},

'seo-content':{
title:str_(UIStrings.seoContentGroupTitle),
description:str_(UIStrings.seoContentGroupDescription)},

'seo-crawl':{
title:str_(UIStrings.seoCrawlingGroupTitle),
description:str_(UIStrings.seoCrawlingGroupDescription)},

'best-practices-trust-safety':{
title:str_(UIStrings.bestPracticesTrustSafetyGroupTitle)},

'best-practices-ux':{
title:str_(UIStrings.bestPracticesUXGroupTitle)},

'best-practices-browser-compat':{
title:str_(UIStrings.bestPracticesBrowserCompatGroupTitle)},

'best-practices-general':{
title:str_(UIStrings.bestPracticesGeneralGroupTitle)}},


categories:{
'performance':{
title:str_(UIStrings.performanceCategoryTitle),
auditRefs:[
{id:'first-contentful-paint',weight:15,group:'metrics'},
{id:'speed-index',weight:15,group:'metrics'},
{id:'largest-contentful-paint',weight:25,group:'metrics'},
{id:'interactive',weight:15,group:'metrics'},
{id:'total-blocking-time',weight:25,group:'metrics'},
{id:'cumulative-layout-shift',weight:5,group:'metrics'},

{id:'first-cpu-idle',weight:0},
{id:'max-potential-fid',weight:0},
{id:'first-meaningful-paint',weight:0},
{id:'estimated-input-latency',weight:0},

{id:'render-blocking-resources',weight:0,group:'load-opportunities'},
{id:'uses-responsive-images',weight:0,group:'load-opportunities'},
{id:'offscreen-images',weight:0,group:'load-opportunities'},
{id:'unminified-css',weight:0,group:'load-opportunities'},
{id:'unminified-javascript',weight:0,group:'load-opportunities'},
{id:'unused-css-rules',weight:0,group:'load-opportunities'},
{id:'unused-javascript',weight:0,group:'load-opportunities'},
{id:'uses-optimized-images',weight:0,group:'load-opportunities'},
{id:'uses-webp-images',weight:0,group:'load-opportunities'},
{id:'uses-text-compression',weight:0,group:'load-opportunities'},
{id:'uses-rel-preconnect',weight:0,group:'load-opportunities'},
{id:'server-response-time',weight:0,group:'load-opportunities'},
{id:'redirects',weight:0,group:'load-opportunities'},
{id:'uses-rel-preload',weight:0,group:'load-opportunities'},
{id:'efficient-animated-content',weight:0,group:'load-opportunities'},
{id:'total-byte-weight',weight:0,group:'diagnostics'},
{id:'uses-long-cache-ttl',weight:0,group:'diagnostics'},
{id:'dom-size',weight:0,group:'diagnostics'},
{id:'critical-request-chains',weight:0,group:'diagnostics'},
{id:'user-timings',weight:0,group:'diagnostics'},
{id:'bootup-time',weight:0,group:'diagnostics'},
{id:'mainthread-work-breakdown',weight:0,group:'diagnostics'},
{id:'font-display',weight:0,group:'diagnostics'},
{id:'performance-budget',weight:0,group:'budgets'},
{id:'timing-budget',weight:0,group:'budgets'},
{id:'resource-summary',weight:0,group:'diagnostics'},
{id:'third-party-summary',weight:0,group:'diagnostics'},
{id:'largest-contentful-paint-element',weight:0,group:'diagnostics'},
{id:'layout-shift-elements',weight:0,group:'diagnostics'},
{id:'uses-http2',weight:0,group:'diagnostics'},
{id:'uses-passive-event-listeners',weight:0,group:'diagnostics'},
{id:'no-document-write',weight:0,group:'diagnostics'},

{id:'network-requests',weight:0},
{id:'network-rtt',weight:0},
{id:'network-server-latency',weight:0},
{id:'main-thread-tasks',weight:0},
{id:'diagnostics',weight:0},
{id:'metrics',weight:0},
{id:'screenshot-thumbnails',weight:0},
{id:'final-screenshot',weight:0}]},


'accessibility':{
title:str_(UIStrings.a11yCategoryTitle),
description:str_(UIStrings.a11yCategoryDescription),
manualDescription:str_(UIStrings.a11yCategoryManualDescription),




auditRefs:[
{id:'accesskeys',weight:3,group:'a11y-navigation'},
{id:'aria-allowed-attr',weight:10,group:'a11y-aria'},
{id:'aria-hidden-body',weight:10,group:'a11y-aria'},
{id:'aria-hidden-focus',weight:3,group:'a11y-aria'},
{id:'aria-input-field-name',weight:3,group:'a11y-aria'},
{id:'aria-required-attr',weight:10,group:'a11y-aria'},
{id:'aria-required-children',weight:10,group:'a11y-aria'},
{id:'aria-required-parent',weight:10,group:'a11y-aria'},
{id:'aria-roles',weight:10,group:'a11y-aria'},
{id:'aria-toggle-field-name',weight:3,group:'a11y-aria'},
{id:'aria-valid-attr-value',weight:10,group:'a11y-aria'},
{id:'aria-valid-attr',weight:10,group:'a11y-aria'},
{id:'button-name',weight:10,group:'a11y-names-labels'},
{id:'bypass',weight:3,group:'a11y-navigation'},
{id:'color-contrast',weight:3,group:'a11y-color-contrast'},
{id:'definition-list',weight:3,group:'a11y-tables-lists'},
{id:'dlitem',weight:3,group:'a11y-tables-lists'},
{id:'document-title',weight:3,group:'a11y-names-labels'},
{id:'duplicate-id-active',weight:3,group:'a11y-navigation'},
{id:'duplicate-id-aria',weight:10,group:'a11y-aria'},
{id:'form-field-multiple-labels',weight:2,group:'a11y-names-labels'},
{id:'frame-title',weight:3,group:'a11y-names-labels'},
{id:'heading-order',weight:2,group:'a11y-navigation'},
{id:'html-has-lang',weight:3,group:'a11y-language'},
{id:'html-lang-valid',weight:3,group:'a11y-language'},
{id:'image-alt',weight:10,group:'a11y-names-labels'},
{id:'input-image-alt',weight:10,group:'a11y-names-labels'},
{id:'label',weight:10,group:'a11y-names-labels'},
{id:'layout-table',weight:3,group:'a11y-tables-lists'},
{id:'link-name',weight:3,group:'a11y-names-labels'},
{id:'list',weight:3,group:'a11y-tables-lists'},
{id:'listitem',weight:3,group:'a11y-tables-lists'},
{id:'meta-refresh',weight:10,group:'a11y-best-practices'},
{id:'meta-viewport',weight:10,group:'a11y-best-practices'},
{id:'object-alt',weight:3,group:'a11y-names-labels'},
{id:'tabindex',weight:3,group:'a11y-navigation'},
{id:'td-headers-attr',weight:3,group:'a11y-tables-lists'},
{id:'th-has-data-cells',weight:3,group:'a11y-tables-lists'},
{id:'valid-lang',weight:3,group:'a11y-language'},
{id:'video-caption',weight:10,group:'a11y-audio-video'},
{id:'video-description',weight:10,group:'a11y-audio-video'},

{id:'logical-tab-order',weight:0},
{id:'focusable-controls',weight:0},
{id:'interactive-element-affordance',weight:0},
{id:'managed-focus',weight:0},
{id:'focus-traps',weight:0},
{id:'custom-controls-labels',weight:0},
{id:'custom-controls-roles',weight:0},
{id:'visual-order-follows-dom',weight:0},
{id:'offscreen-content-hidden',weight:0},
{id:'use-landmarks',weight:0}]},


'best-practices':{
title:str_(UIStrings.bestPracticesCategoryTitle),
auditRefs:[

{id:'is-on-https',weight:1,group:'best-practices-trust-safety'},
{id:'external-anchors-use-rel-noopener',weight:1,group:'best-practices-trust-safety'},
{id:'geolocation-on-start',weight:1,group:'best-practices-trust-safety'},
{id:'notification-on-start',weight:1,group:'best-practices-trust-safety'},
{id:'no-vulnerable-libraries',weight:1,group:'best-practices-trust-safety'},

{id:'password-inputs-can-be-pasted-into',weight:1,group:'best-practices-ux'},
{id:'image-aspect-ratio',weight:1,group:'best-practices-ux'},
{id:'image-size-responsive',weight:1,group:'best-practices-ux'},

{id:'doctype',weight:1,group:'best-practices-browser-compat'},
{id:'charset',weight:1,group:'best-practices-browser-compat'},

{id:'appcache-manifest',weight:1,group:'best-practices-general'},
{id:'js-libraries',weight:0,group:'best-practices-general'},
{id:'deprecations',weight:1,group:'best-practices-general'},
{id:'errors-in-console',weight:1,group:'best-practices-general'}]},


'seo':{
title:str_(UIStrings.seoCategoryTitle),
description:str_(UIStrings.seoCategoryDescription),
manualDescription:str_(UIStrings.seoCategoryManualDescription),
auditRefs:[
{id:'viewport',weight:1,group:'seo-mobile'},
{id:'document-title',weight:1,group:'seo-content'},
{id:'meta-description',weight:1,group:'seo-content'},
{id:'http-status-code',weight:1,group:'seo-crawl'},
{id:'link-text',weight:1,group:'seo-content'},
{id:'is-crawlable',weight:1,group:'seo-crawl'},
{id:'robots-txt',weight:1,group:'seo-crawl'},
{id:'image-alt',weight:1,group:'seo-content'},
{id:'hreflang',weight:1,group:'seo-content'},
{id:'canonical',weight:1,group:'seo-content'},
{id:'font-size',weight:1,group:'seo-mobile'},
{id:'plugins',weight:1,group:'seo-content'},
{id:'tap-targets',weight:1,group:'seo-mobile'},

{id:'structured-data',weight:0}]},


'pwa':{
title:str_(UIStrings.pwaCategoryTitle),
description:str_(UIStrings.pwaCategoryDescription),
manualDescription:str_(UIStrings.pwaCategoryManualDescription),
auditRefs:[

{id:'load-fast-enough-for-pwa',weight:7,group:'pwa-fast-reliable'},
{id:'works-offline',weight:5,group:'pwa-fast-reliable'},
{id:'offline-start-url',weight:1,group:'pwa-fast-reliable'},

{id:'is-on-https',weight:2,group:'pwa-installable'},
{id:'service-worker',weight:1,group:'pwa-installable'},
{id:'installable-manifest',weight:2,group:'pwa-installable'},

{id:'redirects-http',weight:2,group:'pwa-optimized'},
{id:'splash-screen',weight:1,group:'pwa-optimized'},
{id:'themed-omnibox',weight:1,group:'pwa-optimized'},
{id:'content-width',weight:1,group:'pwa-optimized'},
{id:'viewport',weight:2,group:'pwa-optimized'},
{id:'without-javascript',weight:1,group:'pwa-optimized'},
{id:'apple-touch-icon',weight:1,group:'pwa-optimized'},
{id:'maskable-icon',weight:1,group:'pwa-optimized'},

{id:'pwa-cross-browser',weight:0},
{id:'pwa-page-transitions',weight:0},
{id:'pwa-each-page-has-url',weight:0}]}}};





module.exports=defaultConfig;


Object.defineProperty(module.exports,'UIStrings',{
enumerable:false,
get:()=>UIStrings});


}).call(this,"/lighthouse-core/config/default-config.js");
},{"../lib/i18n/i18n.js":77,"./constants.js":53}],55:[function(require,module,exports){





'use strict';

const EventEmitter=require('events').EventEmitter;
const log=require('lighthouse-logger');
const LHError=require('../../lib/lh-error.js');










class Connection{
constructor(){
this._lastCommandId=0;

this._callbacks=new Map();

this._eventEmitter=new EventEmitter();
}




connect(){
return Promise.reject(new Error('Not implemented'));
}




disconnect(){
return Promise.reject(new Error('Not implemented'));
}




wsEndpoint(){
return Promise.reject(new Error('Not implemented'));
}









sendCommand(method,sessionId,...paramArgs){

const params=paramArgs.length?paramArgs[0]:undefined;

log.formatProtocol('method => browser',{method,params},'verbose');
const id=++this._lastCommandId;
const message=JSON.stringify({id,sessionId,method,params});
this.sendRawMessage(message);

return new Promise(resolve=>{
this._callbacks.set(id,{method,resolve});
});
}






on(eventName,cb){
if(eventName!=='protocolevent'){
throw new Error('Only supports "protocolevent" events');
}

if(!this._eventEmitter){
throw new Error('Attempted to add event listener after connection disposed.');
}
this._eventEmitter.on(eventName,cb);
}







sendRawMessage(message){
throw new Error('Not implemented');
}








handleRawMessage(message){
const object=JSON.parse(message);


if(!('id'in object)){
log.formatProtocol('<= event',
{method:object.method,params:object.params},'verbose');
this.emitProtocolEvent(object);
return;
}

const callback=this._callbacks.get(object.id);
if(callback){
this._callbacks.delete(object.id);

callback.resolve(Promise.resolve().then(_=>{
if(object.error){
log.formatProtocol('method <= browser ERR',{method:callback.method},'error');
throw LHError.fromProtocolMessage(callback.method,object.error);
}

log.formatProtocol('method <= browser OK',
{method:callback.method,params:object.result},'verbose');
return object.result;
}));
}else{


const error=object.error&&object.error.message;
log.formatProtocol(`disowned method <= browser ${error?'ERR':'OK'}`,
{method:'UNKNOWN',params:error||object.result},'verbose');
}
}




emitProtocolEvent(eventMessage){
if(!this._eventEmitter){
throw new Error('Attempted to emit event after connection disposed.');
}

this._eventEmitter.emit('protocolevent',eventMessage);
}




dispose(){
if(this._eventEmitter){
this._eventEmitter.removeAllListeners();
this._eventEmitter=null;
}
}}


module.exports=Connection;

},{"../../lib/lh-error.js":82,"events":118,"lighthouse-logger":135}],56:[function(require,module,exports){





'use strict';

const Connection=require('./connection.js');












class RawConnection extends Connection{



constructor(port){
super();
this._port=port;
this._port.on('message',this.handleRawMessage.bind(this));
this._port.on('close',this.dispose.bind(this));
}





connect(){
return Promise.resolve();
}




disconnect(){
this._port.close();
return Promise.resolve();
}






sendRawMessage(message){
this._port.send(message);
}}


module.exports=RawConnection;

},{"./connection.js":55}],57:[function(require,module,exports){





'use strict';






class DevtoolsLog{



constructor(regexFilter){
this._filter=regexFilter;


this._messages=[];
this._isRecording=false;
}




get messages(){
return this._messages;
}

reset(){
this._messages=[];
}

beginRecording(){
this._isRecording=true;
}

endRecording(){
this._isRecording=false;
}





record(message){
if(this._isRecording&&(!this._filter||this._filter.test(message.method))){
this._messages.push(message);
}
}}


module.exports=DevtoolsLog;

},{}],58:[function(require,module,exports){
(function(Buffer){





'use strict';

const Fetcher=require('./fetcher.js');
const NetworkRecorder=require('../lib/network-recorder.js');
const emulation=require('../lib/emulation.js');
const LHElement=require('../lib/lh-element.js');
const LHError=require('../lib/lh-error.js');
const NetworkRequest=require('../lib/network-request.js');
const EventEmitter=require('events').EventEmitter;
const URL=require('../lib/url-shim.js');
const constants=require('../config/constants.js');

const log=require('lighthouse-logger');
const DevtoolsLog=require('./devtools-log.js');

const pageFunctions=require('../lib/page-functions.js');



const Connection=require('./connections/connection.js');


const DEFAULT_PAUSE_AFTER_FCP=0;

const DEFAULT_PAUSE_AFTER_LOAD=0;

const DEFAULT_NETWORK_QUIET_THRESHOLD=5000;

const DEFAULT_CPU_QUIET_THRESHOLD=0;

const DEFAULT_PROTOCOL_TIMEOUT=30000;





class Driver{



constructor(connection){
this._traceCategories=Driver.traceCategories;



this._eventEmitter=new EventEmitter();
this._connection=connection;

this._devtoolsLog=new DevtoolsLog(/^(Page|Network)\./);
this.online=true;

this._domainEnabledCounts=new Map();

this._isolatedExecutionContextId=undefined;






this._networkStatusMonitor=null;






this._monitoredUrl=null;






this._monitoredUrlNavigations=[];

this.on('Target.attachedToTarget',event=>{
this._handleTargetAttached(event).catch(this._handleEventError);
});



this.on('Runtime.executionContextDestroyed',event=>{
if(event.executionContextId===this._isolatedExecutionContextId){
this._clearIsolatedContextId();
}
});

this.on('Page.frameNavigated',()=>this._clearIsolatedContextId());
this.on('Page.frameNavigated',evt=>this._monitoredUrlNavigations.push(evt.frame));

connection.on('protocolevent',this._handleProtocolEvent.bind(this));





this._nextProtocolTimeout=DEFAULT_PROTOCOL_TIMEOUT;


this.fetcher=new Fetcher(this);
}

static get traceCategories(){
return[

'-*',


'disabled-by-default-lighthouse',


'loading',



'v8',


'v8.execute',


'blink.user_timing',


'blink.console',


'devtools.timeline',
'disabled-by-default-devtools.timeline',


'disabled-by-default-devtools.screenshot',


'disabled-by-default-devtools.timeline.stack'];





}




async getBrowserVersion(){
const status={msg:'Getting browser version',id:'lh:gather:getVersion'};
log.time(status,'verbose');
const version=await this.sendCommand('Browser.getVersion');
const match=version.product.match(/\/(\d+)/);
const milestone=match?parseInt(match[1]):0;
log.timeEnd(status);
return Object.assign(version,{milestone});
}





async getBenchmarkIndex(){
const status={msg:'Benchmarking machine',id:'lh:gather:getBenchmarkIndex'};
log.time(status);
const indexVal=await this.evaluateAsync(`(${pageFunctions.ultradumbBenchmarkString})()`);
log.timeEnd(status);
return indexVal;
}




async connect(){
const status={msg:'Connecting to browser',id:'lh:init:connect'};
log.time(status);
await this._connection.connect();
log.timeEnd(status);
}




disconnect(){
return this._connection.disconnect();
}






wsEndpoint(){
return this._connection.wsEndpoint();
}







on(eventName,cb){
if(this._eventEmitter===null){
throw new Error('connect() must be called before attempting to listen to events.');
}


log.formatProtocol('listen for event =>',{method:eventName},'verbose');
this._eventEmitter.on(eventName,cb);
}








once(eventName,cb){
if(this._eventEmitter===null){
throw new Error('connect() must be called before attempting to listen to events.');
}

log.formatProtocol('listen once for event =>',{method:eventName},'verbose');
this._eventEmitter.once(eventName,cb);
}







off(eventName,cb){
if(this._eventEmitter===null){
throw new Error('connect() must be called before attempting to remove an event listener.');
}

this._eventEmitter.removeListener(eventName,cb);
}














_shouldToggleDomain(domain,sessionId,enable){
const key=domain+(sessionId||'');
const enabledCount=this._domainEnabledCounts.get(key)||0;
const newCount=enabledCount+(enable?1:-1);
this._domainEnabledCounts.set(key,Math.max(0,newCount));


if(enable&&newCount===1||!enable&&newCount===0){
log.verbose('Driver',`${domain}.${enable?'enable':'disable'}`);
return true;
}else{
if(newCount<0){
log.error('Driver',`Attempted to disable domain '${domain}' when already disabled.`);
}
return false;
}
}







setNextProtocolTimeout(timeout){
this._nextProtocolTimeout=timeout;
}




_handleProtocolEvent(event){
this._devtoolsLog.record(event);
if(this._networkStatusMonitor){
this._networkStatusMonitor.dispatch(event);
}




this._eventEmitter.emit(event.method,event.params);
}




_handleEventError(error){
log.error('Driver','Unhandled event error',error.message);
}




async _handleTargetAttached(event){


if(event.targetInfo.type!=='iframe'){

await this.sendCommandToSession('Runtime.runIfWaitingForDebugger',event.sessionId);
return;
}



await this.sendCommandToSession('Network.enable',event.sessionId);


await this.sendCommandToSession('Target.setAutoAttach',event.sessionId,{
autoAttach:true,
flatten:true,

waitForDebuggerOnStart:true});



await this.sendCommandToSession('Runtime.runIfWaitingForDebugger',event.sessionId);
}











sendCommandToSession(method,sessionId,...params){
const timeout=this._nextProtocolTimeout;
this._nextProtocolTimeout=DEFAULT_PROTOCOL_TIMEOUT;
return new Promise(async(resolve,reject)=>{
const asyncTimeout=setTimeout(()=>{
const err=new LHError(
LHError.errors.PROTOCOL_TIMEOUT,
{protocolMethod:method});

reject(err);
},timeout);
try{
const result=await this._innerSendCommand(method,sessionId,...params);
resolve(result);
}catch(err){
reject(err);
}finally{
clearTimeout(asyncTimeout);
}
});
}








sendCommand(method,...params){
return this.sendCommandToSession(method,undefined,...params);
}










_innerSendCommand(method,sessionId,...params){
const domainCommand=/^(\w+)\.(enable|disable)$/.exec(method);
if(domainCommand){
const enable=domainCommand[2]==='enable';
if(!this._shouldToggleDomain(domainCommand[1],sessionId,enable)){
return Promise.resolve();
}
}
return this._connection.sendCommand(method,sessionId,...params);
}






isDomainEnabled(domain){

return!!this._domainEnabledCounts.get(domain);
}






evaluateScriptOnNewDocument(scriptSource){
return this.sendCommand('Page.addScriptToEvaluateOnLoad',{
scriptSource});

}










async evaluateAsync(expression,options={}){
const contextId=options.useIsolation?await this._getOrCreateIsolatedContextId():undefined;

try{

return await this._evaluateInContext(expression,contextId);
}catch(err){

if(contextId&&err.message.includes('Cannot find context')){
this._clearIsolatedContextId();
const freshContextId=await this._getOrCreateIsolatedContextId();
return this._evaluateInContext(expression,freshContextId);
}

throw err;
}
}








async _evaluateInContext(expression,contextId){


const timeout=this._nextProtocolTimeout===DEFAULT_PROTOCOL_TIMEOUT?
60000:this._nextProtocolTimeout;
const evaluationParams={





expression:`(function wrapInNativePromise() {
        const __nativePromise = window.__nativePromise || Promise;
        const URL = window.__nativeURL || window.URL;
        return new __nativePromise(function (resolve) {
          return __nativePromise.resolve()
            .then(_ => ${expression})
            .catch(${pageFunctions.wrapRuntimeEvalErrorInBrowserString})
            .then(resolve);
        });
      }())`,
includeCommandLineAPI:true,
awaitPromise:true,
returnByValue:true,
timeout,
contextId};


this.setNextProtocolTimeout(timeout);
const response=await this.sendCommand('Runtime.evaluate',evaluationParams);
if(response.exceptionDetails){


const errorMessage=response.exceptionDetails.exception?
response.exceptionDetails.exception.description:
response.exceptionDetails.text;
return Promise.reject(new Error(`Evaluation exception: ${errorMessage}`));
}

if(response.result===undefined){
return Promise.reject(
new Error('Runtime.evaluate response did not contain a "result" object'));
}
const value=response.result.value;
if(value&&value.__failedInBrowser){
return Promise.reject(Object.assign(new Error(),value));
}else{
return value;
}
}




async getAppManifest(){







this.setNextProtocolTimeout(10000);
let response;
try{
response=await this.sendCommand('Page.getAppManifest');
}catch(err){
if(err.code==='PROTOCOL_TIMEOUT'){


log.error('Driver','Failed fetching manifest',err);
return null;
}

throw err;
}

let data=response.data;




if(!data){

return null;
}

const BOM_LENGTH=3;
const BOM_FIRSTCHAR=65279;
const isBomEncoded=data.charCodeAt(0)===BOM_FIRSTCHAR;

if(isBomEncoded){
data=Buffer.from(data).slice(BOM_LENGTH).toString();
}

return{...response,data};
}




getServiceWorkerVersions(){
return new Promise((resolve,reject)=>{



const versionUpdatedListener=data=>{


const activateCandidates=data.versions.filter(sw=>{
return sw.status!=='redundant';
});
const hasActiveServiceWorker=activateCandidates.find(sw=>{
return sw.status==='activated';
});

if(!activateCandidates.length||hasActiveServiceWorker){
this.off('ServiceWorker.workerVersionUpdated',versionUpdatedListener);
this.sendCommand('ServiceWorker.disable').
then(_=>resolve(data),reject);
}
};

this.on('ServiceWorker.workerVersionUpdated',versionUpdatedListener);

this.sendCommand('ServiceWorker.enable').catch(reject);
});
}




getServiceWorkerRegistrations(){
return new Promise((resolve,reject)=>{
this.once('ServiceWorker.workerRegistrationUpdated',data=>{
this.sendCommand('ServiceWorker.disable').
then(_=>resolve(data),reject);
});

this.sendCommand('ServiceWorker.enable').catch(reject);
});
}








assertNoSameOriginServiceWorkerClients(pageUrl){

let registrations;

let versions;

return this.getServiceWorkerRegistrations().then(data=>{
registrations=data.registrations;
}).then(_=>this.getServiceWorkerVersions()).then(data=>{
versions=data.versions;
}).then(_=>{
const origin=new URL(pageUrl).origin;

registrations.
filter(reg=>{
const swOrigin=new URL(reg.scopeURL).origin;

return origin===swOrigin;
}).
forEach(reg=>{
versions.forEach(ver=>{

if(ver.registrationId!==reg.registrationId){
return;
}


if(ver.controlledClients&&ver.controlledClients.length>0){
throw new Error('You probably have multiple tabs open to the same origin.');
}
});
});
});
}







_waitForNothing(){
return{promise:Promise.resolve(),cancel(){}};
}





_waitForFrameNavigated(){
return new Promise(resolve=>{
this.once('Page.frameNavigated',resolve);
});
}







_waitForFcp(pauseAfterFcpMs,maxWaitForFcpMs){

let cancel=()=>{
throw new Error('_waitForFcp.cancel() called before it was defined');
};

const promise=new Promise((resolve,reject)=>{
const maxWaitTimeout=setTimeout(()=>{
reject(new LHError(LHError.errors.NO_FCP));
},maxWaitForFcpMs);

let loadTimeout;


const lifecycleListener=e=>{
if(e.name==='firstContentfulPaint'){
loadTimeout=setTimeout(()=>{
resolve();
cancel();
},pauseAfterFcpMs);
}
};

this.on('Page.lifecycleEvent',lifecycleListener);

let canceled=false;
cancel=()=>{
if(canceled)return;
canceled=true;
this.off('Page.lifecycleEvent',lifecycleListener);
maxWaitTimeout&&clearTimeout(maxWaitTimeout);
loadTimeout&&clearTimeout(loadTimeout);
reject(new Error('Wait for FCP canceled'));
};
});

return{
promise,
cancel};

}








_waitForNetworkIdle(networkQuietThresholdMs){
let hasDCLFired=false;

let idleTimeout;

let cancel=()=>{
throw new Error('_waitForNetworkIdle.cancel() called before it was defined');
};



if(!this._networkStatusMonitor){
throw new Error('Driver._waitForNetworkIdle called with no networkStatusMonitor');
}
const networkStatusMonitor=this._networkStatusMonitor;

const promise=new Promise((resolve,reject)=>{
const onIdle=()=>{

networkStatusMonitor.once('network-2-busy',onBusy);
idleTimeout=setTimeout(_=>{
cancel();
resolve();
},networkQuietThresholdMs);
};

const onBusy=()=>{
networkStatusMonitor.once('network-2-idle',onIdle);
idleTimeout&&clearTimeout(idleTimeout);
};

const domContentLoadedListener=()=>{
hasDCLFired=true;
if(networkStatusMonitor.is2Idle()){
onIdle();
}else{
onBusy();
}
};



const logStatus=()=>{
if(!hasDCLFired){
log.verbose('Driver','Waiting on DomContentLoaded');
return;
}

const inflightRecords=networkStatusMonitor.getInflightRecords();


if(inflightRecords.length<20){
for(const record of inflightRecords){
log.verbose('Driver',`Waiting on ${record.url.slice(0,120)} to finish`);
}
}
};

networkStatusMonitor.on('requeststarted',logStatus);
networkStatusMonitor.on('requestloaded',logStatus);
networkStatusMonitor.on('network-2-busy',logStatus);

this.once('Page.domContentEventFired',domContentLoadedListener);
let canceled=false;
cancel=()=>{
if(canceled)return;
canceled=true;
idleTimeout&&clearTimeout(idleTimeout);
this.off('Page.domContentEventFired',domContentLoadedListener);
networkStatusMonitor.removeListener('network-2-busy',onBusy);
networkStatusMonitor.removeListener('network-2-idle',onIdle);
networkStatusMonitor.removeListener('requeststarted',logStatus);
networkStatusMonitor.removeListener('requestloaded',logStatus);
networkStatusMonitor.removeListener('network-2-busy',logStatus);
};
});

return{
promise,
cancel};

}






_waitForCPUIdle(waitForCPUQuiet){
if(!waitForCPUQuiet){
return{
promise:Promise.resolve(),
cancel:()=>undefined};

}


let lastTimeout;
let canceled=false;

const checkForQuietExpression=`(${pageFunctions.checkTimeSinceLastLongTaskString})()`;





async function checkForQuiet(driver,resolve){
if(canceled)return;
const timeSinceLongTask=await driver.evaluateAsync(checkForQuietExpression);
if(canceled)return;

if(typeof timeSinceLongTask==='number'){
if(timeSinceLongTask>=waitForCPUQuiet){
log.verbose('Driver',`CPU has been idle for ${timeSinceLongTask} ms`);
resolve();
}else{
log.verbose('Driver',`CPU has been idle for ${timeSinceLongTask} ms`);
const timeToWait=waitForCPUQuiet-timeSinceLongTask;
lastTimeout=setTimeout(()=>checkForQuiet(driver,resolve),timeToWait);
}
}
}


let cancel=()=>{
throw new Error('_waitForCPUIdle.cancel() called before it was defined');
};
const promise=new Promise((resolve,reject)=>{
checkForQuiet(this,resolve).catch(reject);
cancel=()=>{
if(canceled)return;
canceled=true;
if(lastTimeout)clearTimeout(lastTimeout);
reject(new Error('Wait for CPU idle canceled'));
};
});

return{
promise,
cancel};

}








_waitForLoadEvent(pauseAfterLoadMs){

let cancel=()=>{
throw new Error('_waitForLoadEvent.cancel() called before it was defined');
};

const promise=new Promise((resolve,reject)=>{

let loadTimeout;
const loadListener=function(){
loadTimeout=setTimeout(resolve,pauseAfterLoadMs);
};
this.once('Page.loadEventFired',loadListener);

let canceled=false;
cancel=()=>{
if(canceled)return;
canceled=true;
this.off('Page.loadEventFired',loadListener);
loadTimeout&&clearTimeout(loadTimeout);
};
});

return{
promise,
cancel};

}





async isPageHung(){
try{
this.setNextProtocolTimeout(1000);
await this.sendCommand('Runtime.evaluate',{
expression:'"ping"',
returnByValue:true,
timeout:1000});


return false;
}catch(err){
return true;
}
}




















async _waitForFullyLoaded(pauseAfterFcpMs,pauseAfterLoadMs,networkQuietThresholdMs,
cpuQuietThresholdMs,maxWaitForLoadedMs,maxWaitForFcpMs){

let maxTimeoutHandle;


const waitForFcp=maxWaitForFcpMs?
this._waitForFcp(pauseAfterFcpMs,maxWaitForFcpMs):
this._waitForNothing();

const waitForLoadEvent=this._waitForLoadEvent(pauseAfterLoadMs);

const waitForNetworkIdle=this._waitForNetworkIdle(networkQuietThresholdMs);

let waitForCPUIdle=this._waitForNothing();




const loadPromise=Promise.all([
waitForFcp.promise,
waitForLoadEvent.promise,
waitForNetworkIdle.promise]).
then(()=>{
waitForCPUIdle=this._waitForCPUIdle(cpuQuietThresholdMs);
return waitForCPUIdle.promise;
}).then(()=>{

const cleanupFn=async function(){
log.verbose('Driver','loadEventFired and network considered idle');
return{timedOut:false};
};

return cleanupFn;
}).catch(err=>{

return function(){
throw err;
};
});




const maxTimeoutPromise=new Promise((resolve,reject)=>{
maxTimeoutHandle=setTimeout(resolve,maxWaitForLoadedMs);
}).then(_=>{
return async()=>{
log.warn('Driver','Timed out waiting for page load. Checking if page is hung...');
if(await this.isPageHung()){
log.warn('Driver','Page appears to be hung, killing JavaScript...');
await this.sendCommand('Emulation.setScriptExecutionDisabled',{value:true});
await this.sendCommand('Runtime.terminateExecution');
throw new LHError(LHError.errors.PAGE_HUNG);
}

return{timedOut:true};
};
});


const cleanupFn=await Promise.race([
loadPromise,
maxTimeoutPromise]);


maxTimeoutHandle&&clearTimeout(maxTimeoutHandle);
waitForFcp.cancel();
waitForLoadEvent.cancel();
waitForNetworkIdle.cancel();
waitForCPUIdle.cancel();

return cleanupFn();
}







_beginNetworkStatusMonitoring(startingUrl){
this._networkStatusMonitor=new NetworkRecorder();

this._monitoredUrl=startingUrl;

this._monitoredUrlNavigations=[];

return this.sendCommand('Network.enable');
}







async _endNetworkStatusMonitoring(){
const startingUrl=this._monitoredUrl;
const frameNavigations=this._monitoredUrlNavigations;

const resourceTreeResponse=await this.sendCommand('Page.getResourceTree');
const mainFrameId=resourceTreeResponse.frameTree.frame.id;
const mainFrameNavigations=frameNavigations.filter(frame=>frame.id===mainFrameId);
const finalNavigation=mainFrameNavigations[mainFrameNavigations.length-1];

this._networkStatusMonitor=null;
this._monitoredUrl=null;
this._monitoredUrlNavigations=[];

const finalUrl=finalNavigation&&finalNavigation.url||startingUrl;
if(!finalNavigation)log.warn('Driver','No detected navigations');
if(!finalUrl)throw new Error('Unable to determine finalUrl');
return finalUrl;
}







async _getOrCreateIsolatedContextId(){
if(typeof this._isolatedExecutionContextId==='number'){
return this._isolatedExecutionContextId;
}

const resourceTreeResponse=await this.sendCommand('Page.getResourceTree');
const mainFrameId=resourceTreeResponse.frameTree.frame.id;

const isolatedWorldResponse=await this.sendCommand('Page.createIsolatedWorld',{
frameId:mainFrameId,
worldName:'lighthouse_isolated_context'});


this._isolatedExecutionContextId=isolatedWorldResponse.executionContextId;
return isolatedWorldResponse.executionContextId;
}

_clearIsolatedContextId(){
this._isolatedExecutionContextId=undefined;
}












async gotoURL(url,options={}){
const waitForFcp=options.waitForFcp||false;
const waitForNavigated=options.waitForNavigated||false;
const waitForLoad=options.waitForLoad||false;
const passContext=options.passContext||{};
const disableJS=passContext.disableJavaScript||false;

if(waitForNavigated&&(waitForFcp||waitForLoad)){
throw new Error('Cannot use both waitForNavigated and another event, pick just one');
}

await this._beginNetworkStatusMonitoring(url);
await this._clearIsolatedContextId();


await this.sendCommand('Target.setAutoAttach',{
flatten:true,
autoAttach:true,

waitForDebuggerOnStart:true});


await this.sendCommand('Page.enable');
await this.sendCommand('Page.setLifecycleEventsEnabled',{enabled:true});
await this.sendCommand('Emulation.setScriptExecutionDisabled',{value:disableJS});

const waitforPageNavigateCmd=this._innerSendCommand('Page.navigate',undefined,{url});

let timedOut=false;
if(waitForNavigated){
await this._waitForFrameNavigated();
}else if(waitForLoad){
const passConfig=passContext.passConfig||{};


let{pauseAfterFcpMs,pauseAfterLoadMs,networkQuietThresholdMs,cpuQuietThresholdMs}=passConfig;
let maxWaitMs=passContext.settings&&passContext.settings.maxWaitForLoad;
let maxFCPMs=passContext.settings&&passContext.settings.maxWaitForFcp;

if(typeof pauseAfterFcpMs!=='number')pauseAfterFcpMs=DEFAULT_PAUSE_AFTER_FCP;
if(typeof pauseAfterLoadMs!=='number')pauseAfterLoadMs=DEFAULT_PAUSE_AFTER_LOAD;
if(typeof networkQuietThresholdMs!=='number')networkQuietThresholdMs=DEFAULT_NETWORK_QUIET_THRESHOLD;
if(typeof cpuQuietThresholdMs!=='number')cpuQuietThresholdMs=DEFAULT_CPU_QUIET_THRESHOLD;
if(typeof maxWaitMs!=='number')maxWaitMs=constants.defaultSettings.maxWaitForLoad;
if(typeof maxFCPMs!=='number')maxFCPMs=constants.defaultSettings.maxWaitForFcp;


if(!waitForFcp)maxFCPMs=undefined;
const loadResult=await this._waitForFullyLoaded(pauseAfterFcpMs,pauseAfterLoadMs,
networkQuietThresholdMs,cpuQuietThresholdMs,maxWaitMs,maxFCPMs);
timedOut=loadResult.timedOut;
}


await waitforPageNavigateCmd;

return{
finalUrl:await this._endNetworkStatusMonitoring(),
timedOut};

}






async getObjectProperty(objectId,propName){
const propertiesResponse=await this.sendCommand('Runtime.getProperties',{
objectId,
accessorPropertiesOnly:true,
generatePreview:false,
ownProperties:false});


const propertyForName=propertiesResponse.result.
find(property=>property.name===propName);

if(propertyForName&&propertyForName.value){
return propertyForName.value.value;
}else{
return null;
}
}








async getRequestContent(requestId,timeout=1000){
requestId=NetworkRequest.getRequestIdForBackend(requestId);



this.setNextProtocolTimeout(timeout);
const result=await this.sendCommand('Network.getResponseBody',{requestId});
return result.body;
}





async querySelector(selector){
const documentResponse=await this.sendCommand('DOM.getDocument');
const rootNodeId=documentResponse.root.nodeId;

const targetNode=await this.sendCommand('DOM.querySelector',{
nodeId:rootNodeId,
selector});


if(targetNode.nodeId===0){
return null;
}
return new LHElement(targetNode,this);
}







async getNodesInDocument(pierce=true){
const flattenedDocument=await this.sendCommand('DOM.getFlattenedDocument',
{depth:-1,pierce});

return flattenedDocument.nodes?flattenedDocument.nodes:[];
}





scrollTo(position){
const scrollExpression=`window.scrollTo(${position.x}, ${position.y})`;
return this.evaluateAsync(scrollExpression,{useIsolation:true});
}




getScrollPosition(){
return this.evaluateAsync(`({x: window.scrollX, y: window.scrollY})`,{useIsolation:true});
}





async beginTrace(settings){
const additionalCategories=settings&&settings.additionalTraceCategories&&
settings.additionalTraceCategories.split(',')||[];
const traceCategories=this._traceCategories.concat(additionalCategories);



const milestone=(await this.getBrowserVersion()).milestone;
if(milestone<71){
const toplevelIndex=traceCategories.indexOf('disabled-by-default-lighthouse');
traceCategories[toplevelIndex]='toplevel';
}

const uniqueCategories=Array.from(new Set(traceCategories));


if(this.isDomainEnabled('CSS')){
throw new Error('CSS domain enabled when starting trace');
}
if(this.isDomainEnabled('DOM')){
throw new Error('DOM domain enabled when starting trace');
}


return this.sendCommand('Page.enable').
then(_=>this.sendCommand('Tracing.start',{
categories:uniqueCategories.join(','),
options:'sampling-frequency=10000'}));

}




endTrace(){

const traceEvents=[];





const dataListener=function(data){
traceEvents.push(...data.value);
};
this.on('Tracing.dataCollected',dataListener);

return new Promise((resolve,reject)=>{
this.once('Tracing.tracingComplete',_=>{
this.off('Tracing.dataCollected',dataListener);
resolve({traceEvents});
});

this.sendCommand('Tracing.end').catch(reject);
});
}




beginDevtoolsLog(){
this._devtoolsLog.reset();
this._devtoolsLog.beginRecording();
}





endDevtoolsLog(){
this._devtoolsLog.endRecording();
return this._devtoolsLog.messages;
}




enableRuntimeEvents(){
return this.sendCommand('Runtime.enable');
}







async enableAsyncStacks(){
await this.sendCommand('Debugger.enable');
await this.sendCommand('Debugger.setSkipAllPauses',{skip:true});
await this.sendCommand('Debugger.setAsyncCallStackDepth',{maxDepth:8});
}





async beginEmulation(settings){
await emulation.emulate(this,settings);
await this.setThrottling(settings,{useThrottling:true});
}






async setThrottling(settings,passConfig){
if(settings.throttlingMethod!=='devtools'){
return emulation.clearAllNetworkEmulation(this);
}

const cpuPromise=passConfig.useThrottling?
emulation.enableCPUThrottling(this,settings.throttling):
emulation.disableCPUThrottling(this);
const networkPromise=passConfig.useThrottling?
emulation.enableNetworkThrottling(this,settings.throttling):
emulation.clearAllNetworkEmulation(this);

await Promise.all([cpuPromise,networkPromise]);
}





async goOffline(){
await this.sendCommand('Network.enable');
await emulation.goOffline(this);
this.online=false;
}






async goOnline(options){
await this.setThrottling(options.settings,options.passConfig);
this.online=true;
}





async cleanBrowserCaches(){
const status={msg:'Cleaning browser cache',id:'lh:driver:cleanBrowserCaches'};
log.time(status);


await this.sendCommand('Network.clearBrowserCache');

await this.sendCommand('Network.setCacheDisabled',{cacheDisabled:true});
await this.sendCommand('Network.setCacheDisabled',{cacheDisabled:false});

log.timeEnd(status);
}





async setExtraHTTPHeaders(headers){
if(!headers){
return;
}

return this.sendCommand('Network.setExtraHTTPHeaders',{headers});
}





async clearDataForOrigin(url){
const origin=new URL(url).origin;



const typesToClear=[
'appcache',

'file_systems',
'indexeddb',
'local_storage',
'shader_cache',
'websql',
'service_workers',
'cache_storage'].
join(',');



this.setNextProtocolTimeout(5000);

try{
await this.sendCommand('Storage.clearDataForOrigin',{
origin:origin,
storageTypes:typesToClear});

}catch(err){
if(err.code==='PROTOCOL_TIMEOUT'){
log.warn('Driver','clearDataForOrigin timed out');
}else{
throw err;
}
}
}






async cacheNatives(){
await this.evaluateScriptOnNewDocument(`
        window.__nativePromise = Promise;
        window.__nativeError = Error;
        window.__nativeURL = URL;
        window.__ElementMatches = Element.prototype.matches;
        window.__perfNow = performance.now.bind(performance);
    `);
}





async registerPerformanceObserver(){
const scriptStr=`(${pageFunctions.registerPerformanceObserverInPageString})()`;
await this.evaluateScriptOnNewDocument(scriptStr);
}





blockUrlPatterns(urls){
return this.sendCommand('Network.setBlockedURLs',{urls}).
catch(err=>{

if(!/wasn't found/.test(err.message)){
throw err;
}
});
}






async dismissJavaScriptDialogs(){
this.on('Page.javascriptDialogOpening',data=>{
log.warn('Driver',`${data.type} dialog opened by the page automatically suppressed.`);

this.sendCommand('Page.handleJavaScriptDialog',{
accept:true,
promptText:'Lighthouse prompt response'}).
catch(err=>log.warn('Driver',err));
});

await this.sendCommand('Page.enable');
}}


module.exports=Driver;

}).call(this,require("buffer").Buffer);
},{"../config/constants.js":53,"../lib/emulation.js":76,"../lib/lh-element.js":81,"../lib/lh-error.js":82,"../lib/network-recorder.js":85,"../lib/network-request.js":86,"../lib/page-functions.js":87,"../lib/url-shim.js":"url","./connections/connection.js":55,"./devtools-log.js":57,"./fetcher.js":59,"buffer":114,"events":118,"lighthouse-logger":135}],59:[function(require,module,exports){
(function(Buffer){





'use strict';









class Fetcher{



constructor(driver){
this.driver=driver;

this._onRequestPausedHandlers=new Map();
this._onRequestPaused=this._onRequestPaused.bind(this);
this._enabled=false;
}















async enableRequestInterception(){
if(this._enabled)return;

this._enabled=true;
await this.driver.sendCommand('Fetch.enable',{
patterns:[{requestStage:'Request'},{requestStage:'Response'}]});

await this.driver.on('Fetch.requestPaused',this._onRequestPaused);
}

async disableRequestInterception(){
if(!this._enabled)return;

this._enabled=false;
await this.driver.off('Fetch.requestPaused',this._onRequestPaused);
await this.driver.sendCommand('Fetch.disable');
this._onRequestPausedHandlers.clear();
}





async _setOnRequestPausedHandler(url,handler){
this._onRequestPausedHandlers.set(url,handler);
}




async _onRequestPaused(event){
const handler=this._onRequestPausedHandlers.get(event.request.url);
if(handler){
await handler(event);
}else{

await this.driver.sendCommand('Fetch.continueRequest',{requestId:event.requestId});
}
}










async fetchResource(url,{timeout=500}){
if(!this._enabled){
throw new Error('Must call `enableRequestInterception` before using fetchResource');
}


const requestInterceptionPromise=new Promise((resolve,reject)=>{
this._setOnRequestPausedHandler(url,async event=>{
const{requestId,responseStatusCode}=event;


if(!responseStatusCode){

const headers=Object.entries(event.request.headers).
filter(([name])=>name!=='Cookie').
map(([name,value])=>{
return{name,value};
});

this.driver.sendCommand('Fetch.continueRequest',{
requestId,
headers});

return;
}


if(!(responseStatusCode>=200&&responseStatusCode<300)){
reject(new Error(`Invalid response status code: ${responseStatusCode}`));
return;
}

const responseBody=await this.driver.sendCommand('Fetch.getResponseBody',{requestId});
if(responseBody.base64Encoded){
resolve(Buffer.from(responseBody.body,'base64').toString());
}else{
resolve(responseBody.body);
}


this.driver.sendCommand('Fetch.failRequest',{requestId,errorReason:'Aborted'});
});
});





function injectIframe(src){

const iframe=document.createElement('iframe');

iframe.style.display='none';
iframe.style.visibility='hidden';
iframe.style.position='absolute';
iframe.style.top='-1000px';
iframe.style.left='-1000px';
iframe.style.width='1px';
iframe.style.height='1px';
iframe.src=src;
iframe.onload=iframe.onerror=()=>{
iframe.remove();
delete iframe.onload;
delete iframe.onerror;
};
document.body.appendChild(iframe);
}

await this.driver.evaluateAsync(`${injectIframe}(${JSON.stringify(url)})`,{
useIsolation:true});



let timeoutHandle;

const timeoutPromise=new Promise((_,reject)=>{
const errorMessage='Timed out fetching resource.';
timeoutHandle=setTimeout(()=>reject(new Error(errorMessage)),timeout);
});

return Promise.race([
timeoutPromise,
requestInterceptionPromise]).
finally(()=>clearTimeout(timeoutHandle));
}}


module.exports=Fetcher;

}).call(this,require("buffer").Buffer);
},{"buffer":114}],60:[function(require,module,exports){
(function(__filename){





'use strict';

const log=require('lighthouse-logger');
const manifestParser=require('../lib/manifest-parser.js');
const stacksGatherer=require('../lib/stack-collector.js');
const LHError=require('../lib/lh-error.js');
const NetworkAnalyzer=require('../lib/dependency-graph/simulator/network-analyzer.js');
const NetworkRecorder=require('../lib/network-recorder.js');
const constants=require('../config/constants.js');
const i18n=require('../lib/i18n/i18n.js');
const URL=require('../lib/url-shim.js');

const UIStrings={





warningRedirected:'The page may not be loading as expected because your test URL '+
`({requested}) was redirected to {final}. `+
'Try testing the second URL directly.',



warningTimeout:'The page loaded too slowly to finish within the time limit. '+
'Results may be incomplete.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);















class GatherRunner{









static async loadBlank(driver,url=constants.defaultPassConfig.blankPage){
const status={msg:'Resetting state with about:blank',id:'lh:gather:loadBlank'};
log.time(status);
await driver.gotoURL(url,{waitForNavigated:true});
log.timeEnd(status);
}











static async loadPage(driver,passContext){
const status={
msg:'Loading page & waiting for onload',
id:`lh:gather:loadPage-${passContext.passConfig.passName}`};

log.time(status);
try{
const{finalUrl,timedOut}=await driver.gotoURL(passContext.url,{
waitForFcp:passContext.passConfig.recordTrace,
waitForLoad:true,
passContext});

passContext.url=finalUrl;
if(timedOut)passContext.LighthouseRunWarnings.push(str_(UIStrings.warningTimeout));
}catch(err){

if(err.code==='NO_FCP'||err.code==='PAGE_HUNG'){
return{navigationError:err};
}

throw err;
}finally{
log.timeEnd(status);
}

return{};
}






static async setupDriver(driver,options){
const status={msg:'Initializing…',id:'lh:gather:setupDriver'};
log.time(status);
const resetStorage=!options.settings.disableStorageReset;
await driver.assertNoSameOriginServiceWorkerClients(options.requestedUrl);
await driver.beginEmulation(options.settings);
await driver.enableRuntimeEvents();
await driver.enableAsyncStacks();
await driver.cacheNatives();
await driver.registerPerformanceObserver();
await driver.dismissJavaScriptDialogs();
if(resetStorage)await driver.clearDataForOrigin(options.requestedUrl);
log.timeEnd(status);
}







static async disposeDriver(driver,options){
const status={msg:'Disconnecting from browser...',id:'lh:gather:disconnect'};

log.time(status);
try{

const resetStorage=!options.settings.disableStorageReset;
if(resetStorage)await driver.clearDataForOrigin(options.requestedUrl);




await driver.fetcher.disableRequestInterception();

await driver.disconnect();
}catch(err){


if(!/close\/.*status: (500|404)$/.test(err.message)){
log.error('GatherRunner disconnect',err.message);
}
}
log.timeEnd(status);
}






static getNetworkError(mainRecord){
if(!mainRecord){
return new LHError(LHError.errors.NO_DOCUMENT_REQUEST);
}else if(mainRecord.failed){
const netErr=mainRecord.localizedFailDescription;


if(
netErr==='net::ERR_NAME_NOT_RESOLVED'||
netErr==='net::ERR_NAME_RESOLUTION_FAILED'||
netErr.startsWith('net::ERR_DNS_'))
{
return new LHError(LHError.errors.DNS_FAILURE);
}else{
return new LHError(
LHError.errors.FAILED_DOCUMENT_REQUEST,
{errorDetails:netErr});

}
}else if(mainRecord.hasErrorStatusCode()){
return new LHError(
LHError.errors.ERRORED_DOCUMENT_REQUEST,
{statusCode:`${mainRecord.statusCode}`});

}
}







static getInterstitialError(mainRecord,networkRecords){

if(!mainRecord)return undefined;

const interstitialRequest=networkRecords.
find(record=>record.documentURL.startsWith('chrome-error://'));

if(!interstitialRequest)return undefined;




if(!mainRecord.failed)return undefined;


if(mainRecord.localizedFailDescription.startsWith('net::ERR_CERT')){
return new LHError(LHError.errors.INSECURE_DOCUMENT_REQUEST,{securityMessages:
mainRecord.localizedFailDescription});
}


return new LHError(LHError.errors.CHROME_INTERSTITIAL_ERROR);
}









static getPageLoadError(passContext,loadData,navigationError){
const{networkRecords}=loadData;

let mainRecord;
try{
mainRecord=NetworkAnalyzer.findMainDocument(networkRecords,passContext.url);
}catch(_){}

const networkError=GatherRunner.getNetworkError(mainRecord);
const interstitialError=GatherRunner.getInterstitialError(mainRecord,networkRecords);



if(passContext.passConfig.loadFailureMode==='ignore')return;


if(interstitialError)return interstitialError;




if(networkError)return networkError;




return navigationError;
}







static async setupPassNetwork(passContext){
const status={msg:'Setting up network for the pass trace',id:`lh:gather:setupPassNetwork`};
log.time(status);

const passConfig=passContext.passConfig;
await passContext.driver.setThrottling(passContext.settings,passConfig);

const blockedUrls=(passContext.passConfig.blockedUrlPatterns||[]).
concat(passContext.settings.blockedUrlPatterns||[]);




await passContext.driver.blockUrlPatterns(blockedUrls);
await passContext.driver.setExtraHTTPHeaders(passContext.settings.extraHeaders);

log.timeEnd(status);
}






static async beginRecording(passContext){
const status={msg:'Beginning devtoolsLog and trace',id:'lh:gather:beginRecording'};
log.time(status);

const{driver,passConfig,settings}=passContext;


await driver.beginDevtoolsLog();

if(passConfig.recordTrace){
await driver.beginTrace(settings);
}

log.timeEnd(status);
}







static async endRecording(passContext){
const{driver,passConfig}=passContext;

let trace;
if(passConfig.recordTrace){
const status={msg:'Gathering trace',id:`lh:gather:getTrace`};
log.time(status);
trace=await driver.endTrace();
log.timeEnd(status);
}

const status={
msg:'Gathering devtoolsLog & network records',
id:`lh:gather:getDevtoolsLog`};

log.time(status);
const devtoolsLog=driver.endDevtoolsLog();
const networkRecords=NetworkRecorder.recordsFromLogs(devtoolsLog);
log.timeEnd(status);

return{
networkRecords,
devtoolsLog,
trace};

}







static async beforePass(passContext,gathererResults){
const bpStatus={msg:`Running beforePass methods`,id:`lh:gather:beforePass`};
log.time(bpStatus,'verbose');

for(const gathererDefn of passContext.passConfig.gatherers){
const gatherer=gathererDefn.instance;

passContext.options=gathererDefn.options||{};
const status={
msg:`Gathering setup: ${gatherer.name}`,
id:`lh:gather:beforePass:${gatherer.name}`};

log.time(status,'verbose');
const artifactPromise=Promise.resolve().then(_=>gatherer.beforePass(passContext));
gathererResults[gatherer.name]=[artifactPromise];
await artifactPromise.catch(()=>{});
log.timeEnd(status);
}
log.timeEnd(bpStatus);
}







static async pass(passContext,gathererResults){
const config=passContext.passConfig;
const gatherers=config.gatherers;

const pStatus={msg:`Running pass methods`,id:`lh:gather:pass`};
log.time(pStatus,'verbose');

for(const gathererDefn of gatherers){
const gatherer=gathererDefn.instance;

passContext.options=gathererDefn.options||{};
const status={
msg:`Gathering in-page: ${gatherer.name}`,
id:`lh:gather:pass:${gatherer.name}`};

log.time(status);
const artifactPromise=Promise.resolve().then(_=>gatherer.pass(passContext));

const gathererResult=gathererResults[gatherer.name]||[];
gathererResult.push(artifactPromise);
gathererResults[gatherer.name]=gathererResult;
await artifactPromise.catch(()=>{});
}

log.timeEnd(pStatus);
}








static async afterPass(passContext,loadData,gathererResults){
const driver=passContext.driver;
const config=passContext.passConfig;
const gatherers=config.gatherers;

const apStatus={msg:`Running afterPass methods`,id:`lh:gather:afterPass`};
log.time(apStatus,'verbose');



const scrollPosition=await driver.getScrollPosition();

for(const gathererDefn of gatherers){
const gatherer=gathererDefn.instance;
const status={
msg:`Gathering: ${gatherer.name}`,
id:`lh:gather:afterPass:${gatherer.name}`};

log.time(status);


passContext.options=gathererDefn.options||{};
const artifactPromise=Promise.resolve().
then(_=>gatherer.afterPass(passContext,loadData));

const gathererResult=gathererResults[gatherer.name]||[];
gathererResult.push(artifactPromise);
gathererResults[gatherer.name]=gathererResult;
await artifactPromise.catch(()=>{});
await driver.scrollTo(scrollPosition);
log.timeEnd(status);
}
log.timeEnd(apStatus);
}









static async collectArtifacts(gathererResults){

const gathererArtifacts={};

const resultsEntries=Object.entries(gathererResults);
for(const[gathererName,phaseResultsPromises]of resultsEntries){
try{
const phaseResults=await Promise.all(phaseResultsPromises);

const definedResults=phaseResults.filter(element=>element!==undefined);
const artifact=definedResults[definedResults.length-1];

gathererArtifacts[gathererName]=artifact;
}catch(err){

gathererArtifacts[gathererName]=err;
}

if(gathererArtifacts[gathererName]===undefined){
throw new Error(`${gathererName} failed to provide an artifact.`);
}
}

return{
artifacts:gathererArtifacts};

}







static async initializeBaseArtifacts(options){
const hostUserAgent=(await options.driver.getBrowserVersion()).userAgent;

const{emulatedFormFactor}=options.settings;

const HostFormFactor=hostUserAgent.includes('Android')||hostUserAgent.includes('Mobile')?
'mobile':'desktop';
const TestedAsMobileDevice=emulatedFormFactor==='mobile'||
emulatedFormFactor!=='desktop'&&HostFormFactor==='mobile';

return{
fetchTime:new Date().toJSON(),
LighthouseRunWarnings:[],
TestedAsMobileDevice,
HostFormFactor,
HostUserAgent:hostUserAgent,
NetworkUserAgent:'',
BenchmarkIndex:0,
WebAppManifest:null,
InstallabilityErrors:{errors:[]},
Stacks:[],
traces:{},
devtoolsLogs:{},
settings:options.settings,
URL:{requestedUrl:options.requestedUrl,finalUrl:options.requestedUrl},
Timing:[],
PageLoadError:null};

}







static async getInstallabilityErrors(passContext){
const response=
await passContext.driver.sendCommand('Page.getInstallabilityErrors');

let errors=response.installabilityErrors;


if(!errors){


const m81StyleErrors=response.errors||[];
errors=m81StyleErrors.map(error=>{
const englishErrorToErrorId={
'Could not download a required icon from the manifest':'cannot-download-icon',
'Downloaded icon was empty or corrupted':'no-icon-available'};

for(const[englishError,errorId]of Object.entries(englishErrorToErrorId)){
if(error.includes(englishError)){
return{errorId,errorArguments:[]};
}
}
return{errorId:'',errorArguments:[]};
}).filter(error=>error.errorId);
}

return{errors};
}







static async populateBaseArtifacts(passContext){
const baseArtifacts=passContext.baseArtifacts;


baseArtifacts.URL.finalUrl=passContext.url;

if(!URL.equalWithExcludedFragments(baseArtifacts.URL.requestedUrl,baseArtifacts.URL.finalUrl)){
baseArtifacts.LighthouseRunWarnings.push(str_(UIStrings.warningRedirected,{
requested:baseArtifacts.URL.requestedUrl,
final:baseArtifacts.URL.finalUrl}));

}


baseArtifacts.WebAppManifest=await GatherRunner.getWebAppManifest(passContext);

if(baseArtifacts.WebAppManifest){
baseArtifacts.InstallabilityErrors=await GatherRunner.getInstallabilityErrors(passContext);
}

baseArtifacts.Stacks=await stacksGatherer(passContext);


const devtoolsLog=baseArtifacts.devtoolsLogs[passContext.passConfig.passName];
const userAgentEntry=devtoolsLog.find(entry=>
entry.method==='Network.requestWillBeSent'&&
!!entry.params.request.headers['User-Agent']);

if(userAgentEntry){

baseArtifacts.NetworkUserAgent=userAgentEntry.params.request.headers['User-Agent'];
}
}





static finalizeBaseArtifacts(baseArtifacts){

baseArtifacts.LighthouseRunWarnings=Array.from(new Set(baseArtifacts.LighthouseRunWarnings));


baseArtifacts.Timing=log.getTimeEntries();
}













static async getWebAppManifest(passContext){
const response=await passContext.driver.getAppManifest();
if(!response)return null;
return manifestParser(response.data,response.url,passContext.url);
}






static async run(passConfigs,options){
const driver=options.driver;


const artifacts={};

try{
await driver.connect();


await GatherRunner.loadBlank(driver);

const baseArtifacts=await GatherRunner.initializeBaseArtifacts(options);
baseArtifacts.BenchmarkIndex=await options.driver.getBenchmarkIndex();

await GatherRunner.setupDriver(driver,options);

let isFirstPass=true;
for(const passConfig of passConfigs){

const passContext={
driver,
url:options.requestedUrl,
settings:options.settings,
passConfig,
baseArtifacts,
LighthouseRunWarnings:baseArtifacts.LighthouseRunWarnings};

const passResults=await GatherRunner.runPass(passContext);
Object.assign(artifacts,passResults.artifacts);


if(passResults.pageLoadError&&passConfig.loadFailureMode==='fatal'){
baseArtifacts.PageLoadError=passResults.pageLoadError;
break;
}

if(isFirstPass){
await GatherRunner.populateBaseArtifacts(passContext);
isFirstPass=false;
}





await driver.fetcher.disableRequestInterception();
}

await GatherRunner.disposeDriver(driver,options);
GatherRunner.finalizeBaseArtifacts(baseArtifacts);
return{...baseArtifacts,...artifacts};
}catch(err){

GatherRunner.disposeDriver(driver,options);

throw err;
}
}







static shouldClearCaches(passContext){
const{settings,passConfig}=passContext;
return!settings.disableStorageReset&&passConfig.recordTrace&&passConfig.useThrottling;
}







static _addLoadDataToBaseArtifacts(passContext,loadData,passName){
const baseArtifacts=passContext.baseArtifacts;
baseArtifacts.devtoolsLogs[passName]=loadData.devtoolsLog;
if(loadData.trace)baseArtifacts.traces[passName]=loadData.trace;
}






static async runPass(passContext){
const status={
msg:`Running ${passContext.passConfig.passName} pass`,
id:`lh:gather:runPass-${passContext.passConfig.passName}`,
args:[passContext.passConfig.gatherers.map(g=>g.instance.name).join(', ')]};

log.time(status);


const gathererResults={};
const{driver,passConfig}=passContext;


await GatherRunner.loadBlank(driver,passConfig.blankPage);
await GatherRunner.setupPassNetwork(passContext);
if(GatherRunner.shouldClearCaches(passContext)){
await driver.cleanBrowserCaches();
}
await GatherRunner.beforePass(passContext,gathererResults);


await GatherRunner.beginRecording(passContext);
const{navigationError:possibleNavError}=await GatherRunner.loadPage(driver,passContext);
await GatherRunner.pass(passContext,gathererResults);
const loadData=await GatherRunner.endRecording(passContext);


await driver.setThrottling(passContext.settings,{useThrottling:false});


const pageLoadError=GatherRunner.getPageLoadError(passContext,loadData,possibleNavError);
if(pageLoadError){
const localizedMessage=i18n.getFormatted(pageLoadError.friendlyMessage,
passContext.settings.locale);
log.error('GatherRunner',localizedMessage,passContext.url);

passContext.LighthouseRunWarnings.push(pageLoadError.friendlyMessage);
GatherRunner._addLoadDataToBaseArtifacts(passContext,loadData,
`pageLoadError-${passConfig.passName}`);

log.timeEnd(status);
return{artifacts:{},pageLoadError};
}


GatherRunner._addLoadDataToBaseArtifacts(passContext,loadData,passConfig.passName);


await GatherRunner.afterPass(passContext,loadData,gathererResults);
const artifacts=GatherRunner.collectArtifacts(gathererResults);

log.timeEnd(status);
return artifacts;
}}


module.exports=GatherRunner;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/gather/gather-runner.js");
},{"../config/constants.js":53,"../lib/dependency-graph/simulator/network-analyzer.js":73,"../lib/i18n/i18n.js":77,"../lib/lh-error.js":82,"../lib/manifest-parser.js":83,"../lib/network-recorder.js":85,"../lib/stack-collector.js":90,"../lib/url-shim.js":"url","lighthouse-logger":135}],61:[function(require,module,exports){





'use strict';













class Gatherer{



get name(){

return this.constructor.name;
}








beforePass(passContext){}







pass(passContext){}









afterPass(passContext,loadData){}}




module.exports=Gatherer;

},{}],62:[function(require,module,exports){





'use strict';

const Runner=require('./runner.js');
const log=require('lighthouse-logger');
const ChromeProtocol=require('./gather/connections/cri.js');
const Config=require('./config/config.js');


























async function lighthouse(url,flags={},configJSON,connection){

flags.logLevel=flags.logLevel||'error';
log.setLevel(flags.logLevel);

const config=generateConfig(configJSON,flags);

connection=connection||new ChromeProtocol(flags.port,flags.hostname);


return Runner.run(connection,{url,config});
}









function generateConfig(configJson,flags){
return new Config(configJson,flags);
}

lighthouse.generateConfig=generateConfig;
lighthouse.getAuditList=Runner.getAuditList;
lighthouse.traceCategories=require('./gather/driver.js').traceCategories;
lighthouse.Audit=require('./audits/audit.js');
lighthouse.Gatherer=require('./gather/gatherers/gatherer.js');
lighthouse.NetworkRecords=require('./computed/network-records.js');

module.exports=lighthouse;

},{"./audits/audit.js":3,"./computed/network-records.js":39,"./config/config.js":52,"./gather/connections/cri.js":113,"./gather/driver.js":58,"./gather/gatherers/gatherer.js":61,"./runner.js":101,"lighthouse-logger":135}],63:[function(require,module,exports){





'use strict';

const isEqual=require('lodash.isequal');






class ArbitraryEqualityMap{
constructor(){
this._equalsFn=ArbitraryEqualityMap.deepEquals;

this._entries=[];
}




setEqualityFn(equalsFn){
this._equalsFn=equalsFn;
}





has(key){
return this._findIndexOf(key)!==-1;
}





get(key){
const entry=this._entries[this._findIndexOf(key)];
return entry&&entry.value;
}





set(key,value){
let index=this._findIndexOf(key);
if(index===-1)index=this._entries.length;
this._entries[index]={key,value};
}





_findIndexOf(key){
for(let i=0;i<this._entries.length;i++){
if(this._equalsFn(key,this._entries[i].key))return i;
}

return-1;
}









static deepEquals(objA,objB){
return isEqual(objA,objB);
}}


module.exports=ArbitraryEqualityMap;

},{"lodash.isequal":154}],64:[function(require,module,exports){
(function(process){





'use strict';

const fs=require('fs');
const path=require('path');
const log=require('lighthouse-logger');
const stream=require('stream');
const Simulator=require('./dependency-graph/simulator/simulator.js');
const lanternTraceSaver=require('./lantern-trace-saver.js');
const Metrics=require('./traces/pwmetrics-events.js');
const rimraf=require('rimraf');
const NetworkAnalysisComputed=require('../computed/network-analysis.js');
const LoadSimulatorComputed=require('../computed/load-simulator.js');
const LHError=require('../lib/lh-error.js');

const artifactsFilename='artifacts.json';
const traceSuffix='.trace.json';
const devtoolsLogSuffix='.devtoolslog.json';















function loadArtifacts(basePath){
log.log('Reading artifacts from disk:',basePath);

if(!fs.existsSync(basePath)){
throw new Error('No saved artifacts found at '+basePath);
}


const artifactsStr=fs.readFileSync(path.join(basePath,artifactsFilename),'utf8');

const artifacts=JSON.parse(artifactsStr,LHError.parseReviver);

const filenames=fs.readdirSync(basePath);


artifacts.devtoolsLogs={};
filenames.filter(f=>f.endsWith(devtoolsLogSuffix)).forEach(filename=>{
const passName=filename.replace(devtoolsLogSuffix,'');
const devtoolsLog=JSON.parse(fs.readFileSync(path.join(basePath,filename),'utf8'));
artifacts.devtoolsLogs[passName]=devtoolsLog;
});


artifacts.traces={};
filenames.filter(f=>f.endsWith(traceSuffix)).forEach(filename=>{
const file=fs.readFileSync(path.join(basePath,filename),{encoding:'utf-8'});
const trace=JSON.parse(file);
const passName=filename.replace(traceSuffix,'');
artifacts.traces[passName]=Array.isArray(trace)?{traceEvents:trace}:trace;
});

if(Array.isArray(artifacts.Timing)){


artifacts.Timing.forEach(entry=>entry.gather=true);
}
return artifacts;
}







function stringifyReplacer(key,value){

if(value instanceof Error){
return LHError.stringifyReplacer(value);
}

return value;
}








async function saveArtifacts(artifacts,basePath){
const status={msg:'Saving artifacts',id:'lh:assetSaver:saveArtifacts'};
log.time(status);
fs.mkdirSync(basePath,{recursive:true});
rimraf.sync(`${basePath}/*${traceSuffix}`);
rimraf.sync(`${basePath}/${artifactsFilename}`);

const{traces,devtoolsLogs,...restArtifacts}=artifacts;


for(const[passName,trace]of Object.entries(traces)){
await saveTrace(trace,`${basePath}/${passName}${traceSuffix}`);
}


for(const[passName,devtoolsLog]of Object.entries(devtoolsLogs)){
const log=JSON.stringify(devtoolsLog);
fs.writeFileSync(`${basePath}/${passName}${devtoolsLogSuffix}`,log,'utf8');
}


const restArtifactsString=JSON.stringify(restArtifacts,stringifyReplacer,2);
fs.writeFileSync(`${basePath}/${artifactsFilename}`,restArtifactsString,'utf8');
log.log('Artifacts saved to disk in folder:',basePath);
log.timeEnd(status);
}







async function prepareAssets(artifacts,audits){
const passNames=Object.keys(artifacts.traces);

const assets=[];

for(const passName of passNames){
const trace=artifacts.traces[passName];
const devtoolsLog=artifacts.devtoolsLogs[passName];

const traceData=Object.assign({},trace);
if(audits){
const evts=new Metrics(traceData.traceEvents,audits).generateFakeEvents();
traceData.traceEvents=traceData.traceEvents.concat(evts);
}

assets.push({
passName,
traceData,
devtoolsLog});

}

return assets;
}







function*traceJsonGenerator(traceData){
const EVENTS_PER_ITERATION=500;
const keys=Object.keys(traceData);

yield'{\n';


yield'"traceEvents": [\n';
if(traceData.traceEvents.length>0){
const eventsIterator=traceData.traceEvents[Symbol.iterator]();

const firstEvent=eventsIterator.next().value;
yield`  ${JSON.stringify(firstEvent)}`;

let eventsRemaining=EVENTS_PER_ITERATION;
let eventsJSON='';
for(const event of eventsIterator){
eventsJSON+=`,\n  ${JSON.stringify(event)}`;
eventsRemaining--;
if(eventsRemaining===0){
yield eventsJSON;
eventsRemaining=EVENTS_PER_ITERATION;
eventsJSON='';
}
}
yield eventsJSON;
}
yield'\n]';


if(keys.length>1){
for(const key of keys){
if(key==='traceEvents')continue;

yield`,\n"${key}": ${JSON.stringify(traceData[key],null,2)}`;
}
}

yield'}\n';
}







function saveTrace(traceData,traceFilename){
return new Promise((resolve,reject)=>{
const traceIter=traceJsonGenerator(traceData);


const traceStream=new stream.Readable({
read(){
const next=traceIter.next();
this.push(next.done?null:next.value);
}});


const writeStream=fs.createWriteStream(traceFilename);
writeStream.on('finish',resolve);
writeStream.on('error',reject);

traceStream.pipe(writeStream);
});
}





async function saveLanternDebugTraces(pathWithBasename){
if(!process.env.LANTERN_DEBUG)return;

for(const[label,nodeTimings]of Simulator.ALL_NODE_TIMINGS){
if(lanternTraceSaver.simulationNamesToIgnore.includes(label))continue;

const traceFilename=`${pathWithBasename}-${label}${traceSuffix}`;
await saveTrace(lanternTraceSaver.convertNodeTimingsToTrace(nodeTimings),traceFilename);
log.log('saveAssets',`${label} lantern trace file streamed to disk: ${traceFilename}`);
}
}








async function saveAssets(artifacts,audits,pathWithBasename){
const allAssets=await prepareAssets(artifacts,audits);
const saveAll=allAssets.map(async(passAssets,index)=>{
const devtoolsLogFilename=`${pathWithBasename}-${index}${devtoolsLogSuffix}`;
fs.writeFileSync(devtoolsLogFilename,JSON.stringify(passAssets.devtoolsLog,null,2));
log.log('saveAssets','devtools log saved to disk: '+devtoolsLogFilename);

const streamTraceFilename=`${pathWithBasename}-${index}${traceSuffix}`;
log.log('saveAssets','streaming trace file to disk: '+streamTraceFilename);
await saveTrace(passAssets.traceData,streamTraceFilename);
log.log('saveAssets','trace file streamed to disk: '+streamTraceFilename);
});

await Promise.all(saveAll);
await saveLanternDebugTraces(pathWithBasename);
}






async function saveLanternNetworkData(devtoolsLog,outputPath){


const context={computedCache:new Map()};
const networkAnalysis=await NetworkAnalysisComputed.request(devtoolsLog,context);
const lanternData=LoadSimulatorComputed.convertAnalysisToSaveableLanternData(networkAnalysis);

fs.writeFileSync(outputPath,JSON.stringify(lanternData));
}

module.exports={
saveArtifacts,
loadArtifacts,
saveAssets,
prepareAssets,
saveTrace,
saveLanternNetworkData,
stringifyReplacer};


}).call(this,require('_process'));
},{"../computed/load-simulator.js":11,"../computed/network-analysis.js":38,"../lib/lh-error.js":82,"./dependency-graph/simulator/simulator.js":74,"./lantern-trace-saver.js":80,"./traces/pwmetrics-events.js":97,"_process":170,"fs":113,"lighthouse-logger":135,"path":168,"rimraf":113,"stream":195}],65:[function(require,module,exports){





'use strict';



const Common={
console};


module.exports=Common;

},{}],66:[function(require,module,exports){





'use strict';

const SDK={
TextSourceMap:require('./generated/SourceMap.js')};









function extendArray(array){

if(array.lowerBound)return;


array.lowerBound=lowerBound.bind(array);

array.upperBound=upperBound.bind(array);

array.slice=function(start,end){
const retVal=Array.prototype.slice.call(array,start,end);
extendArray(retVal);
return retVal;
};

array.filter=function(fn){
const retVal=Array.prototype.filter.call(array,fn);
extendArray(retVal);
return retVal;
};
}

const originalMappings=SDK.TextSourceMap.prototype.mappings;
SDK.TextSourceMap.prototype.mappings=function(){
const mappings=originalMappings.call(this);
extendArray(mappings);
return mappings;
};

const originalReversedMappings=SDK.TextSourceMap.prototype._reversedMappings;
SDK.TextSourceMap.prototype._reversedMappings=function(sourceURL){
const mappings=originalReversedMappings.call(this,sourceURL);
extendArray(mappings);
return mappings;
};






















function upperBound(object,comparator,left,right){

function defaultComparator(a,b){
return a<b?-1:a>b?1:0;
}
comparator=comparator||defaultComparator;
let l=left||0;
let r=right!==undefined?right:this.length;
while(l<r){
const m=l+r>>1;
if(comparator(object,this[m])>=0){
l=m+1;
}else{
r=m;
}
}
return r;
}

















function lowerBound(object,comparator,left,right){

function defaultComparator(a,b){
return a<b?-1:a>b?1:0;
}
comparator=comparator||defaultComparator;
let l=left||0;
let r=right!==undefined?right:this.length;
while(l<r){
const m=l+r>>1;
if(comparator(object,this[m])>0){
l=m+1;
}else{
r=m;
}
}
return r;
}



SDK.TextSourceMap.prototype.computeLastGeneratedColumns=function(){
const mappings=this.mappings();

if(mappings.length&&typeof mappings[0].lastColumnNumber!=='undefined')return;

for(let i=0;i<mappings.length-1;i++){
const mapping=mappings[i];
const nextMapping=mappings[i+1];
if(mapping.lineNumber===nextMapping.lineNumber){

mapping.lastColumnNumber=nextMapping.columnNumber;
}
}
};

module.exports=SDK;

},{"./generated/SourceMap.js":67}],67:[function(require,module,exports){


const Common=require('../Common.js');
"use strict";





























Object.defineProperty(exports,"__esModule",{value:true});



class SourceMap{



compiledURL(){
}



url(){
}



sourceURLs(){
}




embeddedContentByURL(sourceURL){
}





findEntry(lineNumber,columnNumber){
}






sourceLineMapping(sourceURL,lineNumber,columnNumber){
}



mappings(){
}
dispose(){
}}





class SourceMapV3{
constructor(){
this.version;
this.file;
this.sources;
this.sections;
this.mappings;
this.sourceRoot;
this.names;
}}




SourceMapV3.Section=class{
constructor(){
this.map;
this.offset;
}};




SourceMapV3.Offset=class{
constructor(){
this.line;
this.column;
}};




class SourceMapEntry{








constructor(lineNumber,columnNumber,sourceURL,sourceLineNumber,sourceColumnNumber,name){
this.lineNumber=lineNumber;
this.columnNumber=columnNumber;
this.sourceURL=sourceURL;
this.sourceLineNumber=sourceLineNumber;
this.sourceColumnNumber=sourceColumnNumber;
this.name=name;
}





static compare(entry1,entry2){
if(entry1.lineNumber!==entry2.lineNumber){
return entry1.lineNumber-entry2.lineNumber;
}
return entry1.columnNumber-entry2.columnNumber;
}}








class TextSourceMap{







constructor(compiledURL,sourceMappingURL,payload){
if(!TextSourceMap._base64Map){
const base64Digits='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
TextSourceMap._base64Map={};
for(let i=0;i<base64Digits.length;++i){
TextSourceMap._base64Map[base64Digits.charAt(i)]=i;
}
}
this._json=payload;
this._compiledURL=compiledURL;
this._sourceMappingURL=sourceMappingURL;
this._baseURL=sourceMappingURL.startsWith('data:')?compiledURL:sourceMappingURL;

this._mappings=null;

this._sourceInfos=new Map();
if(this._json.sections){
const sectionWithURL=!!this._json.sections.find(section=>!!section.url);
if(sectionWithURL){
Common.console.warn(`SourceMap "${sourceMappingURL}" contains unsupported "URL" field in one of its sections.`);
}
}
this._eachSection(this._parseSources.bind(this));
}




compiledURL(){
return this._compiledURL;
}




url(){
return this._sourceMappingURL;
}




sourceURLs(){
return this._sourceInfos.keysArray();
}





embeddedContentByURL(sourceURL){
if(!this._sourceInfos.has(sourceURL)){
return null;
}
return this._sourceInfos.get(sourceURL).content;
}






findEntry(lineNumber,columnNumber){
const mappings=this.mappings();
const index=mappings.upperBound(undefined,(unused,entry)=>lineNumber-entry.lineNumber||columnNumber-entry.columnNumber);
return index?mappings[index-1]:null;
}







sourceLineMapping(sourceURL,lineNumber,columnNumber){
const mappings=this._reversedMappings(sourceURL);
const first=mappings.lowerBound(lineNumber,lineComparator);
const last=mappings.upperBound(lineNumber,lineComparator);
if(first>=mappings.length||mappings[first].sourceLineNumber!==lineNumber){
return null;
}
const columnMappings=mappings.slice(first,last);
if(!columnMappings.length){
return null;
}
const index=columnMappings.lowerBound(columnNumber,(columnNumber,mapping)=>columnNumber-mapping.sourceColumnNumber);
return index>=columnMappings.length?columnMappings[columnMappings.length-1]:columnMappings[index];





function lineComparator(lineNumber,mapping){
return lineNumber-mapping.sourceLineNumber;
}
}






findReverseEntries(sourceURL,lineNumber,columnNumber){
const mappings=this._reversedMappings(sourceURL);
const endIndex=mappings.upperBound(undefined,(unused,entry)=>lineNumber-entry.sourceLineNumber||columnNumber-entry.sourceColumnNumber);
let startIndex=endIndex;
while(startIndex>0&&mappings[startIndex-1].sourceLineNumber===mappings[endIndex-1].sourceLineNumber&&
mappings[startIndex-1].sourceColumnNumber===mappings[endIndex-1].sourceColumnNumber){
--startIndex;
}
return mappings.slice(startIndex,endIndex);
}




mappings(){
if(this._mappings===null){
this._mappings=[];
this._eachSection(this._parseMap.bind(this));
this._json=null;
}
return this._mappings;
}




_reversedMappings(sourceURL){
if(!this._sourceInfos.has(sourceURL)){
return[];
}
const mappings=this.mappings();
const info=this._sourceInfos.get(sourceURL);
if(info.reverseMappings===null){
info.reverseMappings=mappings.filter(mapping=>mapping.sourceURL===sourceURL).sort(sourceMappingComparator);
}
return info.reverseMappings;





function sourceMappingComparator(a,b){
if(a.sourceLineNumber!==b.sourceLineNumber){
return a.sourceLineNumber-b.sourceLineNumber;
}
if(a.sourceColumnNumber!==b.sourceColumnNumber){
return a.sourceColumnNumber-b.sourceColumnNumber;
}
if(a.lineNumber!==b.lineNumber){
return a.lineNumber-b.lineNumber;
}
return a.columnNumber-b.columnNumber;
}
}



_eachSection(callback){
if(!this._json.sections){
callback(this._json,0,0);
return;
}
for(const section of this._json.sections){
callback(section.map,section.offset.line,section.offset.column);
}
}



_parseSources(sourceMap){
const sourcesList=[];
let sourceRoot=sourceMap.sourceRoot||'';
if(sourceRoot&&!sourceRoot.endsWith('/')){
sourceRoot+='/';
}
for(let i=0;i<sourceMap.sources.length;++i){
const href=sourceRoot+sourceMap.sources[i];
let url=''||href;
const source=sourceMap.sourcesContent&&sourceMap.sourcesContent[i];
if(url===this._compiledURL&&source){
}
this._sourceInfos.set(url,new TextSourceMap.SourceInfo(source,null));
sourcesList.push(url);
}
sourceMap[TextSourceMap._sourcesListSymbol]=sourcesList;
}





_parseMap(map,lineNumber,columnNumber){
let sourceIndex=0;
let sourceLineNumber=0;
let sourceColumnNumber=0;
let nameIndex=0;
const sources=map[TextSourceMap._sourcesListSymbol];
const names=map.names||[];
const stringCharIterator=new TextSourceMap.StringCharIterator(map.mappings);
let sourceURL=sources[sourceIndex];
while(true){
if(stringCharIterator.peek()===','){
stringCharIterator.next();
}else
{
while(stringCharIterator.peek()===';'){
lineNumber+=1;
columnNumber=0;
stringCharIterator.next();
}
if(!stringCharIterator.hasNext()){
break;
}
}
columnNumber+=this._decodeVLQ(stringCharIterator);
if(!stringCharIterator.hasNext()||this._isSeparator(stringCharIterator.peek())){
this._mappings.push(new SourceMapEntry(lineNumber,columnNumber));
continue;
}
const sourceIndexDelta=this._decodeVLQ(stringCharIterator);
if(sourceIndexDelta){
sourceIndex+=sourceIndexDelta;
sourceURL=sources[sourceIndex];
}
sourceLineNumber+=this._decodeVLQ(stringCharIterator);
sourceColumnNumber+=this._decodeVLQ(stringCharIterator);
if(!stringCharIterator.hasNext()||this._isSeparator(stringCharIterator.peek())){
this._mappings.push(new SourceMapEntry(lineNumber,columnNumber,sourceURL,sourceLineNumber,sourceColumnNumber));
continue;
}
nameIndex+=this._decodeVLQ(stringCharIterator);
this._mappings.push(new SourceMapEntry(lineNumber,columnNumber,sourceURL,sourceLineNumber,sourceColumnNumber,names[nameIndex]));
}

this._mappings.sort(SourceMapEntry.compare);
}




_isSeparator(char){
return char===','||char===';';
}




_decodeVLQ(stringCharIterator){

let result=0;
let shift=0;
let digit;
do{
digit=TextSourceMap._base64Map[stringCharIterator.next()];
result+=(digit&TextSourceMap._VLQ_BASE_MASK)<<shift;
shift+=TextSourceMap._VLQ_BASE_SHIFT;
}while(digit&TextSourceMap._VLQ_CONTINUATION_MASK);

const negative=result&1;
result>>=1;
return negative?-result:result;
}





reverseMapTextRange(url,textRange){





function comparator(position,mapping){
if(position.lineNumber!==mapping.sourceLineNumber){
return position.lineNumber-mapping.sourceLineNumber;
}
return position.columnNumber-mapping.sourceColumnNumber;
}
const mappings=this._reversedMappings(url);
const startIndex=mappings.lowerBound({lineNumber:textRange.startLine,columnNumber:textRange.startColumn},comparator);
const endIndex=mappings.upperBound({lineNumber:textRange.endLine,columnNumber:textRange.endColumn},comparator);
const startMapping=mappings[startIndex];
const endMapping=mappings[endIndex];
return new TextUtils.TextRange(startMapping.lineNumber,startMapping.columnNumber,endMapping.lineNumber,endMapping.columnNumber);
}



dispose(){
}}


TextSourceMap._VLQ_BASE_SHIFT=5;
TextSourceMap._VLQ_BASE_MASK=(1<<5)-1;
TextSourceMap._VLQ_CONTINUATION_MASK=1<<5;



TextSourceMap.StringCharIterator=class{



constructor(string){
this._string=string;
this._position=0;
}



next(){
return this._string.charAt(this._position++);
}



peek(){
return this._string.charAt(this._position);
}



hasNext(){
return this._position<this._string.length;
}};




TextSourceMap.SourceInfo=class{




constructor(content,reverseMappings){
this.content=content;
this.reverseMappings=reverseMappings;
}};

TextSourceMap._sourcesListSymbol=Symbol('sourcesList');




module.exports=TextSourceMap;
},{"../Common.js":65}],68:[function(require,module,exports){





'use strict';



















class BaseNode{



constructor(id){
this._id=id;
this._isMainDocument=false;

this._dependents=[];

this._dependencies=[];
}




get id(){
return this._id;
}




get type(){
throw new Error('Unimplemented');
}




get startTime(){
throw new Error('Unimplemented');
}




get endTime(){
throw new Error('Unimplemented');
}




setIsMainDocument(value){
this._isMainDocument=value;
}




isMainDocument(){
return this._isMainDocument;
}




getDependents(){
return this._dependents.slice();
}




getNumberOfDependents(){
return this._dependents.length;
}




getDependencies(){
return this._dependencies.slice();
}




getNumberOfDependencies(){
return this._dependencies.length;
}




getRootNode(){
let rootNode=this;
while(rootNode._dependencies.length){
rootNode=rootNode._dependencies[0];
}

return rootNode;
}




addDependent(node){
node.addDependency(this);
}




addDependency(node){

if(node===this)throw new Error('Cannot add dependency on itself');

if(this._dependencies.includes(node)){
return;
}

node._dependents.push(this);
this._dependencies.push(node);
}




removeDependent(node){
node.removeDependency(this);
}




removeDependency(node){
if(!this._dependencies.includes(node)){
return;
}

const thisIndex=node._dependents.indexOf(this);
node._dependents.splice(thisIndex,1);
this._dependencies.splice(this._dependencies.indexOf(node),1);
}

removeAllDependencies(){
for(const node of this._dependencies.slice()){
this.removeDependency(node);
}
}





cloneWithoutRelationships(){
const node=new BaseNode(this.id);
node.setIsMainDocument(this._isMainDocument);
return node;
}








cloneWithRelationships(predicate){
const rootNode=this.getRootNode();


const idsToIncludedClones=new Map();


rootNode.traverse(node=>{
if(idsToIncludedClones.has(node.id))return;

if(predicate===undefined){

idsToIncludedClones.set(node.id,node.cloneWithoutRelationships());
return;
}

if(predicate(node)){

node.traverse(
node=>idsToIncludedClones.set(node.id,node.cloneWithoutRelationships()),

node=>node._dependencies.filter(parent=>!idsToIncludedClones.has(parent.id)));

}
});


rootNode.traverse(originalNode=>{
const clonedNode=idsToIncludedClones.get(originalNode.id);
if(!clonedNode)return;

for(const dependency of originalNode._dependencies){
const clonedDependency=idsToIncludedClones.get(dependency.id);
if(!clonedDependency)throw new Error('Dependency somehow not cloned');
clonedNode.addDependency(clonedDependency);
}
});

const clonedThisNode=idsToIncludedClones.get(this.id);
if(!clonedThisNode)throw new Error('Cloned graph missing node');
return clonedThisNode;
}











traverse(callback,getNextNodes){
if(!getNextNodes){
getNextNodes=node=>node.getDependents();
}



const queue=[[this]];
const visited=new Set([this.id]);

while(queue.length){


const traversalPath=queue.shift();
const node=traversalPath[0];
callback(node,traversalPath);

for(const nextNode of getNextNodes(node)){
if(visited.has(nextNode.id))continue;
visited.add(nextNode.id);

queue.push([nextNode,...traversalPath]);
}
}
}







static hasCycle(node,direction='both'){

if(direction==='both'){
return BaseNode.hasCycle(node,'dependents')||BaseNode.hasCycle(node,'dependencies');
}

const visited=new Set();

const currentPath=[];
const toVisit=[node];
const depthAdded=new Map([[node,0]]);


while(toVisit.length){



const currentNode=toVisit.pop();


if(currentPath.includes(currentNode))return true;

if(visited.has(currentNode))continue;



while(currentPath.length>depthAdded.get(currentNode))currentPath.pop();


visited.add(currentNode);
currentPath.push(currentNode);


const nodesToExplore=direction==='dependents'?
currentNode._dependents:
currentNode._dependencies;
for(const nextNode of nodesToExplore){
if(toVisit.includes(nextNode))continue;
toVisit.push(nextNode);
depthAdded.set(nextNode,currentPath.length);
}
}

return false;
}}


BaseNode.TYPES={
NETWORK:'network',
CPU:'cpu'};


module.exports=BaseNode;

},{}],69:[function(require,module,exports){





'use strict';

const BaseNode=require('./base-node.js');

class CPUNode extends BaseNode{




constructor(parentEvent,childEvents=[]){
const nodeId=`${parentEvent.tid}.${parentEvent.ts}`;
super(nodeId);

this._event=parentEvent;
this._childEvents=childEvents;
}

get type(){
return BaseNode.TYPES.CPU;
}




get startTime(){
return this._event.ts;
}




get endTime(){
return this._event.ts+this._event.dur;
}




get event(){
return this._event;
}




get childEvents(){
return this._childEvents;
}





didPerformLayout(){
return this._childEvents.some(evt=>evt.name==='Layout');
}




getEvaluateScriptURLs(){

const urls=new Set();
for(const event of this._childEvents){
if(event.name!=='EvaluateScript')continue;
if(!event.args.data||!event.args.data.url)continue;
urls.add(event.args.data.url);
}

return urls;
}




cloneWithoutRelationships(){
return new CPUNode(this._event,this._childEvents);
}}


module.exports=CPUNode;

},{"./base-node.js":68}],70:[function(require,module,exports){





'use strict';

const BaseNode=require('./base-node.js');
const NetworkRequest=require('../network-request.js');
const URL=require('../url-shim.js');

class NetworkNode extends BaseNode{



constructor(networkRecord){
super(networkRecord.requestId);

this._record=networkRecord;
}

get type(){
return BaseNode.TYPES.NETWORK;
}




get startTime(){
return this._record.startTime*1000*1000;
}




get endTime(){
return this._record.endTime*1000*1000;
}




get record(){
return this._record;
}




get initiatorType(){
return this._record.initiator&&this._record.initiator.type;
}




get fromDiskCache(){
return!!this._record.fromDiskCache;
}




get isNonNetworkProtocol(){
return URL.NON_NETWORK_PROTOCOLS.includes(this._record.protocol);
}







get isConnectionless(){
return this.fromDiskCache||this.isNonNetworkProtocol;
}




hasRenderBlockingPriority(){
const priority=this._record.priority;
const isScript=this._record.resourceType===NetworkRequest.TYPES.Script;
const isDocument=this._record.resourceType===NetworkRequest.TYPES.Document;
const isBlockingScript=priority==='High'&&isScript;
const isBlockingHtmlImport=priority==='High'&&isDocument;
return priority==='VeryHigh'||isBlockingScript||isBlockingHtmlImport;
}




cloneWithoutRelationships(){
const node=new NetworkNode(this._record);
node.setIsMainDocument(this._isMainDocument);
return node;
}}


module.exports=NetworkNode;

},{"../network-request.js":86,"../url-shim.js":"url","./base-node.js":68}],71:[function(require,module,exports){





'use strict';

const NetworkAnalyzer=require('./network-analyzer.js');
const TcpConnection=require('./tcp-connection.js');

const DEFAULT_SERVER_RESPONSE_TIME=30;
const TLS_SCHEMES=['https','wss'];



const CONNECTIONS_PER_ORIGIN=6;

module.exports=class ConnectionPool{




constructor(records,options){
this._options=options;

this._records=records;

this._connectionsByOrigin=new Map();

this._connectionsByRecord=new Map();
this._connectionsInUse=new Set();
this._connectionReusedByRequestId=NetworkAnalyzer.estimateIfConnectionWasReused(records,{
forceCoarseEstimates:true});


this._initializeConnections();
}




connectionsInUse(){
return Array.from(this._connectionsInUse);
}

_initializeConnections(){
const connectionReused=this._connectionReusedByRequestId;
const additionalRttByOrigin=this._options.additionalRttByOrigin;
const serverResponseTimeByOrigin=this._options.serverResponseTimeByOrigin;

const recordsByOrigin=NetworkAnalyzer.groupByOrigin(this._records);
for(const[origin,records]of recordsByOrigin.entries()){
const connections=[];
const additionalRtt=additionalRttByOrigin.get(origin)||0;
const responseTime=serverResponseTimeByOrigin.get(origin)||DEFAULT_SERVER_RESPONSE_TIME;

for(const record of records){
if(connectionReused.get(record.requestId))continue;

const isTLS=TLS_SCHEMES.includes(record.parsedURL.scheme);
const isH2=record.protocol==='h2';
const connection=new TcpConnection(
this._options.rtt+additionalRtt,
this._options.throughput,
responseTime,
isTLS,
isH2);


connections.push(connection);
}

if(!connections.length){
throw new Error(`Could not find a connection for origin: ${origin}`);
}


while(connections.length<CONNECTIONS_PER_ORIGIN)connections.push(connections[0].clone());

this._connectionsByOrigin.set(origin,connections);
}
}





_findAvailableConnectionWithLargestCongestionWindow(connections,options){
const{ignoreConnectionReused,observedConnectionWasReused}=options;


let maxConnection=null;
for(let i=0;i<connections.length;i++){
const connection=connections[i];





if(!ignoreConnectionReused&&connection._warmed!==observedConnectionWasReused){
continue;
}


if(this._connectionsInUse.has(connection)){
continue;
}


const currentMax=maxConnection&&maxConnection.congestionWindow||-Infinity;
if(connection.congestionWindow>currentMax)maxConnection=connection;
}

return maxConnection;
}













acquire(record,options={}){
if(this._connectionsByRecord.has(record))throw new Error('Record already has a connection');

const origin=record.parsedURL.securityOrigin;
const observedConnectionWasReused=!!this._connectionReusedByRequestId.get(record.requestId);
const connections=this._connectionsByOrigin.get(origin)||[];
const connectionToUse=this._findAvailableConnectionWithLargestCongestionWindow(connections,{
ignoreConnectionReused:options.ignoreConnectionReused,
observedConnectionWasReused});


if(!connectionToUse)return null;

this._connectionsInUse.add(connectionToUse);
this._connectionsByRecord.set(record,connectionToUse);
return connectionToUse;
}








acquireActiveConnectionFromRecord(record){
const activeConnection=this._connectionsByRecord.get(record);
if(!activeConnection)throw new Error('Could not find an active connection for record');

return activeConnection;
}




release(record){
const connection=this._connectionsByRecord.get(record);
this._connectionsByRecord.delete(record);
this._connectionsInUse.delete(connection);
}};


},{"./network-analyzer.js":73,"./tcp-connection.js":75}],72:[function(require,module,exports){





'use strict';






const DNS_RESOLUTION_RTT_MULTIPLIER=2;

class DNSCache{



constructor({rtt}){
this._rtt=rtt;


this._resolvedDomainNames=new Map();
}






getTimeUntilResolution(request,options){
const{requestedAt=0,shouldUpdateCache=false}=options||{};

const domain=request.parsedURL.host;
const cacheEntry=this._resolvedDomainNames.get(domain);
let timeUntilResolved=this._rtt*DNSCache.RTT_MULTIPLIER;
if(cacheEntry){
const timeUntilCachedIsResolved=Math.max(cacheEntry.resolvedAt-requestedAt,0);
timeUntilResolved=Math.min(timeUntilCachedIsResolved,timeUntilResolved);
}

const resolvedAt=requestedAt+timeUntilResolved;
if(shouldUpdateCache)this._updateCacheResolvedAtIfNeeded(request,resolvedAt);

return timeUntilResolved;
}





_updateCacheResolvedAtIfNeeded(request,resolvedAt){
const domain=request.parsedURL.host;
const cacheEntry=this._resolvedDomainNames.get(domain)||{resolvedAt};
cacheEntry.resolvedAt=Math.min(cacheEntry.resolvedAt,resolvedAt);
this._resolvedDomainNames.set(domain,cacheEntry);
}








setResolvedAt(domain,resolvedAt){
this._resolvedDomainNames.set(domain,{resolvedAt});
}}


DNSCache.RTT_MULTIPLIER=DNS_RESOLUTION_RTT_MULTIPLIER;

module.exports=DNSCache;

},{}],73:[function(require,module,exports){





'use strict';

const INITIAL_CWD=14*1024;
const NetworkRequest=require('../../network-request.js');
const URL=require('../../url-shim.js');


const DEFAULT_SERVER_RESPONSE_PERCENTAGE=0.4;






const SERVER_RESPONSE_PERCENTAGE_OF_TTFB={
Document:0.9,
XHR:0.9,
Fetch:0.9};


class NetworkAnalyzer{



static get SUMMARY(){
return'__SUMMARY__';
}





static groupByOrigin(records){
const grouped=new Map();
records.forEach(item=>{
const key=item.parsedURL.securityOrigin;
const group=grouped.get(key)||[];
group.push(item);
grouped.set(key,group);
});
return grouped;
}





static getSummary(values){
values.sort((a,b)=>a-b);

return{
min:values[0],
max:values[values.length-1],
avg:values.reduce((a,b)=>a+b,0)/values.length,
median:values[Math.floor((values.length-1)/2)]};

}





static summarize(values){
const summaryByKey=new Map();
const allEstimates=[];
for(const[key,estimates]of values){
summaryByKey.set(key,NetworkAnalyzer.getSummary(estimates));
allEstimates.push(...estimates);
}

summaryByKey.set(NetworkAnalyzer.SUMMARY,NetworkAnalyzer.getSummary(allEstimates));
return summaryByKey;
}








static _estimateValueByOrigin(records,iteratee){
const connectionWasReused=NetworkAnalyzer.estimateIfConnectionWasReused(records);
const groupedByOrigin=NetworkAnalyzer.groupByOrigin(records);

const estimates=new Map();
for(const[origin,originRecords]of groupedByOrigin.entries()){

let originEstimates=[];

for(const record of originRecords){
const timing=record.timing;
if(!timing)continue;

const value=iteratee({
record,
timing,
connectionReused:connectionWasReused.get(record.requestId)});

if(typeof value!=='undefined'){
originEstimates=originEstimates.concat(value);
}
}

if(!originEstimates.length)continue;
estimates.set(origin,originEstimates);
}

return estimates;
}








static _estimateRTTByOriginViaTCPTiming(records){
return NetworkAnalyzer._estimateValueByOrigin(records,({timing,connectionReused})=>{
if(connectionReused)return;



if(timing.sslStart>0&&timing.sslEnd>0){
return[timing.connectEnd-timing.sslStart,timing.sslStart-timing.connectStart];
}else if(timing.connectStart>0&&timing.connectEnd>0){
return timing.connectEnd-timing.connectStart;
}
});
}









static _estimateRTTByOriginViaDownloadTiming(records){
return NetworkAnalyzer._estimateValueByOrigin(records,({record,timing,connectionReused})=>{
if(connectionReused)return;

if(record.transferSize<=INITIAL_CWD)return;
if(!Number.isFinite(timing.receiveHeadersEnd)||timing.receiveHeadersEnd<0)return;


const totalTime=(record.endTime-record.startTime)*1000;
const downloadTimeAfterFirstByte=totalTime-timing.receiveHeadersEnd;
const numberOfRoundTrips=Math.log2(record.transferSize/INITIAL_CWD);



if(numberOfRoundTrips>5)return;
return downloadTimeAfterFirstByte/numberOfRoundTrips;
});
}










static _estimateRTTByOriginViaSendStartTiming(records){
return NetworkAnalyzer._estimateValueByOrigin(records,({record,timing,connectionReused})=>{
if(connectionReused)return;
if(!Number.isFinite(timing.sendStart)||timing.sendStart<0)return;



let roundTrips=2;
if(record.parsedURL.scheme==='https')roundTrips+=1;
return timing.sendStart/roundTrips;
});
}










static _estimateRTTByOriginViaHeadersEndTiming(records){
return NetworkAnalyzer._estimateValueByOrigin(records,({record,timing,connectionReused})=>{
if(!Number.isFinite(timing.receiveHeadersEnd)||timing.receiveHeadersEnd<0)return;
if(!record.resourceType)return;

const serverResponseTimePercentage=SERVER_RESPONSE_PERCENTAGE_OF_TTFB[record.resourceType]||
DEFAULT_SERVER_RESPONSE_PERCENTAGE;
const estimatedServerResponseTime=timing.receiveHeadersEnd*serverResponseTimePercentage;



let roundTrips=1;



if(!connectionReused){
roundTrips+=1;
if(record.parsedURL.scheme==='https')roundTrips+=1;
roundTrips+=1;
}


return Math.max((timing.receiveHeadersEnd-estimatedServerResponseTime)/roundTrips,3);
});
}








static _estimateResponseTimeByOrigin(records,rttByOrigin){
return NetworkAnalyzer._estimateValueByOrigin(records,({record,timing})=>{
if(!Number.isFinite(timing.receiveHeadersEnd)||timing.receiveHeadersEnd<0)return;
if(!Number.isFinite(timing.sendEnd)||timing.sendEnd<0)return;

const ttfb=timing.receiveHeadersEnd-timing.sendEnd;
const origin=record.parsedURL.securityOrigin;
const rtt=rttByOrigin.get(origin)||rttByOrigin.get(NetworkAnalyzer.SUMMARY)||0;
return Math.max(ttfb-rtt,0);
});
}





static canTrustConnectionInformation(records){
const connectionIdWasStarted=new Map();
for(const record of records){
const started=connectionIdWasStarted.get(record.connectionId)||!record.connectionReused;
connectionIdWasStarted.set(record.connectionId,started);
}


if(connectionIdWasStarted.size<=1)return false;

return Array.from(connectionIdWasStarted.values()).every(started=>started);
}









static estimateIfConnectionWasReused(records,options){
const{forceCoarseEstimates=false}=options||{};


if(!forceCoarseEstimates&&NetworkAnalyzer.canTrustConnectionInformation(records)){

return new Map(records.map(record=>[record.requestId,!!record.connectionReused]));
}





const connectionWasReused=new Map();
const groupedByOrigin=NetworkAnalyzer.groupByOrigin(records);
for(const[_,originRecords]of groupedByOrigin.entries()){
const earliestReusePossible=originRecords.
map(record=>record.endTime).
reduce((a,b)=>Math.min(a,b),Infinity);

for(const record of originRecords){
connectionWasReused.set(
record.requestId,
record.startTime>=earliestReusePossible||record.protocol==='h2');

}

const firstRecord=originRecords.reduce((a,b)=>a.startTime>b.startTime?b:a);
connectionWasReused.set(firstRecord.requestId,false);
}

return connectionWasReused;
}










static estimateRTTByOrigin(records,options){
const{
forceCoarseEstimates=false,


coarseEstimateMultiplier=0.3,
useDownloadEstimates=true,
useSendStartEstimates=true,
useHeadersEndEstimates=true}=
options||{};

let estimatesByOrigin=NetworkAnalyzer._estimateRTTByOriginViaTCPTiming(records);
if(!estimatesByOrigin.size||forceCoarseEstimates){
estimatesByOrigin=new Map();
const estimatesViaDownload=NetworkAnalyzer._estimateRTTByOriginViaDownloadTiming(records);
const estimatesViaSendStart=NetworkAnalyzer._estimateRTTByOriginViaSendStartTiming(records);
const estimatesViaTTFB=NetworkAnalyzer._estimateRTTByOriginViaHeadersEndTiming(records);

for(const[origin,estimates]of estimatesViaDownload.entries()){
if(!useDownloadEstimates)continue;
estimatesByOrigin.set(origin,estimates);
}

for(const[origin,estimates]of estimatesViaSendStart.entries()){
if(!useSendStartEstimates)continue;
const existing=estimatesByOrigin.get(origin)||[];
estimatesByOrigin.set(origin,existing.concat(estimates));
}

for(const[origin,estimates]of estimatesViaTTFB.entries()){
if(!useHeadersEndEstimates)continue;
const existing=estimatesByOrigin.get(origin)||[];
estimatesByOrigin.set(origin,existing.concat(estimates));
}

for(const estimates of estimatesByOrigin.values()){
estimates.forEach((x,i)=>estimates[i]=x*coarseEstimateMultiplier);
}
}

if(!estimatesByOrigin.size)throw new Error('No timing information available');
return NetworkAnalyzer.summarize(estimatesByOrigin);
}









static estimateServerResponseTimeByOrigin(records,options){
let rttByOrigin=(options||{}).rttByOrigin;
if(!rttByOrigin){

rttByOrigin=new Map();

const rttSummaryByOrigin=NetworkAnalyzer.estimateRTTByOrigin(records,options);
for(const[origin,summary]of rttSummaryByOrigin.entries()){
rttByOrigin.set(origin,summary.min);
}
}

const estimatesByOrigin=NetworkAnalyzer._estimateResponseTimeByOrigin(records,rttByOrigin);
return NetworkAnalyzer.summarize(estimatesByOrigin);
}










static estimateThroughput(networkRecords){
let totalBytes=0;




const timeBoundaries=networkRecords.reduce((boundaries,record)=>{
const scheme=record.parsedURL&&record.parsedURL.scheme;


if(scheme==='data'||record.failed||!record.finished||
record.statusCode>300||!record.transferSize){
return boundaries;
}


totalBytes+=record.transferSize;
boundaries.push({time:record.responseReceivedTime,isStart:true});
boundaries.push({time:record.endTime,isStart:false});
return boundaries;
},[]).sort((a,b)=>a.time-b.time);

if(!timeBoundaries.length){
return Infinity;
}

let inflight=0;
let currentStart=0;
let totalDuration=0;

timeBoundaries.forEach(boundary=>{
if(boundary.isStart){
if(inflight===0){

currentStart=boundary.time;
}
inflight++;
}else{
inflight--;
if(inflight===0){

totalDuration+=boundary.time-currentStart;
}
}
});

return totalBytes*8/totalDuration;
}






static findMainDocument(records,finalURL){

if(finalURL){

const mainResource=records.find(request=>finalURL.startsWith(request.url)&&
URL.equalWithExcludedFragments(request.url,finalURL));
if(mainResource)return mainResource;

}

const documentRequests=records.filter(record=>record.resourceType===
NetworkRequest.TYPES.Document);
if(!documentRequests.length)throw new Error('Unable to identify the main resource');

return documentRequests.reduce((min,r)=>r.startTime<min.startTime?r:min);
}}


module.exports=NetworkAnalyzer;


















},{"../../network-request.js":86,"../../url-shim.js":"url"}],74:[function(require,module,exports){





'use strict';

const BaseNode=require('../base-node.js');
const TcpConnection=require('./tcp-connection.js');
const ConnectionPool=require('./connection-pool.js');
const DNSCache=require('./dns-cache.js');
const mobileSlow4G=require('../../../config/constants.js').throttling.mobileSlow4G;






const DEFAULT_MAXIMUM_CONCURRENT_REQUESTS=10;

const DEFAULT_LAYOUT_TASK_MULTIPLIER=0.5;

const DEFAULT_MAXIMUM_CPU_TASK_DURATION=10000;

const NodeState={
NotReadyToStart:0,
ReadyToStart:1,
InProgress:2,
Complete:3};



const PriorityStartTimePenalty={
VeryHigh:0,
High:0.25,
Medium:0.5,
Low:1,
VeryLow:2};



const ALL_SIMULATION_NODE_TIMINGS=new Map();

class Simulator{



constructor(options){

this._options=Object.assign(
{
rtt:mobileSlow4G.rttMs,
throughput:mobileSlow4G.throughputKbps*1024,
maximumConcurrentRequests:DEFAULT_MAXIMUM_CONCURRENT_REQUESTS,
cpuSlowdownMultiplier:mobileSlow4G.cpuSlowdownMultiplier,
layoutTaskMultiplier:DEFAULT_LAYOUT_TASK_MULTIPLIER,
additionalRttByOrigin:new Map(),
serverResponseTimeByOrigin:new Map()},

options);


this._rtt=this._options.rtt;
this._throughput=this._options.throughput;
this._maximumConcurrentRequests=Math.max(Math.min(
TcpConnection.maximumSaturatedConnections(this._rtt,this._throughput),
this._options.maximumConcurrentRequests),
1);
this._cpuSlowdownMultiplier=this._options.cpuSlowdownMultiplier;
this._layoutTaskMultiplier=this._cpuSlowdownMultiplier*this._options.layoutTaskMultiplier;

this._cachedNodeListByStartPosition=[];


this._flexibleOrdering=false;

this._nodeTimings=new Map();

this._numberInProgressByType=new Map();

this._nodes={};
this._dns=new DNSCache({rtt:this._rtt});

this._connectionPool=null;
}


get rtt(){
return this._rtt;
}




_initializeConnectionPool(graph){

const records=[];
graph.getRootNode().traverse(node=>{
if(node.type===BaseNode.TYPES.NETWORK){
records.push(node.record);
}
});

this._connectionPool=new ConnectionPool(records,this._options);
}




_initializeAuxiliaryData(){
this._nodeTimings=new Map();
this._numberInProgressByType=new Map();

this._nodes={};
this._cachedNodeListByStartPosition=[];


for(const state of Object.values(NodeState)){
this._nodes[state]=new Set();
}
}





_numberInProgress(type){
return this._numberInProgressByType.get(type)||0;
}





_setTimingData(node,values){
const timingData=this._nodeTimings.get(node)||{};
Object.assign(timingData,values);
this._nodeTimings.set(node,timingData);
}





_getTimingData(node){
const timingData=this._nodeTimings.get(node);
if(!timingData)throw new Error(`Unable to get timing data for node ${node.id}`);
return timingData;
}





_markNodeAsReadyToStart(node,queuedTime){
const nodeStartPosition=Simulator._computeNodeStartPosition(node);
const firstNodeIndexWithGreaterStartPosition=this._cachedNodeListByStartPosition.
findIndex(candidate=>Simulator._computeNodeStartPosition(candidate)>nodeStartPosition);
const insertionIndex=firstNodeIndexWithGreaterStartPosition===-1?
this._cachedNodeListByStartPosition.length:firstNodeIndexWithGreaterStartPosition;
this._cachedNodeListByStartPosition.splice(insertionIndex,0,node);

this._nodes[NodeState.ReadyToStart].add(node);
this._nodes[NodeState.NotReadyToStart].delete(node);
this._setTimingData(node,{queuedTime});
}





_markNodeAsInProgress(node,startTime){
const indexOfNodeToStart=this._cachedNodeListByStartPosition.indexOf(node);
this._cachedNodeListByStartPosition.splice(indexOfNodeToStart,1);

this._nodes[NodeState.InProgress].add(node);
this._nodes[NodeState.ReadyToStart].delete(node);
this._numberInProgressByType.set(node.type,this._numberInProgress(node.type)+1);
this._setTimingData(node,{startTime});
}





_markNodeAsComplete(node,endTime){
this._nodes[NodeState.Complete].add(node);
this._nodes[NodeState.InProgress].delete(node);
this._numberInProgressByType.set(node.type,this._numberInProgress(node.type)-1);
this._setTimingData(node,{endTime});


for(const dependent of node.getDependents()){

const dependencies=dependent.getDependencies();
if(dependencies.some(dep=>!this._nodes[NodeState.Complete].has(dep)))continue;


this._markNodeAsReadyToStart(dependent,endTime);
}
}





_acquireConnection(record){
return this._connectionPool.acquire(record,{
ignoreConnectionReused:this._flexibleOrdering});

}




_getNodesSortedByStartPosition(){

return Array.from(this._cachedNodeListByStartPosition);
}





_startNodeIfPossible(node,totalElapsedTime){
if(node.type===BaseNode.TYPES.CPU){

if(this._numberInProgress(node.type)===0){
this._markNodeAsInProgress(node,totalElapsedTime);
this._setTimingData(node,{timeElapsed:0});
}

return;
}

if(node.type!==BaseNode.TYPES.NETWORK)throw new Error('Unsupported');


if(!node.isConnectionless){

const numberOfActiveRequests=this._numberInProgress(node.type);
if(numberOfActiveRequests>=this._maximumConcurrentRequests)return;
const connection=this._acquireConnection(node.record);
if(!connection)return;
}

this._markNodeAsInProgress(node,totalElapsedTime);
this._setTimingData(node,{
timeElapsed:0,
timeElapsedOvershoot:0,
bytesDownloaded:0});

}





_updateNetworkCapacity(){
for(const connection of this._connectionPool.connectionsInUse()){
connection.setThroughput(this._throughput/this._nodes[NodeState.InProgress].size);
}
}






_estimateTimeRemaining(node){
if(node.type===BaseNode.TYPES.CPU){
return this._estimateCPUTimeRemaining(node);
}else if(node.type===BaseNode.TYPES.NETWORK){
return this._estimateNetworkTimeRemaining(node);
}else{
throw new Error('Unsupported');
}
}





_estimateCPUTimeRemaining(cpuNode){
const timingData=this._getTimingData(cpuNode);
const multiplier=cpuNode.didPerformLayout()?
this._layoutTaskMultiplier:
this._cpuSlowdownMultiplier;
const totalDuration=Math.min(
Math.round(cpuNode.event.dur/1000*multiplier),
DEFAULT_MAXIMUM_CPU_TASK_DURATION);

const estimatedTimeElapsed=totalDuration-timingData.timeElapsed;
this._setTimingData(cpuNode,{estimatedTimeElapsed});
return estimatedTimeElapsed;
}





_estimateNetworkTimeRemaining(networkNode){
const record=networkNode.record;
const timingData=this._getTimingData(networkNode);

let timeElapsed=0;
if(networkNode.fromDiskCache){



const sizeInMb=(record.resourceSize||0)/1024/1024;
timeElapsed=8+20*sizeInMb-timingData.timeElapsed;
}else if(networkNode.isNonNetworkProtocol){



const sizeInMb=(record.resourceSize||0)/1024/1024;
timeElapsed=2+10*sizeInMb-timingData.timeElapsed;
}else{
const connection=this._connectionPool.acquireActiveConnectionFromRecord(record);
const dnsResolutionTime=this._dns.getTimeUntilResolution(record,{
requestedAt:timingData.startTime,
shouldUpdateCache:true});

const timeAlreadyElapsed=timingData.timeElapsed;
const calculation=connection.simulateDownloadUntil(
record.transferSize-timingData.bytesDownloaded,
{timeAlreadyElapsed,dnsResolutionTime,maximumTimeToElapse:Infinity});


timeElapsed=calculation.timeElapsed;
}

const estimatedTimeElapsed=timeElapsed+timingData.timeElapsedOvershoot;
this._setTimingData(networkNode,{estimatedTimeElapsed});
return estimatedTimeElapsed;
}





_findNextNodeCompletionTime(){
let minimumTime=Infinity;
for(const node of this._nodes[NodeState.InProgress]){
minimumTime=Math.min(minimumTime,this._estimateTimeRemaining(node));
}

return minimumTime;
}







_updateProgressMadeInTimePeriod(node,timePeriodLength,totalElapsedTime){
const timingData=this._getTimingData(node);
const isFinished=timingData.estimatedTimeElapsed===timePeriodLength;

if(node.type===BaseNode.TYPES.CPU||node.isConnectionless){
return isFinished?
this._markNodeAsComplete(node,totalElapsedTime):
timingData.timeElapsed+=timePeriodLength;
}

if(node.type!==BaseNode.TYPES.NETWORK)throw new Error('Unsupported');

const record=node.record;
const connection=this._connectionPool.acquireActiveConnectionFromRecord(record);
const dnsResolutionTime=this._dns.getTimeUntilResolution(record,{
requestedAt:timingData.startTime,
shouldUpdateCache:true});

const calculation=connection.simulateDownloadUntil(
record.transferSize-timingData.bytesDownloaded,
{
dnsResolutionTime,
timeAlreadyElapsed:timingData.timeElapsed,
maximumTimeToElapse:timePeriodLength-timingData.timeElapsedOvershoot});



connection.setCongestionWindow(calculation.congestionWindow);
connection.setH2OverflowBytesDownloaded(calculation.extraBytesDownloaded);

if(isFinished){
connection.setWarmed(true);
this._connectionPool.release(record);
this._markNodeAsComplete(node,totalElapsedTime);
}else{
timingData.timeElapsed+=calculation.timeElapsed;
timingData.timeElapsedOvershoot+=calculation.timeElapsed-timePeriodLength;
timingData.bytesDownloaded+=calculation.bytesDownloaded;
}
}




_computeFinalNodeTimings(){

const nodeTimingEntries=[];
for(const[node,timing]of this._nodeTimings){
nodeTimingEntries.push([node,{
startTime:timing.startTime,
endTime:timing.endTime,
duration:timing.endTime-timing.startTime}]);

}


nodeTimingEntries.sort((a,b)=>a[1].startTime-b[1].startTime);
return new Map(nodeTimingEntries);
}




getOptions(){
return this._options;
}














simulate(graph,options){
if(BaseNode.hasCycle(graph)){
throw new Error('Cannot simulate graph with cycle');
}

options=Object.assign({
label:undefined,
flexibleOrdering:false},
options);


this._flexibleOrdering=!!options.flexibleOrdering;
this._dns=new DNSCache({rtt:this._rtt});
this._initializeConnectionPool(graph);
this._initializeAuxiliaryData();

const nodesNotReadyToStart=this._nodes[NodeState.NotReadyToStart];
const nodesReadyToStart=this._nodes[NodeState.ReadyToStart];
const nodesInProgress=this._nodes[NodeState.InProgress];

const rootNode=graph.getRootNode();
rootNode.traverse(node=>nodesNotReadyToStart.add(node));
let totalElapsedTime=0;
let iteration=0;


this._markNodeAsReadyToStart(rootNode,totalElapsedTime);


while(nodesReadyToStart.size||nodesInProgress.size){

for(const node of this._getNodesSortedByStartPosition()){
this._startNodeIfPossible(node,totalElapsedTime);
}

if(!nodesInProgress.size){


if(this._flexibleOrdering)throw new Error('Failed to start a node');
this._flexibleOrdering=true;
continue;
}


this._updateNetworkCapacity();


const minimumTime=this._findNextNodeCompletionTime();
totalElapsedTime+=minimumTime;


if(!Number.isFinite(minimumTime)||iteration>100000){
throw new Error('Graph creation failed, depth exceeded');
}

iteration++;

for(const node of nodesInProgress){
this._updateProgressMadeInTimePeriod(node,minimumTime,totalElapsedTime);
}
}

const nodeTimings=this._computeFinalNodeTimings();
ALL_SIMULATION_NODE_TIMINGS.set(options.label||'unlabeled',nodeTimings);

return{
timeInMs:totalElapsedTime,
nodeTimings};

}


static get ALL_NODE_TIMINGS(){
return ALL_SIMULATION_NODE_TIMINGS;
}







static _computeNodeStartPosition(node){
if(node.type==='cpu')return node.startTime;
return node.startTime+(PriorityStartTimePenalty[node.record.priority]*1000*1000||0);
}}


module.exports=Simulator;












},{"../../../config/constants.js":53,"../base-node.js":68,"./connection-pool.js":71,"./dns-cache.js":72,"./tcp-connection.js":75}],75:[function(require,module,exports){





'use strict';

const INITIAL_CONGESTION_WINDOW=10;
const TCP_SEGMENT_SIZE=1460;

class TcpConnection{







constructor(rtt,throughput,serverLatency=0,ssl=true,h2=false){
this._warmed=false;
this._ssl=ssl;
this._h2=h2;
this._rtt=rtt;
this._throughput=throughput;
this._serverLatency=serverLatency;
this._congestionWindow=INITIAL_CONGESTION_WINDOW;
this._h2OverflowBytesDownloaded=0;
}






static maximumSaturatedConnections(rtt,availableThroughput){
const roundTripsPerSecond=1000/rtt;
const bytesPerRoundTrip=TCP_SEGMENT_SIZE;
const bytesPerSecond=roundTripsPerSecond*bytesPerRoundTrip;
const minimumThroughputRequiredPerRequest=bytesPerSecond*8;
return Math.floor(availableThroughput/minimumThroughputRequiredPerRequest);
}




_computeMaximumCongestionWindowInSegments(){
const bytesPerSecond=this._throughput/8;
const secondsPerRoundTrip=this._rtt/1000;
const bytesPerRoundTrip=bytesPerSecond*secondsPerRoundTrip;
return Math.floor(bytesPerRoundTrip/TCP_SEGMENT_SIZE);
}




setThroughput(throughput){
this._throughput=throughput;
}




setCongestionWindow(congestion){
this._congestionWindow=congestion;
}




setWarmed(warmed){
this._warmed=warmed;
}




isWarm(){
return this._warmed;
}




isH2(){
return this._h2;
}




get congestionWindow(){
return this._congestionWindow;
}






setH2OverflowBytesDownloaded(bytes){
if(!this._h2)return;
this._h2OverflowBytesDownloaded=bytes;
}




clone(){
return Object.assign(new TcpConnection(this._rtt,this._throughput),this);
}












simulateDownloadUntil(bytesToDownload,options){
const{timeAlreadyElapsed=0,maximumTimeToElapse=Infinity,dnsResolutionTime=0}=
options||{};

if(this._warmed&&this._h2){
bytesToDownload-=this._h2OverflowBytesDownloaded;
}
const twoWayLatency=this._rtt;
const oneWayLatency=twoWayLatency/2;
const maximumCongestionWindow=this._computeMaximumCongestionWindowInSegments();

let handshakeAndRequest=oneWayLatency;
if(!this._warmed){
handshakeAndRequest=

dnsResolutionTime+

oneWayLatency+

oneWayLatency+

oneWayLatency+(

this._ssl?twoWayLatency:0);
}

let roundTrips=Math.ceil(handshakeAndRequest/twoWayLatency);
let timeToFirstByte=handshakeAndRequest+this._serverLatency+oneWayLatency;
if(this._warmed&&this._h2)timeToFirstByte=0;

const timeElapsedForTTFB=Math.max(timeToFirstByte-timeAlreadyElapsed,0);
const maximumDownloadTimeToElapse=maximumTimeToElapse-timeElapsedForTTFB;

let congestionWindow=Math.min(this._congestionWindow,maximumCongestionWindow);
let totalBytesDownloaded=0;
if(timeElapsedForTTFB>0){
totalBytesDownloaded=congestionWindow*TCP_SEGMENT_SIZE;
}else{
roundTrips=0;
}

let downloadTimeElapsed=0;
let bytesRemaining=bytesToDownload-totalBytesDownloaded;
while(bytesRemaining>0&&downloadTimeElapsed<=maximumDownloadTimeToElapse){
roundTrips++;
downloadTimeElapsed+=twoWayLatency;
congestionWindow=Math.max(Math.min(maximumCongestionWindow,congestionWindow*2),1);

const bytesDownloadedInWindow=congestionWindow*TCP_SEGMENT_SIZE;
totalBytesDownloaded+=bytesDownloadedInWindow;
bytesRemaining-=bytesDownloadedInWindow;
}

const timeElapsed=timeElapsedForTTFB+downloadTimeElapsed;
const extraBytesDownloaded=this._h2?Math.max(totalBytesDownloaded-bytesToDownload,0):0;
const bytesDownloaded=Math.max(Math.min(totalBytesDownloaded,bytesToDownload),0);

return{
roundTrips,
timeElapsed,
bytesDownloaded,
extraBytesDownloaded,
congestionWindow};

}}


module.exports=TcpConnection;

















},{}],76:[function(require,module,exports){





'use strict';






const MOTOG4_EMULATION_METRICS={
mobile:true,
screenWidth:360,
screenHeight:640,
width:360,
height:640,
positionX:0,
positionY:0,
scale:1,



deviceScaleFactor:2.625,
screenOrientation:{
angle:0,
type:'portraitPrimary'}};







const DESKTOP_EMULATION_METRICS={
mobile:false,
width:1350,
height:940,
deviceScaleFactor:1};



const MOTOG4_USERAGENT='Mozilla/5.0 (Linux; Android 6.0.1; Moto G (4)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3963.0 Mobile Safari/537.36 Chrome-Lighthouse';

const DESKTOP_USERAGENT='Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3963.0 Safari/537.36 Chrome-Lighthouse';

const OFFLINE_METRICS={
offline:true,

latency:0,
downloadThroughput:0,
uploadThroughput:0};


const NO_THROTTLING_METRICS={
latency:0,
downloadThroughput:0,
uploadThroughput:0,
offline:false};


const NO_CPU_THROTTLE_METRICS={
rate:1};


const emulationParams={
mobile:{
userAgent:MOTOG4_USERAGENT,
metrics:MOTOG4_EMULATION_METRICS,
touchEnabled:true},

desktop:{
userAgent:DESKTOP_USERAGENT,
metrics:DESKTOP_EMULATION_METRICS,
touchEnabled:false}};









async function emulate(driver,settings){
if(!settings.emulatedFormFactor||settings.emulatedFormFactor==='none')return;
const params=emulationParams[settings.emulatedFormFactor];






await driver.sendCommand('Network.enable');
await driver.sendCommand('Network.setUserAgentOverride',{userAgent:params.userAgent});

if(!settings.internalDisableDeviceScreenEmulation){
await driver.sendCommand('Emulation.setDeviceMetricsOverride',params.metrics);
await driver.sendCommand('Emulation.setTouchEmulationEnabled',{enabled:params.touchEnabled});
}
}







function enableNetworkThrottling(driver,throttlingSettings){

const conditions={
offline:false,
latency:throttlingSettings.requestLatencyMs||0,
downloadThroughput:throttlingSettings.downloadThroughputKbps||0,
uploadThroughput:throttlingSettings.uploadThroughputKbps||0};



conditions.downloadThroughput=Math.floor(conditions.downloadThroughput*1024/8);
conditions.uploadThroughput=Math.floor(conditions.uploadThroughput*1024/8);
return driver.sendCommand('Network.emulateNetworkConditions',conditions);
}





function clearAllNetworkEmulation(driver){
return driver.sendCommand('Network.emulateNetworkConditions',NO_THROTTLING_METRICS);
}





function goOffline(driver){
return driver.sendCommand('Network.emulateNetworkConditions',OFFLINE_METRICS);
}






function enableCPUThrottling(driver,throttlingSettings){
const rate=throttlingSettings.cpuSlowdownMultiplier;
return driver.sendCommand('Emulation.setCPUThrottlingRate',{rate});
}





function disableCPUThrottling(driver){
return driver.sendCommand('Emulation.setCPUThrottlingRate',NO_CPU_THROTTLE_METRICS);
}

module.exports={
emulate,
enableNetworkThrottling,
clearAllNetworkEmulation,
enableCPUThrottling,
disableCPUThrottling,
goOffline,
MOBILE_USERAGENT:MOTOG4_USERAGENT,
DESKTOP_USERAGENT};


},{}],77:[function(require,module,exports){
(function(__filename,__dirname){





'use strict';

const path=require('path');
const isDeepEqual=require('lodash.isequal');
const log=require('lighthouse-logger');
const MessageFormat=require('intl-messageformat').default;
const lookupClosestLocale=require('lookup-closest-locale');
const LOCALES=require('./locales.js');




const LH_ROOT=path.join(__dirname,'../../../');
const MESSAGE_INSTANCE_ID_REGEX=/(.* \| .*) # (\d+)$/;

const MESSAGE_INSTANCE_ID_QUICK_REGEX=/ # \d+$/;

(()=>{





require('intl-pluralrules');


const IntlPolyfill=require('intl');


if(!IntlPolyfill.NumberFormat)return;


const minimumLocales=['en','es','ru','zh'];
const supportedLocales=Intl.NumberFormat.supportedLocalesOf(minimumLocales);

if(supportedLocales.length!==minimumLocales.length){
Intl.NumberFormat=IntlPolyfill.NumberFormat;
Intl.DateTimeFormat=IntlPolyfill.DateTimeFormat;
}
})();


const UIStrings={

ms:'{timeInMs, number, milliseconds}\xa0ms',

seconds:'{timeInMs, number, seconds}\xa0s',

displayValueByteSavings:'Potential savings of {wastedBytes, number, bytes}\xa0KB',

displayValueMsSavings:'Potential savings of {wastedMs, number, milliseconds}\xa0ms',

columnURL:'URL',

columnSize:'Size',

columnResourceSize:'Resource Size',

columnTransferSize:'Transfer Size',

columnCacheTTL:'Cache TTL',

columnWastedBytes:'Potential Savings',

columnWastedMs:'Potential Savings',

columnTimeSpent:'Time Spent',

columnLocation:'Location',

columnResourceType:'Resource Type',

columnRequests:'Requests',

columnName:'Name',

columnSource:'Source',

columnOverBudget:'Over Budget',

columnElement:'Element',

totalResourceType:'Total',

documentResourceType:'Document',

scriptResourceType:'Script',

stylesheetResourceType:'Stylesheet',

imageResourceType:'Image',

mediaResourceType:'Media',

fontResourceType:'Font',

otherResourceType:'Other',

thirdPartyResourceType:'Third-party',

firstContentfulPaintMetric:'First Contentful Paint',

firstCPUIdleMetric:'First CPU Idle',

interactiveMetric:'Time to Interactive',

firstMeaningfulPaintMetric:'First Meaningful Paint',

estimatedInputLatencyMetric:'Estimated Input Latency',

totalBlockingTimeMetric:'Total Blocking Time',

maxPotentialFIDMetric:'Max Potential First Input Delay',

speedIndexMetric:'Speed Index',

largestContentfulPaintMetric:'Largest Contentful Paint',

cumulativeLayoutShiftMetric:'Cumulative Layout Shift'};


const formats={
number:{
bytes:{
maximumFractionDigits:0},

milliseconds:{
maximumFractionDigits:0},

seconds:{

minimumFractionDigits:1,
maximumFractionDigits:1},

extendedPercent:{

maximumFractionDigits:2,
style:'percent'}}};














function lookupLocale(locale){

const canonicalLocale=Intl.getCanonicalLocales(locale)[0];

const closestLocale=lookupClosestLocale(canonicalLocale,LOCALES);
return closestLocale||'en';
}



















function collectAllCustomElementsFromICU(icuElements,seenElementsById=new Map()){
for(const el of icuElements){

if(el.type!=='argumentElement')continue;

seenElementsById.set(el.id,el);


if(!el.format||el.format.type!=='pluralFormat')continue;

for(const option of el.format.options){

collectAllCustomElementsFromICU(option.value.elements,seenElementsById);
}
}

return seenElementsById;
}










function _preformatValues(icuMessage,messageFormatter,values){
const elementMap=collectAllCustomElementsFromICU(messageFormatter.getAst().elements);
const argumentElements=[...elementMap.values()];


const formattedValues={};

for(const{id,format}of argumentElements){

if(id&&id in values===false){
throw new Error(`ICU Message "${icuMessage}" contains a value reference ("${id}") `+
`that wasn't provided`);
}

const value=values[id];


if(!format||format.type!=='numberFormat'){
formattedValues[id]=value;
continue;
}

if(typeof value!=='number'){
throw new Error(`ICU Message "${icuMessage}" contains a numeric reference ("${id}") `+
'but provided value was not a number');
}


if(format.style==='milliseconds'){

formattedValues[id]=Math.round(value/10)*10;
}else if(format.style==='seconds'&&id==='timeInMs'){

formattedValues[id]=Math.round(value/100)/10;
}else if(format.style==='bytes'){

formattedValues[id]=value/1024;
}else{

formattedValues[id]=value;
}
}


for(const valueId of Object.keys(values)){
if(valueId in formattedValues)continue;


if(valueId==='errorCode'){
formattedValues.errorCode=values.errorCode;
continue;
}

throw new Error(`Provided value "${valueId}" does not match any placeholder in `+
`ICU message "${icuMessage}"`);
}

return formattedValues;
}









const _icuMessageInstanceMap=new Map();

const _ICUMsgNotFoundMsg='ICU message not found in destination locale';








function _formatIcuMessage(locale,icuMessageId,uiStringMessage,values={}){
const localeMessages=LOCALES[locale];
if(!localeMessages)throw new Error(`Unsupported locale '${locale}'`);
let localeMessage=localeMessages[icuMessageId]&&localeMessages[icuMessageId].message;



if(!localeMessage&&uiStringMessage){

localeMessage=uiStringMessage;


if(!LOCALES.en[icuMessageId]||localeMessage!==LOCALES.en[icuMessageId].message){
log.verbose('i18n',`Message "${icuMessageId}" does not match its 'en' counterpart. `+
`Run 'i18n' to update.`);
}
}

if(!localeMessage){
throw new Error(_ICUMsgNotFoundMsg);
}


const localeForMessageFormat=locale==='en-XA'||locale==='en-XL'?'de-DE':locale;

const formatter=new MessageFormat(localeMessage,localeForMessageFormat,formats);


const valuesForMessageFormat=_preformatValues(localeMessage,formatter,values);

const formattedString=formatter.format(valuesForMessageFormat);
return{formattedString,icuMessage:localeMessage};
}


function _formatPathAsString(pathInLHR){
let pathAsString='';
for(const property of pathInLHR){
if(/^[a-z]+$/i.test(property)){
if(pathAsString.length)pathAsString+='.';
pathAsString+=property;
}else{
if(/]|"|'|\s/.test(property))throw new Error(`Cannot handle "${property}" in i18n`);
pathAsString+=`[${property}]`;
}
}

return pathAsString;
}





function getRendererFormattedStrings(locale){
const localeMessages=LOCALES[locale];
if(!localeMessages)throw new Error(`Unsupported locale '${locale}'`);

const icuMessageIds=Object.keys(localeMessages).filter(f=>f.includes('core/report/html/'));
const strings={};
for(const icuMessageId of icuMessageIds){
const[filename,varName]=icuMessageId.split(' | ');
if(!filename.endsWith('util.js'))throw new Error(`Unexpected message: ${icuMessageId}`);

const key=varName;
strings[key]=localeMessages[icuMessageId].message;
}

return strings;
}








function createMessageInstanceIdFn(filename,fileStrings){

const mergedStrings={...UIStrings,...fileStrings};








const getMessageInstanceIdFn=(icuMessage,values)=>{
const keyname=Object.keys(mergedStrings).find(key=>mergedStrings[key]===icuMessage);
if(!keyname)throw new Error(`Could not locate: ${icuMessage}`);

const filenameToLookup=keyname in fileStrings?filename:__filename;
const unixStyleFilename=path.relative(LH_ROOT,filenameToLookup).replace(/\\/g,'/');
const icuMessageId=`${unixStyleFilename} | ${keyname}`;
const icuMessageInstances=_icuMessageInstanceMap.get(icuMessageId)||[];

let indexOfInstance=icuMessageInstances.findIndex(inst=>isDeepEqual(inst.values,values));
if(indexOfInstance===-1){
icuMessageInstances.push({icuMessageId,icuMessage,values});
indexOfInstance=icuMessageInstances.length-1;
}

_icuMessageInstanceMap.set(icuMessageId,icuMessageInstances);

return`${icuMessageId} # ${indexOfInstance}`;
};

return getMessageInstanceIdFn;
}






function isIcuMessage(icuMessageIdOrRawString){
return MESSAGE_INSTANCE_ID_QUICK_REGEX.test(icuMessageIdOrRawString)&&
MESSAGE_INSTANCE_ID_REGEX.test(icuMessageIdOrRawString);
}






function getFormatted(icuMessageIdOrRawString,locale){
if(isIcuMessage(icuMessageIdOrRawString)){
return _resolveIcuMessageInstanceId(icuMessageIdOrRawString,locale).formattedString;
}

return icuMessageIdOrRawString;
}







function getFormattedFromIdAndValues(locale,icuMessageId,values){
const icuMessageIdRegex=/(.* \| .*)$/;
if(!icuMessageIdRegex.test(icuMessageId))throw new Error('This is not an ICU message ID');

const{formattedString}=_formatIcuMessage(locale,icuMessageId,undefined,values);
return formattedString;
}






function _resolveIcuMessageInstanceId(icuMessageInstanceId,locale){
const matches=icuMessageInstanceId.match(MESSAGE_INSTANCE_ID_REGEX);
if(!matches)throw new Error(`${icuMessageInstanceId} is not a valid message instance ID`);

const[_,icuMessageId,icuMessageInstanceIndex]=matches;
const icuMessageInstances=_icuMessageInstanceMap.get(icuMessageId)||[];
const icuMessageInstance=icuMessageInstances[Number(icuMessageInstanceIndex)];

const{formattedString}=_formatIcuMessage(locale,icuMessageId,
icuMessageInstance.icuMessage,icuMessageInstance.values);

return{icuMessageInstance,formattedString};
}









function replaceIcuMessageInstanceIds(inputObject,locale){





function replaceInObject(subObject,icuMessagePaths,pathInLHR=[]){
if(typeof subObject!=='object'||!subObject)return;

for(const[property,value]of Object.entries(subObject)){
const currentPathInLHR=pathInLHR.concat([property]);


if(typeof value==='string'&&isIcuMessage(value)){
const{icuMessageInstance,formattedString}=_resolveIcuMessageInstanceId(value,locale);
const messageInstancesInLHR=icuMessagePaths[icuMessageInstance.icuMessageId]||[];
const currentPathAsString=_formatPathAsString(currentPathInLHR);

messageInstancesInLHR.push(
icuMessageInstance.values?
{values:icuMessageInstance.values,path:currentPathAsString}:
currentPathAsString);


subObject[property]=formattedString;
icuMessagePaths[icuMessageInstance.icuMessageId]=messageInstancesInLHR;
}else{
replaceInObject(value,icuMessagePaths,currentPathInLHR);
}
}
}


const icuMessagePaths={};
replaceInObject(inputObject,icuMessagePaths);
return icuMessagePaths;
}










function registerLocaleData(locale,lhlMessages){
LOCALES[locale]=lhlMessages;
}

module.exports={
_formatPathAsString,
_ICUMsgNotFoundMsg,
UIStrings,
lookupLocale,
getRendererFormattedStrings,
createMessageInstanceIdFn,
getFormatted,
getFormattedFromIdAndValues,
replaceIcuMessageInstanceIds,
isIcuMessage,
collectAllCustomElementsFromICU,
registerLocaleData};


}).call(this,"/lighthouse-core/lib/i18n/i18n.js","/lighthouse-core/lib/i18n");
},{"./locales.js":78,"intl":113,"intl-messageformat":129,"intl-pluralrules":113,"lighthouse-logger":135,"lodash.isequal":154,"lookup-closest-locale":155,"path":168}],78:[function(require,module,exports){





'use strict';















const locales={
'en-US':require('./locales/en-US.json'),
'en':require('./locales/en-US.json'),


'en-AU':require('./locales/en-GB.json'),
'en-GB':require('./locales/en-GB.json'),
'en-IE':require('./locales/en-GB.json'),
'en-SG':require('./locales/en-GB.json'),
'en-ZA':require('./locales/en-GB.json'),
'en-IN':require('./locales/en-GB.json'),


'ar-XB':require('./locales/ar-XB.json'),
'ar':require('./locales/ar.json'),
'bg':require('./locales/bg.json'),
'bs':require('./locales/hr.json'),
'ca':require('./locales/ca.json'),
'cs':require('./locales/cs.json'),
'da':require('./locales/da.json'),
'de':require('./locales/de.json'),
'el':require('./locales/el.json'),
'en-XA':require('./locales/en-XA.json'),
'en-XL':require('./locales/en-XL.json'),
'es':require('./locales/es.json'),
'es-419':require('./locales/es-419.json'),

'es-AR':require('./locales/es-419.json'),
'es-BO':require('./locales/es-419.json'),
'es-BR':require('./locales/es-419.json'),
'es-BZ':require('./locales/es-419.json'),
'es-CL':require('./locales/es-419.json'),
'es-CO':require('./locales/es-419.json'),
'es-CR':require('./locales/es-419.json'),
'es-CU':require('./locales/es-419.json'),
'es-DO':require('./locales/es-419.json'),
'es-EC':require('./locales/es-419.json'),
'es-GT':require('./locales/es-419.json'),
'es-HN':require('./locales/es-419.json'),
'es-MX':require('./locales/es-419.json'),
'es-NI':require('./locales/es-419.json'),
'es-PA':require('./locales/es-419.json'),
'es-PE':require('./locales/es-419.json'),
'es-PR':require('./locales/es-419.json'),
'es-PY':require('./locales/es-419.json'),
'es-SV':require('./locales/es-419.json'),
'es-US':require('./locales/es-419.json'),
'es-UY':require('./locales/es-419.json'),
'es-VE':require('./locales/es-419.json'),

'fi':require('./locales/fi.json'),
'fil':require('./locales/fil.json'),
'fr':require('./locales/fr.json'),
'he':require('./locales/he.json'),
'hi':require('./locales/hi.json'),
'hr':require('./locales/hr.json'),
'hu':require('./locales/hu.json'),
'gsw':require('./locales/de.json'),
'id':require('./locales/id.json'),
'in':require('./locales/id.json'),
'it':require('./locales/it.json'),
'iw':require('./locales/he.json'),
'ja':require('./locales/ja.json'),
'ko':require('./locales/ko.json'),
'ln':require('./locales/fr.json'),
'lt':require('./locales/lt.json'),
'lv':require('./locales/lv.json'),
'mo':require('./locales/ro.json'),
'nl':require('./locales/nl.json'),
'nb':require('./locales/no.json'),
'no':require('./locales/no.json'),
'pl':require('./locales/pl.json'),
'pt':require('./locales/pt.json'),
'pt-PT':require('./locales/pt-PT.json'),
'ro':require('./locales/ro.json'),
'ru':require('./locales/ru.json'),
'sk':require('./locales/sk.json'),
'sl':require('./locales/sl.json'),
'sr':require('./locales/sr.json'),
'sr-Latn':require('./locales/sr-Latn.json'),
'sv':require('./locales/sv.json'),
'ta':require('./locales/ta.json'),
'te':require('./locales/te.json'),
'th':require('./locales/th.json'),
'tl':require('./locales/fil.json'),
'tr':require('./locales/tr.json'),
'uk':require('./locales/uk.json'),
'vi':require('./locales/vi.json'),
'zh':require('./locales/zh.json'),
'zh-HK':require('./locales/zh-HK.json'),
'zh-TW':require('./locales/zh-TW.json')};


module.exports=locales;

},{"./locales/ar-XB.json":113,"./locales/ar.json":113,"./locales/bg.json":113,"./locales/ca.json":113,"./locales/cs.json":113,"./locales/da.json":113,"./locales/de.json":113,"./locales/el.json":113,"./locales/en-GB.json":113,"./locales/en-US.json":113,"./locales/en-XA.json":113,"./locales/en-XL.json":113,"./locales/es-419.json":113,"./locales/es.json":113,"./locales/fi.json":113,"./locales/fil.json":113,"./locales/fr.json":113,"./locales/he.json":113,"./locales/hi.json":113,"./locales/hr.json":113,"./locales/hu.json":113,"./locales/id.json":113,"./locales/it.json":113,"./locales/ja.json":113,"./locales/ko.json":113,"./locales/lt.json":113,"./locales/lv.json":113,"./locales/nl.json":113,"./locales/no.json":113,"./locales/pl.json":113,"./locales/pt-PT.json":113,"./locales/pt.json":113,"./locales/ro.json":113,"./locales/ru.json":113,"./locales/sk.json":113,"./locales/sl.json":113,"./locales/sr-Latn.json":113,"./locales/sr.json":113,"./locales/sv.json":113,"./locales/ta.json":113,"./locales/te.json":113,"./locales/th.json":113,"./locales/tr.json":113,"./locales/uk.json":113,"./locales/vi.json":113,"./locales/zh-HK.json":113,"./locales/zh-TW.json":113,"./locales/zh.json":113}],79:[function(require,module,exports){





'use strict';

const URL=require('./url-shim.js');





function doExist(manifest){
if(!manifest||!manifest.icons){
return false;
}
if(manifest.icons.value.length===0){
return false;
}
return true;
}






function pngSizedAtLeast(sizeRequirement,manifest){


const iconValues=manifest.icons.value;

const flattenedSizes=[];
iconValues.
filter(icon=>{
const typeHint=icon.value.type.value;
if(typeHint){

return typeHint==='image/png';
}

const src=icon.value.src.value;
return src&&new URL(src).pathname.endsWith('.png');
}).
forEach(icon=>{

if(icon.value.sizes.value){
flattenedSizes.push(...icon.value.sizes.value);
}
});

return flattenedSizes.

filter(size=>/\d+x\d+/.test(size)).
filter(size=>{

const sizeStrs=size.split(/x/i);

const sizeNums=[parseFloat(sizeStrs[0]),parseFloat(sizeStrs[1])];

const areIconsBigEnough=sizeNums[0]>=sizeRequirement&&sizeNums[1]>=sizeRequirement;

const areIconsSquare=sizeNums[0]===sizeNums[1];
return areIconsBigEnough&&areIconsSquare;
});
}





function containsMaskableIcon(manifest){
const iconValues=manifest.icons.value;
return iconValues.some(icon=>{
return icon.value.purpose&&
icon.value.purpose.value&&
icon.value.purpose.value.includes('maskable');
});
}

module.exports={
doExist,
pngSizedAtLeast,
containsMaskableIcon};


},{"./url-shim.js":"url"}],80:[function(require,module,exports){





'use strict';





function convertNodeTimingsToTrace(nodeTimings){

const traceEvents=[];
const baseTs=1e9;
const baseEvent={pid:1,tid:1,cat:'devtools.timeline'};
const frame='A00001';

const toMicroseconds=ms=>baseTs+ms*1000;

traceEvents.push(createFakeTracingStartedEvent());
traceEvents.push({...createFakeTracingStartedEvent(),name:'TracingStartedInBrowser'});


let requestId=1;
let lastEventEndTime=0;
for(const[node,timing]of nodeTimings.entries()){
lastEventEndTime=Math.max(lastEventEndTime,timing.endTime);
if(node.type==='cpu'){

const cpuNode=node;
traceEvents.push(...createFakeTaskEvents(cpuNode,timing));
}else{
const networkNode=node;

if(/^data/.test(networkNode.record.url))continue;
traceEvents.push(...createFakeNetworkEvents(networkNode.record,timing));
}
}


traceEvents.push(
...createFakeTaskEvents(

{childEvents:[],event:{}},
{
startTime:lastEventEndTime+1000,
endTime:lastEventEndTime+1001}));




return{traceEvents};




function createFakeTracingStartedEvent(){
const argsData={
frameTreeNodeId:1,
sessionId:'1.1',
page:frame,
persistentIds:true,
frames:[{frame,url:'about:blank',name:'',processId:1}]};


return{
...baseEvent,
ts:baseTs-1e5,
ph:'I',
s:'t',
cat:'disabled-by-default-devtools.timeline',
name:'TracingStartedInPage',
args:{data:argsData},
dur:0};

}






function createFakeTaskEvents(cpuNode,timing){
const argsData={
url:'',
frame,
lineNumber:0,
columnNumber:0};


const eventTs=toMicroseconds(timing.startTime);


const events=[
{
...baseEvent,
ph:'X',
name:'Task',
ts:eventTs,
dur:(timing.endTime-timing.startTime)*1000,
args:{data:argsData}}];



const nestedBaseTs=cpuNode.event.ts||0;
const multiplier=(timing.endTime-timing.startTime)*1000/cpuNode.event.dur;

const netReqEvents=new Set(['ResourceSendRequest','ResourceFinish',
'ResourceReceiveResponse','ResourceReceivedData']);
for(const event of cpuNode.childEvents){
if(netReqEvents.has(event.name))continue;
const ts=eventTs+(event.ts-nestedBaseTs)*multiplier;
const newEvent={...event,...{pid:baseEvent.pid,tid:baseEvent.tid},ts};
if(event.dur)newEvent.dur=event.dur*multiplier;
events.push(newEvent);
}

return events;
}






function createFakeNetworkEvents(record,timing){
requestId++;



let{startTime,endTime}=timing;
if(startTime===endTime)endTime+=0.3;

const requestData={requestId:requestId.toString(),frame};

const baseRequestEvent={...baseEvent,ph:'I',s:'t',dur:0};

const sendRequestData={
...requestData,
requestMethod:record.requestMethod,
url:record.url,
priority:record.priority};


const receiveResponseData={
...requestData,
statusCode:record.statusCode,
mimeType:record.mimeType,
encodedDataLength:record.transferSize,
fromCache:record.fromDiskCache,
fromServiceWorker:record.fetchedViaServiceWorker};


const resourceFinishData={
...requestData,
decodedBodyLength:record.resourceSize,
didFail:!!record.failed,
finishTime:endTime};



const events=[
{
...baseRequestEvent,
name:'ResourceSendRequest',
ts:toMicroseconds(startTime),
args:{data:sendRequestData}},

{
...baseRequestEvent,
name:'ResourceFinish',
ts:toMicroseconds(endTime),
args:{data:resourceFinishData}}];



if(!record.failed){
events.push({
...baseRequestEvent,
name:'ResourceReceiveResponse',
ts:toMicroseconds((startTime+endTime)/2),
args:{data:receiveResponseData}});

}

return events;
}
}

module.exports={
simulationNamesToIgnore:[
'unlabeled',

'optimisticFirstCPUIdle',
'optimisticFlexFirstCPUIdle',
'pessimisticFirstCPUIdle',
'optimisticSpeedIndex',
'optimisticFlexSpeedIndex',
'pessimisticSpeedIndex',
'optimisticEstimatedInputLatency',
'optimisticFlexEstimatedInputLatency',
'pessimisticEstimatedInputLatency'],

convertNodeTimingsToTrace};


},{}],81:[function(require,module,exports){





'use strict';

const Driver=require('../gather/driver.js');

class LHElement{




constructor(element,driver){
if(!element||!driver){
throw Error('Driver and element required to create Element');
}
this.driver=driver;
this.element=element;
}





getAttribute(name){
return this.driver.
sendCommand('DOM.getAttributes',{
nodeId:this.element.nodeId}).




then(resp=>{
const attrIndex=resp.attributes.indexOf(name);
if(attrIndex===-1){
return null;
}

return resp.attributes[attrIndex+1];
});
}




getNodeId(){
return this.element.nodeId;
}





getProperty(propName){
return this.driver.
sendCommand('DOM.resolveNode',{
nodeId:this.element.nodeId}).

then(resp=>{
if(!resp.object.objectId){
return null;
}
return this.driver.getObjectProperty(resp.object.objectId,propName);
}).
catch(()=>null);
}}


module.exports=LHElement;

},{"../gather/driver.js":58}],82:[function(require,module,exports){
(function(__filename){





'use strict';

const i18n=require('./i18n/i18n.js');


const UIStrings={




didntCollectScreenshots:`Chrome didn't collect any screenshots during the page load. Please make sure there is content visible on the page, and then try re-running Lighthouse. ({errorCode})`,




badTraceRecording:'Something went wrong with recording the trace over your page load. Please run Lighthouse again. ({errorCode})',




pageLoadTookTooLong:'Your page took too long to load. Please follow the opportunities in the report to reduce your page load time, and then try re-running Lighthouse. ({errorCode})',

pageLoadFailed:'Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests.',




pageLoadFailedWithStatusCode:'Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests. (Status code: {statusCode})',




pageLoadFailedWithDetails:'Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests. (Details: {errorDetails})',




pageLoadFailedInsecure:'The URL you have provided does not have a valid security certificate. {securityMessages}',

pageLoadFailedInterstitial:'Chrome prevented page load with an interstitial. Make sure you are testing the correct URL and that the server is properly responding to all requests.',

internalChromeError:'An internal Chrome error occurred. Please restart Chrome and try re-running Lighthouse.',

requestContentTimeout:'Fetching resource content has exceeded the allotted time',

urlInvalid:'The URL you have provided appears to be invalid.',




protocolTimeout:'Waiting for DevTools protocol response has exceeded the allotted time. (Method: {protocolMethod})',

dnsFailure:'DNS servers could not resolve the provided domain.',

pageLoadFailedHung:'Lighthouse was unable to reliably load the URL you requested because the page stopped responding.',

criTimeout:'Timeout waiting for initial Debugger Protocol connection.',




missingRequiredArtifact:'Required {artifactName} gatherer did not run.',





erroredRequiredArtifact:'Required {artifactName} gatherer encountered an error: {errorMessage}'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);










const LHERROR_SENTINEL='__LighthouseErrorSentinel';
const ERROR_SENTINEL='__ErrorSentinel';





class LighthouseError extends Error{




constructor(errorDefinition,properties){
super(errorDefinition.code);
this.name='LHError';
this.code=errorDefinition.code;


this.friendlyMessage=str_(errorDefinition.message,{errorCode:this.code,...properties});
this.lhrRuntimeError=!!errorDefinition.lhrRuntimeError;
if(properties)Object.assign(this,properties);

Error.captureStackTrace(this,LighthouseError);
}






static fromProtocolMessage(method,protocolError){

const protocolErrors=Object.values(LighthouseError.errors).filter(e=>e.pattern);

const matchedErrorDefinition=protocolErrors.find(e=>e.pattern.test(protocolError.message));
if(matchedErrorDefinition){
return new LighthouseError(matchedErrorDefinition);
}


let errMsg=`(${method}): ${protocolError.message}`;
if(protocolError.data)errMsg+=` (${protocolError.data})`;
const error=new Error(`Protocol error ${errMsg}`);
return Object.assign(error,{protocolMethod:method,protocolError:protocolError.message});
}









static stringifyReplacer(err){
if(err instanceof LighthouseError){


const{name,code,message,friendlyMessage,lhrRuntimeError,stack,...properties}=err;

return{
sentinel:LHERROR_SENTINEL,
code,
stack,
...properties};

}


if(err instanceof Error){
const{message,stack}=err;

const code=err.code;
return{
sentinel:ERROR_SENTINEL,
message,
code,
stack};

}

throw new Error('Invalid value for LHError stringification');
}










static parseReviver(key,possibleError){
if(typeof possibleError==='object'&&possibleError!==null){
if(possibleError.sentinel===LHERROR_SENTINEL){


const{sentinel,code,stack,...properties}=possibleError;
const errorDefinition=LighthouseError.errors[code];
const lhError=new LighthouseError(errorDefinition,properties);
lhError.stack=stack;

return lhError;
}

if(possibleError.sentinel===ERROR_SENTINEL){
const{message,code,stack}=possibleError;
const error=new Error(message);
Object.assign(error,{code,stack});
return error;
}
}

return possibleError;
}}


const ERRORS={

NO_SPEEDLINE_FRAMES:{
code:'NO_SPEEDLINE_FRAMES',
message:UIStrings.didntCollectScreenshots,
lhrRuntimeError:true},

SPEEDINDEX_OF_ZERO:{
code:'SPEEDINDEX_OF_ZERO',
message:UIStrings.didntCollectScreenshots,
lhrRuntimeError:true},

NO_SCREENSHOTS:{
code:'NO_SCREENSHOTS',
message:UIStrings.didntCollectScreenshots,
lhrRuntimeError:true},

INVALID_SPEEDLINE:{
code:'INVALID_SPEEDLINE',
message:UIStrings.didntCollectScreenshots,
lhrRuntimeError:true},



NO_TRACING_STARTED:{
code:'NO_TRACING_STARTED',
message:UIStrings.badTraceRecording,
lhrRuntimeError:true},

NO_NAVSTART:{
code:'NO_NAVSTART',
message:UIStrings.badTraceRecording,
lhrRuntimeError:true},

NO_FCP:{
code:'NO_FCP',
message:UIStrings.badTraceRecording,
lhrRuntimeError:true},

NO_DCL:{
code:'NO_DCL',
message:UIStrings.badTraceRecording,
lhrRuntimeError:true},

NO_FMP:{
code:'NO_FMP',
message:UIStrings.badTraceRecording},

NO_LCP:{
code:'NO_LCP',
message:UIStrings.badTraceRecording},


LAYOUT_SHIFT_MISSING_DATA:{
code:'LAYOUT_SHIFT_MISSING_DATA',
message:UIStrings.badTraceRecording},



FMP_TOO_LATE_FOR_FCPUI:{code:'FMP_TOO_LATE_FOR_FCPUI',message:UIStrings.pageLoadTookTooLong},
NO_FCPUI_IDLE_PERIOD:{code:'NO_FCPUI_IDLE_PERIOD',message:UIStrings.pageLoadTookTooLong},
NO_TTI_CPU_IDLE_PERIOD:{code:'NO_TTI_CPU_IDLE_PERIOD',message:UIStrings.pageLoadTookTooLong},
NO_TTI_NETWORK_IDLE_PERIOD:{
code:'NO_TTI_NETWORK_IDLE_PERIOD',
message:UIStrings.pageLoadTookTooLong},



NO_DOCUMENT_REQUEST:{
code:'NO_DOCUMENT_REQUEST',
message:UIStrings.pageLoadFailed,
lhrRuntimeError:true},




FAILED_DOCUMENT_REQUEST:{
code:'FAILED_DOCUMENT_REQUEST',
message:UIStrings.pageLoadFailedWithDetails,
lhrRuntimeError:true},




ERRORED_DOCUMENT_REQUEST:{
code:'ERRORED_DOCUMENT_REQUEST',
message:UIStrings.pageLoadFailedWithStatusCode,
lhrRuntimeError:true},




INSECURE_DOCUMENT_REQUEST:{
code:'INSECURE_DOCUMENT_REQUEST',
message:UIStrings.pageLoadFailedInsecure,
lhrRuntimeError:true},



CHROME_INTERSTITIAL_ERROR:{
code:'CHROME_INTERSTITIAL_ERROR',
message:UIStrings.pageLoadFailedInterstitial,
lhrRuntimeError:true},


PAGE_HUNG:{
code:'PAGE_HUNG',
message:UIStrings.pageLoadFailedHung,
lhrRuntimeError:true},



TRACING_ALREADY_STARTED:{
code:'TRACING_ALREADY_STARTED',
message:UIStrings.internalChromeError,
pattern:/Tracing.*started/,
lhrRuntimeError:true},

PARSING_PROBLEM:{
code:'PARSING_PROBLEM',
message:UIStrings.internalChromeError,
pattern:/Parsing problem/,
lhrRuntimeError:true},

READ_FAILED:{
code:'READ_FAILED',
message:UIStrings.internalChromeError,
pattern:/Read failed/,
lhrRuntimeError:true},



INVALID_URL:{
code:'INVALID_URL',
message:UIStrings.urlInvalid},





PROTOCOL_TIMEOUT:{
code:'PROTOCOL_TIMEOUT',
message:UIStrings.protocolTimeout,
lhrRuntimeError:true},



DNS_FAILURE:{
code:'DNS_FAILURE',
message:UIStrings.dnsFailure,
lhrRuntimeError:true},



CRI_TIMEOUT:{
code:'CRI_TIMEOUT',
message:UIStrings.criTimeout,
lhrRuntimeError:true},






MISSING_REQUIRED_ARTIFACT:{
code:'MISSING_REQUIRED_ARTIFACT',
message:UIStrings.missingRequiredArtifact},






ERRORED_REQUIRED_ARTIFACT:{
code:'ERRORED_REQUIRED_ARTIFACT',
message:UIStrings.erroredRequiredArtifact}};







LighthouseError.errors=ERRORS;
LighthouseError.NO_ERROR='NO_ERROR';
LighthouseError.UNKNOWN_ERROR='UNKNOWN_ERROR';
module.exports=LighthouseError;
module.exports.UIStrings=UIStrings;

}).call(this,"/lighthouse-core/lib/lh-error.js");
},{"./i18n/i18n.js":77}],83:[function(require,module,exports){





'use strict';

const URL=require('./url-shim.js');
const cssParsers=require('cssstyle/lib/parsers');

const ALLOWED_DISPLAY_VALUES=[
'fullscreen',
'standalone',
'minimal-ui',
'browser'];





const DEFAULT_DISPLAY_MODE='browser';

const ALLOWED_ORIENTATION_VALUES=[
'any',
'natural',
'landscape',
'portrait',
'portrait-primary',
'portrait-secondary',
'landscape-primary',
'landscape-secondary'];






function isValidColor(color){
return cssParsers.valueType(color)===cssParsers.TYPES.COLOR;
}





function parseString(raw,trim){
let value;
let warning;

if(typeof raw==='string'){
value=trim?raw.trim():raw;
}else{
if(raw!==undefined){
warning='ERROR: expected a string.';
}
value=undefined;
}

return{
raw,
value,
warning};

}




function parseColor(raw){
const color=parseString(raw);


if(color.value===undefined){
return color;
}


if(!isValidColor(color.raw)){
color.value=undefined;
color.warning='ERROR: color parsing failed.';
}

return color;
}




function parseName(jsonInput){
return parseString(jsonInput.name,true);
}




function parseShortName(jsonInput){
return parseString(jsonInput.short_name,true);
}







function checkSameOrigin(url1,url2){
const parsed1=new URL(url1);
const parsed2=new URL(url2);

return parsed1.origin===parsed2.origin;
}








function parseStartUrl(jsonInput,manifestUrl,documentUrl){
const raw=jsonInput.start_url;


if(raw===''){
return{
raw,
value:documentUrl,
warning:'ERROR: start_url string empty'};

}
if(raw===undefined){
return{
raw,
value:documentUrl};

}
if(typeof raw!=='string'){
return{
raw,
value:documentUrl,
warning:'ERROR: expected a string.'};

}


let startUrl;
try{
startUrl=new URL(raw,manifestUrl).href;
}catch(e){

return{
raw,
value:documentUrl,
warning:`ERROR: invalid start_url relative to ${manifestUrl}`};

}


if(!checkSameOrigin(startUrl,documentUrl)){
return{
raw,
value:documentUrl,
warning:'ERROR: start_url must be same-origin as document'};

}

return{
raw,
value:startUrl};

}




function parseDisplay(jsonInput){
const parsedString=parseString(jsonInput.display,true);
const stringValue=parsedString.value;

if(!stringValue){
return{
raw:jsonInput,
value:DEFAULT_DISPLAY_MODE,
warning:parsedString.warning};

}

const displayValue=stringValue.toLowerCase();
if(!ALLOWED_DISPLAY_VALUES.includes(displayValue)){
return{
raw:jsonInput,
value:DEFAULT_DISPLAY_MODE,
warning:'ERROR: \'display\' has invalid value '+displayValue+
`. will fall back to ${DEFAULT_DISPLAY_MODE}.`};

}

return{
raw:jsonInput,
value:displayValue,
warning:undefined};

}




function parseOrientation(jsonInput){
const orientation=parseString(jsonInput.orientation,true);

if(orientation.value&&
!ALLOWED_ORIENTATION_VALUES.includes(orientation.value.toLowerCase())){
orientation.value=undefined;
orientation.warning='ERROR: \'orientation\' has an invalid value, will be ignored.';
}

return orientation;
}






function parseIcon(raw,manifestUrl){

const src=parseString(raw.src,true);

if(src.value===''){
src.value=undefined;
}
if(src.value){
try{

src.value=new URL(src.value,manifestUrl).href;
}catch(_){

src.warning=`ERROR: invalid icon url will be ignored: '${raw.src}'`;
src.value=undefined;
}
}

const type=parseString(raw.type,true);

const parsedPurpose=parseString(raw.purpose);
const purpose={
raw:raw.purpose,
value:['any'],

warning:undefined};

if(parsedPurpose.value!==undefined){
purpose.value=parsedPurpose.value.split(/\s+/).map(value=>value.toLowerCase());
}

const density={
raw:raw.density,
value:1,

warning:undefined};

if(density.raw!==undefined){
density.value=parseFloat(density.raw);
if(isNaN(density.value)||!isFinite(density.value)||density.value<=0){
density.value=1;
density.warning='ERROR: icon density cannot be NaN, +∞, or less than or equal to +0.';
}
}

let sizes;
const parsedSizes=parseString(raw.sizes);
if(parsedSizes.value!==undefined){

const set=new Set();
parsedSizes.value.trim().split(/\s+/).forEach(size=>set.add(size.toLowerCase()));
sizes={
raw:raw.sizes,
value:set.size>0?Array.from(set):undefined,
warning:undefined};

}else{
sizes={...parsedSizes,value:undefined};
}

return{
raw,
value:{
src,
type,
density,
sizes,
purpose},

warning:undefined};

}





function parseIcons(jsonInput,manifestUrl){
const raw=jsonInput.icons;

if(raw===undefined){
return{
raw,

value:[],
warning:undefined};

}

if(!Array.isArray(raw)){
return{
raw,

value:[],
warning:'ERROR: \'icons\' expected to be an array but is not.'};

}

const parsedIcons=raw.

filter(icon=>icon.src!==undefined).

map(icon=>parseIcon(icon,manifestUrl));



const ignoredIconsWithWarnings=parsedIcons.
filter(icon=>{
const possibleWarnings=[icon.warning,icon.value.type.warning,icon.value.src.warning,
icon.value.sizes.warning,icon.value.density.warning].filter(Boolean);
const hasSrc=!!icon.value.src.value;
return!!possibleWarnings.length&&!hasSrc;
});

const value=parsedIcons.

filter(parsedIcon=>parsedIcon.value.src.value!==undefined);

return{
raw,
value,
warning:ignoredIconsWithWarnings.length?
'WARNING: Some icons were ignored due to warnings.':undefined};

}




function parseApplication(raw){
const platform=parseString(raw.platform,true);
const id=parseString(raw.id,true);


const appUrl=parseString(raw.url,true);
if(appUrl.value){
try{

appUrl.value=new URL(appUrl.value).href;
}catch(e){
appUrl.value=undefined;
appUrl.warning=`ERROR: invalid application URL ${raw.url}`;
}
}

return{
raw,
value:{
platform,
id,
url:appUrl},

warning:undefined};

}




function parseRelatedApplications(jsonInput){
const raw=jsonInput.related_applications;

if(raw===undefined){
return{
raw,
value:undefined,
warning:undefined};

}

if(!Array.isArray(raw)){
return{
raw,
value:undefined,
warning:'ERROR: \'related_applications\' expected to be an array but is not.'};

}



const value=raw.
filter(application=>!!application.platform).
map(parseApplication).
filter(parsedApp=>!!parsedApp.value.id.value||!!parsedApp.value.url.value);

return{
raw,
value,
warning:undefined};

}




function parsePreferRelatedApplications(jsonInput){
const raw=jsonInput.prefer_related_applications;
let value;
let warning;

if(typeof raw==='boolean'){
value=raw;
}else{
if(raw!==undefined){
warning='ERROR: \'prefer_related_applications\' expected to be a boolean.';
}
value=undefined;
}

return{
raw,
value,
warning};

}




function parseThemeColor(jsonInput){
return parseColor(jsonInput.theme_color);
}




function parseBackgroundColor(jsonInput){
return parseColor(jsonInput.background_color);
}







function parse(string,manifestUrl,documentUrl){
if(manifestUrl===undefined||documentUrl===undefined){
throw new Error('Manifest and document URLs required for manifest parsing.');
}

let jsonInput;

try{
jsonInput=JSON.parse(string);
}catch(e){
return{
raw:string,
value:undefined,
warning:'ERROR: file isn\'t valid JSON: '+e};

}


const manifest={
name:parseName(jsonInput),
short_name:parseShortName(jsonInput),
start_url:parseStartUrl(jsonInput,manifestUrl,documentUrl),
display:parseDisplay(jsonInput),
orientation:parseOrientation(jsonInput),
icons:parseIcons(jsonInput,manifestUrl),
related_applications:parseRelatedApplications(jsonInput),
prefer_related_applications:parsePreferRelatedApplications(jsonInput),
theme_color:parseThemeColor(jsonInput),
background_color:parseBackgroundColor(jsonInput)};




let manifestUrlWarning;
try{
const manifestUrlParsed=new URL(manifestUrl);
if(!manifestUrlParsed.protocol.startsWith('http')){
manifestUrlWarning=`WARNING: manifest URL not available over a valid network protocol`;
}
}catch(_){
manifestUrlWarning=`ERROR: invalid manifest URL: '${manifestUrl}'`;
}

return{
raw:string,
value:manifest,
warning:manifestUrlWarning};

}

module.exports=parse;

},{"./url-shim.js":"url","cssstyle/lib/parsers":117}],84:[function(require,module,exports){





'use strict';



const PUNCTUATOR_REGEX=/(return|{|\(|\[|\.\.\.|;|,|<|>|<=|>=|==|!=|===|!==|\+|-|\*|%|\*\*|\+\+|--|<<|>>|>>>|&|\||\^|!|~|&&|\|\||\?|:|=|\+=|-=|\*=|%=|\*\*=|<<=|>>=|>>>=|&=|\|=|\^=|=>|\/|\/=|\})$/;
const WHITESPACE_REGEX=/( |\n|\t)+$/;









function hasPunctuatorBefore(content,startPosition){
for(let i=startPosition;i>0;i--){

const sliceStart=Math.max(0,i-6);
const precedingCharacters=content.slice(sliceStart,i);

if(WHITESPACE_REGEX.test(precedingCharacters))continue;

return PUNCTUATOR_REGEX.test(precedingCharacters);
}



return true;
}







function computeTokenLength(content,features){
let totalTokenLength=0;
let isInSinglelineComment=false;
let isInMultilineComment=false;
let isInLicenseComment=false;
let isInString=false;
let isInRegex=false;
let isInRegexCharacterClass=false;
let stringOpenChar=null;

for(let i=0;i<content.length;i++){
const twoChars=content.substr(i,2);
const char=twoChars.charAt(0);

const isWhitespace=char===' '||char==='\n'||char==='\t';
const isAStringOpenChar=char===`'`||char==='"'||char==='`';

if(isInSinglelineComment){
if(char==='\n'){

isInSinglelineComment=false;
}
}else if(isInMultilineComment){

if(isInLicenseComment)totalTokenLength++;

if(twoChars==='*/'){

if(isInLicenseComment)totalTokenLength++;

isInMultilineComment=false;

i++;
}
}else if(isInString){

totalTokenLength++;

if(char==='\\'){

totalTokenLength++;
i++;
}else if(char===stringOpenChar){

isInString=false;

}
}else if(isInRegex){

totalTokenLength++;

if(char==='\\'){

totalTokenLength++;
i++;
}else if(char==='['){

isInRegexCharacterClass=true;
}else if(char===']'&&isInRegexCharacterClass){

isInRegexCharacterClass=false;
}else if(char==='/'&&!isInRegexCharacterClass){

isInRegex=false;

}
}else{

if(twoChars==='/*'){

isInMultilineComment=true;

isInLicenseComment=content.charAt(i+2)==='!';

if(isInLicenseComment)totalTokenLength+=2;

i++;
}else if(twoChars==='//'&&features.singlelineComments){

isInSinglelineComment=true;
isInMultilineComment=false;
isInLicenseComment=false;

i++;
}else if(char==='/'&&features.regex&&hasPunctuatorBefore(content,i)){

isInRegex=true;

totalTokenLength++;
}else if(isAStringOpenChar){

isInString=true;

stringOpenChar=char;

totalTokenLength++;
}else if(!isWhitespace){

totalTokenLength++;
}
}
}



if(isInMultilineComment||isInString){
return content.length;
}

return totalTokenLength;
}




function computeJSTokenLength(content){
return computeTokenLength(content,{singlelineComments:true,regex:true});
}




function computeCSSTokenLength(content){
return computeTokenLength(content,{singlelineComments:false,regex:false});
}

module.exports={computeJSTokenLength,computeCSSTokenLength};

},{}],85:[function(require,module,exports){





'use strict';

const NetworkRequest=require('./network-request.js');
const EventEmitter=require('events').EventEmitter;
const log=require('lighthouse-logger');

const IGNORED_NETWORK_SCHEMES=['data','ws'];



class NetworkRecorder extends EventEmitter{



constructor(){
super();


this._records=[];

this._recordsById=new Map();
}




getInflightRecords(){
return this._records.filter(record=>!record.finished);
}

getRecords(){
return Array.from(this._records);
}





on(event,listener){
return super.on(event,listener);
}





once(event,listener){
return super.once(event,listener);
}

isIdle(){
return this._isActiveIdlePeriod(0);
}

is2Idle(){
return this._isActiveIdlePeriod(2);
}







_isActiveIdlePeriod(allowedRequests){
let inflightRequests=0;

for(let i=0;i<this._records.length;i++){
const record=this._records[i];
if(record.finished)continue;
if(IGNORED_NETWORK_SCHEMES.includes(record.parsedURL.scheme))continue;
inflightRequests++;
}

return inflightRequests<=allowedRequests;
}

_emitNetworkStatus(){
const zeroQuiet=this.isIdle();
const twoQuiet=this.is2Idle();

if(twoQuiet&&zeroQuiet){
log.verbose('NetworkRecorder','network fully-quiet');
this.emit('network-2-idle');
this.emit('networkidle');
}else if(twoQuiet&&!zeroQuiet){
log.verbose('NetworkRecorder','network semi-quiet');
this.emit('network-2-idle');
this.emit('networkbusy');
}else{
log.verbose('NetworkRecorder','network busy');
this.emit('network-2-busy');
this.emit('networkbusy');
}
}









static findNetworkQuietPeriods(networkRecords,allowedConcurrentRequests,endTime=Infinity){


let timeBoundaries=[];
networkRecords.forEach(record=>{
const scheme=record.parsedURL&&record.parsedURL.scheme;
if(IGNORED_NETWORK_SCHEMES.includes(scheme)){
return;
}


timeBoundaries.push({time:record.startTime*1000,isStart:true});
if(record.finished){
timeBoundaries.push({time:record.endTime*1000,isStart:false});
}
});

timeBoundaries=timeBoundaries.
filter(boundary=>boundary.time<=endTime).
sort((a,b)=>a.time-b.time);

let numInflightRequests=0;
let quietPeriodStart=0;

const quietPeriods=[];
timeBoundaries.forEach(boundary=>{
if(boundary.isStart){

if(numInflightRequests===allowedConcurrentRequests){
quietPeriods.push({start:quietPeriodStart,end:boundary.time});
}
numInflightRequests++;
}else{
numInflightRequests--;

if(numInflightRequests===allowedConcurrentRequests){
quietPeriodStart=boundary.time;
}
}
});


if(numInflightRequests<=allowedConcurrentRequests){
quietPeriods.push({start:quietPeriodStart,end:endTime});
}

return quietPeriods.filter(period=>period.start!==period.end);
}







onRequestStarted(request){
this._records.push(request);
this._recordsById.set(request.requestId,request);

this.emit('requeststarted',request);
this._emitNetworkStatus();
}







onRequestFinished(request){
this.emit('requestloaded',request);
this._emitNetworkStatus();
}







onRequestWillBeSent(event){
const data=event.params;
const originalRequest=this._findRealRequestAndSetSession(data.requestId,event.sessionId);

if(!originalRequest){
const request=new NetworkRequest();
request.onRequestWillBeSent(data);
request.sessionId=event.sessionId;
this.onRequestStarted(request);
return;
}


if(!data.redirectResponse){
return;
}



const modifiedData={
...data,

initiator:originalRequest.initiator,
requestId:`${originalRequest.requestId}:redirect`};

const redirectedRequest=new NetworkRequest();

redirectedRequest.onRequestWillBeSent(modifiedData);
originalRequest.onRedirectResponse(data);

originalRequest.redirectDestination=redirectedRequest;
redirectedRequest.redirectSource=originalRequest;


this.onRequestStarted(redirectedRequest);
this.onRequestFinished(originalRequest);
}




onRequestServedFromCache(event){
const data=event.params;
const request=this._findRealRequestAndSetSession(data.requestId,event.sessionId);
if(!request)return;
request.onRequestServedFromCache();
}




onResponseReceived(event){
const data=event.params;
const request=this._findRealRequestAndSetSession(data.requestId,event.sessionId);
if(!request)return;
request.onResponseReceived(data);
}




onDataReceived(event){
const data=event.params;
const request=this._findRealRequestAndSetSession(data.requestId,event.sessionId);
if(!request)return;
request.onDataReceived(data);
}




onLoadingFinished(event){
const data=event.params;
const request=this._findRealRequestAndSetSession(data.requestId,event.sessionId);
if(!request)return;
request.onLoadingFinished(data);
this.onRequestFinished(request);
}




onLoadingFailed(event){
const data=event.params;
const request=this._findRealRequestAndSetSession(data.requestId,event.sessionId);
if(!request)return;
request.onLoadingFailed(data);
this.onRequestFinished(request);
}




onResourceChangedPriority(event){
const data=event.params;
const request=this._findRealRequestAndSetSession(data.requestId,event.sessionId);
if(!request)return;
request.onResourceChangedPriority(data);
}





dispatch(event){
switch(event.method){
case'Network.requestWillBeSent':return this.onRequestWillBeSent(event);
case'Network.requestServedFromCache':return this.onRequestServedFromCache(event);
case'Network.responseReceived':return this.onResponseReceived(event);
case'Network.dataReceived':return this.onDataReceived(event);
case'Network.loadingFinished':return this.onLoadingFinished(event);
case'Network.loadingFailed':return this.onLoadingFailed(event);
case'Network.resourceChangedPriority':return this.onResourceChangedPriority(event);
default:return;}

}











_findRealRequestAndSetSession(requestId,sessionId){
let request=this._recordsById.get(requestId);
if(!request||!request.isValid)return undefined;

while(request.redirectDestination){
request=request.redirectDestination;
}

request.setSession(sessionId);

return request;
}







static _chooseInitiator(record,recordsByURL){
if(record.redirectSource){
return record.redirectSource;
}
const stackFrames=record.initiator.stack&&record.initiator.stack.callFrames||[];
const initiatorURL=record.initiator.url||stackFrames[0]&&stackFrames[0].url;

let candidates=recordsByURL.get(initiatorURL)||[];

candidates=candidates.filter(cand=>cand.responseReceivedTime<=record.startTime);
if(candidates.length>1){


const nonPrefetchCandidates=candidates.filter(
cand=>cand.resourceType!==NetworkRequest.TYPES.Other);
if(nonPrefetchCandidates.length){
candidates=nonPrefetchCandidates;
}
}
if(candidates.length>1){

const sameFrameCandidates=candidates.filter(cand=>cand.frameId===record.frameId);
if(sameFrameCandidates.length){
candidates=sameFrameCandidates;
}
}

return candidates.length?candidates[0]:null;
}






static recordsFromLogs(devtoolsLog){
const networkRecorder=new NetworkRecorder();

devtoolsLog.forEach(message=>networkRecorder.dispatch(message));


const records=networkRecorder.getRecords().filter(record=>record.isValid);


const recordsByURL=new Map();
for(const record of records){
const records=recordsByURL.get(record.url)||[];
records.push(record);
recordsByURL.set(record.url,records);
}


for(const record of records){
const initiator=NetworkRecorder._chooseInitiator(record,recordsByURL);
if(initiator){
record.setInitiatorRequest(initiator);
}

let finalRecord=record;
while(finalRecord.redirectDestination)finalRecord=finalRecord.redirectDestination;
if(finalRecord===record||finalRecord.redirects)continue;

const redirects=[];
for(
let redirect=finalRecord.redirectSource;
redirect;
redirect=redirect.redirectSource)
{
redirects.unshift(redirect);
}

finalRecord.redirects=redirects;
}

return records;
}}


module.exports=NetworkRecorder;

},{"./network-request.js":86,"events":118,"lighthouse-logger":135}],86:[function(require,module,exports){
(function(global){





'use strict';







const URL=require('./url-shim.js');

const SECURE_SCHEMES=['data','https','wss','blob','chrome','chrome-extension','about'];



const HEADER_TCP='X-TCPMs';
const HEADER_SSL='X-SSLMs';
const HEADER_REQ='X-RequestMs';
const HEADER_RES='X-ResponseMs';
const HEADER_TOTAL='X-TotalMs';
const HEADER_FETCHED_SIZE='X-TotalFetchedSize';



























const RESOURCE_TYPES={
XHR:'XHR',
Fetch:'Fetch',
EventSource:'EventSource',
Script:'Script',
Stylesheet:'Stylesheet',
Image:'Image',
Media:'Media',
Font:'Font',
Document:'Document',
TextTrack:'TextTrack',
WebSocket:'WebSocket',
Other:'Other',
Manifest:'Manifest',
SignedExchange:'SignedExchange',
Ping:'Ping',
CSPViolationReport:'CSPViolationReport'};


class NetworkRequest{
constructor(){
this.requestId='';
this.connectionId='0';
this.connectionReused=false;

this.url='';
this.protocol='';
this.isSecure=false;
this.isValid=false;
this.parsedURL={scheme:''};
this.documentURL='';

this.startTime=-1;

this.endTime=-1;

this.responseReceivedTime=-1;


this.transferSize=0;
this.resourceSize=0;
this.fromDiskCache=false;
this.fromMemoryCache=false;


this.lrStatistics=undefined;

this.finished=false;
this.requestMethod='';
this.statusCode=-1;

this.redirectSource=undefined;

this.redirectDestination=undefined;

this.redirects=undefined;
this.failed=false;
this.localizedFailDescription='';

this.initiator={type:'other'};

this.timing=undefined;

this.resourceType=undefined;
this.mimeType='';

this.priority='Low';

this.initiatorRequest=undefined;

this.responseHeaders=[];

this.responseHeadersText='';

this.fetchedViaServiceWorker=false;

this.frameId='';





this.sessionId=undefined;
this.isLinkPreload=false;
}




hasErrorStatusCode(){
return this.statusCode>=400;
}




setInitiatorRequest(initiator){
this.initiatorRequest=initiator;
}




onRequestWillBeSent(data){
this.requestId=data.requestId;
let url;
try{

url=new URL(data.request.url);
}catch(e){

return;
}
this.url=data.request.url;
this.documentURL=data.documentURL;
this.parsedURL={
scheme:url.protocol.split(':')[0],

host:url.hostname,
securityOrigin:url.origin};

this.isSecure=SECURE_SCHEMES.includes(this.parsedURL.scheme);

this.startTime=data.timestamp;

this.requestMethod=data.request.method;

this.initiator=data.initiator;
this.resourceType=data.type&&RESOURCE_TYPES[data.type];
this.priority=data.request.initialPriority;

this.frameId=data.frameId;
this.isLinkPreload=data.initiator.type==='preload'||!!data.request.isLinkPreload;
this.isValid=true;
}

onRequestServedFromCache(){
this.fromMemoryCache=true;
}




onResponseReceived(data){
this._onResponse(data.response,data.timestamp,data.type);
this.frameId=data.frameId;
}




onDataReceived(data){
this.resourceSize+=data.dataLength;
if(data.encodedDataLength!==-1){
this.transferSize+=data.encodedDataLength;
}
}




onLoadingFinished(data){

if(this.finished)return;

this.finished=true;
this.endTime=data.timestamp;
if(data.encodedDataLength>=0){
this.transferSize=data.encodedDataLength;
}

this._updateResponseReceivedTimeIfNecessary();
this._updateTransferSizeForLightrider();
this._updateTimingsForLightrider();
}




onLoadingFailed(data){

if(this.finished)return;

this.finished=true;
this.endTime=data.timestamp;

this.failed=true;
this.resourceType=data.type&&RESOURCE_TYPES[data.type];
this.localizedFailDescription=data.errorText;

this._updateResponseReceivedTimeIfNecessary();
this._updateTransferSizeForLightrider();
this._updateTimingsForLightrider();
}




onResourceChangedPriority(data){
this.priority=data.newPriority;
}




onRedirectResponse(data){
if(!data.redirectResponse)throw new Error('Missing redirectResponse data');
this._onResponse(data.redirectResponse,data.timestamp,data.type);
this.resourceType=undefined;
this.finished=true;
this.endTime=data.timestamp;

this._updateResponseReceivedTimeIfNecessary();
}




setSession(sessionId){
this.sessionId=sessionId;
}






_onResponse(response,timestamp,resourceType){
this.url=response.url;

this.connectionId=String(response.connectionId);
this.connectionReused=response.connectionReused;

if(response.protocol)this.protocol=response.protocol;

this.responseReceivedTime=timestamp;

this.transferSize=response.encodedDataLength;
if(typeof response.fromDiskCache==='boolean')this.fromDiskCache=response.fromDiskCache;

this.statusCode=response.status;

this.timing=response.timing;
if(resourceType)this.resourceType=RESOURCE_TYPES[resourceType];
this.mimeType=response.mimeType;
this.responseHeadersText=response.headersText||'';
this.responseHeaders=NetworkRequest._headersDictToHeadersArray(response.headers);

this.fetchedViaServiceWorker=!!response.fromServiceWorker;

if(this.fromMemoryCache)this.timing=undefined;
if(this.timing)this._recomputeTimesWithResourceTiming(this.timing);
}






_recomputeTimesWithResourceTiming(timing){


if(timing.requestTime===0||timing.receiveHeadersEnd===-1)return;


this.startTime=timing.requestTime;
const headersReceivedTime=timing.requestTime+timing.receiveHeadersEnd/1000;
if(!this.responseReceivedTime||this.responseReceivedTime<0){
this.responseReceivedTime=headersReceivedTime;
}

this.responseReceivedTime=Math.min(this.responseReceivedTime,headersReceivedTime);
this.responseReceivedTime=Math.max(this.responseReceivedTime,this.startTime);


this.endTime=Math.max(this.endTime,this.responseReceivedTime);
}





_updateResponseReceivedTimeIfNecessary(){
this.responseReceivedTime=Math.min(this.endTime,this.responseReceivedTime);
}


















_updateTransferSizeForLightrider(){

if(!global.isLightrider)return;

const totalFetchedSize=this.responseHeaders.find(item=>item.name===HEADER_FETCHED_SIZE);

if(!totalFetchedSize)return;
const floatValue=parseFloat(totalFetchedSize.value);

if(isNaN(floatValue))return;
this.transferSize=floatValue;
}





_updateTimingsForLightrider(){

if(!global.isLightrider)return;

















const totalHeader=this.responseHeaders.find(item=>item.name===HEADER_TOTAL);

if(!totalHeader)return;

const totalMs=parseInt(totalHeader.value);
const TCPMsHeader=this.responseHeaders.find(item=>item.name===HEADER_TCP);
const SSLMsHeader=this.responseHeaders.find(item=>item.name===HEADER_SSL);
const requestMsHeader=this.responseHeaders.find(item=>item.name===HEADER_REQ);
const responseMsHeader=this.responseHeaders.find(item=>item.name===HEADER_RES);


const TCPMs=TCPMsHeader?Math.max(0,parseInt(TCPMsHeader.value)):0;
const SSLMs=SSLMsHeader?Math.max(0,parseInt(SSLMsHeader.value)):0;
const requestMs=requestMsHeader?Math.max(0,parseInt(requestMsHeader.value)):0;
const responseMs=responseMsHeader?Math.max(0,parseInt(responseMsHeader.value)):0;


if(TCPMs+requestMs+responseMs!==totalMs){
return;
}


if(SSLMs>TCPMs){
return;
}

this.lrStatistics={
endTimeDeltaMs:(this.endTime-(this.startTime+totalMs/1000))*1000,
TCPMs:TCPMs,
requestMs:requestMs,
responseMs:responseMs};

}







static getRequestIdForBackend(requestId){
return requestId.replace(/(:redirect)+$/,'');
}







static _headersDictToHeadersArray(headersDict){
const result=[];
for(const name of Object.keys(headersDict)){
const values=headersDict[name].split('\n');
for(let i=0;i<values.length;++i){
result.push({name:name,value:values[i]});
}
}
return result;
}

static get TYPES(){
return RESOURCE_TYPES;
}}


NetworkRequest.HEADER_TCP=HEADER_TCP;
NetworkRequest.HEADER_SSL=HEADER_SSL;
NetworkRequest.HEADER_REQ=HEADER_REQ;
NetworkRequest.HEADER_RES=HEADER_RES;
NetworkRequest.HEADER_TOTAL=HEADER_TOTAL;
NetworkRequest.HEADER_FETCHED_SIZE=HEADER_FETCHED_SIZE;

module.exports=NetworkRequest;

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"./url-shim.js":"url"}],87:[function(require,module,exports){






'use strict';














function wrapRuntimeEvalErrorInBrowser(err){
err=err||new Error();
const fallbackMessage=typeof err==='string'?err:'unknown error';

return{
__failedInBrowser:true,
name:err.name||'Error',
message:err.message||fallbackMessage,
stack:err.stack||new Error().stack};

}






function registerPerformanceObserverInPage(){
window.____lastLongTask=window.__perfNow();
const observer=new window.PerformanceObserver(entryList=>{
const entries=entryList.getEntries();
for(const entry of entries){
if(entry.entryType==='longtask'){
const taskEnd=entry.startTime+entry.duration;
window.____lastLongTask=Math.max(window.____lastLongTask,taskEnd);
}
}
});

observer.observe({entryTypes:['longtask']});





window.____lhPerformanceObserver=observer;
}





function checkTimeSinceLastLongTask(){


return new window.__nativePromise(resolve=>{
const timeoutRequested=window.__perfNow()+50;

setTimeout(()=>{

const timeoutFired=window.__perfNow();
const timeSinceLongTask=timeoutFired-timeoutRequested<50?
timeoutFired-window.____lastLongTask:0;
resolve(timeSinceLongTask);
},50);
});
}







function getElementsInDocument(selector){
const realMatchesFn=window.__ElementMatches||window.Element.prototype.matches;

const results=[];


const _findAllElements=nodes=>{
for(let i=0,el;el=nodes[i];++i){
if(!selector||realMatchesFn.call(el,selector)){
results.push(el);
}

if(el.shadowRoot){
_findAllElements(el.shadowRoot.querySelectorAll('*'));
}
}
};
_findAllElements(document.querySelectorAll('*'));

return results;
}








function getOuterHTMLSnippet(element,ignoreAttrs=[]){
try{

if(element instanceof ShadowRoot){
element=element.host;
}

const clone=element.cloneNode();
ignoreAttrs.forEach(attribute=>{
clone.removeAttribute(attribute);
});
const reOpeningTag=/^[\s\S]*?>/;
const match=clone.outerHTML.match(reOpeningTag);
return match&&match[0]||'';
}catch(_){

return`<${element.localName}>`;
}
}















function ultradumbBenchmark(){
const start=Date.now();
let iterations=0;

while(Date.now()-start<500){
let s='';
for(let j=0;j<100000;j++)s+='a';

iterations++;
}

const durationInSeconds=(Date.now()-start)/1000;
return Math.round(iterations/durationInSeconds);
}








function getNodePath(node){

function getNodeIndex(node){
let index=0;
let prevNode;
while(prevNode=node.previousSibling){
node=prevNode;

if(node.nodeType===Node.TEXT_NODE&&node.nodeValue.trim().length===0)continue;
index++;
}
return index;
}

const path=[];
while(node&&node.parentNode){
const index=getNodeIndex(node);
path.push([index,node.nodeName]);
node=node.parentNode;
}
path.reverse();
return path.join(',');
}






function getNodeSelector(node){



function getSelectorPart(node){
let part=node.tagName.toLowerCase();
if(node.id){
part+='#'+node.id;
}else if(node.classList.length>0){
part+='.'+node.classList[0];
}
return part;
}

const parts=[];
while(parts.length<4){
parts.unshift(getSelectorPart(node));
if(!node.parentElement){
break;
}
node=node.parentElement;
if(node.tagName==='HTML'){
break;
}
}
return parts.join(' > ');
}









function isPositionFixed(element){





function getStyleAttrValue(element,attr){

return element.style[attr]||window.getComputedStyle(element)[attr];
}


const htmlEl=document.querySelector('html');
if(htmlEl.scrollHeight<=htmlEl.clientHeight||
!['scroll','auto','visible'].includes(getStyleAttrValue(htmlEl,'overflowY'))){
return false;
}

let currentEl=element;
while(currentEl){
const position=getStyleAttrValue(currentEl,'position');
if(position==='fixed'||position==='sticky'){
return true;
}
currentEl=currentEl.parentElement;
}
return false;
}









function getNodeLabel(node){







function truncate(str,maxLength){
if(str.length<=maxLength){
return str;
}
return str.slice(0,maxLength-1)+'…';
}

const tagName=node.tagName.toLowerCase();

if(tagName!=='html'&&tagName!=='body'){
const nodeLabel=node.innerText||node.getAttribute('alt')||node.getAttribute('aria-label');
if(nodeLabel){
return truncate(nodeLabel,80);
}else{


const nodeToUseForLabel=node.querySelector('[alt], [aria-label]');
if(nodeToUseForLabel){
return getNodeLabel(nodeToUseForLabel);
}
}
}
return tagName;
}

module.exports={
wrapRuntimeEvalErrorInBrowserString:wrapRuntimeEvalErrorInBrowser.toString(),
registerPerformanceObserverInPageString:registerPerformanceObserverInPage.toString(),
checkTimeSinceLastLongTaskString:checkTimeSinceLastLongTask.toString(),
getElementsInDocumentString:getElementsInDocument.toString(),
getOuterHTMLSnippetString:getOuterHTMLSnippet.toString(),
getOuterHTMLSnippet:getOuterHTMLSnippet,
ultradumbBenchmark:ultradumbBenchmark,
ultradumbBenchmarkString:ultradumbBenchmark.toString(),
getNodePathString:getNodePath.toString(),
getNodeSelectorString:getNodeSelector.toString(),
getNodeSelector:getNodeSelector,
getNodeLabel:getNodeLabel,
getNodeLabelString:getNodeLabel.toString(),
isPositionFixedString:isPositionFixed.toString()};


},{}],88:[function(require,module,exports){





'use strict';





function rectContainsPoint(rect,{x,y}){
return rect.left<=x&&rect.right>=x&&rect.top<=y&&rect.bottom>=y;
}










function rectContains(rect1,rect2){
return rect2.top>=rect1.top&&
rect2.right<=rect1.right&&
rect2.bottom<=rect1.bottom&&
rect2.left>=rect1.left;
}





function filterOutTinyRects(rects){
return rects.filter(
rect=>rect.width>1&&rect.height>1);

}





function filterOutRectsContainedByOthers(rects){
const rectsToKeep=new Set(rects);

for(const rect of rects){
for(const possiblyContainingRect of rects){
if(rect===possiblyContainingRect)continue;
if(!rectsToKeep.has(possiblyContainingRect))continue;
if(rectContains(possiblyContainingRect,rect)){
rectsToKeep.delete(rect);
break;
}
}
}

return Array.from(rectsToKeep);
}





function getRectCenterPoint(rect){
return{
x:rect.left+rect.width/2,
y:rect.top+rect.height/2};

}






function rectsTouchOrOverlap(rectA,rectB){

return(
rectA.left<=rectB.right&&
rectB.left<=rectA.right&&
rectA.top<=rectB.bottom&&
rectB.top<=rectA.bottom);

}








function getBoundingRectWithPadding(rects,padding){
if(rects.length===0){
throw new Error('No rects to take bounds of');
}

let left=Number.MAX_VALUE;
let right=-Number.MAX_VALUE;
let top=Number.MAX_VALUE;
let bottom=-Number.MAX_VALUE;
for(const rect of rects){
left=Math.min(left,rect.left);
right=Math.max(right,rect.right);
top=Math.min(top,rect.top);
bottom=Math.max(bottom,rect.bottom);
}


const halfMinSize=padding/2;
left-=halfMinSize;
right+=halfMinSize;
top-=halfMinSize;
bottom+=halfMinSize;

return{
left,
right,
top,
bottom,
width:right-left,
height:bottom-top};

}




function getBoundingRect(rects){
return getBoundingRectWithPadding(rects,0);
}





function addRectWidthAndHeight({left,top,right,bottom}){
return{
left,
top,
right,
bottom,
width:right-left,
height:bottom-top};

}





function addRectTopAndBottom({x,y,width,height}){
return{
left:x,
top:y,
right:x+width,
bottom:y+height,
width,
height};

}





function getRectOverlapArea(rect1,rect2){

const rectYOverlap=Math.min(rect1.bottom,rect2.bottom)-Math.max(rect1.top,rect2.top);
if(rectYOverlap<=0)return 0;

const rectXOverlap=Math.min(rect1.right,rect2.right)-Math.max(rect1.left,rect2.left);
if(rectXOverlap<=0)return 0;

return rectXOverlap*rectYOverlap;
}





function getRectAtCenter(rect,centerRectSize){
return addRectWidthAndHeight({
left:rect.left+rect.width/2-centerRectSize/2,
top:rect.top+rect.height/2-centerRectSize/2,
right:rect.right-rect.width/2+centerRectSize/2,
bottom:rect.bottom-rect.height/2+centerRectSize/2});

}





function getRectArea(rect){
return rect.width*rect.height;
}





function getLargestRect(rects){
let largestRect=rects[0];
for(const rect of rects){
if(getRectArea(rect)>getRectArea(largestRect)){
largestRect=rect;
}
}
return largestRect;
}






function allRectsContainedWithinEachOther(rectListA,rectListB){
for(const rectA of rectListA){
for(const rectB of rectListB){
if(!rectContains(rectA,rectB)&&!rectContains(rectB,rectA)){
return false;
}
}
}
return true;
}

module.exports={
rectContainsPoint,
rectContains,
addRectWidthAndHeight,
addRectTopAndBottom,
getRectOverlapArea,
getRectAtCenter,
getLargestRect,
getRectArea,
getRectCenterPoint,
getBoundingRect,
getBoundingRectWithPadding,
rectsTouchOrOverlap,
allRectsContainedWithinEachOther,
filterOutRectsContainedByOthers,
filterOutTinyRects};


},{}],89:[function(require,module,exports){





'use strict';

const log=require('lighthouse-logger');




const SENTRY_URL='https://a6bb0da87ee048cc9ae2a345fc09ab2e:63a7029f46f74265981b7e005e0f69f8@sentry.io/174697';


const SAMPLE_RATE=0.01;


const SAMPLED_ERRORS=[];




const noop=()=>{};





const sentryDelegate={
init,

captureMessage:noop,

captureBreadcrumb:noop,

getContext:noop,

captureException:async()=>{},
_shouldSample(){
return SAMPLE_RATE>=Math.random();
}};






function init(opts){

if(!opts.flags.enableErrorReporting){
return;
}


if(!sentryDelegate._shouldSample()){
return;
}

try{
const Sentry=require('raven');
const sentryConfig=Object.assign({},opts.environmentData,
{captureUnhandledRejections:true});
Sentry.config(SENTRY_URL,sentryConfig).install();


sentryDelegate.captureMessage=(...args)=>Sentry.captureMessage(...args);
sentryDelegate.captureBreadcrumb=(...args)=>Sentry.captureBreadcrumb(...args);
sentryDelegate.getContext=()=>Sentry.getContext();


const sentryExceptionCache=new Map();

sentryDelegate.captureException=async(err,opts={})=>{

if(!err)return;



if(err.expected)return;

const tags=opts.tags||{};
if(tags.audit){
const key=`audit-${tags.audit}-${err.message}`;
if(sentryExceptionCache.has(key))return;
sentryExceptionCache.set(key,true);
}

if(tags.gatherer){
const key=`gatherer-${tags.gatherer}-${err.message}`;
if(sentryExceptionCache.has(key))return;
sentryExceptionCache.set(key,true);
}


const sampledErrorMatch=SAMPLED_ERRORS.find(sample=>sample.pattern.test(err.message));
if(sampledErrorMatch&&sampledErrorMatch.rate<=Math.random())return;



if(err.protocolMethod){

opts.fingerprint=['{{ default }}',err.protocolMethod,err.protocolError];
}

return new Promise(resolve=>{
Sentry.captureException(err,opts,()=>resolve());
});
};

const context=Object.assign({
url:opts.url,
emulatedFormFactor:opts.flags.emulatedFormFactor,
throttlingMethod:opts.flags.throttlingMethod},
opts.flags.throttling);
Sentry.mergeContext({extra:Object.assign({},opts.environmentData.extra,context)});
}catch(e){
log.warn(
'sentry',
'Could not load raven library, errors will not be reported.');

}
}

module.exports=sentryDelegate;

},{"lighthouse-logger":135,"raven":113}],90:[function(require,module,exports){













'use strict';


const libDetectorSource="var UNKNOWN_VERSION = null;\nvar d41d8cd98f00b204e9800998ecf8427e_LibraryDetectorTests = {\n\n    'GWT': {\n        id: 'gwt',\n        icon: 'gwt',\n        url: 'http://www.gwtproject.org/',\n        test: function(win) {\n            // pretty complicated, many possible tell tales\n            var doc = win.document,\n                hasHistFrame = doc.getElementById('__gwt_historyFrame'),\n                hasGwtUid = doc.gwt_uid,\n                hasBodyListener = doc.body.__listener,\n                hasBodyEventBits = doc.body.__eventBits,\n                hasModules = win.__gwt_activeModules,\n                hasJsonP = win.__gwt_jsonp__,\n                hasRootWinApp = win.__gwt_scriptsLoaded || win.__gwt_stylesLoaded || win.__gwt_activeModules;\n\n            // use the many possible indicators\n            if(hasHistFrame || hasGwtUid || hasBodyListener || hasBodyEventBits || hasModules || hasJsonP || hasRootWinApp) {\n\n                // carefully look at frames, but only if certain is GWT frame\n                var frames = doc.getElementsByTagName('iframe'),\n                    gwtVersion = UNKNOWN_VERSION;\n                for(var n=0; n<frames.length; n++) {\n                    // catch security access errors\n                    try {\n                        var hasNegativeTabIndex = frames[n].tabIndex < 0; // on for GWT\n                        if(hasNegativeTabIndex && frames[n].contentWindow && frames[n].contentWindow.$gwt_version) {\n                            gwtVersion = frames[n].contentWindow.$gwt_version;\n                            break;\n                        }\n                    }\n                    catch(e) {}\n                }\n\n                if(gwtVersion=='0.0.999') {\n                  gwtVersion = 'Google Internal';\n                }\n\n                return { version: gwtVersion };\n            }\n            return false;\n        }\n    },\n\n    'Ink': {\n        id: 'ink',\n        icon: 'ink',\n        url: 'http://ink.sapo.pt/',\n        test: function(win) {\n            if (win.Ink && win.Ink.createModule) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Vaadin': {\n        id: 'vaadin',\n        icon: 'vaadin',\n        url: 'https://vaadin.com/',\n        test: function(win) {\n            if (win.vaadin && win.vaadin.registerWidgetset) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Bootstrap': {\n        id: 'bootstrap',\n        icon: 'bootstrap',\n        url: 'http://getbootstrap.com/',\n        npm: 'bootstrap',\n        // look for a function Boostrap has added to jQuery - regex for BS 2 & 3\n        test: function(win) {\n            var jQueryAvailable = win.$ && win.$.fn,\n                RE_PREFIX_V2 = '\\\\$this\\\\.data\\\\((?:\\'|\")',\n                RE_PREFIX_V3 = '\\\\$this\\\\.data\\\\((?:\\'|\")(?:bs\\\\.){1}',\n                bootstrapComponents = [\n                    'affix', 'alert', 'button', 'carousel', 'collapse', 'dropdown',\n                    'modal', 'popover', 'scrollspy', 'tab', 'tooltip'\n                ];\n\n            if(jQueryAvailable) {\n                var bootstrapVersion;\n\n                bootstrapComponents.some(function(component) {\n                    if(win.$.fn[component]) {\n                        // Bootstrap >= 3.2.0 detection\n                        if(win.$.fn[component].Constructor && win.$.fn[component].Constructor.VERSION) {\n                            bootstrapVersion = win.$.fn[component].Constructor.VERSION;\n                            return true;\n                        // Bootstrap >= 2.0.0 and <= 3.1.0 detection\n                        } else if(new RegExp(RE_PREFIX_V3 + component).test(win.$.fn[component].toString())) {\n                            bootstrapVersion = '>= 3.0.0 & <= 3.1.1';\n                            return true;\n                        // Bootstrap < 3.1.0 detection\n                        } else if(new RegExp(RE_PREFIX_V2 + component).test(win.$.fn[component].toString())) {\n                            bootstrapVersion = '>= 2.0.0 & <= 2.3.2';\n                            return true;\n                        }\n                    }\n\n                    return false;\n                });\n\n                if (bootstrapVersion) {\n                    return { version: bootstrapVersion };\n                }\n            }\n\n            return false;\n        }\n    },\n\n    'Zurb': {\n        id: 'zurb',\n        icon: 'zurb',\n        url: 'https://foundation.zurb.com/',\n        npm: 'foundation-sites',\n        test: function(win) {\n            if(win.Foundation && win.Foundation.Toggler) {\n                return { version: win.Foundation.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Polymer': {\n        id: 'polymer',\n        icon: 'polymer',\n        url: 'https://www.polymer-project.org/',\n        npm: '@polymer/polymer',\n        test: function(win) {\n            if(win.Polymer && win.Polymer.dom) {\n                return { version: win.Polymer.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Highcharts': {\n        id: 'highcharts',\n        icon: 'highcharts',\n        url: 'http://www.highcharts.com',\n        npm: 'highcharts',\n        test: function(win) {\n            if(win.Highcharts && win.Highcharts.Point) {\n                return { version: win.Highcharts.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'InfoVis': {\n        id: 'jit',\n        icon: 'jit',\n        url: 'http://philogb.github.com/jit/',\n        test: function test(win) {\n            if(win.$jit && win.$jit.PieChart) {\n                return { version: win.$jit.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'FlotCharts': {\n        id: 'flotcharts',\n        icon: 'flotcharts',\n        url: 'http://www.flotcharts.org/',\n        npm: 'flot',\n        test: function(win) {\n            if(win.$ && win.$.plot) {\n                return { version: win.$.plot.version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'CreateJS': {\n        id: 'createjs',\n        icon: 'createjs',\n        url: 'https://createjs.com/',\n        npm: 'createjs',\n        test: function(win) {\n            if(win.createjs && win.createjs.promote) {\n                return { version: UNKNOWN_VERSION}; // no version info available\n            }\n            return false;\n        }\n    },\n\n    'Google Maps': {\n        id: 'gmaps',\n        icon: 'gmaps',\n        url: 'https://developers.google.com/maps/',\n        test: function(win) {\n            if (win.google && win.google.maps) {\n                return { version: win.google.maps.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'jQuery': {\n        id: 'jquery',\n        icon: 'jquery',\n        url: 'http://jquery.com',\n        npm: 'jquery',\n        test: function(win) {\n            var jq = win.jQuery || win.$;\n            if (jq && jq.fn && jq.fn.jquery) {\n                return { version: jq.fn.jquery.replace(/[^\\d+\\.+]/g, '') || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'jQuery (Fast path)': {\n        id: 'jquery-fast',\n        icon: 'jquery',\n        url: 'http://jquery.com',\n        npm: 'jquery',\n        test: function (win) {\n            var jq = win.jQuery || win.$;\n            if (jq && jq.fn) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'jQuery UI': {\n        id: 'jquery_ui',\n        icon: 'jquery_ui',\n        url: 'http://jqueryui.com',\n        npm: 'jquery-ui',\n        test: function(win) {\n            var jq = win.jQuery || win.$ || win.$jq || win.$j;\n            if(jq && jq.fn && jq.fn.jquery && jq.ui) {\n                var plugins = 'accordion,datepicker,dialog,draggable,droppable,progressbar,resizable,selectable,slider,menu,grid,tabs'.split(','), concat = [];\n                for (var i=0; i < plugins.length; i++) { if(jq.ui[plugins[i]]) concat.push(plugins[i].substr(0,1).toUpperCase() + plugins[i].substr(1)); }\n                return { version: jq.ui.version || UNKNOWN_VERSION, details: concat.length ? 'Plugins used: '+concat.join(',') : '' };\n            }\n            return false;\n        }\n    },\n\n    'Dojo': {\n        id: 'dojo',\n        icon: 'dojo',\n        url: 'http://dojotoolkit.org',\n        npm: 'dojo',\n        test: function(win) {\n            if(win.dojo && win.dojo.delegate) {\n                var version = win.dojo.version ? win.dojo.version.toString() : UNKNOWN_VERSION;\n                return { version: version, details: 'Details: '+(win.dijit ? 'Uses Dijit' : 'none') };\n            }\n            return false;\n        }\n    },\n\n    'Prototype': {\n        id: 'prototype',\n        icon: 'prototype',\n        url: 'http://prototypejs.org',\n        test: function(win) {\n            if(win.Prototype && win.Prototype.BrowserFeatures) {\n                return { version: win.Prototype.Version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Scriptaculous': {\n        id: 'scriptaculous',\n        icon: 'scriptaculous',\n        url: 'http://script.aculo.us',\n        test: function(win) {\n            if(win.Scriptaculous && win.Scriptaculous.load) {\n                return { version: win.Scriptaculous.Version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'MooTools': {\n        id: 'mootools',\n        icon: 'mootools',\n        url: 'https://mootools.net/',\n        test: function(win) {\n            if(win.MooTools && win.MooTools.build) {\n                return { version: win.MooTools.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Spry': {\n        id: 'spry',\n        icon: 'spry',\n        url: 'http://labs.adobe.com/technologies/spry',\n        test: function(win) {\n            if (win.Spry && win.Spry.Data) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'YUI 2': {\n        id: 'yui',\n        icon: 'yui',\n        url: 'http://developer.yahoo.com/yui/2/',\n        test: function(win) {\n            if (win.YAHOO && win.YAHOO.util) {\n                return { version: win.YAHOO.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'YUI 3': {\n        id: 'yui3',\n        icon: 'yui3',\n        url: 'https://yuilibrary.com/',\n        npm: 'yui',\n        test: function(win) {\n            if (win.YUI && win.YUI.Env) {\n                return { version: win.YUI.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Qooxdoo': {\n        id: 'qooxdoo',\n        icon: 'qooxdoo',\n        url: 'http://www.qooxdoo.org/',\n        npm: 'qooxdoo',\n        test: function(win) {\n            if(win.qx && win.qx.Bootstrap) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Ext JS': {\n        id: 'extjs',\n        icon: 'extjs',\n        url: 'https://www.sencha.com/products/extjs/',\n        test: function(win) {\n            if (win.Ext && win.Ext.versions) {\n                return { version: win.Ext.versions.core.version };\n            }\n            else if(win.Ext) {\n                return { version: win.Ext.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'base2': {\n        id: 'base2',\n        icon: 'base2',\n        url: 'http://code.google.com/p/base2',\n        test: function(win) {\n            if(win.base2 && win.base2.dom) {\n                return { version: win.base2.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Closure Library': {\n        id: 'closure',\n        icon: 'closure',\n        url: 'https://developers.google.com/closure/library/',\n        npm: 'google-closure-library',\n        test: function(win) {\n            if(win.goog && win.goog.provide) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Rapha&euml;l': {\n        id: 'raphael',\n        icon: 'raphael',\n        url: 'http://dmitrybaranovskiy.github.io/raphael/',\n        test: function(win) {\n            if (win.Raphael && win.Raphael.circle) {\n                return { version: win.Raphael.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'React': {\n        id: 'react',\n        icon: 'react',\n        url: 'https://reactjs.org/',\n        npm: 'react',\n        test: function(win) {\n            function isMatch(node) {\n                return node!=null && node._reactRootContainer!=null;\n            }\n            function nodeFilter(node) {\n                return isMatch(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n            }\n            var reactRoot = document.getElementById('react-root');\n            var altHasReact = document.querySelector('*[data-reactroot]');\n            var bodyReactRoot = isMatch(document.body) || isMatch(document.body.firstElementChild);\n            var hasReactRoot = bodyReactRoot|| document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT, nodeFilter).nextNode() != null;\n            if (hasReactRoot || reactRoot && reactRoot.innerText.length > 0 || altHasReact || win.React && win.React.Component) {\n                return { version: win.React && win.React.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'React (Fast path)': {\n        id: 'react-fast',\n        icon: 'react',\n        url: 'https://reactjs.org/',\n        npm: 'react',\n        test: function (win) {\n            function isMatch(node) {\n                return node != null && node._reactRootContainer != null;\n            }\n            var reactRoot = document.getElementById('react-root');\n            var altHasReact = document.querySelector('*[data-reactroot]');\n            var hasReactRoot = isMatch(document.body) || isMatch(document.body.firstElementChild);\n            if (hasReactRoot || reactRoot || altHasReact || win.React) {\n                return { version: win.React && win.React.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Next.js': {\n        id: 'next',\n        icon: 'next',\n        url: 'https://nextjs.org/',\n        npm: 'next',\n        test: function(win) {\n            if (win.__NEXT_DATA__ && win.__NEXT_DATA__.buildId) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Next.js (Fast path)': {\n        id: 'next-fast',\n        icon: 'next',\n        url: 'https://nextjs.org/',\n        npm: 'next',\n        test: function (win) {\n            if (win.__NEXT_DATA__) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Preact': {\n        id: 'preact',\n        icon: 'preact',\n        url: 'https://preactjs.com/',\n        npm: 'preact',\n        test: function(win) {\n            var expando = typeof Symbol!='undefined' && Symbol.for && Symbol.for('preactattr');\n            function isMatch(node) {\n                if ('__k' in node && 'props' in node.__k && 'type' in node.__k) {\n                    return true;\n                }\n                return '_component' in node || '__preactattr_' in node || expando && node[expando]!=null;\n            }\n            function getMatch(node) {\n                return node!=null && isMatch(node) && node;\n            }\n            function nodeFilter(node) {\n                return isMatch(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n            }\n            var preactRoot = getMatch(document.body) || getMatch(document.body.firstElementChild);\n            if (!preactRoot) {\n                preactRoot = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT, nodeFilter).nextNode();\n            }\n            if (preactRoot || win.preact) {\n                var version = UNKNOWN_VERSION;\n                if (expando && preactRoot && preactRoot[expando]!=null) {\n                    version = '7';\n                }\n                if (preactRoot && '__k' in preactRoot) {\n                    version = '10';\n                }\n                return { version: version };\n            }\n            return false;\n        }\n    },\n\n    'Preact (Fast path)': {\n        id: 'preact-fast',\n        icon: 'preact',\n        url: 'https://preactjs.com/',\n        npm: 'preact',\n        test: function (win) {\n            function isMatch(node) {\n                return node._component != null || node.__preactattr_ != null;\n            }\n            function getMatch(node) {\n                return node != null && isMatch(node);\n            }\n            var preactRoot = getMatch(document.body) || getMatch(document.body.firstElementChild);\n            if (preactRoot || win.preact) {\n                var version = UNKNOWN_VERSION;\n                return { version: version };\n            }\n            return false;\n        }\n    },\n\n    'Modernizr': {\n        id: 'modernizr',\n        icon: 'modernizr',\n        url: 'https://modernizr.com/',\n        npm: 'modernizr',\n        test: function(win) {\n            if (win.Modernizr && win.Modernizr.addTest) {\n                return { version: win.Modernizr._version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Processing.js': {\n        id: 'processingjs',\n        icon: 'processingjs',\n        url: 'http://processingjs.org',\n        npm: 'processing-js',\n        test: function(win) {\n            if(win.Processing && win.Processing.box) {\n                return { version: Processing.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Backbone': {\n        id: 'backbone',\n        icon: 'backbone',\n        url: 'http://backbonejs.org/',\n        npm: 'backbone',\n        test: function(win) {\n            if (win.Backbone && win.Backbone.Model.extend) {\n                return {version: win.Backbone.VERSION || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Leaflet': {\n        id: 'leaflet',\n        icon: 'leaflet',\n        url: 'http://leafletjs.com',\n        npm: 'leaflet',\n        test: function(win) {\n            // Leaflet 3.1 uses L.Marker and L.VERSION; later versions use L.marker and L.version\n            if (win.L && win.L.GeoJSON && (win.L.marker || win.L.Marker)) {\n                return { version: win.L.version || win.L.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Mapbox': {\n        id: 'mapbox',\n        icon: 'mapbox',\n        url: 'https://www.mapbox.com/',\n        npm: 'mapbox-gl',\n        test: function(win) {\n            if (win.L && win.L.mapbox && win.L.mapbox.geocoder) {\n                return { version: win.L.mapbox.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Lo-Dash': {\n        id: 'lodash',\n        icon: 'lodash',\n        url: 'https://lodash.com/',\n        npm: 'lodash',\n        test: function(win) {\n            var _ = typeof (_ = win._) == 'function' && _,\n                chain = typeof (chain = _ && _.chain) == 'function' && chain,\n                wrapper = (chain || _ || function() { return {}; })(1);\n\n            if (_ && wrapper.__wrapped__) {\n                return { version: _.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Underscore': {\n        id: 'underscore',\n        icon: 'underscore',\n        url: 'http://underscorejs.org/',\n        npm: 'underscore',\n        test: function(win) {\n            if (win._ && typeof win._.tap === 'function' &&\n                !d41d8cd98f00b204e9800998ecf8427e_LibraryDetectorTests['Lo-Dash'].test(win)) {\n                return {version: win._.VERSION || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Sammy': {\n        id: 'sammy',\n        icon: 'sammy',\n        url: 'http://sammyjs.org',\n        test: function(win) {\n            if (win.Sammy && win.Sammy.Application.curry) {\n                return {version: win.Sammy.VERSION || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Rico': {\n        id: 'rico',\n        icon: 'rico',\n        url: 'http://openrico.sourceforge.net/examples/index.html',\n        test:  function(win) {\n            if (win.Rico && window.Rico.checkIfComplete) {\n                return {version: win.Rico.Version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'MochiKit': {\n        id: 'mochikit',\n        icon: 'mochikit',\n        url: 'https://mochi.github.io/mochikit/',\n        test: function(win) {\n            if (win.MochiKit && win.MochiKit.Base.module) {\n                return {version: MochiKit.VERSION || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'gRapha&euml;l': {\n        id: 'graphael',\n        icon: 'graphael',\n        url: 'https://github.com/DmitryBaranovskiy/g.raphael',\n        test: function(win) {\n            if (win.Raphael && win.Raphael.fn.g) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Glow': {\n        id: 'glow',\n        icon: 'glow',\n        url: 'http://www.bbc.co.uk/glow/',\n        test: function(win) {\n            if (win.gloader && win.gloader.getRequests) {\n                return {version: UNKNOWN_VERSION};\n            }\n            else if (win.glow && win.glow.dom) {\n                return {version: win.glow.VERSION || UNKNOWN_VERSION};\n            }\n            else if (win.Glow) {\n                return {version: win.Glow.version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Socket.IO': {\n        id: 'socketio',\n        icon: 'socketio', // currently has no icon\n        url: 'https://socket.io/',\n        npm: 'socket.io',\n        test: function(win) {\n            // version 0.6.2 uses only io.Socket; more recent versions also have io.sockets\n            if (win.io && (win.io.sockets || win.io.Socket)) {\n                return {version: win.io.version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Mustache': {\n        id: 'mustache',\n        icon: 'mustache',\n        url: 'http://mustache.github.io/',\n        npm: 'mustache',\n        test: function(win) {\n            if (win.Mustache && win.Mustache.to_html) {\n                return {version: win.Mustache.version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Fabric.js': {\n        id: 'fabricjs',\n        icon: 'icon38', // currently has no icon\n        url: 'http://fabricjs.com/',\n        npm: 'fabric',\n        test: function(win) {\n            if (win.fabric && win.fabric.util) {\n                return {version: win.fabric.version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'FuseJS': {\n        id: 'fusejs',\n        icon: 'fusejs',\n        url: 'http://fusejs.io/',\n        npm: 'fuse.js',\n        test: function(win) {\n            if (win.Fuse) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Tween.js': {\n        id: 'tweenjs',\n        icon: 'icon38', // currently has no icon\n        url: 'https://github.com/tweenjs/tween.js',\n        npm: 'tween.js',\n        test: function(win) {\n            if (win.TWEEN && win.TWEEN.Easing) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'SproutCore': {\n       id: 'sproutcore',\n       icon: 'sproutcore',\n       url: 'http://sproutcore.com/',\n       test: function(win) {\n           if (win.SC && win.SC.Application) {\n               return {version: UNKNOWN_VERSION};\n           }\n           return false;\n       }\n    },\n\n    'Zepto.js': {\n       id: 'zepto',\n       icon: 'zepto',\n       url: 'http://zeptojs.com',\n       npm: 'zepto',\n       test: function(win) {\n           if (win.Zepto && win.Zepto.fn) {\n               return {version: UNKNOWN_VERSION};\n           }\n           return false;\n       }\n    },\n\n    'three.js': {\n       id: 'threejs',\n       icon: 'icon38', // currently has no icon\n       url: 'https://threejs.org/',\n       npm: 'three',\n       test: function(win) {\n           if (win.THREE && win.THREE.REVISION) {\n               return {version: 'r' + win.THREE.REVISION};\n           }\n           else if (win.THREE) {\n               return {version: UNKNOWN_VERSION};\n           }\n           return false;\n       }\n    },\n\n    'PhiloGL': {\n       id: 'philogl',\n       icon: 'philogl',\n       url: 'http://www.senchalabs.org/philogl/',\n       npm: 'philogl',\n       test: function(win) {\n           if (win.PhiloGL && win.PhiloGL.Camera) {\n               return {version: win.PhiloGL.version || UNKNOWN_VERSION};\n           }\n           return false;\n       }\n    },\n\n    'CamanJS': {\n        id: 'camanjs',\n        icon: 'camanjs',\n        url: 'http://camanjs.com/',\n        npm: 'caman',\n        test: function(win) {\n            if (win.Caman && win.Caman.version) {\n                return {version: win.Caman.version.release};\n            }\n            else if (win.Caman) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'yepnope': {\n        id: 'yepnope',\n        icon: 'yepnope',\n        url: 'http://yepnopejs.com/',\n        test: function(win) {\n            if (win.yepnope && win.yepnope.injectJs) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'LABjs': {\n        id: 'labjs',\n        icon: 'icon38',\n        url: 'https://github.com/getify/LABjs',\n        test: function(win) {\n            if (win.$LAB && win.$LAB.setOptions) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'Head JS': {\n        id: 'headjs',\n        icon: 'headjs',\n        url: 'http://headjs.com/',\n        npm: 'headjs',\n        test: function(win) {\n            if (win.head && win.head.js) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'ControlJS': {\n        id: 'controljs',\n        icon: 'icon38',\n        url: 'http://stevesouders.com/controljs/',\n        test: function(win) {\n            if (win.CJS && win.CJS.start) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'RequireJS': {\n        id: 'requirejs',\n        icon: 'requirejs',\n        url: 'http://requirejs.org/',\n        npm: 'requirejs',\n        test: function(win) {\n            var req = win.require || win.requirejs;\n            if (req && (req.load || (req.s && req.s.contexts && req.s.contexts._ && (req.s.contexts._.loaded || req.s.contexts._.load)))) {\n                return { version: req.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'RightJS': {\n        id: 'rightjs',\n        icon: 'rightjs',\n        url: 'http://rightjs.org/',\n        test: function(win) {\n            if (win.RightJS && win.RightJS.isNode) {\n                return { version: win.RightJS.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'jQuery Tools': {\n       id: 'jquerytools',\n       icon: 'jquerytools',\n       url: 'http://jquerytools.github.io/',\n       test: function(win) {\n            var jq = win.jQuery || win.$;\n            if(jq && jq.tools) {\n               return { version: jq.tools.version || UNKNOWN_VERSION };\n           }\n           return false;\n       }\n    },\n\n    'Pusher': {\n       id: 'pusher',\n       icon: 'pusher',\n       url: 'https://pusher.com/docs/',\n       npm: 'pusher-js',\n       test: function(win) {\n            if(win.Pusher && win.Pusher.Channel) {\n               return { version: win.Pusher.VERSION || UNKNOWN_VERSION };\n           }\n           return false;\n       }\n    },\n\n    'Paper.js': {\n       id: 'paperjs',\n       icon: 'paperjs',\n       url: 'http://paperjs.org/',\n       npm: 'paper',\n       test: function(win) {\n            if(win.paper && win.paper.Point) {\n               return { version: win.paper.version || UNKNOWN_VERSION };\n           }\n           return false;\n       }\n    },\n\n    'Swiffy': {\n       id: 'swiffy',\n       icon: 'icon38',\n       url: 'https://developers.google.com/swiffy/',\n       test: function(win) {\n            if(win.swiffy && win.swiffy.Stage) {\n               return { version: UNKNOWN_VERSION };\n           }\n           return false;\n       }\n    },\n\n    'Move': {\n       id: 'move',\n       icon: 'move',\n       url: 'https://github.com/rsms/move',\n       npm: 'move',\n       test: function(win) {\n            if(win.move && win.move.compile) {\n               return { version: win.move.version() || UNKNOWN_VERSION };\n           }\n           return false;\n       }\n    },\n\n    'AmplifyJS': {\n       id: 'amplifyjs',\n       icon: 'amplifyjs',\n       url: 'http://amplifyjs.com/',\n       npm: 'amplifyjs',\n       test: function(win) {\n            if(win.amplify && win.amplify.publish) {\n               return { version: UNKNOWN_VERSION };\n           }\n           return false;\n       }\n    },\n\n    'Popcorn.js': {\n       id: 'popcornjs',\n       icon: 'popcornjs',\n       url: 'https://github.com/mozilla/popcorn-js/',\n       test: function(win) {\n            if (win.Popcorn && win.Popcorn.Events) {\n               return { version: win.Popcorn.version || UNKNOWN_VERSION };\n           }\n           return false;\n       }\n    },\n\n    'D3': {\n        id: 'd3',\n        icon: 'd3',\n        url: 'https://d3js.org/',\n        npm: 'd3',\n        test: function(win) {\n            if (win.d3 && win.d3.select) {\n                return { version: win.d3.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Handlebars': {\n        id: 'handlebars',\n        icon: 'handlebars',\n        url: 'http://handlebarsjs.com/',\n        npm: 'handlebars',\n        test: function(win) {\n            if(win.Handlebars && win.Handlebars.compile) {\n                return { version: win.Handlebars.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Knockout': {\n        id: 'knockout',\n        icon: 'knockout',\n        url: 'http://knockoutjs.com/',\n        npm: 'knockout',\n        test: function(win) {\n            if (win.ko && win.ko.applyBindings) {\n                return { version: win.ko.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Spine': {\n        id: 'spine',\n        icon: 'icon38',\n        url: 'http://spine.github.io/',\n        test: function(win) {\n            if (win.Spine && win.Spine.Controller) {\n                return {version: win.Spine.version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n\n    'jQuery Mobile': {\n        id: 'jquery-mobile',\n        icon: 'jquery_mobile',\n        url: 'http://jquerymobile.com/',\n        npm: 'jquery-mobile',\n        test: function(win) {\n            var jq = win.jQuery || win.$ || win.$jq || win.$j;\n            if(jq && jq.fn && jq.fn.jquery && jq.mobile) {\n                return { version: jq.mobile.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'WebFont Loader': {\n        id: 'webfontloader',\n        icon: 'icon38',\n        url: 'https://github.com/typekit/webfontloader',\n        npm: 'webfontloader',\n        test: function(win) {\n            if(win.WebFont && win.WebFont.load) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Angular': {\n        id: 'angular',\n        icon: 'angular',\n        url: 'https://angular.io/',\n        npm: '@angular/core',\n        test: function(win) {\n            var ngVersion = win.document.querySelector('[ng-version]');\n            if (ngVersion) {\n                return { version: ngVersion.getAttribute('ng-version') || UNKNOWN_VERSION };\n            }\n            else if (win.ng && win.ng.probe instanceof Function) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'AngularJS': {\n        id: 'angularjs',\n        icon: 'angularjs',\n        url: 'https://angularjs.org/',\n        npm: 'angular',\n        test: function(win) {\n            var ng = win.angular;\n            if(ng && ng.version && ng.version.full) {\n                return { version: ng.version.full };\n            }\n            else if (ng) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Ember.js': {\n        id: 'emberjs',\n        icon: 'emberjs',\n        url: 'https://emberjs.com/',\n        npm: 'ember-source',\n        test: function(win) {\n            var ember = win.Ember || win.Em;\n            if (ember && ember.GUID_KEY) {\n                return { version: ember.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Ember.js (Fast path)': {\n        id: 'emberjs-fast',\n        icon: 'emberjs',\n        url: 'https://emberjs.com/',\n        npm: 'ember-source',\n        test: function (win) {\n            var ember = win.Ember || win.Em;\n            if (ember) {\n                return { version: ember.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Hammer.js': {\n        id: 'hammerjs',\n        icon: 'hammerjs',\n        url: 'http://eightmedia.github.io/hammer.js/',\n        npm: 'hammerjs',\n        test: function(win) {\n            if(win.Hammer && win.Hammer.Pinch) {\n                // Hammer.VERSION available in 1.0.10+\n                return { version: win.Hammer.VERSION || \"&lt; 1.0.10\" };\n            }\n            return false;\n        }\n    },\n\n    'Visibility.js': {\n        id: 'visibilityjs',\n        icon: 'icon38',\n        url: 'https://github.com/ai/visibilityjs',\n        npm: 'visibilityjs',\n        test: function(win) {\n            if(win.Visibility && win.Visibility.every) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'Velocity.js': {\n        id: 'velocityjs',\n        icon: 'icon38',\n        url: 'http://velocityjs.org/',\n        npm: 'velocity-animate',\n        test: function(win) {\n            var jq = win.jQuery || win.$,\n                velocity = jq ? jq.Velocity : win.Velocity;\n\n            if(velocity && velocity.RegisterEffect && velocity.version) {\n                return {\n                    version:\n                        velocity.version.major + \".\" +\n                        velocity.version.minor + \".\" +\n                        velocity.version.patch\n                };\n            }\n            else if (velocity && velocity.RegisterEffect) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n\n    'IfVisible.js': {\n        id: 'ifvisiblejs',\n        icon: 'icon38',\n        url: 'http://serkanyersen.github.io/ifvisible.js/',\n        npm: 'ifvisible.js',\n        test: function(win) {\n            var iv = win.ifvisible;\n            if(iv && iv.__ceGUID === \"ifvisible.object.event.identifier\") {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Pixi.js': {\n        id: 'pixi',\n        icon: 'pixi',\n        url: 'http://www.pixijs.com/',\n        npm: 'pixi.js',\n        test: function(win) {\n            var px = win.PIXI;\n            if(px && px.WebGLRenderer && px.VERSION) {\n                // version 4.4.3 returns simply \"4.4.3\"; version 1.5.2 returns \"v1.5.2\"\n                return { version: px.VERSION.replace('v', '') || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'DC.js': {\n        id: 'dcjs',\n        icon: 'dcjs',\n        url: 'http://dc-js.github.io/dc.js/',\n        npm: 'dc',\n        test: function(win) {\n            var dc = win.dc;\n            if(dc && dc.registerChart) {\n                return { version: dc.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'GreenSock JS': {\n        id: 'greensock',\n        icon: 'greensock',\n        url: 'https://greensock.com/gsap',\n        npm: 'gsap',\n        test: function(win) {\n            if (win.TweenMax && win.TweenMax.pauseAll) {\n                return { version: win.TweenMax.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'FastClick': {\n        id: 'fastclick',\n        icon: 'fastclick',\n        url: 'https://github.com/ftlabs/fastclick',\n        npm: 'fastclick',\n        test: function(win) {\n            if(win.FastClick && win.FastClick.notNeeded) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Isotope': {\n        id: 'isotope',\n        icon: 'isotope',\n        url: 'https://isotope.metafizzy.co/',\n        npm: 'isotope-layout',\n        test: function(win) {\n            if(win.Isotope || (win.$ != null && win.$.Isotope)) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Marionette': {\n        id: 'marionette',\n        icon: 'marionette',\n        url: 'https://marionettejs.com/',\n        npm: 'backbone.marionette',\n        test: function(win) {\n            if(win.Marionette && win.Marionette.Application) {\n                return { version: win.Marionette.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Can': {\n        id: 'canjs',\n        icon: 'canjs',\n        url: 'https://canjs.com/',\n        npm: 'can',\n        test: function (win) {\n            if (win.can && win.can.Construct) {\n                return { version: win.can.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Vue': {\n        id: 'vue',\n        icon: 'vue',\n        url: 'https://vuejs.org/',\n        npm: 'vue',\n        test: function(win) {\n            function isVueNode(node) {\n                return node.__vue__ != null ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n            }\n            var hasVueNode = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT, isVueNode).nextNode() !== null;\n            if (hasVueNode) {\n                return { version: win.Vue && win.Vue.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Vue (Fast path)': {\n        id: 'vue-fast',\n        icon: 'vue',\n        url: 'https://vuejs.org/',\n        npm: 'vue',\n        test: function (win) {\n            if (win.Vue) {\n                return { version: win.Vue && win.Vue.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Nuxt.js': {\n        id: 'nuxt',\n        icon: 'nuxt',\n        url: 'https://nuxtjs.org/',\n        npm: 'nuxt',\n        test: function(win) {\n            if ((win.__NUXT__ && win.__NUXT__.data != null) || win.$nuxt) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Nuxt.js (Fast path)': {\n        id: 'nuxt-fast',\n        icon: 'nuxt',\n        url: 'https://nuxtjs.org/',\n        npm: 'nuxt',\n        test: function (win) {\n            if (win.__NUXT__  || win.$nuxt) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Two': {\n        id: 'two',\n        icon: 'two',\n        url: 'https://two.js.org/',\n        npm: 'two.js',\n        test: function(win) {\n            if (win.Two && win.Two.Utils) {\n                return { version: win.Two.Version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Brewser': {\n        id: 'brewser',\n        icon: 'brewser',\n        url: 'https://robertpataki.github.io/brewser/',\n        npm: 'brewser',\n        test: function(win) {\n            if(win.BREWSER && win.BREWSER.ua) {\n                return { version: BREWSER.VERSION || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Material Design Lite': {\n        id: 'materialdesignlite',\n        icon: 'mdl',\n        url: 'https://getmdl.io/',\n        npm: 'material-design-lite',\n        test: function(win) {\n            if(win.componentHandler && win.componentHandler.upgradeElement) {\n                return { version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n    'Kendo UI': {\n        id: 'kendoui',\n        icon: 'kendoui',\n        url: 'https://github.com/telerik/kendo-ui-core',\n        npm: 'kendo-ui-core',\n        test: function(win) {\n            if (win.kendo && win.kendo.View && win.kendo.View.extend) {\n                return {version: win.kendo.version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n    'Matter.js': {\n        id: 'matterjs',\n        icon: 'matter-js',\n        url: 'http://brm.io/matter-js/',\n        npm: 'matter-js',\n        test: function(win) {\n            if (win.Matter && win.Matter.Engine) {\n                return {version: UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n    'Riot': {\n        id: 'riot',\n        icon: 'riot',\n        url: 'http://riotjs.com/',\n        npm: 'riot',\n        test: function(win) {\n            if (win.riot && win.riot.mixin) {\n                return { version: win.riot.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Sea.js': {\n        id: 'seajs',\n        icon: 'icon38',\n        url: 'https://seajs.github.io/seajs/docs/',\n        npm: 'seajs',\n        test: function(win) {\n            if(win.seajs && win.seajs.use) {\n                return { version: win.seajs.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Moment.js': {\n        id: 'momentjs',\n        icon: 'momentjs',\n        url: 'http://momentjs.com/',\n        npm: 'moment',\n        test: function(win) {\n            if(win.moment && (win.moment.isMoment || win.moment.lang)) {\n                // version 1.0.0 has neither \"isMoment\" nor \"version\"\n                return { version: win.moment.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Moment Timezone': {\n        id: 'moment-timezone',\n        icon: 'momentjs',\n        url: 'http://momentjs.com/timezone/',\n        npm: 'moment-timezone',\n        test: function(win) {\n            if (win.moment && win.moment.tz) {\n                return { version: win.moment.tz.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'ScrollMagic': {\n        id: 'scrollmagic',\n        icon: 'scrollmagic',\n        url: 'http://scrollmagic.io/',\n        npm: 'scrollmagic',\n        test: function(win) {\n            if (win.ScrollMagic && win.ScrollMagic.Controller) {\n                return {version: ScrollMagic.version || UNKNOWN_VERSION};\n            }\n            return false;\n        }\n    },\n    'SWFObject': {\n        id: 'swfobject',\n        icon: 'icon38', // currently has no icon\n        url: 'https://github.com/swfobject/swfobject',\n        test: function(win) {\n            if (win.swfobject && win.swfobject.embedSWF) {\n                // 2.x - exact version only for 2.3\n                return { version: win.swfobject.version || UNKNOWN_VERSION };\n            } else if(win.deconcept && win.deconcept.SWFObject) {\n                // 1.x\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'FlexSlider': {\n        id: 'flexslider',\n        icon: 'icon38', // currently has no icon\n        url: 'https://woocommerce.com/flexslider/',\n        npm: 'flexslider',\n        test: function(win) {\n            var jq = win.jQuery || win.$ || win.$jq || win.$j;\n            if (jq && jq.fn && jq.fn.jquery && jq.flexslider){\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'SPF': {\n        id: 'spf',\n        icon: 'icon38', // currently has no icon\n        url: 'https://youtube.github.io/spfjs/',\n        npm: 'spf',\n        test: function(win) {\n            if (win.spf && win.spf.init) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Numeral.js': {\n        id: 'numeraljs',\n        icon: 'icon38', // currently has no icon\n        url: 'http://numeraljs.com/',\n        npm: 'numeraljs',\n        test: function(win) {\n            if (win.numeral && win.isNumeral) {\n                return { version: win.numeral.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'boomerang.js': {\n        id: 'boomerangjs',\n        icon: 'icon38', // currently has no icon\n        url: 'https://soasta.github.io/boomerang/',\n        npm: 'boomerangjs',\n        test: function(win) {\n            if (win.BOOMR && win.BOOMR.utils && win.BOOMR.init) {\n                return { version: win.BOOMR.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Framer': {\n        id: 'framer',\n        icon: 'framer',\n        url: 'https://framer.com/',\n        npm: 'framerjs',\n        test: function(win) {\n            if (win.Framer && win.Framer.Layer) {\n                return { version: win.Framer.Version.build || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Marko': {\n        id: 'marko',\n        icon: 'marko',\n        url: 'https://markojs.com/',\n        npm: 'marko',\n        test: function (win) {\n            var selector = '[data-marko-key], [data-marko]';\n            var markoElement = document.querySelector(selector);\n            if (markoElement) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'AMP': {\n        id: 'amp',\n        icon: 'amp',\n        url: 'https://amp.dev/',\n        npm: 'https://www.npmjs.com/org/ampproject',\n        test: function (win) {\n            var version = win.document.documentElement.getAttribute(\"amp-version\");\n            return version ? { version: version } : false;\n        }\n    },\n    'Gatsby': {\n        id: 'gatsby',\n        icon: 'gatsby',\n        url: 'https://www.gatsbyjs.org/',\n        npm: 'gatsby',\n        test: function (win) {\n            if (document.getElementById('___gatsby')) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Shopify': {\n        id: 'shopify',\n        icon: 'shopify',\n        url: 'https://www.shopify.com/',\n        npm: null,\n        test: function (win) {\n            if (win.Shopify && win.Shopify.shop) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Magento': {\n        id: 'magento',\n        icon: 'magento',\n        url: 'https://magento.com/',\n        npm: null,\n        test: function (win) {\n            // Same detecton used in Magento 2 DevTools: https://github.com/magento/m2-devtools\n            const reRequireScript = /\\/static(?:\\/version\\d+)?\\/frontend\\/.+\\/.+\\/requirejs\\/require(?:\\.min)?\\.js/;\n            const scripts = Array.from(document.querySelectorAll('script[src]') || []);\n            if (scripts.some(s => reRequireScript.test(s.src))) {\n                return { version: 2 }; // Magento 1 is no longer supported and this only verifies version 2\n            }\n            \n            return false;\n        }\n    },\n    'WordPress': {\n        id: 'wordpress',\n        icon: 'wordpress',\n        url: 'https://wordpress.org/',\n        npm: null,\n        test: function (win) {\n            const hasAPILinkElem = !!document.querySelector('link[rel=\"https://api.w.org/\"]');\n            const hasWPIncludes = !!document.querySelectorAll('link[href*=\"wp-includes\"], script[src*=\"wp-includes\"]').length;\n\n            if (!hasAPILinkElem && !hasWPIncludes) return false;\n\n            const generatorMeta = document.querySelector('meta[name=generator][content^=\"WordPress\"]');\n            const version = generatorMeta ? generatorMeta.getAttribute(\"content\").replace(/^\\w+\\s/,'') : UNKNOWN_VERSION;\n            return { version };\n        }\n    },\n    'Wix': {\n        id: 'wix',\n        icon: 'wix',\n        url: 'https://www.wix.com/',\n        npm: null,\n        test: function (win) {\n            if (win.wixBiSession) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Workbox': {\n      id: 'workbox',\n      icon: 'workbox',\n      url: 'https://developers.google.com/web/tools/workbox/',\n      npm: 'workbox-sw',\n      test: async function (win) {\n        var nav = win.navigator;\n        // Service Workers not supported\n        if (!('serviceWorker' in nav)) {\n          return false;\n        }\n        return nav.serviceWorker.getRegistration()\n        .then(function(registration) {\n          var scriptURL = nav.serviceWorker.controller.scriptURL;\n          return fetch(scriptURL, { credentials: 'include',\n            headers: { 'service-worker': 'script' }\n          })\n          .then(function(response) {\n            return response.text();\n          })\n          .then(function(scriptContent) {\n            var workboxRegExp = /new Workbox|new workbox|workbox\\.precaching\\.|workbox\\.strategies/gm;\n            if (workboxRegExp.test(scriptContent)) {\n              // Adapted from\n              // https://github.com/semver/semver/issues/232#issue-48635632\n              var semVerRegExp = /workbox.*?\\b((0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(-(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\+[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*)?)\\b/gim;\n              var matches = semVerRegExp.exec(scriptContent);\n              var version = UNKNOWN_VERSION;\n              if (Array.isArray(matches) && matches.length > 1 && matches[1]) {\n                version = matches[1];\n              }\n              return { version: version };\n            }\n            return false;\n          });\n        }).catch(function(exception) {\n          return false;\n        });\n      }\n    },\n    'Boq': {\n        id: 'boq',\n        icon: 'icon38',\n        url: 'https://github.com/johnmichel/Library-Detector-for-Chrome/pull/143',\n        npm: null,\n        test: function (win) {\n            if (win.WIZ_global_data) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Wiz': {\n        id: 'wiz',\n        icon: 'icon38',\n        url: 'https://github.com/johnmichel/Library-Detector-for-Chrome/pull/147',\n        npm: null,\n        test: function (win) {\n            if (document.__wizdispatcher) {\n                return { version: UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'core-js': {\n        id: 'corejs',\n        icon: 'icon38',\n        url: 'https://github.com/zloirock/core-js',\n        npm: 'core-js',\n        test: function (win) {\n            const shared = win['__core-js_shared__'];\n            const core = win.core;\n            if (shared) {\n                const versions = shared.versions;\n                return { version: Array.isArray(versions) ? versions.map(it => `${ it.version }: ${ it.mode }`).join(', ') : UNKNOWN_VERSION };\n            } else if (core) {\n                return { version: core.version || UNKNOWN_VERSION };\n            }\n            return false;\n        }\n    },\n    'Create React App': {\n        id: 'create-react-app',\n        icon: 'cra',\n        url: 'https://create-react-app.dev/',\n        npm: 'react-scripts',\n        test: async function (win) {\n            // CRA does not have any explicit markers\n            // This requests for an asset-manifest.json file that exists for mostly all v2 and v3 CRA apps\n            try {\n                const response = await fetch('/asset-manifest.json');\n                const manifest = await response.json();\n\n                const hasFilesEntrypoints = manifest.files || manifest.entrypoints;\n                const containsMainBundle = manifest['main.js'] || (manifest.files && manifest.files['main.js']);\n\n                if (hasFilesEntrypoints || containsMainBundle) {\n                    return { version: UNKNOWN_VERSION };\n                }\n            \n                return false;\n            }\n            catch (err) {\n                return false;\n            }\n        }\n    }\n};\n";























async function detectLibraries(){

const libraries=[];





const libraryDetectorTests=d41d8cd98f00b204e9800998ecf8427e_LibraryDetectorTests;

for(const[name,lib]of Object.entries(libraryDetectorTests)){
try{
const result=await lib.test(window);
if(result){
libraries.push({
id:lib.id,
name:name,
version:result.version,
npm:lib.npm});

}
}catch(e){}
}

return libraries;
}





async function collectStacks(passContext){
const expression=`(function () {
    ${libDetectorSource};
    return (${detectLibraries.toString()}());
  })()`;


const jsLibraries=await passContext.driver.evaluateAsync(expression);

return jsLibraries.map(lib=>({
detector:'js',
id:lib.id,
name:lib.name,
version:typeof lib.version==='number'?String(lib.version):lib.version||undefined,
npm:lib.npm||undefined}));

}

module.exports=collectStacks;

},{}],91:[function(require,module,exports){





'use strict';

const stackPacks=require('../../stack-packs/index.js');
const log=require('lighthouse-logger');






const stackPacksToInclude=[
{
packId:'wordpress',
requiredStacks:['js:wordpress']},

{
packId:'react',
requiredStacks:['js:react']},

{
packId:'angular',
requiredStacks:['js:@angular/core']},

{
packId:'amp',
requiredStacks:['js:amp']},

{
packId:'magento',
requiredStacks:['js:magento']}];








function getStackPacks(pageStacks){

const packs=[];

for(const pageStack of pageStacks){
const stackPackToIncl=stackPacksToInclude.find(stackPackToIncl=>
stackPackToIncl.requiredStacks.includes(`${pageStack.detector}:${pageStack.id}`));
if(!stackPackToIncl){
continue;
}


const matchedPack=stackPacks.find(pack=>pack.id===stackPackToIncl.packId);
if(!matchedPack){
log.warn('StackPacks',
`'${stackPackToIncl.packId}' stack pack was matched but is not found in stack-packs lib`);
continue;
}

packs.push({
id:matchedPack.id,
title:matchedPack.title,
iconDataURL:matchedPack.iconDataURL,
descriptions:matchedPack.descriptions});

}

return packs;
}

module.exports={
getStackPacks};


},{"../../stack-packs/index.js":206,"lighthouse-logger":135}],92:[function(require,module,exports){





'use strict';








function erf(x){

const sign=Math.sign(x);
x=Math.abs(x);

const a1=0.254829592;
const a2=-0.284496736;
const a3=1.421413741;
const a4=-1.453152027;
const a5=1.061405429;
const p=0.3275911;
const t=1/(1+p*x);
const y=t*(a1+t*(a2+t*(a3+t*(a4+t*a5))));
return sign*(1-y*Math.exp(-x*x));
}















function getLogNormalDistribution(median,falloff){
const location=Math.log(median);




const logRatio=Math.log(falloff/median);
const shape=Math.sqrt(1-3*logRatio-Math.sqrt((logRatio-3)*(logRatio-3)-8))/2;

return{
computeComplementaryPercentile(x){
const standardizedX=(Math.log(x)-location)/(Math.SQRT2*shape);
return(1-erf(standardizedX))/2;
}};

}














function getLogNormalScore({median,p10},value){

if(median<=0)throw new Error('median must be greater than zero');
if(p10<=0)throw new Error('p10 must be greater than zero');

if(p10>=median)throw new Error('p10 must be less than the median');


if(value<=0)return 1;


const INVERSE_ERFC_ONE_FIFTH=0.9061938024368232;



const xLogRatio=Math.log(value/median);
const p10LogRatio=-Math.log(p10/median);
const standardizedX=xLogRatio*INVERSE_ERFC_ONE_FIFTH/p10LogRatio;
const complementaryPercentile=(1-erf(standardizedX))/2;


return Math.min(1,Math.max(0,complementaryPercentile));
}










function linearInterpolation(x0,y0,x1,y1,x){
const slope=(y1-y0)/(x1-x0);
return y0+(x-x0)*slope;
}

module.exports={
linearInterpolation,
getLogNormalDistribution,
getLogNormalScore};


},{}],93:[function(require,module,exports){





'use strict';

const{
filterOutRectsContainedByOthers,
filterOutTinyRects,
rectsTouchOrOverlap,
rectContainsPoint,
getBoundingRect,
getRectCenterPoint}=
require('./rect-helpers.js');







function getTappableRectsFromClientRects(clientRects){


clientRects=filterOutTinyRects(clientRects);
clientRects=filterOutRectsContainedByOthers(clientRects);
clientRects=mergeTouchingClientRects(clientRects);
return clientRects;
}









function almostEqual(a,b){
return Math.abs(a-b)<=10;
}






function mergeTouchingClientRects(clientRects){
for(let i=0;i<clientRects.length;i++){
for(let j=i+1;j<clientRects.length;j++){
const crA=clientRects[i];
const crB=clientRects[j];












const rectsLineUpHorizontally=
almostEqual(crA.top,crB.top)||almostEqual(crA.bottom,crB.bottom);
const rectsLineUpVertically=
almostEqual(crA.left,crB.left)||almostEqual(crA.right,crB.right);
const canMerge=
rectsTouchOrOverlap(crA,crB)&&(
rectsLineUpHorizontally||rectsLineUpVertically);

if(canMerge){
const replacementClientRect=getBoundingRect([crA,crB]);
const mergedRectCenter=getRectCenterPoint(replacementClientRect);

if(
!(
rectContainsPoint(crA,mergedRectCenter)||
rectContainsPoint(crB,mergedRectCenter)))

{



continue;
}


clientRects=clientRects.filter(cr=>cr!==crA&&cr!==crB);
clientRects.push(replacementClientRect);



return mergeTouchingClientRects(clientRects);
}
}
}

return clientRects;
}

module.exports={
getTappableRectsFromClientRects};


},{"./rect-helpers.js":88}],94:[function(require,module,exports){





'use strict';

const{taskGroups,taskNameToGroup}=require('./task-groups.js');




































class MainThreadTasks{





static _createNewTaskNode(event,endEvent){
const isCompleteEvent=event.ph==='X'&&!endEvent;
const isStartEndEventPair=event.ph==='B'&&endEvent&&endEvent.ph==='E';
if(!isCompleteEvent&&!isStartEndEventPair){
throw new Error('Invalid parameters for _createNewTaskNode');
}

const startTime=event.ts;
const endTime=endEvent?endEvent.ts:event.ts+Number(event.dur||0);

const newTask={
event,
startTime,
endTime,
duration:endTime-startTime,


unbounded:false,
parent:undefined,
children:[],
attributableURLs:[],
group:taskGroups.other,
selfTime:NaN};


return newTask;
}








static _assignAllTimersUntilTs(
currentTask,
stopTs,
priorTaskData,
reverseEventsQueue)
{
while(reverseEventsQueue.length){
const nextTimerInstallEvent=reverseEventsQueue.pop();

if(!nextTimerInstallEvent)break;


if(nextTimerInstallEvent.ts>stopTs){
reverseEventsQueue.push(nextTimerInstallEvent);
break;
}


if(nextTimerInstallEvent.ts<currentTask.startTime){
continue;
}




const timerId=nextTimerInstallEvent.args.data.timerId;
priorTaskData.timers.set(timerId,currentTask);
}
}
















static _createTasksFromStartAndEndEvents(taskStartEvents,taskEndEvents,traceEndTs){

const tasks=[];



const taskEndEventsReverseQueue=taskEndEvents.slice().reverse();

for(let i=0;i<taskStartEvents.length;i++){
const taskStartEvent=taskStartEvents[i];
if(taskStartEvent.ph==='X'){

tasks.push(MainThreadTasks._createNewTaskNode(taskStartEvent));
continue;
}


let matchedEventIndex=-1;
let matchingNestedEventCount=0;
let matchingNestedEventIndex=i+1;





for(let j=taskEndEventsReverseQueue.length-1;j>=0;j--){
const endEvent=taskEndEventsReverseQueue[j];

for(;matchingNestedEventIndex<taskStartEvents.length;matchingNestedEventIndex++){
if(taskStartEvents[matchingNestedEventIndex].ts>=endEvent.ts)break;

if(taskStartEvents[matchingNestedEventIndex].name===taskStartEvent.name){
matchingNestedEventCount++;
}
}


if(endEvent.name!==taskStartEvent.name)continue;

if(endEvent.ts<taskStartEvent.ts)continue;


if(matchingNestedEventCount>0){

matchingNestedEventCount--;
continue;
}


matchedEventIndex=j;
break;
}


let taskEndEvent;
let unbounded=false;
if(matchedEventIndex===-1){


taskEndEvent={ph:'E',ts:traceEndTs};
unbounded=true;
}else if(matchedEventIndex===taskEndEventsReverseQueue.length-1){


taskEndEvent=taskEndEventsReverseQueue.pop();
}else{
taskEndEvent=taskEndEventsReverseQueue.splice(matchedEventIndex,1)[0];
}

const task=MainThreadTasks._createNewTaskNode(taskStartEvent,taskEndEvent);
task.unbounded=unbounded;
tasks.push(task);
}

if(taskEndEventsReverseQueue.length){
throw new Error(
`Fatal trace logic error - ${taskEndEventsReverseQueue.length} unmatched end events`);

}

return tasks;
}










static _createTaskRelationships(sortedTasks,timerInstallEvents,priorTaskData){

let currentTask;

const timerInstallEventsReverseQueue=timerInstallEvents.slice().reverse();

for(let i=0;i<sortedTasks.length;i++){
let nextTask=sortedTasks[i];


if(nextTask.event.name==='XHRReadyStateChange'){
const data=nextTask.event.args.data;
const url=data&&data.url;
if(data&&url&&data.readyState===1)priorTaskData.xhrs.set(url,nextTask);
}





while(
currentTask&&
Number.isFinite(currentTask.endTime)&&
currentTask.endTime<=nextTask.startTime)
{
MainThreadTasks._assignAllTimersUntilTs(
currentTask,
currentTask.endTime,
priorTaskData,
timerInstallEventsReverseQueue);

currentTask=currentTask.parent;
}



if(currentTask){
if(nextTask.endTime>currentTask.endTime){
const timeDelta=nextTask.endTime-currentTask.endTime;


if(timeDelta<1000){

currentTask.endTime=nextTask.endTime;
currentTask.duration+=timeDelta;
}else if(nextTask.unbounded){

nextTask.endTime=currentTask.endTime;
nextTask.duration=nextTask.endTime-nextTask.startTime;
}else if(
nextTask.startTime-currentTask.startTime<1000&&
!currentTask.children.length)
{








const actualParentTask=nextTask;
const actualChildTask=currentTask;



const grandparentTask=currentTask.parent;
if(grandparentTask){
const lastGrandparentChildIndex=grandparentTask.children.length-1;
if(grandparentTask.children[lastGrandparentChildIndex]!==actualChildTask){


throw new Error('Fatal trace logic error - impossible children');
}

grandparentTask.children.pop();
grandparentTask.children.push(actualParentTask);
}

actualParentTask.parent=grandparentTask;
actualParentTask.startTime=actualChildTask.startTime;
actualParentTask.duration=actualParentTask.endTime-actualParentTask.startTime;
currentTask=actualParentTask;
nextTask=actualChildTask;
}else{







const error=new Error('Fatal trace logic error - child cannot end after parent');
error.timeDelta=timeDelta;
error.nextTaskEvent=nextTask.event;
error.nextTaskEndTime=nextTask.endTime;
error.currentTaskEvent=currentTask.event;
error.currentTaskEndTime=currentTask.endTime;
throw error;
}
}

nextTask.parent=currentTask;
currentTask.children.push(nextTask);
MainThreadTasks._assignAllTimersUntilTs(
currentTask,
nextTask.startTime,
priorTaskData,
timerInstallEventsReverseQueue);

}

currentTask=nextTask;
}

if(currentTask){
MainThreadTasks._assignAllTimersUntilTs(
currentTask,
currentTask.endTime,
priorTaskData,
timerInstallEventsReverseQueue);

}
}
















static _createTasksFromEvents(mainThreadEvents,priorTaskData,traceEndTs){

const taskStartEvents=[];

const taskEndEvents=[];

const timerInstallEvents=[];


for(const event of mainThreadEvents){
if(event.ph==='X'||event.ph==='B')taskStartEvents.push(event);
if(event.ph==='E')taskEndEvents.push(event);
if(event.name==='TimerInstall')timerInstallEvents.push(event);
}


const tasks=MainThreadTasks._createTasksFromStartAndEndEvents(
taskStartEvents,
taskEndEvents,
traceEndTs);



const sortedTasks=tasks.sort(
(taskA,taskB)=>taskA.startTime-taskB.startTime||taskB.duration-taskA.duration);



MainThreadTasks._createTaskRelationships(sortedTasks,timerInstallEvents,priorTaskData);


return sortedTasks.sort(
(taskA,taskB)=>taskA.startTime-taskB.startTime||taskB.duration-taskA.duration);

}






static _computeRecursiveSelfTime(task,parent){
if(parent&&task.endTime>parent.endTime){
throw new Error('Fatal trace logic error - child cannot end after parent');
}

const childTime=task.children.
map(child=>MainThreadTasks._computeRecursiveSelfTime(child,task)).
reduce((sum,child)=>sum+child,0);
task.selfTime=task.duration-childTime;
return task.duration;
}







static _computeRecursiveAttributableURLs(task,parentURLs,allURLsInTree,priorTaskData){
const args=task.event.args;
const argsData={...(args.beginData||{}),...(args.data||{})};
const frame=argsData.frame||'';
let frameURL=priorTaskData.frameURLsById.get(frame);
const stackFrameURLs=(argsData.stackTrace||[]).map(entry=>entry.url);


const potentialFrameURL=stackFrameURLs[0];
if(frame&&frameURL&&frameURL.startsWith('about:')&&potentialFrameURL){
priorTaskData.frameURLsById.set(frame,potentialFrameURL);
frameURL=potentialFrameURL;
}


let taskURLs=[];
switch(task.event.name){





case'v8.compile':
case'EvaluateScript':
case'FunctionCall':
taskURLs=[argsData.url,frameURL];
break;
case'v8.compileModule':
taskURLs=[task.event.args.fileName];
break;
case'TimerFire':{


const timerId=task.event.args.data.timerId;
const timerInstallerTaskNode=priorTaskData.timers.get(timerId);
if(!timerInstallerTaskNode)break;
taskURLs=timerInstallerTaskNode.attributableURLs;
break;
}
case'ParseHTML':
taskURLs=[argsData.url,frameURL];
break;
case'ParseAuthorStyleSheet':
taskURLs=[argsData.styleSheetUrl,frameURL];
break;
case'UpdateLayoutTree':
case'Layout':
case'Paint':

if(frameURL){
taskURLs=[frameURL];
break;
}




if(allURLsInTree.length)break;
taskURLs=priorTaskData.lastTaskURLs;
break;
case'XHRReadyStateChange':
case'XHRLoad':{

const xhrUrl=argsData.url;
const readyState=argsData.readyState;
if(!xhrUrl||typeof readyState==='number'&&readyState!==4)break;
const xhrRequesterTaskNode=priorTaskData.xhrs.get(xhrUrl);
if(!xhrRequesterTaskNode)break;
taskURLs=xhrRequesterTaskNode.attributableURLs;
break;
}
default:
taskURLs=[];
break;}



const attributableURLs=Array.from(parentURLs);
for(const url of[...taskURLs,...stackFrameURLs]){

if(!url)continue;

if(!allURLsInTree.includes(url))allURLsInTree.push(url);

if(attributableURLs[attributableURLs.length-1]===url)continue;
attributableURLs.push(url);
}

task.attributableURLs=attributableURLs;
task.children.forEach(child=>
MainThreadTasks._computeRecursiveAttributableURLs(
child,
attributableURLs,
allURLsInTree,
priorTaskData));






if(!attributableURLs.length&&!task.parent&&allURLsInTree.length){
MainThreadTasks._setRecursiveEmptyAttributableURLs(task,allURLsInTree);
}
}





static _setRecursiveEmptyAttributableURLs(task,urls){

if(task.attributableURLs.length)return;

task.attributableURLs=urls.slice();
task.children.forEach(child=>
MainThreadTasks._setRecursiveEmptyAttributableURLs(
child,
urls));


}





static _computeRecursiveTaskGroup(task,parentGroup){
const group=taskNameToGroup[task.event.name];
task.group=group||parentGroup||taskGroups.other;
task.children.forEach(child=>MainThreadTasks._computeRecursiveTaskGroup(child,task.group));
}







static getMainThreadTasks(mainThreadEvents,frames,traceEndTs){
const timers=new Map();
const xhrs=new Map();
const frameURLsById=new Map();
frames.forEach(({frame,url})=>frameURLsById.set(frame,url));

const lastTaskURLs=[];
const priorTaskData={timers,xhrs,frameURLsById,lastTaskURLs};
const tasks=MainThreadTasks._createTasksFromEvents(
mainThreadEvents,
priorTaskData,
traceEndTs);



for(const task of tasks){
if(task.parent)continue;

MainThreadTasks._computeRecursiveSelfTime(task,undefined);
MainThreadTasks._computeRecursiveAttributableURLs(task,[],[],priorTaskData);
MainThreadTasks._computeRecursiveTaskGroup(task);
priorTaskData.lastTaskURLs=task.attributableURLs;
}


const firstTs=(tasks[0]||{startTime:0}).startTime;
for(const task of tasks){
task.startTime=(task.startTime-firstTs)/1000;
task.endTime=(task.endTime-firstTs)/1000;
task.duration/=1000;
task.selfTime/=1000;


if(!Number.isFinite(task.selfTime)){
throw new Error('Invalid task timing data');
}
}

return tasks;
}}


module.exports=MainThreadTasks;

},{"./task-groups.js":95}],95:[function(require,module,exports){





'use strict';
















const taskGroups={
parseHTML:{
id:'parseHTML',
label:'Parse HTML & CSS',
traceEventNames:['ParseHTML','ParseAuthorStyleSheet']},

styleLayout:{
id:'styleLayout',
label:'Style & Layout',
traceEventNames:[
'ScheduleStyleRecalculation',
'UpdateLayoutTree',
'InvalidateLayout',
'Layout']},


paintCompositeRender:{
id:'paintCompositeRender',
label:'Rendering',
traceEventNames:[
'Animation',
'HitTest',
'PaintSetup',
'Paint',
'PaintImage',
'RasterTask',
'ScrollLayer',
'UpdateLayer',
'UpdateLayerTree',
'CompositeLayers']},


scriptParseCompile:{
id:'scriptParseCompile',
label:'Script Parsing & Compilation',
traceEventNames:['v8.compile','v8.compileModule','v8.parseOnBackground']},

scriptEvaluation:{
id:'scriptEvaluation',
label:'Script Evaluation',
traceEventNames:[
'EventDispatch',
'EvaluateScript',
'v8.evaluateModule',
'FunctionCall',
'TimerFire',
'FireIdleCallback',
'FireAnimationFrame',
'RunMicrotasks',
'V8.Execute']},


garbageCollection:{
id:'garbageCollection',
label:'Garbage Collection',
traceEventNames:[
'MinorGC',
'MajorGC',
'BlinkGC.AtomicPhase',


'ThreadState::performIdleLazySweep',
'ThreadState::completeSweep',
'BlinkGCMarking']},


other:{
id:'other',
label:'Other',
traceEventNames:[
'MessageLoop::RunTask',
'TaskQueueManager::ProcessTaskFromWorkQueue',
'ThreadControllerImpl::DoWork']}};





const taskNameToGroup={};
for(const group of Object.values(taskGroups)){
for(const traceEventName of group.traceEventNames){
taskNameToGroup[traceEventName]=group;
}
}

module.exports={
taskGroups,
taskNameToGroup};


},{}],96:[function(require,module,exports){





'use strict';















const log=require('lighthouse-logger');

const ACCEPTABLE_NAVIGATION_URL_REGEX=/^(chrome|https?):/;



const BASE_RESPONSE_LATENCY=16;

const SCHEDULABLE_TASK_TITLE_LH='RunTask';

const SCHEDULABLE_TASK_TITLE_ALT1='ThreadControllerImpl::RunTask';

const SCHEDULABLE_TASK_TITLE_ALT2='ThreadControllerImpl::DoWork';

const SCHEDULABLE_TASK_TITLE_ALT3='TaskQueueManager::ProcessTaskFromWorkQueue';

class TraceProcessor{



static createNoNavstartError(){
return new Error('No navigationStart event found');
}




static createNoTracingStartedError(){
return new Error('No tracingStartedInBrowser event found');
}






static _isNavigationStartOfInterest(event){
return event.name==='navigationStart'&&(
!event.args.data||!event.args.data.documentLoaderURL||
ACCEPTABLE_NAVIGATION_URL_REGEX.test(event.args.data.documentLoaderURL));
}


















static _sortTimestampEventGroup(
tsGroupIndices,
timestampSortedIndices,
indexOfTsGroupIndicesStart,
traceEvents)
{












const lookupArrayIndexByTsIndex=i=>timestampSortedIndices[i];

const lookupEventByTsIndex=i=>traceEvents[lookupArrayIndexByTsIndex(i)];


const eEventIndices=[];

const bxEventIndices=[];

const otherEventIndices=[];

for(const tsIndex of tsGroupIndices){

const arrayIndex=lookupArrayIndexByTsIndex(tsIndex);
const event=lookupEventByTsIndex(tsIndex);
if(event.ph==='E')eEventIndices.push(arrayIndex);else
if(event.ph==='X'||event.ph==='B')bxEventIndices.push(arrayIndex);else
otherEventIndices.push(arrayIndex);
}


const effectiveDuration=new Map();
for(const index of bxEventIndices){
const event=traceEvents[index];
if(event.ph==='X'){
effectiveDuration.set(index,event.dur);
}else{

let duration=Number.MAX_SAFE_INTEGER;

let additionalNestedEventsWithSameName=0;
const startIndex=indexOfTsGroupIndicesStart+tsGroupIndices.length;
for(let j=startIndex;j<timestampSortedIndices.length;j++){
const potentialMatchingEvent=lookupEventByTsIndex(j);
const eventMatches=potentialMatchingEvent.name===event.name&&
potentialMatchingEvent.pid===event.pid&&
potentialMatchingEvent.tid===event.tid;


if(!eventMatches)continue;

if(potentialMatchingEvent.ph==='E'&&additionalNestedEventsWithSameName===0){

duration=potentialMatchingEvent.ts-event.ts;
break;
}else if(potentialMatchingEvent.ph==='E'){

additionalNestedEventsWithSameName--;
}else if(potentialMatchingEvent.ph==='B'){

additionalNestedEventsWithSameName++;
}
}

effectiveDuration.set(index,duration);
}
}

bxEventIndices.sort((indexA,indexB)=>(effectiveDuration.get(indexB)||0)-(
effectiveDuration.get(indexA)||0)||indexA-indexB);

otherEventIndices.sort((indexA,indexB)=>indexA-indexB);

return[...eEventIndices,...bxEventIndices,...otherEventIndices];
}








static filteredTraceSort(traceEvents,filter){

const indices=[];
for(let srcIndex=0;srcIndex<traceEvents.length;srcIndex++){
if(filter(traceEvents[srcIndex])){
indices.push(srcIndex);
}
}


indices.sort((indexA,indexB)=>traceEvents[indexA].ts-traceEvents[indexB].ts);


for(let i=0;i<indices.length-1;i++){
const ts=traceEvents[indices[i]].ts;
const tsGroupIndices=[i];
for(let j=i+1;j<indices.length;j++){
if(traceEvents[indices[j]].ts!==ts)break;
tsGroupIndices.push(j);
}


if(tsGroupIndices.length===1)continue;


const finalIndexOrder=TraceProcessor._sortTimestampEventGroup(
tsGroupIndices,
indices,
i,
traceEvents);

indices.splice(i,finalIndexOrder.length,...finalIndexOrder);


i+=tsGroupIndices.length-1;
}


const sorted=[];
for(let i=0;i<indices.length;i++){
sorted.push(traceEvents[indices[i]]);
}

return sorted;
}







static assertHasToplevelEvents(events){
const hasToplevelTask=events.some(this.isScheduleableTask);
if(!hasToplevelTask){
throw new Error('Could not find any top level events');
}
}


















static _riskPercentiles(durations,totalTime,percentiles,clippedLength=0){
let busyTime=0;
for(let i=0;i<durations.length;i++){
busyTime+=durations[i];
}
busyTime-=clippedLength;


let completedTime=totalTime-busyTime;
let duration=0;
let cdfTime=completedTime;
const results=[];

let durationIndex=-1;
let remainingCount=durations.length+1;
if(clippedLength>0){

remainingCount--;
}


for(const percentile of percentiles){


const percentileTime=percentile*totalTime;
while(cdfTime<percentileTime&&durationIndex<durations.length-1){
completedTime+=duration;
remainingCount-=duration<0?-1:1;

if(clippedLength>0&&clippedLength<durations[durationIndex+1]){
duration=-clippedLength;
clippedLength=0;
}else{
durationIndex++;
duration=durations[durationIndex];
}


cdfTime=completedTime+Math.abs(duration)*remainingCount;
}


results.push({
percentile,
time:Math.max(0,(percentileTime-completedTime)/remainingCount)+
BASE_RESPONSE_LATENCY});

}

return results;
}











static getRiskToResponsiveness(
events,
startTime,
endTime,
percentiles=[0.5,0.75,0.9,0.99,1])
{
const totalTime=endTime-startTime;
percentiles.sort((a,b)=>a-b);

const ret=this.getMainThreadTopLevelEventDurations(events,startTime,endTime);
return this._riskPercentiles(ret.durations,totalTime,percentiles,
ret.clippedLength);
}








static getMainThreadTopLevelEventDurations(topLevelEvents,startTime=0,endTime=Infinity){


const durations=[];
let clippedLength=0;

for(const event of topLevelEvents){
if(event.end<startTime||event.start>endTime){
continue;
}

let duration=event.duration;
let eventStart=event.start;
if(eventStart<startTime){

eventStart=startTime;
duration=event.end-startTime;
}

if(event.end>endTime){

clippedLength=duration-(endTime-eventStart);
}

durations.push(duration);
}
durations.sort((a,b)=>a-b);

return{
durations,
clippedLength};

}









static getMainThreadTopLevelEvents(tabTrace,startTime=0,endTime=Infinity){
const topLevelEvents=[];

for(const event of tabTrace.mainThreadEvents){
if(!this.isScheduleableTask(event)||!event.dur)continue;

const start=(event.ts-tabTrace.navigationStartEvt.ts)/1000;
const end=(event.ts+event.dur-tabTrace.navigationStartEvt.ts)/1000;
if(start>endTime||end<startTime)continue;

topLevelEvents.push({
start,
end,
duration:event.dur/1000});

}

return topLevelEvents;
}





static findMainFrameIds(events){

const startedInBrowserEvt=events.find(e=>e.name==='TracingStartedInBrowser');
if(startedInBrowserEvt&&startedInBrowserEvt.args.data&&
startedInBrowserEvt.args.data.frames){
const mainFrame=startedInBrowserEvt.args.data.frames.find(frame=>!frame.parent);
const frameId=mainFrame&&mainFrame.frame;
const pid=mainFrame&&mainFrame.processId;

const threadNameEvt=events.find(e=>e.pid===pid&&e.ph==='M'&&
e.cat==='__metadata'&&e.name==='thread_name'&&e.args.name==='CrRendererMain');
const tid=threadNameEvt&&threadNameEvt.tid;

if(pid&&tid&&frameId){
return{
pid,
tid,
frameId};

}
}




const startedInPageEvt=events.find(e=>e.name==='TracingStartedInPage');
if(startedInPageEvt&&startedInPageEvt.args&&startedInPageEvt.args.data){
const frameId=startedInPageEvt.args.data.page;
if(frameId){
return{
pid:startedInPageEvt.pid,
tid:startedInPageEvt.tid,
frameId};

}
}





const navStartEvt=events.find(e=>Boolean(e.name==='navigationStart'&&e.args&&
e.args.data&&e.args.data.isLoadingMainFrame&&e.args.data.documentLoaderURL));

const firstResourceSendEvt=events.find(e=>e.name==='ResourceSendRequest');

if(navStartEvt&&navStartEvt.args&&navStartEvt.args.data&&
firstResourceSendEvt&&
firstResourceSendEvt.pid===navStartEvt.pid&&
firstResourceSendEvt.tid===navStartEvt.tid){
const frameId=navStartEvt.args.frame;
if(frameId){
return{
pid:navStartEvt.pid,
tid:navStartEvt.tid,
frameId};

}
}

throw this.createNoTracingStartedError();
}





static isScheduleableTask(evt){
return evt.name===SCHEDULABLE_TASK_TITLE_LH||
evt.name===SCHEDULABLE_TASK_TITLE_ALT1||
evt.name===SCHEDULABLE_TASK_TITLE_ALT2||
evt.name===SCHEDULABLE_TASK_TITLE_ALT3;
}








static computeTraceOfTab(trace){


const keyEvents=this.filteredTraceSort(trace.traceEvents,e=>{
return e.cat.includes('blink.user_timing')||
e.cat.includes('loading')||
e.cat.includes('devtools.timeline')||
e.cat==='__metadata';
});


const mainFrameIds=this.findMainFrameIds(keyEvents);


const frameEvents=keyEvents.filter(e=>e.args.frame===mainFrameIds.frameId);


const navigationStart=frameEvents.filter(this._isNavigationStartOfInterest).pop();
if(!navigationStart)throw this.createNoNavstartError();


const firstPaint=frameEvents.find(e=>e.name==='firstPaint'&&e.ts>navigationStart.ts);


const firstContentfulPaint=frameEvents.find(
e=>e.name==='firstContentfulPaint'&&e.ts>navigationStart.ts);



let firstMeaningfulPaint=frameEvents.find(
e=>e.name==='firstMeaningfulPaint'&&e.ts>navigationStart.ts);

let fmpFellBack=false;





if(!firstMeaningfulPaint){
const fmpCand='firstMeaningfulPaintCandidate';
fmpFellBack=true;
log.verbose('trace-of-tab',`No firstMeaningfulPaint found, falling back to last ${fmpCand}`);
const lastCandidate=frameEvents.filter(e=>e.name===fmpCand).pop();
if(!lastCandidate){
log.verbose('trace-of-tab','No `firstMeaningfulPaintCandidate` events found in trace');
}
firstMeaningfulPaint=lastCandidate;
}





let largestContentfulPaint;
let lcpInvalidated=false;

for(let i=frameEvents.length-1;i>=0;i--){
const e=frameEvents[i];

if(e.ts<=navigationStart.ts)break;

if(e.name==='largestContentfulPaint::Invalidate'){
lcpInvalidated=true;
break;
}

if(e.name!=='largestContentfulPaint::Candidate')continue;

largestContentfulPaint=e;
break;
}

const load=frameEvents.find(e=>e.name==='loadEventEnd'&&e.ts>navigationStart.ts);
const domContentLoaded=frameEvents.find(
e=>e.name==='domContentLoadedEventEnd'&&e.ts>navigationStart.ts);




const processEvents=TraceProcessor.
filteredTraceSort(trace.traceEvents,e=>e.pid===mainFrameIds.pid);

const mainThreadEvents=processEvents.
filter(e=>e.tid===mainFrameIds.tid);


const traceEnd=trace.traceEvents.reduce((max,evt)=>{
return max.ts>evt.ts?max:evt;
});
const fakeEndOfTraceEvt={ts:traceEnd.ts+(traceEnd.dur||0)};


const getTimestamp=event=>event&&event.ts;

const timestamps={
navigationStart:navigationStart.ts,
firstPaint:getTimestamp(firstPaint),
firstContentfulPaint:getTimestamp(firstContentfulPaint),
firstMeaningfulPaint:getTimestamp(firstMeaningfulPaint),
largestContentfulPaint:getTimestamp(largestContentfulPaint),
traceEnd:fakeEndOfTraceEvt.ts,
load:getTimestamp(load),
domContentLoaded:getTimestamp(domContentLoaded)};



const getTiming=ts=>(ts-navigationStart.ts)/1000;

const maybeGetTiming=ts=>ts===undefined?undefined:getTiming(ts);

const timings={
navigationStart:0,
firstPaint:maybeGetTiming(timestamps.firstPaint),
firstContentfulPaint:maybeGetTiming(timestamps.firstContentfulPaint),
firstMeaningfulPaint:maybeGetTiming(timestamps.firstMeaningfulPaint),
largestContentfulPaint:maybeGetTiming(timestamps.largestContentfulPaint),
traceEnd:getTiming(timestamps.traceEnd),
load:maybeGetTiming(timestamps.load),
domContentLoaded:maybeGetTiming(timestamps.domContentLoaded)};


const frames=keyEvents.
filter(evt=>evt.name==='FrameCommittedInBrowser').
map(evt=>evt.args.data).
filter(data=>{
return Boolean(data&&data.frame&&data.url);
});

return{
timings,
timestamps,
processEvents,
mainThreadEvents,
mainFrameIds,
frames,
navigationStartEvt:navigationStart,
firstPaintEvt:firstPaint,
firstContentfulPaintEvt:firstContentfulPaint,
firstMeaningfulPaintEvt:firstMeaningfulPaint,
largestContentfulPaintEvt:largestContentfulPaint,
loadEvt:load,
domContentLoadedEvt:domContentLoaded,
fmpFellBack,
lcpInvalidated};

}}


module.exports=TraceProcessor;









},{"lighthouse-logger":135}],97:[function(require,module,exports){





'use strict';

const log=require('lighthouse-logger');





function getUberMetrics(auditResults){
const metricsAudit=auditResults.metrics;
if(!metricsAudit||!metricsAudit.details||!('items'in metricsAudit.details))return;

return metricsAudit.details.items[0];
}

class Metrics{




constructor(traceEvents,auditResults){
this._traceEvents=traceEvents;
this._auditResults=auditResults;
}





static get metricsDefinitions(){
return[
{
name:'Navigation Start',
id:'navstart',
tsKey:'observedNavigationStartTs'},

{
name:'First Contentful Paint',
id:'ttfcp',
tsKey:'observedFirstContentfulPaintTs'},

{
name:'First Meaningful Paint',
id:'ttfmp',
tsKey:'observedFirstMeaningfulPaintTs'},

{
name:'Speed Index',
id:'si',
tsKey:'observedSpeedIndexTs'},

{
name:'First Visual Change',
id:'fv',
tsKey:'observedFirstVisualChangeTs'},

{
name:'Visually Complete 100%',
id:'vc100',
tsKey:'observedLastVisualChangeTs'},

{
name:'First CPU Idle',
id:'ttfi',
tsKey:'firstCPUIdleTs'},

{
name:'Interactive',
id:'tti',
tsKey:'interactiveTs'},

{
name:'End of Trace',
id:'eot',
tsKey:'observedTraceEndTs'},

{
name:'On Load',
id:'onload',
tsKey:'observedLoadTs'},

{
name:'DOM Content Loaded',
id:'dcl',
tsKey:'observedDomContentLoadedTs'}];


}





gatherMetrics(){
const uberMetrics=getUberMetrics(this._auditResults);
if(!uberMetrics){
return[];
}


const resolvedMetrics=[];
Metrics.metricsDefinitions.forEach(metric=>{

const ts=uberMetrics[metric.tsKey];
if(ts===undefined){
log.error('pwmetrics-events',`${metric.name} timestamp not found`);
return;
}

resolvedMetrics.push({
id:metric.id,
name:metric.name,
ts});

});

return resolvedMetrics;
}






getNavigationStartEvt(metrics){
const navStartMetric=metrics.find(e=>e.id==='navstart');
if(!navStartMetric)return;
return this._traceEvents.find(
e=>e.name==='navigationStart'&&e.ts===navStartMetric.ts);

}









synthesizeEventPair(metric,navigationStartEvt){

const eventBase={
pid:navigationStartEvt.pid,
tid:navigationStartEvt.tid,
cat:'blink.user_timing',
name:metric.name,
args:{},

id:`0x${(Math.random()*1000000|0).toString(16)}`};

const fakeMeasureStartEvent=Object.assign({},eventBase,{
ts:navigationStartEvt.ts,
ph:'b'});

const fakeMeasureEndEvent=Object.assign({},eventBase,{
ts:metric.ts,
ph:'e'});

return[fakeMeasureStartEvent,fakeMeasureEndEvent];
}




generateFakeEvents(){
const metrics=this.gatherMetrics();
if(metrics.length===0){
log.error('metrics-events','Metrics collection had errors, not synthetizing trace events');
return[];
}

const navigationStartEvt=this.getNavigationStartEvt(metrics);
if(!navigationStartEvt){
log.error('pwmetrics-events','Reference navigationStart not found');
return[];
}


const fakeEvents=[];
metrics.forEach(metric=>{
if(metric.id==='navstart'){
return;
}
if(!metric.ts){
log.error('pwmetrics-events',`(${metric.name}) missing timestamp. Skipping…`);
return;
}
log.verbose('pwmetrics-events',`Sythesizing trace events for ${metric.name}`);
fakeEvents.push(...this.synthesizeEventPair(metric,navigationStartEvt));
});
return fakeEvents;
}}


module.exports=Metrics;

},{"lighthouse-logger":135}],98:[function(require,module,exports){





'use strict';




const NBSP2='\xa0';

class I18n{




constructor(locale,strings){

if(locale==='en-XA')locale='de';

this._numberDateLocale=locale;
this._numberFormatter=new Intl.NumberFormat(locale);
this._strings=strings||{};
}

get strings(){
return this._strings;
}







formatNumber(number,granularity=0.1){
const coarseValue=Math.round(number/granularity)*granularity;
return this._numberFormatter.format(coarseValue);
}






formatBytesToKB(size,granularity=0.1){
const kbs=this._numberFormatter.format(Math.round(size/1024/granularity)*granularity);
return`${kbs}${NBSP2}KB`;
}






formatMilliseconds(ms,granularity=10){
const coarseTime=Math.round(ms/granularity)*granularity;
return`${this._numberFormatter.format(coarseTime)}${NBSP2}ms`;
}






formatSeconds(ms,granularity=0.1){
const coarseTime=Math.round(ms/1000/granularity)*granularity;
return`${this._numberFormatter.format(coarseTime)}${NBSP2}s`;
}






formatDateTime(date){

const options={
month:'short',day:'numeric',year:'numeric',
hour:'numeric',minute:'numeric',timeZoneName:'short'};

let formatter=new Intl.DateTimeFormat(this._numberDateLocale,options);



const tz=formatter.resolvedOptions().timeZone;
if(!tz||tz.toLowerCase()==='etc/unknown'){
options.timeZone='UTC';
formatter=new Intl.DateTimeFormat(this._numberDateLocale,options);
}
return formatter.format(new Date(date));
}





formatDuration(timeInMilliseconds){
let timeInSeconds=timeInMilliseconds/1000;
if(Math.round(timeInSeconds)===0){
return'None';
}


const parts=[];
const unitLabels={
d:60*60*24,
h:60*60,
m:60,
s:1};


Object.keys(unitLabels).forEach(label=>{
const unit=unitLabels[label];
const numberOfUnits=Math.floor(timeInSeconds/unit);
if(numberOfUnits>0){
timeInSeconds-=numberOfUnits*unit;
parts.push(`${numberOfUnits}\xa0${label}`);
}
});

return parts.join(' ');
}}


if(typeof module!=='undefined'&&module.exports){
module.exports=I18n;
}else{
self.I18n=I18n;
}

},{}],99:[function(require,module,exports){
















'use strict';





const ELLIPSIS='\u2026';
const NBSP='\xa0';
const PASS_THRESHOLD=0.9;
const SCREENSHOT_PREFIX='data:image/jpeg;base64,';

const RATINGS={
PASS:{label:'pass',minScore:PASS_THRESHOLD},
AVERAGE:{label:'average',minScore:0.5},
FAIL:{label:'fail'},
ERROR:{label:'error'}};





const listOfTlds=[
'com','co','gov','edu','ac','org','go','gob','or','net','in','ne','nic','gouv',
'web','spb','blog','jus','kiev','mil','wi','qc','ca','bel','on'];


class Util{
static get PASS_THRESHOLD(){
return PASS_THRESHOLD;
}

static get MS_DISPLAY_VALUE(){
return`%10d${NBSP}ms`;
}










static prepareReportResult(result){

const clone=JSON.parse(JSON.stringify(result));


if(!clone.configSettings.locale){
clone.configSettings.locale='en';
}

for(const audit of Object.values(clone.audits)){




if(audit.scoreDisplayMode==='not_applicable'||audit.scoreDisplayMode==='not-applicable'){
audit.scoreDisplayMode='notApplicable';
}

if(audit.details){



if(audit.details.type===undefined||audit.details.type==='diagnostic'){
audit.details.type='debugdata';
}


if(audit.details.type==='filmstrip'){
for(const screenshot of audit.details.items){
if(!screenshot.data.startsWith(SCREENSHOT_PREFIX)){
screenshot.data=SCREENSHOT_PREFIX+screenshot.data;
}
}
}
}
}


if(typeof clone.categories!=='object')throw new Error('No categories provided.');
for(const category of Object.values(clone.categories)){
category.auditRefs.forEach(auditRef=>{
const result=clone.audits[auditRef.id];
auditRef.result=result;


if(clone.stackPacks){
clone.stackPacks.forEach(pack=>{
if(pack.descriptions[auditRef.id]){
auditRef.stackPacks=auditRef.stackPacks||[];
auditRef.stackPacks.push({
title:pack.title,
iconDataURL:pack.iconDataURL,
description:pack.descriptions[auditRef.id]});

}
});
}
});
}

return clone;
}








static showAsPassed(audit){
switch(audit.scoreDisplayMode){
case'manual':
case'notApplicable':
return true;
case'error':
case'informative':
return false;
case'numeric':
case'binary':
default:
return Number(audit.score)>=RATINGS.PASS.minScore;}

}







static calculateRating(score,scoreDisplayMode){

if(scoreDisplayMode==='manual'||scoreDisplayMode==='notApplicable'){
return RATINGS.PASS.label;
}else if(scoreDisplayMode==='error'){
return RATINGS.ERROR.label;
}else if(score===null){
return RATINGS.FAIL.label;
}


let rating=RATINGS.FAIL.label;
if(score>=RATINGS.PASS.minScore){
rating=RATINGS.PASS.label;
}else if(score>=RATINGS.AVERAGE.minScore){
rating=RATINGS.AVERAGE.label;
}
return rating;
}








static splitMarkdownCodeSpans(text){

const segments=[];


const parts=text.split(/`(.*?)`/g);
for(let i=0;i<parts.length;i++){
const text=parts[i];


if(!text)continue;


const isCode=i%2!==0;
segments.push({
isCode,
text});

}

return segments;
}









static splitMarkdownLink(text){

const segments=[];

const parts=text.split(/\[([^\]]+?)\]\((https?:\/\/.*?)\)/g);
while(parts.length){

const[preambleText,linkText,linkHref]=parts.splice(0,3);

if(preambleText){
segments.push({
isLink:false,
text:preambleText});

}


if(linkText&&linkHref){
segments.push({
isLink:true,
text:linkText,
linkHref});

}
}

return segments;
}






static getURLDisplayName(parsedUrl,options){

options=options||{numPathParts:undefined,preserveQuery:undefined,
preserveHost:undefined};
const numPathParts=options.numPathParts!==undefined?options.numPathParts:2;
const preserveQuery=options.preserveQuery!==undefined?options.preserveQuery:true;
const preserveHost=options.preserveHost||false;

let name;

if(parsedUrl.protocol==='about:'||parsedUrl.protocol==='data:'){

name=parsedUrl.href;
}else{
name=parsedUrl.pathname;
const parts=name.split('/').filter(part=>part.length);
if(numPathParts&&parts.length>numPathParts){
name=ELLIPSIS+parts.slice(-1*numPathParts).join('/');
}

if(preserveHost){
name=`${parsedUrl.host}/${name.replace(/^\//,'')}`;
}
if(preserveQuery){
name=`${name}${parsedUrl.search}`;
}
}

const MAX_LENGTH=64;

name=name.replace(/([a-f0-9]{7})[a-f0-9]{13}[a-f0-9]*/g,`$1${ELLIPSIS}`);

name=name.replace(/([a-zA-Z0-9-_]{9})(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9-_]{10,}/g,
`$1${ELLIPSIS}`);

name=name.replace(/(\d{3})\d{6,}/g,`$1${ELLIPSIS}`);

name=name.replace(/\u2026+/g,ELLIPSIS);


if(name.length>MAX_LENGTH&&name.includes('?')){

name=name.replace(/\?([^=]*)(=)?.*/,`?$1$2${ELLIPSIS}`);


if(name.length>MAX_LENGTH){
name=name.replace(/\?.*/,`?${ELLIPSIS}`);
}
}


if(name.length>MAX_LENGTH){
const dotIndex=name.lastIndexOf('.');
if(dotIndex>=0){
name=name.slice(0,MAX_LENGTH-1-(name.length-dotIndex))+

`${ELLIPSIS}${name.slice(dotIndex)}`;
}else{
name=name.slice(0,MAX_LENGTH-1)+ELLIPSIS;
}
}

return name;
}






static parseURL(url){
const parsedUrl=new URL(url);
return{
file:Util.getURLDisplayName(parsedUrl),
hostname:parsedUrl.hostname,
origin:parsedUrl.origin};

}





static createOrReturnURL(value){
if(value instanceof URL){
return value;
}

return new URL(value);
}







static getTld(hostname){
const tlds=hostname.split('.').slice(-2);

if(!listOfTlds.includes(tlds[0])){
return`.${tlds[tlds.length-1]}`;
}

return`.${tlds.join('.')}`;
}






static getRootDomain(url){
const hostname=Util.createOrReturnURL(url).hostname;
const tld=Util.getTld(hostname);



const splitTld=tld.split('.');


return hostname.split('.').slice(-splitTld.length).join('.');
}





static getEnvironmentDisplayValues(settings){
const emulationDesc=Util.getEmulationDescriptions(settings);

return[
{
name:Util.i18n.strings.runtimeSettingsDevice,
description:emulationDesc.deviceEmulation},

{
name:Util.i18n.strings.runtimeSettingsNetworkThrottling,
description:emulationDesc.networkThrottling},

{
name:Util.i18n.strings.runtimeSettingsCPUThrottling,
description:emulationDesc.cpuThrottling}];


}





static getEmulationDescriptions(settings){
let cpuThrottling;
let networkThrottling;

const throttling=settings.throttling;

switch(settings.throttlingMethod){
case'provided':
cpuThrottling=Util.i18n.strings.throttlingProvided;
networkThrottling=Util.i18n.strings.throttlingProvided;
break;
case'devtools':{
const{cpuSlowdownMultiplier,requestLatencyMs}=throttling;
cpuThrottling=`${Util.i18n.formatNumber(cpuSlowdownMultiplier)}x slowdown (DevTools)`;
networkThrottling=`${Util.i18n.formatNumber(requestLatencyMs)}${NBSP}ms HTTP RTT, `+
`${Util.i18n.formatNumber(throttling.downloadThroughputKbps)}${NBSP}Kbps down, `+
`${Util.i18n.formatNumber(throttling.uploadThroughputKbps)}${NBSP}Kbps up (DevTools)`;
break;
}
case'simulate':{
const{cpuSlowdownMultiplier,rttMs,throughputKbps}=throttling;
cpuThrottling=`${Util.i18n.formatNumber(cpuSlowdownMultiplier)}x slowdown (Simulated)`;
networkThrottling=`${Util.i18n.formatNumber(rttMs)}${NBSP}ms TCP RTT, `+
`${Util.i18n.formatNumber(throughputKbps)}${NBSP}Kbps throughput (Simulated)`;
break;
}
default:
cpuThrottling=Util.i18n.strings.runtimeUnknown;
networkThrottling=Util.i18n.strings.runtimeUnknown;}


let deviceEmulation=Util.i18n.strings.runtimeNoEmulation;
if(settings.emulatedFormFactor==='mobile'){
deviceEmulation=Util.i18n.strings.runtimeMobileEmulation;
}else if(settings.emulatedFormFactor==='desktop'){
deviceEmulation=Util.i18n.strings.runtimeDesktopEmulation;
}

return{
deviceEmulation,
cpuThrottling,
networkThrottling};

}









static filterRelevantLines(lines,lineMessages,surroundingLineCount){
if(lineMessages.length===0){

return lines.slice(0,surroundingLineCount*2+1);
}

const minGapSize=3;
const lineNumbersToKeep=new Set();


lineMessages=lineMessages.sort((a,b)=>(a.lineNumber||0)-(b.lineNumber||0));
lineMessages.forEach(({lineNumber})=>{
let firstSurroundingLineNumber=lineNumber-surroundingLineCount;
let lastSurroundingLineNumber=lineNumber+surroundingLineCount;

while(firstSurroundingLineNumber<1){

firstSurroundingLineNumber++;
lastSurroundingLineNumber++;
}


if(lineNumbersToKeep.has(firstSurroundingLineNumber-minGapSize-1)){
firstSurroundingLineNumber-=minGapSize;
}
for(let i=firstSurroundingLineNumber;i<=lastSurroundingLineNumber;i++){
const surroundingLineNumber=i;
lineNumbersToKeep.add(surroundingLineNumber);
}
});

return lines.filter(line=>lineNumbersToKeep.has(line.lineNumber));
}




static isPluginCategory(categoryId){
return categoryId.startsWith('lighthouse-plugin-');
}}







Util.reportJson=null;



Util.i18n=null;




Util.UIStrings={

varianceDisclaimer:'Values are estimated and may vary. The [performance score is calculated](https://web.dev/performance-scoring/) directly from these metrics.',

calculatorLink:'See calculator.',

opportunityResourceColumnLabel:'Opportunity',

opportunitySavingsColumnLabel:'Estimated Savings',


errorMissingAuditInfo:'Report error: no audit information',

errorLabel:'Error!',

warningHeader:'Warnings: ',

auditGroupExpandTooltip:'Show audits',

warningAuditsGroupTitle:'Passed audits but with warnings',

passedAuditsGroupTitle:'Passed audits',

notApplicableAuditsGroupTitle:'Not applicable',

manualAuditsGroupTitle:'Additional items to manually check',


toplevelWarningsMessage:'There were issues affecting this run of Lighthouse:',


crcInitialNavigation:'Initial Navigation',

crcLongestDurationLabel:'Maximum critical path latency:',


snippetExpandButtonLabel:'Expand snippet',

snippetCollapseButtonLabel:'Collapse snippet',


lsPerformanceCategoryDescription:'[Lighthouse](https://developers.google.com/web/tools/lighthouse/) analysis of the current page on an emulated mobile network. Values are estimated and may vary.',

labDataTitle:'Lab Data',


thirdPartyResourcesLabel:'Show 3rd-party resources',


dropdownPrintSummary:'Print Summary',

dropdownPrintExpanded:'Print Expanded',

dropdownCopyJSON:'Copy JSON',

dropdownSaveHTML:'Save as HTML',

dropdownSaveJSON:'Save as JSON',

dropdownViewer:'Open in Viewer',

dropdownSaveGist:'Save as Gist',

dropdownDarkTheme:'Toggle Dark Theme',


runtimeSettingsTitle:'Runtime Settings',

runtimeSettingsUrl:'URL',

runtimeSettingsFetchTime:'Fetch Time',

runtimeSettingsDevice:'Device',

runtimeSettingsNetworkThrottling:'Network throttling',

runtimeSettingsCPUThrottling:'CPU throttling',

runtimeSettingsChannel:'Channel',

runtimeSettingsUA:'User agent (host)',

runtimeSettingsUANetwork:'User agent (network)',

runtimeSettingsBenchmark:'CPU/Memory Power',


footerIssue:'File an issue',


runtimeNoEmulation:'No emulation',

runtimeMobileEmulation:'Emulated Moto G4',

runtimeDesktopEmulation:'Emulated Desktop',

runtimeUnknown:'Unknown',


throttlingProvided:'Provided by environment'};


if(typeof module!=='undefined'&&module.exports){
module.exports=Util;
}else{
self.Util=Util;
}

},{}],100:[function(require,module,exports){





'use strict';

const htmlReportAssets=require('./html/html-report-assets.js');

class ReportGenerator{






static replaceStrings(source,replacements){
if(replacements.length===0){
return source;
}

const firstReplacement=replacements[0];
const nextReplacements=replacements.slice(1);
return source.
split(firstReplacement.search).
map(part=>ReportGenerator.replaceStrings(part,nextReplacements)).
join(firstReplacement.replacement);
}






static generateReportHtml(lhr){
const sanitizedJson=JSON.stringify(lhr).
replace(/</g,'\\u003c').
replace(/\u2028/g,'\\u2028').
replace(/\u2029/g,'\\u2029');
const sanitizedJavascript=htmlReportAssets.REPORT_JAVASCRIPT.replace(/<\//g,'\\u003c/');

return ReportGenerator.replaceStrings(htmlReportAssets.REPORT_TEMPLATE,[
{search:'%%LIGHTHOUSE_JSON%%',replacement:sanitizedJson},
{search:'%%LIGHTHOUSE_JAVASCRIPT%%',replacement:sanitizedJavascript},
{search:'/*%%LIGHTHOUSE_CSS%%*/',replacement:htmlReportAssets.REPORT_CSS},
{search:'%%LIGHTHOUSE_TEMPLATES%%',replacement:htmlReportAssets.REPORT_TEMPLATES}]);

}













static generateReportCSV(lhr){


const CRLF='\r\n';
const separator=',';

const escape=value=>`"${value.replace(/"/g,'""')}"`;


const header=['requestedUrl','finalUrl','category','name','title','type','score'];
const table=Object.values(lhr.categories).map(category=>{
return category.auditRefs.map(auditRef=>{
const audit=lhr.audits[auditRef.id];

const numericScore=audit.score===null?-1:audit.score;
return[lhr.requestedUrl,lhr.finalUrl,category.title,audit.id,audit.title,
audit.scoreDisplayMode,numericScore].
map(value=>value.toString()).
map(escape);
});
});

return[header].concat(...table).
map(row=>row.join(separator)).join(CRLF);
}







static generateReport(lhr,outputModes){
const outputAsArray=Array.isArray(outputModes);
if(typeof outputModes==='string')outputModes=[outputModes];

const output=outputModes.map(outputMode=>{

if(outputMode==='html'){
return ReportGenerator.generateReportHtml(lhr);
}

if(outputMode==='csv'){
return ReportGenerator.generateReportCSV(lhr);
}

if(outputMode==='json'){
return JSON.stringify(lhr,null,2);
}

throw new Error('Invalid output mode: '+outputMode);
});

return outputAsArray?output:output[0];
}}


module.exports=ReportGenerator;

},{"./html/html-report-assets.js":113}],101:[function(require,module,exports){
(function(process){





'use strict';

const isDeepEqual=require('lodash.isequal');
const Driver=require('./gather/driver.js');
const GatherRunner=require('./gather/gather-runner.js');
const ReportScoring=require('./scoring.js');
const Audit=require('./audits/audit.js');
const log=require('lighthouse-logger');
const i18n=require('./lib/i18n/i18n.js');
const stackPacks=require('./lib/stack-packs.js');
const assetSaver=require('./lib/asset-saver.js');

const path=require('path');
const URL=require('./lib/url-shim.js');
const Sentry=require('./lib/sentry.js');
const generateReport=require('./report/report-generator.js').generateReport;
const LHError=require('./lib/lh-error.js');




class Runner{





static async run(connection,runOpts){
const settings=runOpts.config.settings;
try{
const runnerStatus={msg:'Runner setup',id:'lh:runner:run'};
log.time(runnerStatus,'verbose');





const lighthouseRunWarnings=[];

const sentryContext=Sentry.getContext();
Sentry.captureBreadcrumb({
message:'Run started',
category:'lifecycle',
data:sentryContext&&sentryContext.extra});








let artifacts;
let requestedUrl;
if(settings.auditMode&&!settings.gatherMode){

const path=Runner._getArtifactsPath(settings);
artifacts=assetSaver.loadArtifacts(path);
requestedUrl=artifacts.URL.requestedUrl;

if(!requestedUrl){
throw new Error('Cannot run audit mode on empty URL');
}
if(runOpts.url&&!URL.equalWithExcludedFragments(runOpts.url,requestedUrl)){
throw new Error('Cannot run audit mode on different URL');
}
}else{

if(runOpts.url&&URL.isValid(runOpts.url)&&URL.isProtocolAllowed(runOpts.url)){

requestedUrl=new URL(runOpts.url).href;
}else{
throw new LHError(LHError.errors.INVALID_URL);
}

artifacts=await Runner._gatherArtifactsFromBrowser(requestedUrl,runOpts,connection);

if(settings.gatherMode){
const path=Runner._getArtifactsPath(settings);
await assetSaver.saveArtifacts(artifacts,path);
}
}


if(settings.gatherMode&&!settings.auditMode)return;


if(!runOpts.config.audits){
throw new Error('No audits to evaluate.');
}
const auditResults=await Runner._runAudits(settings,runOpts.config.audits,artifacts,
lighthouseRunWarnings);


const resultsStatus={msg:'Generating results...',id:'lh:runner:generate'};
log.time(resultsStatus);

if(artifacts.LighthouseRunWarnings){
lighthouseRunWarnings.push(...artifacts.LighthouseRunWarnings);
}


const lighthouseVersion=require('../package.json').version;


const resultsById={};
for(const audit of auditResults){
resultsById[audit.id]=audit;
}


let categories={};
if(runOpts.config.categories){
categories=ReportScoring.scoreAllCategories(runOpts.config.categories,resultsById);
}

log.timeEnd(resultsStatus);
log.timeEnd(runnerStatus);


const lhr={
userAgent:artifacts.HostUserAgent,
environment:{
networkUserAgent:artifacts.NetworkUserAgent,
hostUserAgent:artifacts.HostUserAgent,
benchmarkIndex:artifacts.BenchmarkIndex},

lighthouseVersion,
fetchTime:artifacts.fetchTime,
requestedUrl:requestedUrl,
finalUrl:artifacts.URL.finalUrl,
runWarnings:lighthouseRunWarnings,
runtimeError:Runner.getArtifactRuntimeError(artifacts),
audits:resultsById,
configSettings:settings,
categories,
categoryGroups:runOpts.config.groups||undefined,
timing:this._getTiming(artifacts),
i18n:{
rendererFormattedStrings:i18n.getRendererFormattedStrings(settings.locale),
icuMessagePaths:{}},

stackPacks:stackPacks.getStackPacks(artifacts.Stacks)};



lhr.i18n.icuMessagePaths=i18n.replaceIcuMessageInstanceIds(lhr,settings.locale);


const report=generateReport(lhr,settings.output);

return{lhr,artifacts,report};
}catch(err){

err.friendlyMessage=i18n.getFormatted(err.friendlyMessage,settings.locale);
await Sentry.captureException(err,{level:'fatal'});
throw err;
}
}








static _getTiming(artifacts){
const timingEntriesFromArtifacts=artifacts.Timing||[];
const timingEntriesFromRunner=log.takeTimeEntries();
const timingEntriesKeyValues=[
...timingEntriesFromArtifacts,
...timingEntriesFromRunner].

map(entry=>[entry.startTime,entry]);
const timingEntries=Array.from(new Map(timingEntriesKeyValues).values()).


map(entry=>{
return{


startTime:parseFloat(entry.startTime.toFixed(2)),
name:entry.name,
duration:parseFloat(entry.duration.toFixed(2)),
entryType:entry.entryType};

});
const runnerEntry=timingEntries.find(e=>e.name==='lh:runner:run');
return{entries:timingEntries,total:runnerEntry&&runnerEntry.duration||0};
}








static async _gatherArtifactsFromBrowser(requestedUrl,runnerOpts,connection){
if(!runnerOpts.config.passes){
throw new Error('No browser artifacts are either provided or requested.');
}
const driver=runnerOpts.driverMock||new Driver(connection);
const gatherOpts={
driver,
requestedUrl,
settings:runnerOpts.config.settings};

const artifacts=await GatherRunner.run(runnerOpts.config.passes,gatherOpts);
return artifacts;
}









static async _runAudits(settings,audits,artifacts,runWarnings){
const status={msg:'Analyzing and running audits...',id:'lh:runner:auditing'};
log.time(status);

if(artifacts.settings){
const overrides={
locale:undefined,
gatherMode:undefined,
auditMode:undefined,
output:undefined,
channel:undefined,
budgets:undefined};

const normalizedGatherSettings=Object.assign({},artifacts.settings,overrides);
const normalizedAuditSettings=Object.assign({},settings,overrides);

if(!isDeepEqual(normalizedGatherSettings,normalizedAuditSettings)){
throw new Error('Cannot change settings between gathering and auditing');
}
}


const sharedAuditContext={
settings,
computedCache:new Map()};



const auditResults=[];
for(const auditDefn of audits){
const auditResult=await Runner._runAudit(auditDefn,artifacts,sharedAuditContext,
runWarnings);
auditResults.push(auditResult);
}

log.timeEnd(status);
return auditResults;
}











static async _runAudit(auditDefn,artifacts,sharedAuditContext,runWarnings){
const audit=auditDefn.implementation;
const status={
msg:`Auditing: ${i18n.getFormatted(audit.meta.title,'en-US')}`,
id:`lh:audit:${audit.meta.id}`};

log.time(status);

let auditResult;
try{

for(const artifactName of audit.meta.requiredArtifacts){
const noArtifact=artifacts[artifactName]===undefined;



const noRequiredTrace=artifactName==='traces'&&!artifacts.traces[Audit.DEFAULT_PASS];
const noRequiredDevtoolsLog=artifactName==='devtoolsLogs'&&
!artifacts.devtoolsLogs[Audit.DEFAULT_PASS];

if(noArtifact||noRequiredTrace||noRequiredDevtoolsLog){
log.warn('Runner',
`${artifactName} gatherer, required by audit ${audit.meta.id}, did not run.`);
throw new LHError(LHError.errors.MISSING_REQUIRED_ARTIFACT,{artifactName});
}


if(artifacts[artifactName]instanceof Error){


const artifactError=artifacts[artifactName];

Sentry.captureException(artifactError,{
tags:{gatherer:artifactName},
level:'error'});


log.warn('Runner',`${artifactName} gatherer, required by audit ${audit.meta.id},`+
` encountered an error: ${artifactError.message}`);


const error=new LHError(LHError.errors.ERRORED_REQUIRED_ARTIFACT,
{artifactName,errorMessage:artifactError.message});

error.expected=true;
throw error;
}
}


const auditOptions=Object.assign({},audit.defaultOptions,auditDefn.options);
const auditContext={
options:auditOptions,
...sharedAuditContext};





const requestedArtifacts=audit.meta.requiredArtifacts.
concat(audit.meta.__internalOptionalArtifacts||[]);
const narrowedArtifacts=requestedArtifacts.
reduce((narrowedArtifacts,artifactName)=>{
const requestedArtifact=artifacts[artifactName];

narrowedArtifacts[artifactName]=requestedArtifact;
return narrowedArtifacts;
},{});
const product=await audit.audit(narrowedArtifacts,auditContext);
runWarnings.push(...(product.runWarnings||[]));

auditResult=Audit.generateAuditResult(audit,product);
}catch(err){

if(err.code!=='MISSING_REQUIRED_ARTIFACT'&&err.code!=='ERRORED_REQUIRED_ARTIFACT'){
log.warn(audit.meta.id,`Caught exception: ${err.message}`);
}

Sentry.captureException(err,{tags:{audit:audit.meta.id},level:'error'});

const errorMessage=err.friendlyMessage?err.friendlyMessage:err.message;
auditResult=Audit.generateErrorAuditResult(audit,errorMessage);
}

log.timeEnd(status);
return auditResult;
}







static getArtifactRuntimeError(artifacts){
const possibleErrorArtifacts=[
artifacts.PageLoadError,
...Object.values(artifacts)];


for(const possibleErrorArtifact of possibleErrorArtifacts){
if(possibleErrorArtifact instanceof LHError&&possibleErrorArtifact.lhrRuntimeError){
const errorMessage=possibleErrorArtifact.friendlyMessage||possibleErrorArtifact.message;

return{
code:possibleErrorArtifact.code,
message:errorMessage};

}
}

return undefined;
}





static getAuditList(){
const ignoredFiles=[
'audit.js',
'violation-audit.js',
'accessibility/axe-audit.js',
'multi-check-audit.js',
'byte-efficiency/byte-efficiency-audit.js',
'manual/manual-audit.js'];


const fileList=[
...["accessibility","apple-touch-icon.js","audit.js","bootup-time.js","byte-efficiency","content-width.js","critical-request-chains.js","deprecations.js","diagnostics.js","dobetterweb","errors-in-console.js","final-screenshot.js","font-display.js","image-aspect-ratio.js","image-size-responsive.js","installable-manifest.js","is-on-https.js","largest-contentful-paint-element.js","layout-shift-elements.js","legacy-javascript.js","load-fast-enough-for-pwa.js","main-thread-tasks.js","mainthread-work-breakdown.js","manual","maskable-icon.js","metrics","metrics.js","multi-check-audit.js","network-requests.js","network-rtt.js","network-server-latency.js","offline-start-url.js","performance-budget.js","predictive-perf.js","redirects-http.js","redirects.js","resource-summary.js","screenshot-thumbnails.js","seo","server-response-time.js","service-worker.js","splash-screen.js","themed-omnibox.js","third-party-summary.js","timing-budget.js","user-timings.js","uses-rel-preconnect.js","uses-rel-preload.js","viewport.js","violation-audit.js","without-javascript.js","works-offline.js"],
...["appcache-manifest.js","charset.js","doctype.js","dom-size.js","external-anchors-use-rel-noopener.js","geolocation-on-start.js","js-libraries.js","no-document-write.js","no-vulnerable-libraries.js","notification-on-start.js","password-inputs-can-be-pasted-into.js","uses-http2.js","uses-passive-event-listeners.js"].map(f=>`dobetterweb/${f}`),
...["cumulative-layout-shift.js","estimated-input-latency.js","first-contentful-paint-3g.js","first-contentful-paint.js","first-cpu-idle.js","first-meaningful-paint.js","interactive.js","largest-contentful-paint.js","max-potential-fid.js","speed-index.js","total-blocking-time.js"].map(f=>`metrics/${f}`),
...["canonical.js","font-size.js","hreflang.js","http-status-code.js","is-crawlable.js","link-text.js","manual","meta-description.js","plugins.js","robots-txt.js","tap-targets.js"].map(f=>`seo/${f}`),
...["structured-data.js"].map(f=>`seo/manual/${f}`),
...["accesskeys.js","aria-allowed-attr.js","aria-hidden-body.js","aria-hidden-focus.js","aria-input-field-name.js","aria-required-attr.js","aria-required-children.js","aria-required-parent.js","aria-roles.js","aria-toggle-field-name.js","aria-valid-attr-value.js","aria-valid-attr.js","axe-audit.js","button-name.js","bypass.js","color-contrast.js","definition-list.js","dlitem.js","document-title.js","duplicate-id-active.js","duplicate-id-aria.js","form-field-multiple-labels.js","frame-title.js","heading-order.js","html-has-lang.js","html-lang-valid.js","image-alt.js","input-image-alt.js","label.js","layout-table.js","link-name.js","list.js","listitem.js","manual","meta-refresh.js","meta-viewport.js","object-alt.js","tabindex.js","td-headers-attr.js","th-has-data-cells.js","valid-lang.js","video-caption.js","video-description.js"].
map(f=>`accessibility/${f}`),
...["custom-controls-labels.js","custom-controls-roles.js","focus-traps.js","focusable-controls.js","interactive-element-affordance.js","logical-tab-order.js","managed-focus.js","offscreen-content-hidden.js","use-landmarks.js","visual-order-follows-dom.js"].
map(f=>`accessibility/manual/${f}`),
...["byte-efficiency-audit.js","duplicated-javascript.js","efficient-animated-content.js","offscreen-images.js","render-blocking-resources.js","total-byte-weight.js","unminified-css.js","unminified-javascript.js","unused-css-rules.js","unused-javascript.js","uses-long-cache-ttl.js","uses-optimized-images.js","uses-responsive-images.js","uses-text-compression.js","uses-webp-images.js"].
map(f=>`byte-efficiency/${f}`),
...["manual-audit.js","pwa-cross-browser.js","pwa-each-page-has-url.js","pwa-page-transitions.js"].map(f=>`manual/${f}`)];

return fileList.filter(f=>{
return /\.js$/.test(f)&&!ignoredFiles.includes(f);
}).sort();
}





static getGathererList(){
const fileList=[
...["accessibility.js","anchor-elements.js","cache-contents.js","console-messages.js","css-usage.js","dobetterweb","gatherer.js","html-without-javascript.js","http-redirect.js","iframe-elements.js","image-elements.js","js-usage.js","link-elements.js","main-document-content.js","meta-elements.js","offline.js","runtime-exceptions.js","script-elements.js","seo","service-worker.js","source-maps.js","start-url.js","trace-elements.js","viewport-dimensions.js"],
...["embedded-content.js","font-size.js","robots-txt.js","tap-targets.js"].map(f=>`seo/${f}`),
...["appcache.js","doctype.js","domstats.js","optimized-images.js","password-inputs-with-prevented-paste.js","response-compression.js","tags-blocking-first-paint.js"].
map(f=>`dobetterweb/${f}`)];

return fileList.filter(f=>/\.js$/.test(f)&&f!=='gatherer.js').sort();
}






static _getArtifactsPath(settings){
const{auditMode,gatherMode}=settings;


if(typeof auditMode==='string')return path.resolve(process.cwd(),auditMode);
if(typeof gatherMode==='string')return path.resolve(process.cwd(),gatherMode);

return path.join(process.cwd(),'latest-run');
}}


module.exports=Runner;

}).call(this,require('_process'));
},{"../package.json":205,"./audits/audit.js":3,"./gather/driver.js":58,"./gather/gather-runner.js":60,"./lib/asset-saver.js":64,"./lib/i18n/i18n.js":77,"./lib/lh-error.js":82,"./lib/sentry.js":89,"./lib/stack-packs.js":91,"./lib/url-shim.js":"url","./report/report-generator.js":100,"./scoring.js":102,"_process":170,"lighthouse-logger":135,"lodash.isequal":154,"path":168}],102:[function(require,module,exports){






'use strict';

const Audit=require('./audits/audit.js');






const clampTo2Decimals=val=>Math.round(val*100)/100;

class ReportScoring{





static arithmeticMean(items){

items=items.filter(item=>item.weight>0);

if(items.some(item=>item.score===null))return null;

const results=items.reduce(
(result,item)=>{
const score=item.score;
const weight=item.weight;

return{
weight:result.weight+weight,
sum:result.sum+score*weight};

},
{weight:0,sum:0});


return clampTo2Decimals(results.sum/results.weight||0);
}







static scoreAllCategories(configCategories,resultsByAuditId){

const scoredCategories={};

for(const[categoryId,configCategory]of Object.entries(configCategories)){

const auditRefs=configCategory.auditRefs.map(configMember=>{
const member={...configMember};





const result=resultsByAuditId[member.id];
if(result.scoreDisplayMode===Audit.SCORING_MODES.NOT_APPLICABLE||
result.scoreDisplayMode===Audit.SCORING_MODES.INFORMATIVE||
result.scoreDisplayMode===Audit.SCORING_MODES.MANUAL){
member.weight=0;
}

return member;
});

const scores=auditRefs.map(auditRef=>({
score:resultsByAuditId[auditRef.id].score,
weight:auditRef.weight}));

const score=ReportScoring.arithmeticMean(scores);

scoredCategories[categoryId]={
...configCategory,
auditRefs,
id:categoryId,
score};

}

return scoredCategories;
}}


module.exports=ReportScoring;

},{"./audits/audit.js":3}],103:[function(require,module,exports){
const HEADER_REGEXP=/([a-zA-Z][a-zA-Z_-]*)\s*(?:=(?:"([^"]*)"|([^ \t",;]*)))?/g;

const STRINGS={
maxAge:'max-age',
sharedMaxAge:'s-maxage',
maxStale:'max-stale',
minFresh:'min-fresh',
immutable:'immutable',
mustRevalidate:'must-revalidate',
noCache:'no-cache',
noStore:'no-store',
noTransform:'no-transform',
onlyIfCached:'only-if-cached',
private:'private',
proxyRevalidate:'proxy-revalidate',
public:'public'};


function parseBooleanOnly(value){
return value===null;
}

function parseDuration(value){
if(!value){
return null;
}

const duration=parseInt(value,10);

if(!Number.isFinite(duration)||duration<0){
return null;
}

return duration;
}

class CacheControl{
constructor(){
this.maxAge=null;
this.sharedMaxAge=null;
this.maxStale=null;
this.maxStaleDuration=null;
this.minFresh=null;
this.immutable=null;
this.mustRevalidate=null;
this.noCache=null;
this.noStore=null;
this.noTransform=null;
this.onlyIfCached=null;
this.private=null;
this.proxyRevalidate=null;
this.public=null;
}

parse(header){
if(!header||header.length===0){
return this;
}

const values={};
const matches=header.match(HEADER_REGEXP)||[];

Array.prototype.forEach.call(matches,match=>{
const tokens=match.split('=',2);

const[key]=tokens;
let value=null;

if(tokens.length>1){
value=tokens[1].trim();
}

values[key.toLowerCase()]=value;
});

this.maxAge=parseDuration(values[STRINGS.maxAge]);
this.sharedMaxAge=parseDuration(values[STRINGS.sharedMaxAge]);

this.maxStale=parseBooleanOnly(values[STRINGS.maxStale]);
this.maxStaleDuration=parseDuration(values[STRINGS.maxStale]);
if(this.maxStaleDuration){
this.maxStale=true;
}

this.minFresh=parseDuration(values[STRINGS.minFresh]);

this.immutable=parseBooleanOnly(values[STRINGS.immutable]);
this.mustRevalidate=parseBooleanOnly(values[STRINGS.mustRevalidate]);
this.noCache=parseBooleanOnly(values[STRINGS.noCache]);
this.noStore=parseBooleanOnly(values[STRINGS.noStore]);
this.noTransform=parseBooleanOnly(values[STRINGS.noTransform]);
this.onlyIfCached=parseBooleanOnly(values[STRINGS.onlyIfCached]);
this.private=parseBooleanOnly(values[STRINGS.private]);
this.proxyRevalidate=parseBooleanOnly(values[STRINGS.proxyRevalidate]);
this.public=parseBooleanOnly(values[STRINGS.public]);

return this;
}

format(){
const tokens=[];

if(this.maxAge){
tokens.push(`${STRINGS.maxAge}=${this.maxAge}`);
}

if(this.sharedMaxAge){
tokens.push(`${STRINGS.sharedMaxAge}=${this.sharedMaxAge}`);
}

if(this.maxStale){
if(this.maxStaleDuration){
tokens.push(`${STRINGS.maxStale}=${this.maxStaleDuration}`);
}else{
tokens.push(STRINGS.maxStale);
}
}

if(this.minFresh){
tokens.push(`${STRINGS.minFresh}=${this.minFresh}`);
}

if(this.immutable){
tokens.push(STRINGS.immutable);
}

if(this.mustRevalidate){
tokens.push(STRINGS.mustRevalidate);
}

if(this.noCache){
tokens.push(STRINGS.noCache);
}

if(this.noStore){
tokens.push(STRINGS.noStore);
}

if(this.noTransform){
tokens.push(STRINGS.noTransform);
}

if(this.onlyIfCached){
tokens.push(STRINGS.onlyIfCached);
}

if(this.private){
tokens.push(STRINGS.private);
}

if(this.proxyRevalidate){
tokens.push(STRINGS.proxyRevalidate);
}

if(this.public){
tokens.push(STRINGS.public);
}

return tokens.join(', ');
}}


function parse(header){
const cc=new CacheControl();
return cc.parse(header);
}

function format(cc){
if(!(cc instanceof CacheControl)){
return CacheControl.prototype.format.call(cc);
}

return cc.format();
}

module.exports={
CacheControl,
parse,
format};


},{}],104:[function(require,module,exports){
(function(global){
'use strict';










function compare(a,b){
if(a===b){
return 0;
}

var x=a.length;
var y=b.length;

for(var i=0,len=Math.min(x,y);i<len;++i){
if(a[i]!==b[i]){
x=a[i];
y=b[i];
break;
}
}

if(x<y){
return-1;
}
if(y<x){
return 1;
}
return 0;
}
function isBuffer(b){
if(global.Buffer&&typeof global.Buffer.isBuffer==='function'){
return global.Buffer.isBuffer(b);
}
return!!(b!=null&&b._isBuffer);
}



























var util=require('util/');
var hasOwn=Object.prototype.hasOwnProperty;
var pSlice=Array.prototype.slice;
var functionsHaveNames=function(){
return function foo(){}.name==='foo';
}();
function pToString(obj){
return Object.prototype.toString.call(obj);
}
function isView(arrbuf){
if(isBuffer(arrbuf)){
return false;
}
if(typeof global.ArrayBuffer!=='function'){
return false;
}
if(typeof ArrayBuffer.isView==='function'){
return ArrayBuffer.isView(arrbuf);
}
if(!arrbuf){
return false;
}
if(arrbuf instanceof DataView){
return true;
}
if(arrbuf.buffer&&arrbuf.buffer instanceof ArrayBuffer){
return true;
}
return false;
}




var assert=module.exports=ok;






var regex=/\s*function\s+([^\(\s]*)\s*/;

function getName(func){
if(!util.isFunction(func)){
return;
}
if(functionsHaveNames){
return func.name;
}
var str=func.toString();
var match=str.match(regex);
return match&&match[1];
}
assert.AssertionError=function AssertionError(options){
this.name='AssertionError';
this.actual=options.actual;
this.expected=options.expected;
this.operator=options.operator;
if(options.message){
this.message=options.message;
this.generatedMessage=false;
}else{
this.message=getMessage(this);
this.generatedMessage=true;
}
var stackStartFunction=options.stackStartFunction||fail;
if(Error.captureStackTrace){
Error.captureStackTrace(this,stackStartFunction);
}else{

var err=new Error();
if(err.stack){
var out=err.stack;


var fn_name=getName(stackStartFunction);
var idx=out.indexOf('\n'+fn_name);
if(idx>=0){


var next_line=out.indexOf('\n',idx+1);
out=out.substring(next_line+1);
}

this.stack=out;
}
}
};


util.inherits(assert.AssertionError,Error);

function truncate(s,n){
if(typeof s==='string'){
return s.length<n?s:s.slice(0,n);
}else{
return s;
}
}
function inspect(something){
if(functionsHaveNames||!util.isFunction(something)){
return util.inspect(something);
}
var rawname=getName(something);
var name=rawname?': '+rawname:'';
return'[Function'+name+']';
}
function getMessage(self){
return truncate(inspect(self.actual),128)+' '+
self.operator+' '+
truncate(inspect(self.expected),128);
}












function fail(actual,expected,message,operator,stackStartFunction){
throw new assert.AssertionError({
message:message,
actual:actual,
expected:expected,
operator:operator,
stackStartFunction:stackStartFunction});

}


assert.fail=fail;








function ok(value,message){
if(!value)fail(value,true,message,'==',assert.ok);
}
assert.ok=ok;





assert.equal=function equal(actual,expected,message){
if(actual!=expected)fail(actual,expected,message,'==',assert.equal);
};




assert.notEqual=function notEqual(actual,expected,message){
if(actual==expected){
fail(actual,expected,message,'!=',assert.notEqual);
}
};




assert.deepEqual=function deepEqual(actual,expected,message){
if(!_deepEqual(actual,expected,false)){
fail(actual,expected,message,'deepEqual',assert.deepEqual);
}
};

assert.deepStrictEqual=function deepStrictEqual(actual,expected,message){
if(!_deepEqual(actual,expected,true)){
fail(actual,expected,message,'deepStrictEqual',assert.deepStrictEqual);
}
};

function _deepEqual(actual,expected,strict,memos){

if(actual===expected){
return true;
}else if(isBuffer(actual)&&isBuffer(expected)){
return compare(actual,expected)===0;



}else if(util.isDate(actual)&&util.isDate(expected)){
return actual.getTime()===expected.getTime();




}else if(util.isRegExp(actual)&&util.isRegExp(expected)){
return actual.source===expected.source&&
actual.global===expected.global&&
actual.multiline===expected.multiline&&
actual.lastIndex===expected.lastIndex&&
actual.ignoreCase===expected.ignoreCase;



}else if((actual===null||typeof actual!=='object')&&(
expected===null||typeof expected!=='object')){
return strict?actual===expected:actual==expected;







}else if(isView(actual)&&isView(expected)&&
pToString(actual)===pToString(expected)&&
!(actual instanceof Float32Array||
actual instanceof Float64Array)){
return compare(new Uint8Array(actual.buffer),
new Uint8Array(expected.buffer))===0;







}else if(isBuffer(actual)!==isBuffer(expected)){
return false;
}else{
memos=memos||{actual:[],expected:[]};

var actualIndex=memos.actual.indexOf(actual);
if(actualIndex!==-1){
if(actualIndex===memos.expected.indexOf(expected)){
return true;
}
}

memos.actual.push(actual);
memos.expected.push(expected);

return objEquiv(actual,expected,strict,memos);
}
}

function isArguments(object){
return Object.prototype.toString.call(object)=='[object Arguments]';
}

function objEquiv(a,b,strict,actualVisitedObjects){
if(a===null||a===undefined||b===null||b===undefined)
return false;

if(util.isPrimitive(a)||util.isPrimitive(b))
return a===b;
if(strict&&Object.getPrototypeOf(a)!==Object.getPrototypeOf(b))
return false;
var aIsArgs=isArguments(a);
var bIsArgs=isArguments(b);
if(aIsArgs&&!bIsArgs||!aIsArgs&&bIsArgs)
return false;
if(aIsArgs){
a=pSlice.call(a);
b=pSlice.call(b);
return _deepEqual(a,b,strict);
}
var ka=objectKeys(a);
var kb=objectKeys(b);
var key,i;


if(ka.length!==kb.length)
return false;

ka.sort();
kb.sort();

for(i=ka.length-1;i>=0;i--){
if(ka[i]!==kb[i])
return false;
}


for(i=ka.length-1;i>=0;i--){
key=ka[i];
if(!_deepEqual(a[key],b[key],strict,actualVisitedObjects))
return false;
}
return true;
}




assert.notDeepEqual=function notDeepEqual(actual,expected,message){
if(_deepEqual(actual,expected,false)){
fail(actual,expected,message,'notDeepEqual',assert.notDeepEqual);
}
};

assert.notDeepStrictEqual=notDeepStrictEqual;
function notDeepStrictEqual(actual,expected,message){
if(_deepEqual(actual,expected,true)){
fail(actual,expected,message,'notDeepStrictEqual',notDeepStrictEqual);
}
}





assert.strictEqual=function strictEqual(actual,expected,message){
if(actual!==expected){
fail(actual,expected,message,'===',assert.strictEqual);
}
};




assert.notStrictEqual=function notStrictEqual(actual,expected,message){
if(actual===expected){
fail(actual,expected,message,'!==',assert.notStrictEqual);
}
};

function expectedException(actual,expected){
if(!actual||!expected){
return false;
}

if(Object.prototype.toString.call(expected)=='[object RegExp]'){
return expected.test(actual);
}

try{
if(actual instanceof expected){
return true;
}
}catch(e){

}

if(Error.isPrototypeOf(expected)){
return false;
}

return expected.call({},actual)===true;
}

function _tryBlock(block){
var error;
try{
block();
}catch(e){
error=e;
}
return error;
}

function _throws(shouldThrow,block,expected,message){
var actual;

if(typeof block!=='function'){
throw new TypeError('"block" argument must be a function');
}

if(typeof expected==='string'){
message=expected;
expected=null;
}

actual=_tryBlock(block);

message=(expected&&expected.name?' ('+expected.name+').':'.')+(
message?' '+message:'.');

if(shouldThrow&&!actual){
fail(actual,expected,'Missing expected exception'+message);
}

var userProvidedMessage=typeof message==='string';
var isUnwantedException=!shouldThrow&&util.isError(actual);
var isUnexpectedException=!shouldThrow&&actual&&!expected;

if(isUnwantedException&&
userProvidedMessage&&
expectedException(actual,expected)||
isUnexpectedException){
fail(actual,expected,'Got unwanted exception'+message);
}

if(shouldThrow&&actual&&expected&&
!expectedException(actual,expected)||!shouldThrow&&actual){
throw actual;
}
}




assert.throws=function(block,error,message){
_throws(true,block,error,message);
};


assert.doesNotThrow=function(block,error,message){
_throws(false,block,error,message);
};

assert.ifError=function(err){if(err)throw err;};

var objectKeys=Object.keys||function(obj){
var keys=[];
for(var key in obj){
if(hasOwn.call(obj,key))keys.push(key);
}
return keys;
};

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"util/":107}],105:[function(require,module,exports){
if(typeof Object.create==='function'){

module.exports=function inherits(ctor,superCtor){
ctor.super_=superCtor;
ctor.prototype=Object.create(superCtor.prototype,{
constructor:{
value:ctor,
enumerable:false,
writable:true,
configurable:true}});


};
}else{

module.exports=function inherits(ctor,superCtor){
ctor.super_=superCtor;
var TempCtor=function(){};
TempCtor.prototype=superCtor.prototype;
ctor.prototype=new TempCtor();
ctor.prototype.constructor=ctor;
};
}

},{}],106:[function(require,module,exports){
module.exports=function isBuffer(arg){
return arg&&typeof arg==='object'&&
typeof arg.copy==='function'&&
typeof arg.fill==='function'&&
typeof arg.readUInt8==='function';
};
},{}],107:[function(require,module,exports){
(function(process,global){





















var formatRegExp=/%[sdj%]/g;
exports.format=function(f){
if(!isString(f)){
var objects=[];
for(var i=0;i<arguments.length;i++){
objects.push(inspect(arguments[i]));
}
return objects.join(' ');
}

var i=1;
var args=arguments;
var len=args.length;
var str=String(f).replace(formatRegExp,function(x){
if(x==='%%')return'%';
if(i>=len)return x;
switch(x){
case'%s':return String(args[i++]);
case'%d':return Number(args[i++]);
case'%j':
try{
return JSON.stringify(args[i++]);
}catch(_){
return'[Circular]';
}
default:
return x;}

});
for(var x=args[i];i<len;x=args[++i]){
if(isNull(x)||!isObject(x)){
str+=' '+x;
}else{
str+=' '+inspect(x);
}
}
return str;
};





exports.deprecate=function(fn,msg){

if(isUndefined(global.process)){
return function(){
return exports.deprecate(fn,msg).apply(this,arguments);
};
}

if(process.noDeprecation===true){
return fn;
}

var warned=false;
function deprecated(){
if(!warned){
if(process.throwDeprecation){
throw new Error(msg);
}else if(process.traceDeprecation){
console.trace(msg);
}else{
console.error(msg);
}
warned=true;
}
return fn.apply(this,arguments);
}

return deprecated;
};


var debugs={};
var debugEnviron;
exports.debuglog=function(set){
if(isUndefined(debugEnviron))
debugEnviron=process.env.NODE_DEBUG||'';
set=set.toUpperCase();
if(!debugs[set]){
if(new RegExp('\\b'+set+'\\b','i').test(debugEnviron)){
var pid=process.pid;
debugs[set]=function(){
var msg=exports.format.apply(exports,arguments);
console.error('%s %d: %s',set,pid,msg);
};
}else{
debugs[set]=function(){};
}
}
return debugs[set];
};










function inspect(obj,opts){

var ctx={
seen:[],
stylize:stylizeNoColor};


if(arguments.length>=3)ctx.depth=arguments[2];
if(arguments.length>=4)ctx.colors=arguments[3];
if(isBoolean(opts)){

ctx.showHidden=opts;
}else if(opts){

exports._extend(ctx,opts);
}

if(isUndefined(ctx.showHidden))ctx.showHidden=false;
if(isUndefined(ctx.depth))ctx.depth=2;
if(isUndefined(ctx.colors))ctx.colors=false;
if(isUndefined(ctx.customInspect))ctx.customInspect=true;
if(ctx.colors)ctx.stylize=stylizeWithColor;
return formatValue(ctx,obj,ctx.depth);
}
exports.inspect=inspect;



inspect.colors={
'bold':[1,22],
'italic':[3,23],
'underline':[4,24],
'inverse':[7,27],
'white':[37,39],
'grey':[90,39],
'black':[30,39],
'blue':[34,39],
'cyan':[36,39],
'green':[32,39],
'magenta':[35,39],
'red':[31,39],
'yellow':[33,39]};



inspect.styles={
'special':'cyan',
'number':'yellow',
'boolean':'yellow',
'undefined':'grey',
'null':'bold',
'string':'green',
'date':'magenta',

'regexp':'red'};



function stylizeWithColor(str,styleType){
var style=inspect.styles[styleType];

if(style){
return'\u001b['+inspect.colors[style][0]+'m'+str+
'\u001b['+inspect.colors[style][1]+'m';
}else{
return str;
}
}


function stylizeNoColor(str,styleType){
return str;
}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val]=true;
});

return hash;
}


function formatValue(ctx,value,recurseTimes){


if(ctx.customInspect&&
value&&
isFunction(value.inspect)&&

value.inspect!==exports.inspect&&

!(value.constructor&&value.constructor.prototype===value)){
var ret=value.inspect(recurseTimes,ctx);
if(!isString(ret)){
ret=formatValue(ctx,ret,recurseTimes);
}
return ret;
}


var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;
}


var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);

if(ctx.showHidden){
keys=Object.getOwnPropertyNames(value);
}



if(isError(value)&&(
keys.indexOf('message')>=0||keys.indexOf('description')>=0)){
return formatError(value);
}


if(keys.length===0){
if(isFunction(value)){
var name=value.name?': '+value.name:'';
return ctx.stylize('[Function'+name+']','special');
}
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');
}
if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');
}
if(isError(value)){
return formatError(value);
}
}

var base='',array=false,braces=['{','}'];


if(isArray(value)){
array=true;
braces=['[',']'];
}


if(isFunction(value)){
var n=value.name?': '+value.name:'';
base=' [Function'+n+']';
}


if(isRegExp(value)){
base=' '+RegExp.prototype.toString.call(value);
}


if(isDate(value)){
base=' '+Date.prototype.toUTCString.call(value);
}


if(isError(value)){
base=' '+formatError(value);
}

if(keys.length===0&&(!array||value.length==0)){
return braces[0]+base+braces[1];
}

if(recurseTimes<0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');
}else{
return ctx.stylize('[Object]','special');
}
}

ctx.seen.push(value);

var output;
if(array){
output=formatArray(ctx,value,recurseTimes,visibleKeys,keys);
}else{
output=keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);
});
}

ctx.seen.pop();

return reduceToSingleString(output,base,braces);
}


function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\''+JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"')+'\'';
return ctx.stylize(simple,'string');
}
if(isNumber(value))
return ctx.stylize(''+value,'number');
if(isBoolean(value))
return ctx.stylize(''+value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');
}


function formatError(value){
return'['+Error.prototype.toString.call(value)+']';
}


function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i<l;++i){
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));
}else{
output.push('');
}
}
keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));
}
});
return output;
}


function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]};
if(desc.get){
if(desc.set){
str=ctx.stylize('[Getter/Setter]','special');
}else{
str=ctx.stylize('[Getter]','special');
}
}else{
if(desc.set){
str=ctx.stylize('[Setter]','special');
}
}
if(!hasOwnProperty(visibleKeys,key)){
name='['+key+']';
}
if(!str){
if(ctx.seen.indexOf(desc.value)<0){
if(isNull(recurseTimes)){
str=formatValue(ctx,desc.value,null);
}else{
str=formatValue(ctx,desc.value,recurseTimes-1);
}
if(str.indexOf('\n')>-1){
if(array){
str=str.split('\n').map(function(line){
return'  '+line;
}).join('\n').substr(2);
}else{
str='\n'+str.split('\n').map(function(line){
return'   '+line;
}).join('\n');
}
}
}else{
str=ctx.stylize('[Circular]','special');
}
}
if(isUndefined(name)){
if(array&&key.match(/^\d+$/)){
return str;
}
name=JSON.stringify(''+key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name=name.substr(1,name.length-2);
name=ctx.stylize(name,'name');
}else{
name=name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name=ctx.stylize(name,'string');
}
}

return name+': '+str;
}


function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n')>=0)numLinesEst++;
return prev+cur.replace(/\u001b\[\d\d?m/g,'').length+1;
},0);

if(length>60){
return braces[0]+(
base===''?'':base+'\n ')+
' '+
output.join(',\n  ')+
' '+
braces[1];
}

return braces[0]+base+' '+output.join(', ')+' '+braces[1];
}




function isArray(ar){
return Array.isArray(ar);
}
exports.isArray=isArray;

function isBoolean(arg){
return typeof arg==='boolean';
}
exports.isBoolean=isBoolean;

function isNull(arg){
return arg===null;
}
exports.isNull=isNull;

function isNullOrUndefined(arg){
return arg==null;
}
exports.isNullOrUndefined=isNullOrUndefined;

function isNumber(arg){
return typeof arg==='number';
}
exports.isNumber=isNumber;

function isString(arg){
return typeof arg==='string';
}
exports.isString=isString;

function isSymbol(arg){
return typeof arg==='symbol';
}
exports.isSymbol=isSymbol;

function isUndefined(arg){
return arg===void 0;
}
exports.isUndefined=isUndefined;

function isRegExp(re){
return isObject(re)&&objectToString(re)==='[object RegExp]';
}
exports.isRegExp=isRegExp;

function isObject(arg){
return typeof arg==='object'&&arg!==null;
}
exports.isObject=isObject;

function isDate(d){
return isObject(d)&&objectToString(d)==='[object Date]';
}
exports.isDate=isDate;

function isError(e){
return isObject(e)&&(
objectToString(e)==='[object Error]'||e instanceof Error);
}
exports.isError=isError;

function isFunction(arg){
return typeof arg==='function';
}
exports.isFunction=isFunction;

function isPrimitive(arg){
return arg===null||
typeof arg==='boolean'||
typeof arg==='number'||
typeof arg==='string'||
typeof arg==='symbol'||
typeof arg==='undefined';
}
exports.isPrimitive=isPrimitive;

exports.isBuffer=require('./support/isBuffer');

function objectToString(o){
return Object.prototype.toString.call(o);
}


function pad(n){
return n<10?'0'+n.toString(10):n.toString(10);
}


var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep',
'Oct','Nov','Dec'];


function timestamp(){
var d=new Date();
var time=[pad(d.getHours()),
pad(d.getMinutes()),
pad(d.getSeconds())].join(':');
return[d.getDate(),months[d.getMonth()],time].join(' ');
}



exports.log=function(){
console.log('%s - %s',timestamp(),exports.format.apply(exports,arguments));
};















exports.inherits=require('inherits');

exports._extend=function(origin,add){

if(!add||!isObject(add))return origin;

var keys=Object.keys(add);
var i=keys.length;
while(i--){
origin[keys[i]]=add[keys[i]];
}
return origin;
};

function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);
}

}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"./support/isBuffer":106,"_process":170,"inherits":105}],108:[function(require,module,exports){

const langs=[
'aa',
'ab',
'ae',
'af',
'ak',
'am',
'an',
'ar',
'as',
'av',
'ay',
'az',
'ba',
'be',
'bg',
'bh',
'bi',
'bm',
'bn',
'bo',
'br',
'bs',
'ca',
'ce',
'ch',
'co',
'cr',
'cs',
'cu',
'cv',
'cy',
'da',
'de',
'dv',
'dz',
'ee',
'el',
'en',
'eo',
'es',
'et',
'eu',
'fa',
'ff',
'fi',
'fj',
'fo',
'fr',
'fy',
'ga',
'gd',
'gl',
'gn',
'gu',
'gv',
'ha',
'he',
'hi',
'ho',
'hr',
'ht',
'hu',
'hy',
'hz',
'ia',
'id',
'ie',
'ig',
'ii',
'ik',
'in',
'io',
'is',
'it',
'iu',
'iw',
'ja',
'ji',
'jv',
'jw',
'ka',
'kg',
'ki',
'kj',
'kk',
'kl',
'km',
'kn',
'ko',
'kr',
'ks',
'ku',
'kv',
'kw',
'ky',
'la',
'lb',
'lg',
'li',
'ln',
'lo',
'lt',
'lu',
'lv',
'mg',
'mh',
'mi',
'mk',
'ml',
'mn',
'mo',
'mr',
'ms',
'mt',
'my',
'na',
'nb',
'nd',
'ne',
'ng',
'nl',
'nn',
'no',
'nr',
'nv',
'ny',
'oc',
'oj',
'om',
'or',
'os',
'pa',
'pi',
'pl',
'ps',
'pt',
'qu',
'rm',
'rn',
'ro',
'ru',
'rw',
'sa',
'sc',
'sd',
'se',
'sg',
'sh',
'si',
'sk',
'sl',
'sm',
'sn',
'so',
'sq',
'sr',
'ss',
'st',
'su',
'sv',
'sw',
'ta',
'te',
'tg',
'th',
'ti',
'tk',
'tl',
'tn',
'to',
'tr',
'ts',
'tt',
'tw',
'ty',
'ug',
'uk',
'ur',
'uz',
've',
'vi',
'vo',
'wa',
'wo',
'xh',
'yi',
'yo',
'za',
'zh',
'zu',
'aaa',
'aab',
'aac',
'aad',
'aae',
'aaf',
'aag',
'aah',
'aai',
'aak',
'aal',
'aam',
'aan',
'aao',
'aap',
'aaq',
'aas',
'aat',
'aau',
'aav',
'aaw',
'aax',
'aaz',
'aba',
'abb',
'abc',
'abd',
'abe',
'abf',
'abg',
'abh',
'abi',
'abj',
'abl',
'abm',
'abn',
'abo',
'abp',
'abq',
'abr',
'abs',
'abt',
'abu',
'abv',
'abw',
'abx',
'aby',
'abz',
'aca',
'acb',
'acd',
'ace',
'acf',
'ach',
'aci',
'ack',
'acl',
'acm',
'acn',
'acp',
'acq',
'acr',
'acs',
'act',
'acu',
'acv',
'acw',
'acx',
'acy',
'acz',
'ada',
'adb',
'add',
'ade',
'adf',
'adg',
'adh',
'adi',
'adj',
'adl',
'adn',
'ado',
'adp',
'adq',
'adr',
'ads',
'adt',
'adu',
'adw',
'adx',
'ady',
'adz',
'aea',
'aeb',
'aec',
'aed',
'aee',
'aek',
'ael',
'aem',
'aen',
'aeq',
'aer',
'aes',
'aeu',
'aew',
'aey',
'aez',
'afa',
'afb',
'afd',
'afe',
'afg',
'afh',
'afi',
'afk',
'afn',
'afo',
'afp',
'afs',
'aft',
'afu',
'afz',
'aga',
'agb',
'agc',
'agd',
'age',
'agf',
'agg',
'agh',
'agi',
'agj',
'agk',
'agl',
'agm',
'agn',
'ago',
'agp',
'agq',
'agr',
'ags',
'agt',
'agu',
'agv',
'agw',
'agx',
'agy',
'agz',
'aha',
'ahb',
'ahg',
'ahh',
'ahi',
'ahk',
'ahl',
'ahm',
'ahn',
'aho',
'ahp',
'ahr',
'ahs',
'aht',
'aia',
'aib',
'aic',
'aid',
'aie',
'aif',
'aig',
'aih',
'aii',
'aij',
'aik',
'ail',
'aim',
'ain',
'aio',
'aip',
'aiq',
'air',
'ais',
'ait',
'aiw',
'aix',
'aiy',
'aja',
'ajg',
'aji',
'ajn',
'ajp',
'ajt',
'aju',
'ajw',
'ajz',
'akb',
'akc',
'akd',
'ake',
'akf',
'akg',
'akh',
'aki',
'akj',
'akk',
'akl',
'akm',
'ako',
'akp',
'akq',
'akr',
'aks',
'akt',
'aku',
'akv',
'akw',
'akx',
'aky',
'akz',
'ala',
'alc',
'ald',
'ale',
'alf',
'alg',
'alh',
'ali',
'alj',
'alk',
'all',
'alm',
'aln',
'alo',
'alp',
'alq',
'alr',
'als',
'alt',
'alu',
'alv',
'alw',
'alx',
'aly',
'alz',
'ama',
'amb',
'amc',
'ame',
'amf',
'amg',
'ami',
'amj',
'amk',
'aml',
'amm',
'amn',
'amo',
'amp',
'amq',
'amr',
'ams',
'amt',
'amu',
'amv',
'amw',
'amx',
'amy',
'amz',
'ana',
'anb',
'anc',
'and',
'ane',
'anf',
'ang',
'anh',
'ani',
'anj',
'ank',
'anl',
'anm',
'ann',
'ano',
'anp',
'anq',
'anr',
'ans',
'ant',
'anu',
'anv',
'anw',
'anx',
'any',
'anz',
'aoa',
'aob',
'aoc',
'aod',
'aoe',
'aof',
'aog',
'aoh',
'aoi',
'aoj',
'aok',
'aol',
'aom',
'aon',
'aor',
'aos',
'aot',
'aou',
'aox',
'aoz',
'apa',
'apb',
'apc',
'apd',
'ape',
'apf',
'apg',
'aph',
'api',
'apj',
'apk',
'apl',
'apm',
'apn',
'apo',
'app',
'apq',
'apr',
'aps',
'apt',
'apu',
'apv',
'apw',
'apx',
'apy',
'apz',
'aqa',
'aqc',
'aqd',
'aqg',
'aql',
'aqm',
'aqn',
'aqp',
'aqr',
'aqt',
'aqz',
'arb',
'arc',
'ard',
'are',
'arh',
'ari',
'arj',
'ark',
'arl',
'arn',
'aro',
'arp',
'arq',
'arr',
'ars',
'art',
'aru',
'arv',
'arw',
'arx',
'ary',
'arz',
'asa',
'asb',
'asc',
'asd',
'ase',
'asf',
'asg',
'ash',
'asi',
'asj',
'ask',
'asl',
'asn',
'aso',
'asp',
'asq',
'asr',
'ass',
'ast',
'asu',
'asv',
'asw',
'asx',
'asy',
'asz',
'ata',
'atb',
'atc',
'atd',
'ate',
'atg',
'ath',
'ati',
'atj',
'atk',
'atl',
'atm',
'atn',
'ato',
'atp',
'atq',
'atr',
'ats',
'att',
'atu',
'atv',
'atw',
'atx',
'aty',
'atz',
'aua',
'aub',
'auc',
'aud',
'aue',
'auf',
'aug',
'auh',
'aui',
'auj',
'auk',
'aul',
'aum',
'aun',
'auo',
'aup',
'auq',
'aur',
'aus',
'aut',
'auu',
'auw',
'aux',
'auy',
'auz',
'avb',
'avd',
'avi',
'avk',
'avl',
'avm',
'avn',
'avo',
'avs',
'avt',
'avu',
'avv',
'awa',
'awb',
'awc',
'awd',
'awe',
'awg',
'awh',
'awi',
'awk',
'awm',
'awn',
'awo',
'awr',
'aws',
'awt',
'awu',
'awv',
'aww',
'awx',
'awy',
'axb',
'axe',
'axg',
'axk',
'axl',
'axm',
'axx',
'aya',
'ayb',
'ayc',
'ayd',
'aye',
'ayg',
'ayh',
'ayi',
'ayk',
'ayl',
'ayn',
'ayo',
'ayp',
'ayq',
'ayr',
'ays',
'ayt',
'ayu',
'ayx',
'ayy',
'ayz',
'aza',
'azb',
'azc',
'azd',
'azg',
'azj',
'azm',
'azn',
'azo',
'azt',
'azz',
'baa',
'bab',
'bac',
'bad',
'bae',
'baf',
'bag',
'bah',
'bai',
'baj',
'bal',
'ban',
'bao',
'bap',
'bar',
'bas',
'bat',
'bau',
'bav',
'baw',
'bax',
'bay',
'baz',
'bba',
'bbb',
'bbc',
'bbd',
'bbe',
'bbf',
'bbg',
'bbh',
'bbi',
'bbj',
'bbk',
'bbl',
'bbm',
'bbn',
'bbo',
'bbp',
'bbq',
'bbr',
'bbs',
'bbt',
'bbu',
'bbv',
'bbw',
'bbx',
'bby',
'bbz',
'bca',
'bcb',
'bcc',
'bcd',
'bce',
'bcf',
'bcg',
'bch',
'bci',
'bcj',
'bck',
'bcl',
'bcm',
'bcn',
'bco',
'bcp',
'bcq',
'bcr',
'bcs',
'bct',
'bcu',
'bcv',
'bcw',
'bcy',
'bcz',
'bda',
'bdb',
'bdc',
'bdd',
'bde',
'bdf',
'bdg',
'bdh',
'bdi',
'bdj',
'bdk',
'bdl',
'bdm',
'bdn',
'bdo',
'bdp',
'bdq',
'bdr',
'bds',
'bdt',
'bdu',
'bdv',
'bdw',
'bdx',
'bdy',
'bdz',
'bea',
'beb',
'bec',
'bed',
'bee',
'bef',
'beg',
'beh',
'bei',
'bej',
'bek',
'bem',
'beo',
'bep',
'beq',
'ber',
'bes',
'bet',
'beu',
'bev',
'bew',
'bex',
'bey',
'bez',
'bfa',
'bfb',
'bfc',
'bfd',
'bfe',
'bff',
'bfg',
'bfh',
'bfi',
'bfj',
'bfk',
'bfl',
'bfm',
'bfn',
'bfo',
'bfp',
'bfq',
'bfr',
'bfs',
'bft',
'bfu',
'bfw',
'bfx',
'bfy',
'bfz',
'bga',
'bgb',
'bgc',
'bgd',
'bge',
'bgf',
'bgg',
'bgi',
'bgj',
'bgk',
'bgl',
'bgm',
'bgn',
'bgo',
'bgp',
'bgq',
'bgr',
'bgs',
'bgt',
'bgu',
'bgv',
'bgw',
'bgx',
'bgy',
'bgz',
'bha',
'bhb',
'bhc',
'bhd',
'bhe',
'bhf',
'bhg',
'bhh',
'bhi',
'bhj',
'bhk',
'bhl',
'bhm',
'bhn',
'bho',
'bhp',
'bhq',
'bhr',
'bhs',
'bht',
'bhu',
'bhv',
'bhw',
'bhx',
'bhy',
'bhz',
'bia',
'bib',
'bic',
'bid',
'bie',
'bif',
'big',
'bij',
'bik',
'bil',
'bim',
'bin',
'bio',
'bip',
'biq',
'bir',
'bit',
'biu',
'biv',
'biw',
'bix',
'biy',
'biz',
'bja',
'bjb',
'bjc',
'bjd',
'bje',
'bjf',
'bjg',
'bjh',
'bji',
'bjj',
'bjk',
'bjl',
'bjm',
'bjn',
'bjo',
'bjp',
'bjq',
'bjr',
'bjs',
'bjt',
'bju',
'bjv',
'bjw',
'bjx',
'bjy',
'bjz',
'bka',
'bkb',
'bkc',
'bkd',
'bkf',
'bkg',
'bkh',
'bki',
'bkj',
'bkk',
'bkl',
'bkm',
'bkn',
'bko',
'bkp',
'bkq',
'bkr',
'bks',
'bkt',
'bku',
'bkv',
'bkw',
'bkx',
'bky',
'bkz',
'bla',
'blb',
'blc',
'bld',
'ble',
'blf',
'blg',
'blh',
'bli',
'blj',
'blk',
'bll',
'blm',
'bln',
'blo',
'blp',
'blq',
'blr',
'bls',
'blt',
'blv',
'blw',
'blx',
'bly',
'blz',
'bma',
'bmb',
'bmc',
'bmd',
'bme',
'bmf',
'bmg',
'bmh',
'bmi',
'bmj',
'bmk',
'bml',
'bmm',
'bmn',
'bmo',
'bmp',
'bmq',
'bmr',
'bms',
'bmt',
'bmu',
'bmv',
'bmw',
'bmx',
'bmy',
'bmz',
'bna',
'bnb',
'bnc',
'bnd',
'bne',
'bnf',
'bng',
'bni',
'bnj',
'bnk',
'bnl',
'bnm',
'bnn',
'bno',
'bnp',
'bnq',
'bnr',
'bns',
'bnt',
'bnu',
'bnv',
'bnw',
'bnx',
'bny',
'bnz',
'boa',
'bob',
'boe',
'bof',
'bog',
'boh',
'boi',
'boj',
'bok',
'bol',
'bom',
'bon',
'boo',
'bop',
'boq',
'bor',
'bot',
'bou',
'bov',
'bow',
'box',
'boy',
'boz',
'bpa',
'bpb',
'bpd',
'bpg',
'bph',
'bpi',
'bpj',
'bpk',
'bpl',
'bpm',
'bpn',
'bpo',
'bpp',
'bpq',
'bpr',
'bps',
'bpt',
'bpu',
'bpv',
'bpw',
'bpx',
'bpy',
'bpz',
'bqa',
'bqb',
'bqc',
'bqd',
'bqf',
'bqg',
'bqh',
'bqi',
'bqj',
'bqk',
'bql',
'bqm',
'bqn',
'bqo',
'bqp',
'bqq',
'bqr',
'bqs',
'bqt',
'bqu',
'bqv',
'bqw',
'bqx',
'bqy',
'bqz',
'bra',
'brb',
'brc',
'brd',
'brf',
'brg',
'brh',
'bri',
'brj',
'brk',
'brl',
'brm',
'brn',
'bro',
'brp',
'brq',
'brr',
'brs',
'brt',
'bru',
'brv',
'brw',
'brx',
'bry',
'brz',
'bsa',
'bsb',
'bsc',
'bse',
'bsf',
'bsg',
'bsh',
'bsi',
'bsj',
'bsk',
'bsl',
'bsm',
'bsn',
'bso',
'bsp',
'bsq',
'bsr',
'bss',
'bst',
'bsu',
'bsv',
'bsw',
'bsx',
'bsy',
'bta',
'btb',
'btc',
'btd',
'bte',
'btf',
'btg',
'bth',
'bti',
'btj',
'btk',
'btl',
'btm',
'btn',
'bto',
'btp',
'btq',
'btr',
'bts',
'btt',
'btu',
'btv',
'btw',
'btx',
'bty',
'btz',
'bua',
'bub',
'buc',
'bud',
'bue',
'buf',
'bug',
'buh',
'bui',
'buj',
'buk',
'bum',
'bun',
'buo',
'bup',
'buq',
'bus',
'but',
'buu',
'buv',
'buw',
'bux',
'buy',
'buz',
'bva',
'bvb',
'bvc',
'bvd',
'bve',
'bvf',
'bvg',
'bvh',
'bvi',
'bvj',
'bvk',
'bvl',
'bvm',
'bvn',
'bvo',
'bvp',
'bvq',
'bvr',
'bvt',
'bvu',
'bvv',
'bvw',
'bvx',
'bvy',
'bvz',
'bwa',
'bwb',
'bwc',
'bwd',
'bwe',
'bwf',
'bwg',
'bwh',
'bwi',
'bwj',
'bwk',
'bwl',
'bwm',
'bwn',
'bwo',
'bwp',
'bwq',
'bwr',
'bws',
'bwt',
'bwu',
'bww',
'bwx',
'bwy',
'bwz',
'bxa',
'bxb',
'bxc',
'bxd',
'bxe',
'bxf',
'bxg',
'bxh',
'bxi',
'bxj',
'bxk',
'bxl',
'bxm',
'bxn',
'bxo',
'bxp',
'bxq',
'bxr',
'bxs',
'bxu',
'bxv',
'bxw',
'bxx',
'bxz',
'bya',
'byb',
'byc',
'byd',
'bye',
'byf',
'byg',
'byh',
'byi',
'byj',
'byk',
'byl',
'bym',
'byn',
'byo',
'byp',
'byq',
'byr',
'bys',
'byt',
'byv',
'byw',
'byx',
'byy',
'byz',
'bza',
'bzb',
'bzc',
'bzd',
'bze',
'bzf',
'bzg',
'bzh',
'bzi',
'bzj',
'bzk',
'bzl',
'bzm',
'bzn',
'bzo',
'bzp',
'bzq',
'bzr',
'bzs',
'bzt',
'bzu',
'bzv',
'bzw',
'bzx',
'bzy',
'bzz',
'caa',
'cab',
'cac',
'cad',
'cae',
'caf',
'cag',
'cah',
'cai',
'caj',
'cak',
'cal',
'cam',
'can',
'cao',
'cap',
'caq',
'car',
'cas',
'cau',
'cav',
'caw',
'cax',
'cay',
'caz',
'cba',
'cbb',
'cbc',
'cbd',
'cbe',
'cbg',
'cbh',
'cbi',
'cbj',
'cbk',
'cbl',
'cbn',
'cbo',
'cbq',
'cbr',
'cbs',
'cbt',
'cbu',
'cbv',
'cbw',
'cby',
'cca',
'ccc',
'ccd',
'cce',
'ccg',
'cch',
'ccj',
'ccl',
'ccm',
'ccn',
'cco',
'ccp',
'ccq',
'ccr',
'ccs',
'cda',
'cdc',
'cdd',
'cde',
'cdf',
'cdg',
'cdh',
'cdi',
'cdj',
'cdm',
'cdn',
'cdo',
'cdr',
'cds',
'cdy',
'cdz',
'cea',
'ceb',
'ceg',
'cek',
'cel',
'cen',
'cet',
'cfa',
'cfd',
'cfg',
'cfm',
'cga',
'cgc',
'cgg',
'cgk',
'chb',
'chc',
'chd',
'chf',
'chg',
'chh',
'chj',
'chk',
'chl',
'chm',
'chn',
'cho',
'chp',
'chq',
'chr',
'cht',
'chw',
'chx',
'chy',
'chz',
'cia',
'cib',
'cic',
'cid',
'cie',
'cih',
'cik',
'cim',
'cin',
'cip',
'cir',
'ciw',
'ciy',
'cja',
'cje',
'cjh',
'cji',
'cjk',
'cjm',
'cjn',
'cjo',
'cjp',
'cjr',
'cjs',
'cjv',
'cjy',
'cka',
'ckb',
'ckh',
'ckl',
'ckn',
'cko',
'ckq',
'ckr',
'cks',
'ckt',
'cku',
'ckv',
'ckx',
'cky',
'ckz',
'cla',
'clc',
'cld',
'cle',
'clh',
'cli',
'clj',
'clk',
'cll',
'clm',
'clo',
'clt',
'clu',
'clw',
'cly',
'cma',
'cmc',
'cme',
'cmg',
'cmi',
'cmk',
'cml',
'cmm',
'cmn',
'cmo',
'cmr',
'cms',
'cmt',
'cna',
'cnb',
'cnc',
'cng',
'cnh',
'cni',
'cnk',
'cnl',
'cno',
'cnr',
'cns',
'cnt',
'cnu',
'cnw',
'cnx',
'coa',
'cob',
'coc',
'cod',
'coe',
'cof',
'cog',
'coh',
'coj',
'cok',
'col',
'com',
'con',
'coo',
'cop',
'coq',
'cot',
'cou',
'cov',
'cow',
'cox',
'coy',
'coz',
'cpa',
'cpb',
'cpc',
'cpe',
'cpf',
'cpg',
'cpi',
'cpn',
'cpo',
'cpp',
'cps',
'cpu',
'cpx',
'cpy',
'cqd',
'cqu',
'cra',
'crb',
'crc',
'crd',
'crf',
'crg',
'crh',
'cri',
'crj',
'crk',
'crl',
'crm',
'crn',
'cro',
'crp',
'crq',
'crr',
'crs',
'crt',
'crv',
'crw',
'crx',
'cry',
'crz',
'csa',
'csb',
'csc',
'csd',
'cse',
'csf',
'csg',
'csh',
'csi',
'csj',
'csk',
'csl',
'csm',
'csn',
'cso',
'csq',
'csr',
'css',
'cst',
'csu',
'csv',
'csw',
'csy',
'csz',
'cta',
'ctc',
'ctd',
'cte',
'ctg',
'cth',
'ctl',
'ctm',
'ctn',
'cto',
'ctp',
'cts',
'ctt',
'ctu',
'ctz',
'cua',
'cub',
'cuc',
'cug',
'cuh',
'cui',
'cuj',
'cuk',
'cul',
'cum',
'cuo',
'cup',
'cuq',
'cur',
'cus',
'cut',
'cuu',
'cuv',
'cuw',
'cux',
'cuy',
'cvg',
'cvn',
'cwa',
'cwb',
'cwd',
'cwe',
'cwg',
'cwt',
'cya',
'cyb',
'cyo',
'czh',
'czk',
'czn',
'czo',
'czt',
'daa',
'dac',
'dad',
'dae',
'daf',
'dag',
'dah',
'dai',
'daj',
'dak',
'dal',
'dam',
'dao',
'dap',
'daq',
'dar',
'das',
'dau',
'dav',
'daw',
'dax',
'day',
'daz',
'dba',
'dbb',
'dbd',
'dbe',
'dbf',
'dbg',
'dbi',
'dbj',
'dbl',
'dbm',
'dbn',
'dbo',
'dbp',
'dbq',
'dbr',
'dbt',
'dbu',
'dbv',
'dbw',
'dby',
'dcc',
'dcr',
'dda',
'ddd',
'dde',
'ddg',
'ddi',
'ddj',
'ddn',
'ddo',
'ddr',
'dds',
'ddw',
'dec',
'ded',
'dee',
'def',
'deg',
'deh',
'dei',
'dek',
'del',
'dem',
'den',
'dep',
'deq',
'der',
'des',
'dev',
'dez',
'dga',
'dgb',
'dgc',
'dgd',
'dge',
'dgg',
'dgh',
'dgi',
'dgk',
'dgl',
'dgn',
'dgo',
'dgr',
'dgs',
'dgt',
'dgu',
'dgw',
'dgx',
'dgz',
'dha',
'dhd',
'dhg',
'dhi',
'dhl',
'dhm',
'dhn',
'dho',
'dhr',
'dhs',
'dhu',
'dhv',
'dhw',
'dhx',
'dia',
'dib',
'dic',
'did',
'dif',
'dig',
'dih',
'dii',
'dij',
'dik',
'dil',
'dim',
'din',
'dio',
'dip',
'diq',
'dir',
'dis',
'dit',
'diu',
'diw',
'dix',
'diy',
'diz',
'dja',
'djb',
'djc',
'djd',
'dje',
'djf',
'dji',
'djj',
'djk',
'djl',
'djm',
'djn',
'djo',
'djr',
'dju',
'djw',
'dka',
'dkk',
'dkl',
'dkr',
'dks',
'dkx',
'dlg',
'dlk',
'dlm',
'dln',
'dma',
'dmb',
'dmc',
'dmd',
'dme',
'dmg',
'dmk',
'dml',
'dmm',
'dmn',
'dmo',
'dmr',
'dms',
'dmu',
'dmv',
'dmw',
'dmx',
'dmy',
'dna',
'dnd',
'dne',
'dng',
'dni',
'dnj',
'dnk',
'dnn',
'dnr',
'dnt',
'dnu',
'dnv',
'dnw',
'dny',
'doa',
'dob',
'doc',
'doe',
'dof',
'doh',
'doi',
'dok',
'dol',
'don',
'doo',
'dop',
'doq',
'dor',
'dos',
'dot',
'dov',
'dow',
'dox',
'doy',
'doz',
'dpp',
'dra',
'drb',
'drc',
'drd',
'dre',
'drg',
'drh',
'dri',
'drl',
'drn',
'dro',
'drq',
'drr',
'drs',
'drt',
'dru',
'drw',
'dry',
'dsb',
'dse',
'dsh',
'dsi',
'dsl',
'dsn',
'dso',
'dsq',
'dta',
'dtb',
'dtd',
'dth',
'dti',
'dtk',
'dtm',
'dtn',
'dto',
'dtp',
'dtr',
'dts',
'dtt',
'dtu',
'dty',
'dua',
'dub',
'duc',
'dud',
'due',
'duf',
'dug',
'duh',
'dui',
'duj',
'duk',
'dul',
'dum',
'dun',
'duo',
'dup',
'duq',
'dur',
'dus',
'duu',
'duv',
'duw',
'dux',
'duy',
'duz',
'dva',
'dwa',
'dwl',
'dwr',
'dws',
'dwu',
'dww',
'dwy',
'dya',
'dyb',
'dyd',
'dyg',
'dyi',
'dym',
'dyn',
'dyo',
'dyu',
'dyy',
'dza',
'dzd',
'dze',
'dzg',
'dzl',
'dzn',
'eaa',
'ebg',
'ebk',
'ebo',
'ebr',
'ebu',
'ecr',
'ecs',
'ecy',
'eee',
'efa',
'efe',
'efi',
'ega',
'egl',
'ego',
'egx',
'egy',
'ehu',
'eip',
'eit',
'eiv',
'eja',
'eka',
'ekc',
'eke',
'ekg',
'eki',
'ekk',
'ekl',
'ekm',
'eko',
'ekp',
'ekr',
'eky',
'ele',
'elh',
'eli',
'elk',
'elm',
'elo',
'elp',
'elu',
'elx',
'ema',
'emb',
'eme',
'emg',
'emi',
'emk',
'emm',
'emn',
'emo',
'emp',
'ems',
'emu',
'emw',
'emx',
'emy',
'ena',
'enb',
'enc',
'end',
'enf',
'enh',
'enl',
'enm',
'enn',
'eno',
'enq',
'enr',
'enu',
'env',
'enw',
'enx',
'eot',
'epi',
'era',
'erg',
'erh',
'eri',
'erk',
'ero',
'err',
'ers',
'ert',
'erw',
'ese',
'esg',
'esh',
'esi',
'esk',
'esl',
'esm',
'esn',
'eso',
'esq',
'ess',
'esu',
'esx',
'esy',
'etb',
'etc',
'eth',
'etn',
'eto',
'etr',
'ets',
'ett',
'etu',
'etx',
'etz',
'euq',
'eve',
'evh',
'evn',
'ewo',
'ext',
'eya',
'eyo',
'eza',
'eze',
'faa',
'fab',
'fad',
'faf',
'fag',
'fah',
'fai',
'faj',
'fak',
'fal',
'fam',
'fan',
'fap',
'far',
'fat',
'fau',
'fax',
'fay',
'faz',
'fbl',
'fcs',
'fer',
'ffi',
'ffm',
'fgr',
'fia',
'fie',
'fil',
'fip',
'fir',
'fit',
'fiu',
'fiw',
'fkk',
'fkv',
'fla',
'flh',
'fli',
'fll',
'fln',
'flr',
'fly',
'fmp',
'fmu',
'fnb',
'fng',
'fni',
'fod',
'foi',
'fom',
'fon',
'for',
'fos',
'fox',
'fpe',
'fqs',
'frc',
'frd',
'frk',
'frm',
'fro',
'frp',
'frq',
'frr',
'frs',
'frt',
'fse',
'fsl',
'fss',
'fub',
'fuc',
'fud',
'fue',
'fuf',
'fuh',
'fui',
'fuj',
'fum',
'fun',
'fuq',
'fur',
'fut',
'fuu',
'fuv',
'fuy',
'fvr',
'fwa',
'fwe',
'gaa',
'gab',
'gac',
'gad',
'gae',
'gaf',
'gag',
'gah',
'gai',
'gaj',
'gak',
'gal',
'gam',
'gan',
'gao',
'gap',
'gaq',
'gar',
'gas',
'gat',
'gau',
'gav',
'gaw',
'gax',
'gay',
'gaz',
'gba',
'gbb',
'gbc',
'gbd',
'gbe',
'gbf',
'gbg',
'gbh',
'gbi',
'gbj',
'gbk',
'gbl',
'gbm',
'gbn',
'gbo',
'gbp',
'gbq',
'gbr',
'gbs',
'gbu',
'gbv',
'gbw',
'gbx',
'gby',
'gbz',
'gcc',
'gcd',
'gce',
'gcf',
'gcl',
'gcn',
'gcr',
'gct',
'gda',
'gdb',
'gdc',
'gdd',
'gde',
'gdf',
'gdg',
'gdh',
'gdi',
'gdj',
'gdk',
'gdl',
'gdm',
'gdn',
'gdo',
'gdq',
'gdr',
'gds',
'gdt',
'gdu',
'gdx',
'gea',
'geb',
'gec',
'ged',
'geg',
'geh',
'gei',
'gej',
'gek',
'gel',
'gem',
'geq',
'ges',
'gev',
'gew',
'gex',
'gey',
'gez',
'gfk',
'gft',
'gfx',
'gga',
'ggb',
'ggd',
'gge',
'ggg',
'ggk',
'ggl',
'ggn',
'ggo',
'ggr',
'ggt',
'ggu',
'ggw',
'gha',
'ghc',
'ghe',
'ghh',
'ghk',
'ghl',
'ghn',
'gho',
'ghr',
'ghs',
'ght',
'gia',
'gib',
'gic',
'gid',
'gie',
'gig',
'gih',
'gil',
'gim',
'gin',
'gio',
'gip',
'giq',
'gir',
'gis',
'git',
'giu',
'giw',
'gix',
'giy',
'giz',
'gji',
'gjk',
'gjm',
'gjn',
'gjr',
'gju',
'gka',
'gkd',
'gke',
'gkn',
'gko',
'gkp',
'gku',
'glc',
'gld',
'glh',
'gli',
'glj',
'glk',
'gll',
'glo',
'glr',
'glu',
'glw',
'gly',
'gma',
'gmb',
'gmd',
'gme',
'gmg',
'gmh',
'gml',
'gmm',
'gmn',
'gmq',
'gmu',
'gmv',
'gmw',
'gmx',
'gmy',
'gmz',
'gna',
'gnb',
'gnc',
'gnd',
'gne',
'gng',
'gnh',
'gni',
'gnj',
'gnk',
'gnl',
'gnm',
'gnn',
'gno',
'gnq',
'gnr',
'gnt',
'gnu',
'gnw',
'gnz',
'goa',
'gob',
'goc',
'god',
'goe',
'gof',
'gog',
'goh',
'goi',
'goj',
'gok',
'gol',
'gom',
'gon',
'goo',
'gop',
'goq',
'gor',
'gos',
'got',
'gou',
'gow',
'gox',
'goy',
'goz',
'gpa',
'gpe',
'gpn',
'gqa',
'gqi',
'gqn',
'gqr',
'gqu',
'gra',
'grb',
'grc',
'grd',
'grg',
'grh',
'gri',
'grj',
'grk',
'grm',
'gro',
'grq',
'grr',
'grs',
'grt',
'gru',
'grv',
'grw',
'grx',
'gry',
'grz',
'gse',
'gsg',
'gsl',
'gsm',
'gsn',
'gso',
'gsp',
'gss',
'gsw',
'gta',
'gti',
'gtu',
'gua',
'gub',
'guc',
'gud',
'gue',
'guf',
'gug',
'guh',
'gui',
'guk',
'gul',
'gum',
'gun',
'guo',
'gup',
'guq',
'gur',
'gus',
'gut',
'guu',
'guv',
'guw',
'gux',
'guz',
'gva',
'gvc',
'gve',
'gvf',
'gvj',
'gvl',
'gvm',
'gvn',
'gvo',
'gvp',
'gvr',
'gvs',
'gvy',
'gwa',
'gwb',
'gwc',
'gwd',
'gwe',
'gwf',
'gwg',
'gwi',
'gwj',
'gwm',
'gwn',
'gwr',
'gwt',
'gwu',
'gww',
'gwx',
'gxx',
'gya',
'gyb',
'gyd',
'gye',
'gyf',
'gyg',
'gyi',
'gyl',
'gym',
'gyn',
'gyo',
'gyr',
'gyy',
'gza',
'gzi',
'gzn',
'haa',
'hab',
'hac',
'had',
'hae',
'haf',
'hag',
'hah',
'hai',
'haj',
'hak',
'hal',
'ham',
'han',
'hao',
'hap',
'haq',
'har',
'has',
'hav',
'haw',
'hax',
'hay',
'haz',
'hba',
'hbb',
'hbn',
'hbo',
'hbu',
'hca',
'hch',
'hdn',
'hds',
'hdy',
'hea',
'hed',
'heg',
'heh',
'hei',
'hem',
'hgm',
'hgw',
'hhi',
'hhr',
'hhy',
'hia',
'hib',
'hid',
'hif',
'hig',
'hih',
'hii',
'hij',
'hik',
'hil',
'him',
'hio',
'hir',
'hit',
'hiw',
'hix',
'hji',
'hka',
'hke',
'hkk',
'hkn',
'hks',
'hla',
'hlb',
'hld',
'hle',
'hlt',
'hlu',
'hma',
'hmb',
'hmc',
'hmd',
'hme',
'hmf',
'hmg',
'hmh',
'hmi',
'hmj',
'hmk',
'hml',
'hmm',
'hmn',
'hmp',
'hmq',
'hmr',
'hms',
'hmt',
'hmu',
'hmv',
'hmw',
'hmx',
'hmy',
'hmz',
'hna',
'hnd',
'hne',
'hnh',
'hni',
'hnj',
'hnn',
'hno',
'hns',
'hnu',
'hoa',
'hob',
'hoc',
'hod',
'hoe',
'hoh',
'hoi',
'hoj',
'hok',
'hol',
'hom',
'hoo',
'hop',
'hor',
'hos',
'hot',
'hov',
'how',
'hoy',
'hoz',
'hpo',
'hps',
'hra',
'hrc',
'hre',
'hrk',
'hrm',
'hro',
'hrp',
'hrr',
'hrt',
'hru',
'hrw',
'hrx',
'hrz',
'hsb',
'hsh',
'hsl',
'hsn',
'hss',
'hti',
'hto',
'hts',
'htu',
'htx',
'hub',
'huc',
'hud',
'hue',
'huf',
'hug',
'huh',
'hui',
'huj',
'huk',
'hul',
'hum',
'huo',
'hup',
'huq',
'hur',
'hus',
'hut',
'huu',
'huv',
'huw',
'hux',
'huy',
'huz',
'hvc',
'hve',
'hvk',
'hvn',
'hvv',
'hwa',
'hwc',
'hwo',
'hya',
'hyw',
'hyx',
'iai',
'ian',
'iap',
'iar',
'iba',
'ibb',
'ibd',
'ibe',
'ibg',
'ibh',
'ibi',
'ibl',
'ibm',
'ibn',
'ibr',
'ibu',
'iby',
'ica',
'ich',
'icl',
'icr',
'ida',
'idb',
'idc',
'idd',
'ide',
'idi',
'idr',
'ids',
'idt',
'idu',
'ifa',
'ifb',
'ife',
'iff',
'ifk',
'ifm',
'ifu',
'ify',
'igb',
'ige',
'igg',
'igl',
'igm',
'ign',
'igo',
'igs',
'igw',
'ihb',
'ihi',
'ihp',
'ihw',
'iin',
'iir',
'ijc',
'ije',
'ijj',
'ijn',
'ijo',
'ijs',
'ike',
'iki',
'ikk',
'ikl',
'iko',
'ikp',
'ikr',
'iks',
'ikt',
'ikv',
'ikw',
'ikx',
'ikz',
'ila',
'ilb',
'ilg',
'ili',
'ilk',
'ill',
'ilm',
'ilo',
'ilp',
'ils',
'ilu',
'ilv',
'ilw',
'ima',
'ime',
'imi',
'iml',
'imn',
'imo',
'imr',
'ims',
'imy',
'inb',
'inc',
'ine',
'ing',
'inh',
'inj',
'inl',
'inm',
'inn',
'ino',
'inp',
'ins',
'int',
'inz',
'ior',
'iou',
'iow',
'ipi',
'ipo',
'iqu',
'iqw',
'ira',
'ire',
'irh',
'iri',
'irk',
'irn',
'iro',
'irr',
'iru',
'irx',
'iry',
'isa',
'isc',
'isd',
'ise',
'isg',
'ish',
'isi',
'isk',
'ism',
'isn',
'iso',
'isr',
'ist',
'isu',
'itb',
'itc',
'itd',
'ite',
'iti',
'itk',
'itl',
'itm',
'ito',
'itr',
'its',
'itt',
'itv',
'itw',
'itx',
'ity',
'itz',
'ium',
'ivb',
'ivv',
'iwk',
'iwm',
'iwo',
'iws',
'ixc',
'ixl',
'iya',
'iyo',
'iyx',
'izh',
'izi',
'izr',
'izz',
'jaa',
'jab',
'jac',
'jad',
'jae',
'jaf',
'jah',
'jaj',
'jak',
'jal',
'jam',
'jan',
'jao',
'jaq',
'jar',
'jas',
'jat',
'jau',
'jax',
'jay',
'jaz',
'jbe',
'jbi',
'jbj',
'jbk',
'jbn',
'jbo',
'jbr',
'jbt',
'jbu',
'jbw',
'jcs',
'jct',
'jda',
'jdg',
'jdt',
'jeb',
'jee',
'jeg',
'jeh',
'jei',
'jek',
'jel',
'jen',
'jer',
'jet',
'jeu',
'jgb',
'jge',
'jgk',
'jgo',
'jhi',
'jhs',
'jia',
'jib',
'jic',
'jid',
'jie',
'jig',
'jih',
'jii',
'jil',
'jim',
'jio',
'jiq',
'jit',
'jiu',
'jiv',
'jiy',
'jje',
'jjr',
'jka',
'jkm',
'jko',
'jkp',
'jkr',
'jku',
'jle',
'jls',
'jma',
'jmb',
'jmc',
'jmd',
'jmi',
'jml',
'jmn',
'jmr',
'jms',
'jmw',
'jmx',
'jna',
'jnd',
'jng',
'jni',
'jnj',
'jnl',
'jns',
'job',
'jod',
'jog',
'jor',
'jos',
'jow',
'jpa',
'jpr',
'jpx',
'jqr',
'jra',
'jrb',
'jrr',
'jrt',
'jru',
'jsl',
'jua',
'jub',
'juc',
'jud',
'juh',
'jui',
'juk',
'jul',
'jum',
'jun',
'juo',
'jup',
'jur',
'jus',
'jut',
'juu',
'juw',
'juy',
'jvd',
'jvn',
'jwi',
'jya',
'jye',
'jyy',
'kaa',
'kab',
'kac',
'kad',
'kae',
'kaf',
'kag',
'kah',
'kai',
'kaj',
'kak',
'kam',
'kao',
'kap',
'kaq',
'kar',
'kav',
'kaw',
'kax',
'kay',
'kba',
'kbb',
'kbc',
'kbd',
'kbe',
'kbf',
'kbg',
'kbh',
'kbi',
'kbj',
'kbk',
'kbl',
'kbm',
'kbn',
'kbo',
'kbp',
'kbq',
'kbr',
'kbs',
'kbt',
'kbu',
'kbv',
'kbw',
'kbx',
'kby',
'kbz',
'kca',
'kcb',
'kcc',
'kcd',
'kce',
'kcf',
'kcg',
'kch',
'kci',
'kcj',
'kck',
'kcl',
'kcm',
'kcn',
'kco',
'kcp',
'kcq',
'kcr',
'kcs',
'kct',
'kcu',
'kcv',
'kcw',
'kcx',
'kcy',
'kcz',
'kda',
'kdc',
'kdd',
'kde',
'kdf',
'kdg',
'kdh',
'kdi',
'kdj',
'kdk',
'kdl',
'kdm',
'kdn',
'kdo',
'kdp',
'kdq',
'kdr',
'kdt',
'kdu',
'kdv',
'kdw',
'kdx',
'kdy',
'kdz',
'kea',
'keb',
'kec',
'ked',
'kee',
'kef',
'keg',
'keh',
'kei',
'kej',
'kek',
'kel',
'kem',
'ken',
'keo',
'kep',
'keq',
'ker',
'kes',
'ket',
'keu',
'kev',
'kew',
'kex',
'key',
'kez',
'kfa',
'kfb',
'kfc',
'kfd',
'kfe',
'kff',
'kfg',
'kfh',
'kfi',
'kfj',
'kfk',
'kfl',
'kfm',
'kfn',
'kfo',
'kfp',
'kfq',
'kfr',
'kfs',
'kft',
'kfu',
'kfv',
'kfw',
'kfx',
'kfy',
'kfz',
'kga',
'kgb',
'kgc',
'kgd',
'kge',
'kgf',
'kgg',
'kgh',
'kgi',
'kgj',
'kgk',
'kgl',
'kgm',
'kgn',
'kgo',
'kgp',
'kgq',
'kgr',
'kgs',
'kgt',
'kgu',
'kgv',
'kgw',
'kgx',
'kgy',
'kha',
'khb',
'khc',
'khd',
'khe',
'khf',
'khg',
'khh',
'khi',
'khj',
'khk',
'khl',
'khn',
'kho',
'khp',
'khq',
'khr',
'khs',
'kht',
'khu',
'khv',
'khw',
'khx',
'khy',
'khz',
'kia',
'kib',
'kic',
'kid',
'kie',
'kif',
'kig',
'kih',
'kii',
'kij',
'kil',
'kim',
'kio',
'kip',
'kiq',
'kis',
'kit',
'kiu',
'kiv',
'kiw',
'kix',
'kiy',
'kiz',
'kja',
'kjb',
'kjc',
'kjd',
'kje',
'kjf',
'kjg',
'kjh',
'kji',
'kjj',
'kjk',
'kjl',
'kjm',
'kjn',
'kjo',
'kjp',
'kjq',
'kjr',
'kjs',
'kjt',
'kju',
'kjv',
'kjx',
'kjy',
'kjz',
'kka',
'kkb',
'kkc',
'kkd',
'kke',
'kkf',
'kkg',
'kkh',
'kki',
'kkj',
'kkk',
'kkl',
'kkm',
'kkn',
'kko',
'kkp',
'kkq',
'kkr',
'kks',
'kkt',
'kku',
'kkv',
'kkw',
'kkx',
'kky',
'kkz',
'kla',
'klb',
'klc',
'kld',
'kle',
'klf',
'klg',
'klh',
'kli',
'klj',
'klk',
'kll',
'klm',
'kln',
'klo',
'klp',
'klq',
'klr',
'kls',
'klt',
'klu',
'klv',
'klw',
'klx',
'kly',
'klz',
'kma',
'kmb',
'kmc',
'kmd',
'kme',
'kmf',
'kmg',
'kmh',
'kmi',
'kmj',
'kmk',
'kml',
'kmm',
'kmn',
'kmo',
'kmp',
'kmq',
'kmr',
'kms',
'kmt',
'kmu',
'kmv',
'kmw',
'kmx',
'kmy',
'kmz',
'kna',
'knb',
'knc',
'knd',
'kne',
'knf',
'kng',
'kni',
'knj',
'knk',
'knl',
'knm',
'knn',
'kno',
'knp',
'knq',
'knr',
'kns',
'knt',
'knu',
'knv',
'knw',
'knx',
'kny',
'knz',
'koa',
'koc',
'kod',
'koe',
'kof',
'kog',
'koh',
'koi',
'koj',
'kok',
'kol',
'koo',
'kop',
'koq',
'kos',
'kot',
'kou',
'kov',
'kow',
'kox',
'koy',
'koz',
'kpa',
'kpb',
'kpc',
'kpd',
'kpe',
'kpf',
'kpg',
'kph',
'kpi',
'kpj',
'kpk',
'kpl',
'kpm',
'kpn',
'kpo',
'kpp',
'kpq',
'kpr',
'kps',
'kpt',
'kpu',
'kpv',
'kpw',
'kpx',
'kpy',
'kpz',
'kqa',
'kqb',
'kqc',
'kqd',
'kqe',
'kqf',
'kqg',
'kqh',
'kqi',
'kqj',
'kqk',
'kql',
'kqm',
'kqn',
'kqo',
'kqp',
'kqq',
'kqr',
'kqs',
'kqt',
'kqu',
'kqv',
'kqw',
'kqx',
'kqy',
'kqz',
'kra',
'krb',
'krc',
'krd',
'kre',
'krf',
'krh',
'kri',
'krj',
'krk',
'krl',
'krm',
'krn',
'kro',
'krp',
'krr',
'krs',
'krt',
'kru',
'krv',
'krw',
'krx',
'kry',
'krz',
'ksa',
'ksb',
'ksc',
'ksd',
'kse',
'ksf',
'ksg',
'ksh',
'ksi',
'ksj',
'ksk',
'ksl',
'ksm',
'ksn',
'kso',
'ksp',
'ksq',
'ksr',
'kss',
'kst',
'ksu',
'ksv',
'ksw',
'ksx',
'ksy',
'ksz',
'kta',
'ktb',
'ktc',
'ktd',
'kte',
'ktf',
'ktg',
'kth',
'kti',
'ktj',
'ktk',
'ktl',
'ktm',
'ktn',
'kto',
'ktp',
'ktq',
'ktr',
'kts',
'ktt',
'ktu',
'ktv',
'ktw',
'ktx',
'kty',
'ktz',
'kub',
'kuc',
'kud',
'kue',
'kuf',
'kug',
'kuh',
'kui',
'kuj',
'kuk',
'kul',
'kum',
'kun',
'kuo',
'kup',
'kuq',
'kus',
'kut',
'kuu',
'kuv',
'kuw',
'kux',
'kuy',
'kuz',
'kva',
'kvb',
'kvc',
'kvd',
'kve',
'kvf',
'kvg',
'kvh',
'kvi',
'kvj',
'kvk',
'kvl',
'kvm',
'kvn',
'kvo',
'kvp',
'kvq',
'kvr',
'kvs',
'kvt',
'kvu',
'kvv',
'kvw',
'kvx',
'kvy',
'kvz',
'kwa',
'kwb',
'kwc',
'kwd',
'kwe',
'kwf',
'kwg',
'kwh',
'kwi',
'kwj',
'kwk',
'kwl',
'kwm',
'kwn',
'kwo',
'kwp',
'kwq',
'kwr',
'kws',
'kwt',
'kwu',
'kwv',
'kww',
'kwx',
'kwy',
'kwz',
'kxa',
'kxb',
'kxc',
'kxd',
'kxe',
'kxf',
'kxh',
'kxi',
'kxj',
'kxk',
'kxl',
'kxm',
'kxn',
'kxo',
'kxp',
'kxq',
'kxr',
'kxs',
'kxt',
'kxu',
'kxv',
'kxw',
'kxx',
'kxy',
'kxz',
'kya',
'kyb',
'kyc',
'kyd',
'kye',
'kyf',
'kyg',
'kyh',
'kyi',
'kyj',
'kyk',
'kyl',
'kym',
'kyn',
'kyo',
'kyp',
'kyq',
'kyr',
'kys',
'kyt',
'kyu',
'kyv',
'kyw',
'kyx',
'kyy',
'kyz',
'kza',
'kzb',
'kzc',
'kzd',
'kze',
'kzf',
'kzg',
'kzh',
'kzi',
'kzj',
'kzk',
'kzl',
'kzm',
'kzn',
'kzo',
'kzp',
'kzq',
'kzr',
'kzs',
'kzt',
'kzu',
'kzv',
'kzw',
'kzx',
'kzy',
'kzz',
'laa',
'lab',
'lac',
'lad',
'lae',
'laf',
'lag',
'lah',
'lai',
'laj',
'lak',
'lal',
'lam',
'lan',
'lap',
'laq',
'lar',
'las',
'lau',
'law',
'lax',
'lay',
'laz',
'lba',
'lbb',
'lbc',
'lbe',
'lbf',
'lbg',
'lbi',
'lbj',
'lbk',
'lbl',
'lbm',
'lbn',
'lbo',
'lbq',
'lbr',
'lbs',
'lbt',
'lbu',
'lbv',
'lbw',
'lbx',
'lby',
'lbz',
'lcc',
'lcd',
'lce',
'lcf',
'lch',
'lcl',
'lcm',
'lcp',
'lcq',
'lcs',
'lda',
'ldb',
'ldd',
'ldg',
'ldh',
'ldi',
'ldj',
'ldk',
'ldl',
'ldm',
'ldn',
'ldo',
'ldp',
'ldq',
'lea',
'leb',
'lec',
'led',
'lee',
'lef',
'leg',
'leh',
'lei',
'lej',
'lek',
'lel',
'lem',
'len',
'leo',
'lep',
'leq',
'ler',
'les',
'let',
'leu',
'lev',
'lew',
'lex',
'ley',
'lez',
'lfa',
'lfn',
'lga',
'lgb',
'lgg',
'lgh',
'lgi',
'lgk',
'lgl',
'lgm',
'lgn',
'lgq',
'lgr',
'lgt',
'lgu',
'lgz',
'lha',
'lhh',
'lhi',
'lhl',
'lhm',
'lhn',
'lhp',
'lhs',
'lht',
'lhu',
'lia',
'lib',
'lic',
'lid',
'lie',
'lif',
'lig',
'lih',
'lii',
'lij',
'lik',
'lil',
'lio',
'lip',
'liq',
'lir',
'lis',
'liu',
'liv',
'liw',
'lix',
'liy',
'liz',
'lja',
'lje',
'lji',
'ljl',
'ljp',
'ljw',
'ljx',
'lka',
'lkb',
'lkc',
'lkd',
'lke',
'lkh',
'lki',
'lkj',
'lkl',
'lkm',
'lkn',
'lko',
'lkr',
'lks',
'lkt',
'lku',
'lky',
'lla',
'llb',
'llc',
'lld',
'lle',
'llf',
'llg',
'llh',
'lli',
'llj',
'llk',
'lll',
'llm',
'lln',
'llo',
'llp',
'llq',
'lls',
'llu',
'llx',
'lma',
'lmb',
'lmc',
'lmd',
'lme',
'lmf',
'lmg',
'lmh',
'lmi',
'lmj',
'lmk',
'lml',
'lmm',
'lmn',
'lmo',
'lmp',
'lmq',
'lmr',
'lmu',
'lmv',
'lmw',
'lmx',
'lmy',
'lmz',
'lna',
'lnb',
'lnd',
'lng',
'lnh',
'lni',
'lnj',
'lnl',
'lnm',
'lnn',
'lno',
'lns',
'lnu',
'lnw',
'lnz',
'loa',
'lob',
'loc',
'loe',
'lof',
'log',
'loh',
'loi',
'loj',
'lok',
'lol',
'lom',
'lon',
'loo',
'lop',
'loq',
'lor',
'los',
'lot',
'lou',
'lov',
'low',
'lox',
'loy',
'loz',
'lpa',
'lpe',
'lpn',
'lpo',
'lpx',
'lra',
'lrc',
'lre',
'lrg',
'lri',
'lrk',
'lrl',
'lrm',
'lrn',
'lro',
'lrr',
'lrt',
'lrv',
'lrz',
'lsa',
'lsd',
'lse',
'lsg',
'lsh',
'lsi',
'lsl',
'lsm',
'lso',
'lsp',
'lsr',
'lss',
'lst',
'lsy',
'ltc',
'ltg',
'lth',
'lti',
'ltn',
'lto',
'lts',
'ltu',
'lua',
'luc',
'lud',
'lue',
'luf',
'lui',
'luj',
'luk',
'lul',
'lum',
'lun',
'luo',
'lup',
'luq',
'lur',
'lus',
'lut',
'luu',
'luv',
'luw',
'luy',
'luz',
'lva',
'lvk',
'lvs',
'lvu',
'lwa',
'lwe',
'lwg',
'lwh',
'lwl',
'lwm',
'lwo',
'lws',
'lwt',
'lwu',
'lww',
'lya',
'lyg',
'lyn',
'lzh',
'lzl',
'lzn',
'lzz',
'maa',
'mab',
'mad',
'mae',
'maf',
'mag',
'mai',
'maj',
'mak',
'mam',
'man',
'map',
'maq',
'mas',
'mat',
'mau',
'mav',
'maw',
'max',
'maz',
'mba',
'mbb',
'mbc',
'mbd',
'mbe',
'mbf',
'mbh',
'mbi',
'mbj',
'mbk',
'mbl',
'mbm',
'mbn',
'mbo',
'mbp',
'mbq',
'mbr',
'mbs',
'mbt',
'mbu',
'mbv',
'mbw',
'mbx',
'mby',
'mbz',
'mca',
'mcb',
'mcc',
'mcd',
'mce',
'mcf',
'mcg',
'mch',
'mci',
'mcj',
'mck',
'mcl',
'mcm',
'mcn',
'mco',
'mcp',
'mcq',
'mcr',
'mcs',
'mct',
'mcu',
'mcv',
'mcw',
'mcx',
'mcy',
'mcz',
'mda',
'mdb',
'mdc',
'mdd',
'mde',
'mdf',
'mdg',
'mdh',
'mdi',
'mdj',
'mdk',
'mdl',
'mdm',
'mdn',
'mdp',
'mdq',
'mdr',
'mds',
'mdt',
'mdu',
'mdv',
'mdw',
'mdx',
'mdy',
'mdz',
'mea',
'meb',
'mec',
'med',
'mee',
'mef',
'meg',
'meh',
'mei',
'mej',
'mek',
'mel',
'mem',
'men',
'meo',
'mep',
'meq',
'mer',
'mes',
'met',
'meu',
'mev',
'mew',
'mey',
'mez',
'mfa',
'mfb',
'mfc',
'mfd',
'mfe',
'mff',
'mfg',
'mfh',
'mfi',
'mfj',
'mfk',
'mfl',
'mfm',
'mfn',
'mfo',
'mfp',
'mfq',
'mfr',
'mfs',
'mft',
'mfu',
'mfv',
'mfw',
'mfx',
'mfy',
'mfz',
'mga',
'mgb',
'mgc',
'mgd',
'mge',
'mgf',
'mgg',
'mgh',
'mgi',
'mgj',
'mgk',
'mgl',
'mgm',
'mgn',
'mgo',
'mgp',
'mgq',
'mgr',
'mgs',
'mgt',
'mgu',
'mgv',
'mgw',
'mgx',
'mgy',
'mgz',
'mha',
'mhb',
'mhc',
'mhd',
'mhe',
'mhf',
'mhg',
'mhh',
'mhi',
'mhj',
'mhk',
'mhl',
'mhm',
'mhn',
'mho',
'mhp',
'mhq',
'mhr',
'mhs',
'mht',
'mhu',
'mhw',
'mhx',
'mhy',
'mhz',
'mia',
'mib',
'mic',
'mid',
'mie',
'mif',
'mig',
'mih',
'mii',
'mij',
'mik',
'mil',
'mim',
'min',
'mio',
'mip',
'miq',
'mir',
'mis',
'mit',
'miu',
'miw',
'mix',
'miy',
'miz',
'mja',
'mjb',
'mjc',
'mjd',
'mje',
'mjg',
'mjh',
'mji',
'mjj',
'mjk',
'mjl',
'mjm',
'mjn',
'mjo',
'mjp',
'mjq',
'mjr',
'mjs',
'mjt',
'mju',
'mjv',
'mjw',
'mjx',
'mjy',
'mjz',
'mka',
'mkb',
'mkc',
'mke',
'mkf',
'mkg',
'mkh',
'mki',
'mkj',
'mkk',
'mkl',
'mkm',
'mkn',
'mko',
'mkp',
'mkq',
'mkr',
'mks',
'mkt',
'mku',
'mkv',
'mkw',
'mkx',
'mky',
'mkz',
'mla',
'mlb',
'mlc',
'mld',
'mle',
'mlf',
'mlh',
'mli',
'mlj',
'mlk',
'mll',
'mlm',
'mln',
'mlo',
'mlp',
'mlq',
'mlr',
'mls',
'mlu',
'mlv',
'mlw',
'mlx',
'mlz',
'mma',
'mmb',
'mmc',
'mmd',
'mme',
'mmf',
'mmg',
'mmh',
'mmi',
'mmj',
'mmk',
'mml',
'mmm',
'mmn',
'mmo',
'mmp',
'mmq',
'mmr',
'mmt',
'mmu',
'mmv',
'mmw',
'mmx',
'mmy',
'mmz',
'mna',
'mnb',
'mnc',
'mnd',
'mne',
'mnf',
'mng',
'mnh',
'mni',
'mnj',
'mnk',
'mnl',
'mnm',
'mnn',
'mno',
'mnp',
'mnq',
'mnr',
'mns',
'mnt',
'mnu',
'mnv',
'mnw',
'mnx',
'mny',
'mnz',
'moa',
'moc',
'mod',
'moe',
'mof',
'mog',
'moh',
'moi',
'moj',
'mok',
'mom',
'moo',
'mop',
'moq',
'mor',
'mos',
'mot',
'mou',
'mov',
'mow',
'mox',
'moy',
'moz',
'mpa',
'mpb',
'mpc',
'mpd',
'mpe',
'mpg',
'mph',
'mpi',
'mpj',
'mpk',
'mpl',
'mpm',
'mpn',
'mpo',
'mpp',
'mpq',
'mpr',
'mps',
'mpt',
'mpu',
'mpv',
'mpw',
'mpx',
'mpy',
'mpz',
'mqa',
'mqb',
'mqc',
'mqe',
'mqf',
'mqg',
'mqh',
'mqi',
'mqj',
'mqk',
'mql',
'mqm',
'mqn',
'mqo',
'mqp',
'mqq',
'mqr',
'mqs',
'mqt',
'mqu',
'mqv',
'mqw',
'mqx',
'mqy',
'mqz',
'mra',
'mrb',
'mrc',
'mrd',
'mre',
'mrf',
'mrg',
'mrh',
'mrj',
'mrk',
'mrl',
'mrm',
'mrn',
'mro',
'mrp',
'mrq',
'mrr',
'mrs',
'mrt',
'mru',
'mrv',
'mrw',
'mrx',
'mry',
'mrz',
'msb',
'msc',
'msd',
'mse',
'msf',
'msg',
'msh',
'msi',
'msj',
'msk',
'msl',
'msm',
'msn',
'mso',
'msp',
'msq',
'msr',
'mss',
'mst',
'msu',
'msv',
'msw',
'msx',
'msy',
'msz',
'mta',
'mtb',
'mtc',
'mtd',
'mte',
'mtf',
'mtg',
'mth',
'mti',
'mtj',
'mtk',
'mtl',
'mtm',
'mtn',
'mto',
'mtp',
'mtq',
'mtr',
'mts',
'mtt',
'mtu',
'mtv',
'mtw',
'mtx',
'mty',
'mua',
'mub',
'muc',
'mud',
'mue',
'mug',
'muh',
'mui',
'muj',
'muk',
'mul',
'mum',
'mun',
'muo',
'mup',
'muq',
'mur',
'mus',
'mut',
'muu',
'muv',
'mux',
'muy',
'muz',
'mva',
'mvb',
'mvd',
'mve',
'mvf',
'mvg',
'mvh',
'mvi',
'mvk',
'mvl',
'mvm',
'mvn',
'mvo',
'mvp',
'mvq',
'mvr',
'mvs',
'mvt',
'mvu',
'mvv',
'mvw',
'mvx',
'mvy',
'mvz',
'mwa',
'mwb',
'mwc',
'mwd',
'mwe',
'mwf',
'mwg',
'mwh',
'mwi',
'mwj',
'mwk',
'mwl',
'mwm',
'mwn',
'mwo',
'mwp',
'mwq',
'mwr',
'mws',
'mwt',
'mwu',
'mwv',
'mww',
'mwx',
'mwy',
'mwz',
'mxa',
'mxb',
'mxc',
'mxd',
'mxe',
'mxf',
'mxg',
'mxh',
'mxi',
'mxj',
'mxk',
'mxl',
'mxm',
'mxn',
'mxo',
'mxp',
'mxq',
'mxr',
'mxs',
'mxt',
'mxu',
'mxv',
'mxw',
'mxx',
'mxy',
'mxz',
'myb',
'myc',
'myd',
'mye',
'myf',
'myg',
'myh',
'myi',
'myj',
'myk',
'myl',
'mym',
'myn',
'myo',
'myp',
'myq',
'myr',
'mys',
'myt',
'myu',
'myv',
'myw',
'myx',
'myy',
'myz',
'mza',
'mzb',
'mzc',
'mzd',
'mze',
'mzg',
'mzh',
'mzi',
'mzj',
'mzk',
'mzl',
'mzm',
'mzn',
'mzo',
'mzp',
'mzq',
'mzr',
'mzs',
'mzt',
'mzu',
'mzv',
'mzw',
'mzx',
'mzy',
'mzz',
'naa',
'nab',
'nac',
'nad',
'nae',
'naf',
'nag',
'nah',
'nai',
'naj',
'nak',
'nal',
'nam',
'nan',
'nao',
'nap',
'naq',
'nar',
'nas',
'nat',
'naw',
'nax',
'nay',
'naz',
'nba',
'nbb',
'nbc',
'nbd',
'nbe',
'nbf',
'nbg',
'nbh',
'nbi',
'nbj',
'nbk',
'nbm',
'nbn',
'nbo',
'nbp',
'nbq',
'nbr',
'nbs',
'nbt',
'nbu',
'nbv',
'nbw',
'nbx',
'nby',
'nca',
'ncb',
'ncc',
'ncd',
'nce',
'ncf',
'ncg',
'nch',
'nci',
'ncj',
'nck',
'ncl',
'ncm',
'ncn',
'nco',
'ncp',
'ncq',
'ncr',
'ncs',
'nct',
'ncu',
'ncx',
'ncz',
'nda',
'ndb',
'ndc',
'ndd',
'ndf',
'ndg',
'ndh',
'ndi',
'ndj',
'ndk',
'ndl',
'ndm',
'ndn',
'ndp',
'ndq',
'ndr',
'nds',
'ndt',
'ndu',
'ndv',
'ndw',
'ndx',
'ndy',
'ndz',
'nea',
'neb',
'nec',
'ned',
'nee',
'nef',
'neg',
'neh',
'nei',
'nej',
'nek',
'nem',
'nen',
'neo',
'neq',
'ner',
'nes',
'net',
'neu',
'nev',
'new',
'nex',
'ney',
'nez',
'nfa',
'nfd',
'nfl',
'nfr',
'nfu',
'nga',
'ngb',
'ngc',
'ngd',
'nge',
'ngf',
'ngg',
'ngh',
'ngi',
'ngj',
'ngk',
'ngl',
'ngm',
'ngn',
'ngo',
'ngp',
'ngq',
'ngr',
'ngs',
'ngt',
'ngu',
'ngv',
'ngw',
'ngx',
'ngy',
'ngz',
'nha',
'nhb',
'nhc',
'nhd',
'nhe',
'nhf',
'nhg',
'nhh',
'nhi',
'nhk',
'nhm',
'nhn',
'nho',
'nhp',
'nhq',
'nhr',
'nht',
'nhu',
'nhv',
'nhw',
'nhx',
'nhy',
'nhz',
'nia',
'nib',
'nic',
'nid',
'nie',
'nif',
'nig',
'nih',
'nii',
'nij',
'nik',
'nil',
'nim',
'nin',
'nio',
'niq',
'nir',
'nis',
'nit',
'niu',
'niv',
'niw',
'nix',
'niy',
'niz',
'nja',
'njb',
'njd',
'njh',
'nji',
'njj',
'njl',
'njm',
'njn',
'njo',
'njr',
'njs',
'njt',
'nju',
'njx',
'njy',
'njz',
'nka',
'nkb',
'nkc',
'nkd',
'nke',
'nkf',
'nkg',
'nkh',
'nki',
'nkj',
'nkk',
'nkm',
'nkn',
'nko',
'nkp',
'nkq',
'nkr',
'nks',
'nkt',
'nku',
'nkv',
'nkw',
'nkx',
'nkz',
'nla',
'nlc',
'nle',
'nlg',
'nli',
'nlj',
'nlk',
'nll',
'nlm',
'nln',
'nlo',
'nlq',
'nlr',
'nlu',
'nlv',
'nlw',
'nlx',
'nly',
'nlz',
'nma',
'nmb',
'nmc',
'nmd',
'nme',
'nmf',
'nmg',
'nmh',
'nmi',
'nmj',
'nmk',
'nml',
'nmm',
'nmn',
'nmo',
'nmp',
'nmq',
'nmr',
'nms',
'nmt',
'nmu',
'nmv',
'nmw',
'nmx',
'nmy',
'nmz',
'nna',
'nnb',
'nnc',
'nnd',
'nne',
'nnf',
'nng',
'nnh',
'nni',
'nnj',
'nnk',
'nnl',
'nnm',
'nnn',
'nnp',
'nnq',
'nnr',
'nns',
'nnt',
'nnu',
'nnv',
'nnw',
'nnx',
'nny',
'nnz',
'noa',
'noc',
'nod',
'noe',
'nof',
'nog',
'noh',
'noi',
'noj',
'nok',
'nol',
'nom',
'non',
'noo',
'nop',
'noq',
'nos',
'not',
'nou',
'nov',
'now',
'noy',
'noz',
'npa',
'npb',
'npg',
'nph',
'npi',
'npl',
'npn',
'npo',
'nps',
'npu',
'npx',
'npy',
'nqg',
'nqk',
'nql',
'nqm',
'nqn',
'nqo',
'nqq',
'nqy',
'nra',
'nrb',
'nrc',
'nre',
'nrf',
'nrg',
'nri',
'nrk',
'nrl',
'nrm',
'nrn',
'nrp',
'nrr',
'nrt',
'nru',
'nrx',
'nrz',
'nsa',
'nsc',
'nsd',
'nse',
'nsf',
'nsg',
'nsh',
'nsi',
'nsk',
'nsl',
'nsm',
'nsn',
'nso',
'nsp',
'nsq',
'nsr',
'nss',
'nst',
'nsu',
'nsv',
'nsw',
'nsx',
'nsy',
'nsz',
'ntd',
'nte',
'ntg',
'nti',
'ntj',
'ntk',
'ntm',
'nto',
'ntp',
'ntr',
'nts',
'ntu',
'ntw',
'ntx',
'nty',
'ntz',
'nua',
'nub',
'nuc',
'nud',
'nue',
'nuf',
'nug',
'nuh',
'nui',
'nuj',
'nuk',
'nul',
'num',
'nun',
'nuo',
'nup',
'nuq',
'nur',
'nus',
'nut',
'nuu',
'nuv',
'nuw',
'nux',
'nuy',
'nuz',
'nvh',
'nvm',
'nvo',
'nwa',
'nwb',
'nwc',
'nwe',
'nwg',
'nwi',
'nwm',
'nwo',
'nwr',
'nwx',
'nwy',
'nxa',
'nxd',
'nxe',
'nxg',
'nxi',
'nxk',
'nxl',
'nxm',
'nxn',
'nxo',
'nxq',
'nxr',
'nxu',
'nxx',
'nyb',
'nyc',
'nyd',
'nye',
'nyf',
'nyg',
'nyh',
'nyi',
'nyj',
'nyk',
'nyl',
'nym',
'nyn',
'nyo',
'nyp',
'nyq',
'nyr',
'nys',
'nyt',
'nyu',
'nyv',
'nyw',
'nyx',
'nyy',
'nza',
'nzb',
'nzd',
'nzi',
'nzk',
'nzm',
'nzs',
'nzu',
'nzy',
'nzz',
'oaa',
'oac',
'oar',
'oav',
'obi',
'obk',
'obl',
'obm',
'obo',
'obr',
'obt',
'obu',
'oca',
'och',
'oco',
'ocu',
'oda',
'odk',
'odt',
'odu',
'ofo',
'ofs',
'ofu',
'ogb',
'ogc',
'oge',
'ogg',
'ogo',
'ogu',
'oht',
'ohu',
'oia',
'oin',
'ojb',
'ojc',
'ojg',
'ojp',
'ojs',
'ojv',
'ojw',
'oka',
'okb',
'okd',
'oke',
'okg',
'okh',
'oki',
'okj',
'okk',
'okl',
'okm',
'okn',
'oko',
'okr',
'oks',
'oku',
'okv',
'okx',
'ola',
'old',
'ole',
'olk',
'olm',
'olo',
'olr',
'olt',
'olu',
'oma',
'omb',
'omc',
'ome',
'omg',
'omi',
'omk',
'oml',
'omn',
'omo',
'omp',
'omq',
'omr',
'omt',
'omu',
'omv',
'omw',
'omx',
'ona',
'onb',
'one',
'ong',
'oni',
'onj',
'onk',
'onn',
'ono',
'onp',
'onr',
'ons',
'ont',
'onu',
'onw',
'onx',
'ood',
'oog',
'oon',
'oor',
'oos',
'opa',
'opk',
'opm',
'opo',
'opt',
'opy',
'ora',
'orc',
'ore',
'org',
'orh',
'orn',
'oro',
'orr',
'ors',
'ort',
'oru',
'orv',
'orw',
'orx',
'ory',
'orz',
'osa',
'osc',
'osi',
'oso',
'osp',
'ost',
'osu',
'osx',
'ota',
'otb',
'otd',
'ote',
'oti',
'otk',
'otl',
'otm',
'otn',
'oto',
'otq',
'otr',
'ots',
'ott',
'otu',
'otw',
'otx',
'oty',
'otz',
'oua',
'oub',
'oue',
'oui',
'oum',
'oun',
'ovd',
'owi',
'owl',
'oyb',
'oyd',
'oym',
'oyy',
'ozm',
'paa',
'pab',
'pac',
'pad',
'pae',
'paf',
'pag',
'pah',
'pai',
'pak',
'pal',
'pam',
'pao',
'pap',
'paq',
'par',
'pas',
'pat',
'pau',
'pav',
'paw',
'pax',
'pay',
'paz',
'pbb',
'pbc',
'pbe',
'pbf',
'pbg',
'pbh',
'pbi',
'pbl',
'pbm',
'pbn',
'pbo',
'pbp',
'pbr',
'pbs',
'pbt',
'pbu',
'pbv',
'pby',
'pbz',
'pca',
'pcb',
'pcc',
'pcd',
'pce',
'pcf',
'pcg',
'pch',
'pci',
'pcj',
'pck',
'pcl',
'pcm',
'pcn',
'pcp',
'pcr',
'pcw',
'pda',
'pdc',
'pdi',
'pdn',
'pdo',
'pdt',
'pdu',
'pea',
'peb',
'ped',
'pee',
'pef',
'peg',
'peh',
'pei',
'pej',
'pek',
'pel',
'pem',
'peo',
'pep',
'peq',
'pes',
'pev',
'pex',
'pey',
'pez',
'pfa',
'pfe',
'pfl',
'pga',
'pgd',
'pgg',
'pgi',
'pgk',
'pgl',
'pgn',
'pgs',
'pgu',
'pgy',
'pgz',
'pha',
'phd',
'phg',
'phh',
'phi',
'phk',
'phl',
'phm',
'phn',
'pho',
'phq',
'phr',
'pht',
'phu',
'phv',
'phw',
'pia',
'pib',
'pic',
'pid',
'pie',
'pif',
'pig',
'pih',
'pii',
'pij',
'pil',
'pim',
'pin',
'pio',
'pip',
'pir',
'pis',
'pit',
'piu',
'piv',
'piw',
'pix',
'piy',
'piz',
'pjt',
'pka',
'pkb',
'pkc',
'pkg',
'pkh',
'pkn',
'pko',
'pkp',
'pkr',
'pks',
'pkt',
'pku',
'pla',
'plb',
'plc',
'pld',
'ple',
'plf',
'plg',
'plh',
'plj',
'plk',
'pll',
'pln',
'plo',
'plp',
'plq',
'plr',
'pls',
'plt',
'plu',
'plv',
'plw',
'ply',
'plz',
'pma',
'pmb',
'pmc',
'pmd',
'pme',
'pmf',
'pmh',
'pmi',
'pmj',
'pmk',
'pml',
'pmm',
'pmn',
'pmo',
'pmq',
'pmr',
'pms',
'pmt',
'pmu',
'pmw',
'pmx',
'pmy',
'pmz',
'pna',
'pnb',
'pnc',
'pne',
'png',
'pnh',
'pni',
'pnj',
'pnk',
'pnl',
'pnm',
'pnn',
'pno',
'pnp',
'pnq',
'pnr',
'pns',
'pnt',
'pnu',
'pnv',
'pnw',
'pnx',
'pny',
'pnz',
'poc',
'pod',
'poe',
'pof',
'pog',
'poh',
'poi',
'pok',
'pom',
'pon',
'poo',
'pop',
'poq',
'pos',
'pot',
'pov',
'pow',
'pox',
'poy',
'poz',
'ppa',
'ppe',
'ppi',
'ppk',
'ppl',
'ppm',
'ppn',
'ppo',
'ppp',
'ppq',
'ppr',
'pps',
'ppt',
'ppu',
'pqa',
'pqe',
'pqm',
'pqw',
'pra',
'prb',
'prc',
'prd',
'pre',
'prf',
'prg',
'prh',
'pri',
'prk',
'prl',
'prm',
'prn',
'pro',
'prp',
'prq',
'prr',
'prs',
'prt',
'pru',
'prw',
'prx',
'pry',
'prz',
'psa',
'psc',
'psd',
'pse',
'psg',
'psh',
'psi',
'psl',
'psm',
'psn',
'pso',
'psp',
'psq',
'psr',
'pss',
'pst',
'psu',
'psw',
'psy',
'pta',
'pth',
'pti',
'ptn',
'pto',
'ptp',
'ptq',
'ptr',
'ptt',
'ptu',
'ptv',
'ptw',
'pty',
'pua',
'pub',
'puc',
'pud',
'pue',
'puf',
'pug',
'pui',
'puj',
'puk',
'pum',
'puo',
'pup',
'puq',
'pur',
'put',
'puu',
'puw',
'pux',
'puy',
'puz',
'pwa',
'pwb',
'pwg',
'pwi',
'pwm',
'pwn',
'pwo',
'pwr',
'pww',
'pxm',
'pye',
'pym',
'pyn',
'pys',
'pyu',
'pyx',
'pyy',
'pzn',
'qaa..qtz',
'qua',
'qub',
'quc',
'qud',
'quf',
'qug',
'quh',
'qui',
'quk',
'qul',
'qum',
'qun',
'qup',
'quq',
'qur',
'qus',
'quv',
'quw',
'qux',
'quy',
'quz',
'qva',
'qvc',
'qve',
'qvh',
'qvi',
'qvj',
'qvl',
'qvm',
'qvn',
'qvo',
'qvp',
'qvs',
'qvw',
'qvy',
'qvz',
'qwa',
'qwc',
'qwe',
'qwh',
'qwm',
'qws',
'qwt',
'qxa',
'qxc',
'qxh',
'qxl',
'qxn',
'qxo',
'qxp',
'qxq',
'qxr',
'qxs',
'qxt',
'qxu',
'qxw',
'qya',
'qyp',
'raa',
'rab',
'rac',
'rad',
'raf',
'rag',
'rah',
'rai',
'raj',
'rak',
'ral',
'ram',
'ran',
'rao',
'rap',
'raq',
'rar',
'ras',
'rat',
'rau',
'rav',
'raw',
'rax',
'ray',
'raz',
'rbb',
'rbk',
'rbl',
'rbp',
'rcf',
'rdb',
'rea',
'reb',
'ree',
'reg',
'rei',
'rej',
'rel',
'rem',
'ren',
'rer',
'res',
'ret',
'rey',
'rga',
'rge',
'rgk',
'rgn',
'rgr',
'rgs',
'rgu',
'rhg',
'rhp',
'ria',
'rie',
'rif',
'ril',
'rim',
'rin',
'rir',
'rit',
'riu',
'rjg',
'rji',
'rjs',
'rka',
'rkb',
'rkh',
'rki',
'rkm',
'rkt',
'rkw',
'rma',
'rmb',
'rmc',
'rmd',
'rme',
'rmf',
'rmg',
'rmh',
'rmi',
'rmk',
'rml',
'rmm',
'rmn',
'rmo',
'rmp',
'rmq',
'rmr',
'rms',
'rmt',
'rmu',
'rmv',
'rmw',
'rmx',
'rmy',
'rmz',
'rna',
'rnd',
'rng',
'rnl',
'rnn',
'rnp',
'rnr',
'rnw',
'roa',
'rob',
'roc',
'rod',
'roe',
'rof',
'rog',
'rol',
'rom',
'roo',
'rop',
'ror',
'rou',
'row',
'rpn',
'rpt',
'rri',
'rro',
'rrt',
'rsb',
'rsi',
'rsl',
'rsm',
'rtc',
'rth',
'rtm',
'rts',
'rtw',
'rub',
'ruc',
'rue',
'ruf',
'rug',
'ruh',
'rui',
'ruk',
'ruo',
'rup',
'ruq',
'rut',
'ruu',
'ruy',
'ruz',
'rwa',
'rwk',
'rwm',
'rwo',
'rwr',
'rxd',
'rxw',
'ryn',
'rys',
'ryu',
'rzh',
'saa',
'sab',
'sac',
'sad',
'sae',
'saf',
'sah',
'sai',
'saj',
'sak',
'sal',
'sam',
'sao',
'sap',
'saq',
'sar',
'sas',
'sat',
'sau',
'sav',
'saw',
'sax',
'say',
'saz',
'sba',
'sbb',
'sbc',
'sbd',
'sbe',
'sbf',
'sbg',
'sbh',
'sbi',
'sbj',
'sbk',
'sbl',
'sbm',
'sbn',
'sbo',
'sbp',
'sbq',
'sbr',
'sbs',
'sbt',
'sbu',
'sbv',
'sbw',
'sbx',
'sby',
'sbz',
'sca',
'scb',
'sce',
'scf',
'scg',
'sch',
'sci',
'sck',
'scl',
'scn',
'sco',
'scp',
'scq',
'scs',
'sct',
'scu',
'scv',
'scw',
'scx',
'sda',
'sdb',
'sdc',
'sde',
'sdf',
'sdg',
'sdh',
'sdj',
'sdk',
'sdl',
'sdm',
'sdn',
'sdo',
'sdp',
'sdr',
'sds',
'sdt',
'sdu',
'sdv',
'sdx',
'sdz',
'sea',
'seb',
'sec',
'sed',
'see',
'sef',
'seg',
'seh',
'sei',
'sej',
'sek',
'sel',
'sem',
'sen',
'seo',
'sep',
'seq',
'ser',
'ses',
'set',
'seu',
'sev',
'sew',
'sey',
'sez',
'sfb',
'sfe',
'sfm',
'sfs',
'sfw',
'sga',
'sgb',
'sgc',
'sgd',
'sge',
'sgg',
'sgh',
'sgi',
'sgj',
'sgk',
'sgl',
'sgm',
'sgn',
'sgo',
'sgp',
'sgr',
'sgs',
'sgt',
'sgu',
'sgw',
'sgx',
'sgy',
'sgz',
'sha',
'shb',
'shc',
'shd',
'she',
'shg',
'shh',
'shi',
'shj',
'shk',
'shl',
'shm',
'shn',
'sho',
'shp',
'shq',
'shr',
'shs',
'sht',
'shu',
'shv',
'shw',
'shx',
'shy',
'shz',
'sia',
'sib',
'sid',
'sie',
'sif',
'sig',
'sih',
'sii',
'sij',
'sik',
'sil',
'sim',
'sio',
'sip',
'siq',
'sir',
'sis',
'sit',
'siu',
'siv',
'siw',
'six',
'siy',
'siz',
'sja',
'sjb',
'sjd',
'sje',
'sjg',
'sjk',
'sjl',
'sjm',
'sjn',
'sjo',
'sjp',
'sjr',
'sjs',
'sjt',
'sju',
'sjw',
'ska',
'skb',
'skc',
'skd',
'ske',
'skf',
'skg',
'skh',
'ski',
'skj',
'skk',
'skm',
'skn',
'sko',
'skp',
'skq',
'skr',
'sks',
'skt',
'sku',
'skv',
'skw',
'skx',
'sky',
'skz',
'sla',
'slc',
'sld',
'sle',
'slf',
'slg',
'slh',
'sli',
'slj',
'sll',
'slm',
'sln',
'slp',
'slq',
'slr',
'sls',
'slt',
'slu',
'slw',
'slx',
'sly',
'slz',
'sma',
'smb',
'smc',
'smd',
'smf',
'smg',
'smh',
'smi',
'smj',
'smk',
'sml',
'smm',
'smn',
'smp',
'smq',
'smr',
'sms',
'smt',
'smu',
'smv',
'smw',
'smx',
'smy',
'smz',
'snb',
'snc',
'sne',
'snf',
'sng',
'snh',
'sni',
'snj',
'snk',
'snl',
'snm',
'snn',
'sno',
'snp',
'snq',
'snr',
'sns',
'snu',
'snv',
'snw',
'snx',
'sny',
'snz',
'soa',
'sob',
'soc',
'sod',
'soe',
'sog',
'soh',
'soi',
'soj',
'sok',
'sol',
'son',
'soo',
'sop',
'soq',
'sor',
'sos',
'sou',
'sov',
'sow',
'sox',
'soy',
'soz',
'spb',
'spc',
'spd',
'spe',
'spg',
'spi',
'spk',
'spl',
'spm',
'spn',
'spo',
'spp',
'spq',
'spr',
'sps',
'spt',
'spu',
'spv',
'spx',
'spy',
'sqa',
'sqh',
'sqj',
'sqk',
'sqm',
'sqn',
'sqo',
'sqq',
'sqr',
'sqs',
'sqt',
'squ',
'sra',
'srb',
'src',
'sre',
'srf',
'srg',
'srh',
'sri',
'srk',
'srl',
'srm',
'srn',
'sro',
'srq',
'srr',
'srs',
'srt',
'sru',
'srv',
'srw',
'srx',
'sry',
'srz',
'ssa',
'ssb',
'ssc',
'ssd',
'sse',
'ssf',
'ssg',
'ssh',
'ssi',
'ssj',
'ssk',
'ssl',
'ssm',
'ssn',
'sso',
'ssp',
'ssq',
'ssr',
'sss',
'sst',
'ssu',
'ssv',
'ssx',
'ssy',
'ssz',
'sta',
'stb',
'std',
'ste',
'stf',
'stg',
'sth',
'sti',
'stj',
'stk',
'stl',
'stm',
'stn',
'sto',
'stp',
'stq',
'str',
'sts',
'stt',
'stu',
'stv',
'stw',
'sty',
'sua',
'sub',
'suc',
'sue',
'sug',
'sui',
'suj',
'suk',
'sul',
'sum',
'suq',
'sur',
'sus',
'sut',
'suv',
'suw',
'sux',
'suy',
'suz',
'sva',
'svb',
'svc',
'sve',
'svk',
'svm',
'svr',
'svs',
'svx',
'swb',
'swc',
'swf',
'swg',
'swh',
'swi',
'swj',
'swk',
'swl',
'swm',
'swn',
'swo',
'swp',
'swq',
'swr',
'sws',
'swt',
'swu',
'swv',
'sww',
'swx',
'swy',
'sxb',
'sxc',
'sxe',
'sxg',
'sxk',
'sxl',
'sxm',
'sxn',
'sxo',
'sxr',
'sxs',
'sxu',
'sxw',
'sya',
'syb',
'syc',
'syd',
'syi',
'syk',
'syl',
'sym',
'syn',
'syo',
'syr',
'sys',
'syw',
'syx',
'syy',
'sza',
'szb',
'szc',
'szd',
'sze',
'szg',
'szl',
'szn',
'szp',
'szs',
'szv',
'szw',
'taa',
'tab',
'tac',
'tad',
'tae',
'taf',
'tag',
'tai',
'taj',
'tak',
'tal',
'tan',
'tao',
'tap',
'taq',
'tar',
'tas',
'tau',
'tav',
'taw',
'tax',
'tay',
'taz',
'tba',
'tbb',
'tbc',
'tbd',
'tbe',
'tbf',
'tbg',
'tbh',
'tbi',
'tbj',
'tbk',
'tbl',
'tbm',
'tbn',
'tbo',
'tbp',
'tbq',
'tbr',
'tbs',
'tbt',
'tbu',
'tbv',
'tbw',
'tbx',
'tby',
'tbz',
'tca',
'tcb',
'tcc',
'tcd',
'tce',
'tcf',
'tcg',
'tch',
'tci',
'tck',
'tcl',
'tcm',
'tcn',
'tco',
'tcp',
'tcq',
'tcs',
'tct',
'tcu',
'tcw',
'tcx',
'tcy',
'tcz',
'tda',
'tdb',
'tdc',
'tdd',
'tde',
'tdf',
'tdg',
'tdh',
'tdi',
'tdj',
'tdk',
'tdl',
'tdm',
'tdn',
'tdo',
'tdq',
'tdr',
'tds',
'tdt',
'tdu',
'tdv',
'tdx',
'tdy',
'tea',
'teb',
'tec',
'ted',
'tee',
'tef',
'teg',
'teh',
'tei',
'tek',
'tem',
'ten',
'teo',
'tep',
'teq',
'ter',
'tes',
'tet',
'teu',
'tev',
'tew',
'tex',
'tey',
'tez',
'tfi',
'tfn',
'tfo',
'tfr',
'tft',
'tga',
'tgb',
'tgc',
'tgd',
'tge',
'tgf',
'tgg',
'tgh',
'tgi',
'tgj',
'tgn',
'tgo',
'tgp',
'tgq',
'tgr',
'tgs',
'tgt',
'tgu',
'tgv',
'tgw',
'tgx',
'tgy',
'tgz',
'thc',
'thd',
'the',
'thf',
'thh',
'thi',
'thk',
'thl',
'thm',
'thn',
'thp',
'thq',
'thr',
'ths',
'tht',
'thu',
'thv',
'thw',
'thx',
'thy',
'thz',
'tia',
'tic',
'tid',
'tie',
'tif',
'tig',
'tih',
'tii',
'tij',
'tik',
'til',
'tim',
'tin',
'tio',
'tip',
'tiq',
'tis',
'tit',
'tiu',
'tiv',
'tiw',
'tix',
'tiy',
'tiz',
'tja',
'tjg',
'tji',
'tjl',
'tjm',
'tjn',
'tjo',
'tjs',
'tju',
'tjw',
'tka',
'tkb',
'tkd',
'tke',
'tkf',
'tkg',
'tkk',
'tkl',
'tkm',
'tkn',
'tkp',
'tkq',
'tkr',
'tks',
'tkt',
'tku',
'tkv',
'tkw',
'tkx',
'tkz',
'tla',
'tlb',
'tlc',
'tld',
'tlf',
'tlg',
'tlh',
'tli',
'tlj',
'tlk',
'tll',
'tlm',
'tln',
'tlo',
'tlp',
'tlq',
'tlr',
'tls',
'tlt',
'tlu',
'tlv',
'tlw',
'tlx',
'tly',
'tma',
'tmb',
'tmc',
'tmd',
'tme',
'tmf',
'tmg',
'tmh',
'tmi',
'tmj',
'tmk',
'tml',
'tmm',
'tmn',
'tmo',
'tmp',
'tmq',
'tmr',
'tms',
'tmt',
'tmu',
'tmv',
'tmw',
'tmy',
'tmz',
'tna',
'tnb',
'tnc',
'tnd',
'tne',
'tnf',
'tng',
'tnh',
'tni',
'tnk',
'tnl',
'tnm',
'tnn',
'tno',
'tnp',
'tnq',
'tnr',
'tns',
'tnt',
'tnu',
'tnv',
'tnw',
'tnx',
'tny',
'tnz',
'tob',
'toc',
'tod',
'toe',
'tof',
'tog',
'toh',
'toi',
'toj',
'tol',
'tom',
'too',
'top',
'toq',
'tor',
'tos',
'tou',
'tov',
'tow',
'tox',
'toy',
'toz',
'tpa',
'tpc',
'tpe',
'tpf',
'tpg',
'tpi',
'tpj',
'tpk',
'tpl',
'tpm',
'tpn',
'tpo',
'tpp',
'tpq',
'tpr',
'tpt',
'tpu',
'tpv',
'tpw',
'tpx',
'tpy',
'tpz',
'tqb',
'tql',
'tqm',
'tqn',
'tqo',
'tqp',
'tqq',
'tqr',
'tqt',
'tqu',
'tqw',
'tra',
'trb',
'trc',
'trd',
'tre',
'trf',
'trg',
'trh',
'tri',
'trj',
'trk',
'trl',
'trm',
'trn',
'tro',
'trp',
'trq',
'trr',
'trs',
'trt',
'tru',
'trv',
'trw',
'trx',
'try',
'trz',
'tsa',
'tsb',
'tsc',
'tsd',
'tse',
'tsf',
'tsg',
'tsh',
'tsi',
'tsj',
'tsk',
'tsl',
'tsm',
'tsp',
'tsq',
'tsr',
'tss',
'tst',
'tsu',
'tsv',
'tsw',
'tsx',
'tsy',
'tsz',
'tta',
'ttb',
'ttc',
'ttd',
'tte',
'ttf',
'ttg',
'tth',
'tti',
'ttj',
'ttk',
'ttl',
'ttm',
'ttn',
'tto',
'ttp',
'ttq',
'ttr',
'tts',
'ttt',
'ttu',
'ttv',
'ttw',
'tty',
'ttz',
'tua',
'tub',
'tuc',
'tud',
'tue',
'tuf',
'tug',
'tuh',
'tui',
'tuj',
'tul',
'tum',
'tun',
'tuo',
'tup',
'tuq',
'tus',
'tut',
'tuu',
'tuv',
'tuw',
'tux',
'tuy',
'tuz',
'tva',
'tvd',
'tve',
'tvk',
'tvl',
'tvm',
'tvn',
'tvo',
'tvs',
'tvt',
'tvu',
'tvw',
'tvy',
'twa',
'twb',
'twc',
'twd',
'twe',
'twf',
'twg',
'twh',
'twl',
'twm',
'twn',
'two',
'twp',
'twq',
'twr',
'twt',
'twu',
'tww',
'twx',
'twy',
'txa',
'txb',
'txc',
'txe',
'txg',
'txh',
'txi',
'txj',
'txm',
'txn',
'txo',
'txq',
'txr',
'txs',
'txt',
'txu',
'txx',
'txy',
'tya',
'tye',
'tyh',
'tyi',
'tyj',
'tyl',
'tyn',
'typ',
'tyr',
'tys',
'tyt',
'tyu',
'tyv',
'tyx',
'tyz',
'tza',
'tzh',
'tzj',
'tzl',
'tzm',
'tzn',
'tzo',
'tzx',
'uam',
'uan',
'uar',
'uba',
'ubi',
'ubl',
'ubr',
'ubu',
'uby',
'uda',
'ude',
'udg',
'udi',
'udj',
'udl',
'udm',
'udu',
'ues',
'ufi',
'uga',
'ugb',
'uge',
'ugn',
'ugo',
'ugy',
'uha',
'uhn',
'uis',
'uiv',
'uji',
'uka',
'ukg',
'ukh',
'ukk',
'ukl',
'ukp',
'ukq',
'uks',
'uku',
'ukw',
'uky',
'ula',
'ulb',
'ulc',
'ule',
'ulf',
'uli',
'ulk',
'ull',
'ulm',
'uln',
'ulu',
'ulw',
'uma',
'umb',
'umc',
'umd',
'umg',
'umi',
'umm',
'umn',
'umo',
'ump',
'umr',
'ums',
'umu',
'una',
'und',
'une',
'ung',
'unk',
'unm',
'unn',
'unp',
'unr',
'unu',
'unx',
'unz',
'uok',
'upi',
'upv',
'ura',
'urb',
'urc',
'ure',
'urf',
'urg',
'urh',
'uri',
'urj',
'urk',
'url',
'urm',
'urn',
'uro',
'urp',
'urr',
'urt',
'uru',
'urv',
'urw',
'urx',
'ury',
'urz',
'usa',
'ush',
'usi',
'usk',
'usp',
'usu',
'uta',
'ute',
'utp',
'utr',
'utu',
'uum',
'uun',
'uur',
'uuu',
'uve',
'uvh',
'uvl',
'uwa',
'uya',
'uzn',
'uzs',
'vaa',
'vae',
'vaf',
'vag',
'vah',
'vai',
'vaj',
'val',
'vam',
'van',
'vao',
'vap',
'var',
'vas',
'vau',
'vav',
'vay',
'vbb',
'vbk',
'vec',
'ved',
'vel',
'vem',
'veo',
'vep',
'ver',
'vgr',
'vgt',
'vic',
'vid',
'vif',
'vig',
'vil',
'vin',
'vis',
'vit',
'viv',
'vka',
'vki',
'vkj',
'vkk',
'vkl',
'vkm',
'vko',
'vkp',
'vkt',
'vku',
'vlp',
'vls',
'vma',
'vmb',
'vmc',
'vmd',
'vme',
'vmf',
'vmg',
'vmh',
'vmi',
'vmj',
'vmk',
'vml',
'vmm',
'vmp',
'vmq',
'vmr',
'vms',
'vmu',
'vmv',
'vmw',
'vmx',
'vmy',
'vmz',
'vnk',
'vnm',
'vnp',
'vor',
'vot',
'vra',
'vro',
'vrs',
'vrt',
'vsi',
'vsl',
'vsv',
'vto',
'vum',
'vun',
'vut',
'vwa',
'waa',
'wab',
'wac',
'wad',
'wae',
'waf',
'wag',
'wah',
'wai',
'waj',
'wak',
'wal',
'wam',
'wan',
'wao',
'wap',
'waq',
'war',
'was',
'wat',
'wau',
'wav',
'waw',
'wax',
'way',
'waz',
'wba',
'wbb',
'wbe',
'wbf',
'wbh',
'wbi',
'wbj',
'wbk',
'wbl',
'wbm',
'wbp',
'wbq',
'wbr',
'wbs',
'wbt',
'wbv',
'wbw',
'wca',
'wci',
'wdd',
'wdg',
'wdj',
'wdk',
'wdu',
'wdy',
'wea',
'wec',
'wed',
'weg',
'weh',
'wei',
'wem',
'wen',
'weo',
'wep',
'wer',
'wes',
'wet',
'weu',
'wew',
'wfg',
'wga',
'wgb',
'wgg',
'wgi',
'wgo',
'wgu',
'wgw',
'wgy',
'wha',
'whg',
'whk',
'whu',
'wib',
'wic',
'wie',
'wif',
'wig',
'wih',
'wii',
'wij',
'wik',
'wil',
'wim',
'win',
'wir',
'wit',
'wiu',
'wiv',
'wiw',
'wiy',
'wja',
'wji',
'wka',
'wkb',
'wkd',
'wkl',
'wku',
'wkw',
'wky',
'wla',
'wlc',
'wle',
'wlg',
'wli',
'wlk',
'wll',
'wlm',
'wlo',
'wlr',
'wls',
'wlu',
'wlv',
'wlw',
'wlx',
'wly',
'wma',
'wmb',
'wmc',
'wmd',
'wme',
'wmh',
'wmi',
'wmm',
'wmn',
'wmo',
'wms',
'wmt',
'wmw',
'wmx',
'wnb',
'wnc',
'wnd',
'wne',
'wng',
'wni',
'wnk',
'wnm',
'wnn',
'wno',
'wnp',
'wnu',
'wnw',
'wny',
'woa',
'wob',
'woc',
'wod',
'woe',
'wof',
'wog',
'woi',
'wok',
'wom',
'won',
'woo',
'wor',
'wos',
'wow',
'woy',
'wpc',
'wra',
'wrb',
'wrd',
'wrg',
'wrh',
'wri',
'wrk',
'wrl',
'wrm',
'wrn',
'wro',
'wrp',
'wrr',
'wrs',
'wru',
'wrv',
'wrw',
'wrx',
'wry',
'wrz',
'wsa',
'wsg',
'wsi',
'wsk',
'wsr',
'wss',
'wsu',
'wsv',
'wtf',
'wth',
'wti',
'wtk',
'wtm',
'wtw',
'wua',
'wub',
'wud',
'wuh',
'wul',
'wum',
'wun',
'wur',
'wut',
'wuu',
'wuv',
'wux',
'wuy',
'wwa',
'wwb',
'wwo',
'wwr',
'www',
'wxa',
'wxw',
'wya',
'wyb',
'wyi',
'wym',
'wyr',
'wyy',
'xaa',
'xab',
'xac',
'xad',
'xae',
'xag',
'xai',
'xaj',
'xak',
'xal',
'xam',
'xan',
'xao',
'xap',
'xaq',
'xar',
'xas',
'xat',
'xau',
'xav',
'xaw',
'xay',
'xba',
'xbb',
'xbc',
'xbd',
'xbe',
'xbg',
'xbi',
'xbj',
'xbm',
'xbn',
'xbo',
'xbp',
'xbr',
'xbw',
'xbx',
'xby',
'xcb',
'xcc',
'xce',
'xcg',
'xch',
'xcl',
'xcm',
'xcn',
'xco',
'xcr',
'xct',
'xcu',
'xcv',
'xcw',
'xcy',
'xda',
'xdc',
'xdk',
'xdm',
'xdo',
'xdy',
'xeb',
'xed',
'xeg',
'xel',
'xem',
'xep',
'xer',
'xes',
'xet',
'xeu',
'xfa',
'xga',
'xgb',
'xgd',
'xgf',
'xgg',
'xgi',
'xgl',
'xgm',
'xgn',
'xgr',
'xgu',
'xgw',
'xha',
'xhc',
'xhd',
'xhe',
'xhr',
'xht',
'xhu',
'xhv',
'xia',
'xib',
'xii',
'xil',
'xin',
'xip',
'xir',
'xis',
'xiv',
'xiy',
'xjb',
'xjt',
'xka',
'xkb',
'xkc',
'xkd',
'xke',
'xkf',
'xkg',
'xkh',
'xki',
'xkj',
'xkk',
'xkl',
'xkn',
'xko',
'xkp',
'xkq',
'xkr',
'xks',
'xkt',
'xku',
'xkv',
'xkw',
'xkx',
'xky',
'xkz',
'xla',
'xlb',
'xlc',
'xld',
'xle',
'xlg',
'xli',
'xln',
'xlo',
'xlp',
'xls',
'xlu',
'xly',
'xma',
'xmb',
'xmc',
'xmd',
'xme',
'xmf',
'xmg',
'xmh',
'xmj',
'xmk',
'xml',
'xmm',
'xmn',
'xmo',
'xmp',
'xmq',
'xmr',
'xms',
'xmt',
'xmu',
'xmv',
'xmw',
'xmx',
'xmy',
'xmz',
'xna',
'xnb',
'xnd',
'xng',
'xnh',
'xni',
'xnk',
'xnn',
'xno',
'xnr',
'xns',
'xnt',
'xnu',
'xny',
'xnz',
'xoc',
'xod',
'xog',
'xoi',
'xok',
'xom',
'xon',
'xoo',
'xop',
'xor',
'xow',
'xpa',
'xpc',
'xpe',
'xpg',
'xpi',
'xpj',
'xpk',
'xpm',
'xpn',
'xpo',
'xpp',
'xpq',
'xpr',
'xps',
'xpt',
'xpu',
'xpy',
'xqa',
'xqt',
'xra',
'xrb',
'xrd',
'xre',
'xrg',
'xri',
'xrm',
'xrn',
'xrq',
'xrr',
'xrt',
'xru',
'xrw',
'xsa',
'xsb',
'xsc',
'xsd',
'xse',
'xsh',
'xsi',
'xsj',
'xsl',
'xsm',
'xsn',
'xso',
'xsp',
'xsq',
'xsr',
'xss',
'xsu',
'xsv',
'xsy',
'xta',
'xtb',
'xtc',
'xtd',
'xte',
'xtg',
'xth',
'xti',
'xtj',
'xtl',
'xtm',
'xtn',
'xto',
'xtp',
'xtq',
'xtr',
'xts',
'xtt',
'xtu',
'xtv',
'xtw',
'xty',
'xtz',
'xua',
'xub',
'xud',
'xug',
'xuj',
'xul',
'xum',
'xun',
'xuo',
'xup',
'xur',
'xut',
'xuu',
'xve',
'xvi',
'xvn',
'xvo',
'xvs',
'xwa',
'xwc',
'xwd',
'xwe',
'xwg',
'xwj',
'xwk',
'xwl',
'xwo',
'xwr',
'xwt',
'xww',
'xxb',
'xxk',
'xxm',
'xxr',
'xxt',
'xya',
'xyb',
'xyj',
'xyk',
'xyl',
'xyt',
'xyy',
'xzh',
'xzm',
'xzp',
'yaa',
'yab',
'yac',
'yad',
'yae',
'yaf',
'yag',
'yah',
'yai',
'yaj',
'yak',
'yal',
'yam',
'yan',
'yao',
'yap',
'yaq',
'yar',
'yas',
'yat',
'yau',
'yav',
'yaw',
'yax',
'yay',
'yaz',
'yba',
'ybb',
'ybd',
'ybe',
'ybh',
'ybi',
'ybj',
'ybk',
'ybl',
'ybm',
'ybn',
'ybo',
'ybx',
'yby',
'ych',
'ycl',
'ycn',
'ycp',
'yda',
'ydd',
'yde',
'ydg',
'ydk',
'yds',
'yea',
'yec',
'yee',
'yei',
'yej',
'yel',
'yen',
'yer',
'yes',
'yet',
'yeu',
'yev',
'yey',
'yga',
'ygi',
'ygl',
'ygm',
'ygp',
'ygr',
'ygs',
'ygu',
'ygw',
'yha',
'yhd',
'yhl',
'yhs',
'yia',
'yif',
'yig',
'yih',
'yii',
'yij',
'yik',
'yil',
'yim',
'yin',
'yip',
'yiq',
'yir',
'yis',
'yit',
'yiu',
'yiv',
'yix',
'yiy',
'yiz',
'yka',
'ykg',
'yki',
'ykk',
'ykl',
'ykm',
'ykn',
'yko',
'ykr',
'ykt',
'yku',
'yky',
'yla',
'ylb',
'yle',
'ylg',
'yli',
'yll',
'ylm',
'yln',
'ylo',
'ylr',
'ylu',
'yly',
'yma',
'ymb',
'ymc',
'ymd',
'yme',
'ymg',
'ymh',
'ymi',
'ymk',
'yml',
'ymm',
'ymn',
'ymo',
'ymp',
'ymq',
'ymr',
'yms',
'ymt',
'ymx',
'ymz',
'yna',
'ynd',
'yne',
'yng',
'ynh',
'ynk',
'ynl',
'ynn',
'yno',
'ynq',
'yns',
'ynu',
'yob',
'yog',
'yoi',
'yok',
'yol',
'yom',
'yon',
'yos',
'yot',
'yox',
'yoy',
'ypa',
'ypb',
'ypg',
'yph',
'ypk',
'ypm',
'ypn',
'ypo',
'ypp',
'ypz',
'yra',
'yrb',
'yre',
'yri',
'yrk',
'yrl',
'yrm',
'yrn',
'yro',
'yrs',
'yrw',
'yry',
'ysc',
'ysd',
'ysg',
'ysl',
'ysn',
'yso',
'ysp',
'ysr',
'yss',
'ysy',
'yta',
'ytl',
'ytp',
'ytw',
'yty',
'yua',
'yub',
'yuc',
'yud',
'yue',
'yuf',
'yug',
'yui',
'yuj',
'yuk',
'yul',
'yum',
'yun',
'yup',
'yuq',
'yur',
'yut',
'yuu',
'yuw',
'yux',
'yuy',
'yuz',
'yva',
'yvt',
'ywa',
'ywg',
'ywl',
'ywn',
'ywq',
'ywr',
'ywt',
'ywu',
'yww',
'yxa',
'yxg',
'yxl',
'yxm',
'yxu',
'yxy',
'yyr',
'yyu',
'yyz',
'yzg',
'yzk',
'zaa',
'zab',
'zac',
'zad',
'zae',
'zaf',
'zag',
'zah',
'zai',
'zaj',
'zak',
'zal',
'zam',
'zao',
'zap',
'zaq',
'zar',
'zas',
'zat',
'zau',
'zav',
'zaw',
'zax',
'zay',
'zaz',
'zbc',
'zbe',
'zbl',
'zbt',
'zbw',
'zca',
'zch',
'zdj',
'zea',
'zeg',
'zeh',
'zen',
'zga',
'zgb',
'zgh',
'zgm',
'zgn',
'zgr',
'zhb',
'zhd',
'zhi',
'zhn',
'zhw',
'zhx',
'zia',
'zib',
'zik',
'zil',
'zim',
'zin',
'zir',
'ziw',
'ziz',
'zka',
'zkb',
'zkd',
'zkg',
'zkh',
'zkk',
'zkn',
'zko',
'zkp',
'zkr',
'zkt',
'zku',
'zkv',
'zkz',
'zle',
'zlj',
'zlm',
'zln',
'zlq',
'zls',
'zlw',
'zma',
'zmb',
'zmc',
'zmd',
'zme',
'zmf',
'zmg',
'zmh',
'zmi',
'zmj',
'zmk',
'zml',
'zmm',
'zmn',
'zmo',
'zmp',
'zmq',
'zmr',
'zms',
'zmt',
'zmu',
'zmv',
'zmw',
'zmx',
'zmy',
'zmz',
'zna',
'znd',
'zne',
'zng',
'znk',
'zns',
'zoc',
'zoh',
'zom',
'zoo',
'zoq',
'zor',
'zos',
'zpa',
'zpb',
'zpc',
'zpd',
'zpe',
'zpf',
'zpg',
'zph',
'zpi',
'zpj',
'zpk',
'zpl',
'zpm',
'zpn',
'zpo',
'zpp',
'zpq',
'zpr',
'zps',
'zpt',
'zpu',
'zpv',
'zpw',
'zpx',
'zpy',
'zpz',
'zqe',
'zra',
'zrg',
'zrn',
'zro',
'zrp',
'zrs',
'zsa',
'zsk',
'zsl',
'zsm',
'zsr',
'zsu',
'zte',
'ztg',
'ztl',
'ztm',
'ztn',
'ztp',
'ztq',
'zts',
'ztt',
'ztu',
'ztx',
'zty',
'zua',
'zuh',
'zum',
'zun',
'zuy',
'zwa',
'zxx',
'zyb',
'zyg',
'zyj',
'zyn',
'zyp',
'zza',
'zzj'];








axe.utils.validLangs=function(){
'use strict';
return langs;
};

},{}],109:[function(require,module,exports){
'use strict';

exports.byteLength=byteLength;
exports.toByteArray=toByteArray;
exports.fromByteArray=fromByteArray;

var lookup=[];
var revLookup=[];
var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;

var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for(var i=0,len=code.length;i<len;++i){
lookup[i]=code[i];
revLookup[code.charCodeAt(i)]=i;
}



revLookup['-'.charCodeAt(0)]=62;
revLookup['_'.charCodeAt(0)]=63;

function getLens(b64){
var len=b64.length;

if(len%4>0){
throw new Error('Invalid string. Length must be a multiple of 4');
}



var validLen=b64.indexOf('=');
if(validLen===-1)validLen=len;

var placeHoldersLen=validLen===len?
0:
4-validLen%4;

return[validLen,placeHoldersLen];
}


function byteLength(b64){
var lens=getLens(b64);
var validLen=lens[0];
var placeHoldersLen=lens[1];
return(validLen+placeHoldersLen)*3/4-placeHoldersLen;
}

function _byteLength(b64,validLen,placeHoldersLen){
return(validLen+placeHoldersLen)*3/4-placeHoldersLen;
}

function toByteArray(b64){
var tmp;
var lens=getLens(b64);
var validLen=lens[0];
var placeHoldersLen=lens[1];

var arr=new Arr(_byteLength(b64,validLen,placeHoldersLen));

var curByte=0;


var len=placeHoldersLen>0?
validLen-4:
validLen;

for(var i=0;i<len;i+=4){
tmp=
revLookup[b64.charCodeAt(i)]<<18|
revLookup[b64.charCodeAt(i+1)]<<12|
revLookup[b64.charCodeAt(i+2)]<<6|
revLookup[b64.charCodeAt(i+3)];
arr[curByte++]=tmp>>16&0xFF;
arr[curByte++]=tmp>>8&0xFF;
arr[curByte++]=tmp&0xFF;
}

if(placeHoldersLen===2){
tmp=
revLookup[b64.charCodeAt(i)]<<2|
revLookup[b64.charCodeAt(i+1)]>>4;
arr[curByte++]=tmp&0xFF;
}

if(placeHoldersLen===1){
tmp=
revLookup[b64.charCodeAt(i)]<<10|
revLookup[b64.charCodeAt(i+1)]<<4|
revLookup[b64.charCodeAt(i+2)]>>2;
arr[curByte++]=tmp>>8&0xFF;
arr[curByte++]=tmp&0xFF;
}

return arr;
}

function tripletToBase64(num){
return lookup[num>>18&0x3F]+
lookup[num>>12&0x3F]+
lookup[num>>6&0x3F]+
lookup[num&0x3F];
}

function encodeChunk(uint8,start,end){
var tmp;
var output=[];
for(var i=start;i<end;i+=3){
tmp=
(uint8[i]<<16&0xFF0000)+(
uint8[i+1]<<8&0xFF00)+(
uint8[i+2]&0xFF);
output.push(tripletToBase64(tmp));
}
return output.join('');
}

function fromByteArray(uint8){
var tmp;
var len=uint8.length;
var extraBytes=len%3;
var parts=[];
var maxChunkLength=16383;


for(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){
parts.push(encodeChunk(
uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));

}


if(extraBytes===1){
tmp=uint8[len-1];
parts.push(
lookup[tmp>>2]+
lookup[tmp<<4&0x3F]+
'==');

}else if(extraBytes===2){
tmp=(uint8[len-2]<<8)+uint8[len-1];
parts.push(
lookup[tmp>>10]+
lookup[tmp>>4&0x3F]+
lookup[tmp<<2&0x3F]+
'=');

}

return parts.join('');
}

},{}],110:[function(require,module,exports){

},{}],111:[function(require,module,exports){
(function(process,Buffer){
'use strict';


var assert=require('assert');

var Zstream=require('pako/lib/zlib/zstream');
var zlib_deflate=require('pako/lib/zlib/deflate.js');
var zlib_inflate=require('pako/lib/zlib/inflate.js');
var constants=require('pako/lib/zlib/constants');

for(var key in constants){
exports[key]=constants[key];
}


exports.NONE=0;
exports.DEFLATE=1;
exports.INFLATE=2;
exports.GZIP=3;
exports.GUNZIP=4;
exports.DEFLATERAW=5;
exports.INFLATERAW=6;
exports.UNZIP=7;

var GZIP_HEADER_ID1=0x1f;
var GZIP_HEADER_ID2=0x8b;




function Zlib(mode){
if(typeof mode!=='number'||mode<exports.DEFLATE||mode>exports.UNZIP){
throw new TypeError('Bad argument');
}

this.dictionary=null;
this.err=0;
this.flush=0;
this.init_done=false;
this.level=0;
this.memLevel=0;
this.mode=mode;
this.strategy=0;
this.windowBits=0;
this.write_in_progress=false;
this.pending_close=false;
this.gzip_id_bytes_read=0;
}

Zlib.prototype.close=function(){
if(this.write_in_progress){
this.pending_close=true;
return;
}

this.pending_close=false;

assert(this.init_done,'close before init');
assert(this.mode<=exports.UNZIP);

if(this.mode===exports.DEFLATE||this.mode===exports.GZIP||this.mode===exports.DEFLATERAW){
zlib_deflate.deflateEnd(this.strm);
}else if(this.mode===exports.INFLATE||this.mode===exports.GUNZIP||this.mode===exports.INFLATERAW||this.mode===exports.UNZIP){
zlib_inflate.inflateEnd(this.strm);
}

this.mode=exports.NONE;

this.dictionary=null;
};

Zlib.prototype.write=function(flush,input,in_off,in_len,out,out_off,out_len){
return this._write(true,flush,input,in_off,in_len,out,out_off,out_len);
};

Zlib.prototype.writeSync=function(flush,input,in_off,in_len,out,out_off,out_len){
return this._write(false,flush,input,in_off,in_len,out,out_off,out_len);
};

Zlib.prototype._write=function(async,flush,input,in_off,in_len,out,out_off,out_len){
assert.equal(arguments.length,8);

assert(this.init_done,'write before init');
assert(this.mode!==exports.NONE,'already finalized');
assert.equal(false,this.write_in_progress,'write already in progress');
assert.equal(false,this.pending_close,'close is pending');

this.write_in_progress=true;

assert.equal(false,flush===undefined,'must provide flush value');

this.write_in_progress=true;

if(flush!==exports.Z_NO_FLUSH&&flush!==exports.Z_PARTIAL_FLUSH&&flush!==exports.Z_SYNC_FLUSH&&flush!==exports.Z_FULL_FLUSH&&flush!==exports.Z_FINISH&&flush!==exports.Z_BLOCK){
throw new Error('Invalid flush value');
}

if(input==null){
input=Buffer.alloc(0);
in_len=0;
in_off=0;
}

this.strm.avail_in=in_len;
this.strm.input=input;
this.strm.next_in=in_off;
this.strm.avail_out=out_len;
this.strm.output=out;
this.strm.next_out=out_off;
this.flush=flush;

if(!async){

this._process();

if(this._checkError()){
return this._afterSync();
}
return;
}


var self=this;
process.nextTick(function(){
self._process();
self._after();
});

return this;
};

Zlib.prototype._afterSync=function(){
var avail_out=this.strm.avail_out;
var avail_in=this.strm.avail_in;

this.write_in_progress=false;

return[avail_in,avail_out];
};

Zlib.prototype._process=function(){
var next_expected_header_byte=null;




switch(this.mode){
case exports.DEFLATE:
case exports.GZIP:
case exports.DEFLATERAW:
this.err=zlib_deflate.deflate(this.strm,this.flush);
break;
case exports.UNZIP:
if(this.strm.avail_in>0){
next_expected_header_byte=this.strm.next_in;
}

switch(this.gzip_id_bytes_read){
case 0:
if(next_expected_header_byte===null){
break;
}

if(this.strm.input[next_expected_header_byte]===GZIP_HEADER_ID1){
this.gzip_id_bytes_read=1;
next_expected_header_byte++;

if(this.strm.avail_in===1){

break;
}
}else{
this.mode=exports.INFLATE;
break;
}


case 1:
if(next_expected_header_byte===null){
break;
}

if(this.strm.input[next_expected_header_byte]===GZIP_HEADER_ID2){
this.gzip_id_bytes_read=2;
this.mode=exports.GUNZIP;
}else{


this.mode=exports.INFLATE;
}

break;
default:
throw new Error('invalid number of gzip magic number bytes read');}



case exports.INFLATE:
case exports.GUNZIP:
case exports.INFLATERAW:
this.err=zlib_inflate.inflate(this.strm,this.flush);


if(this.err===exports.Z_NEED_DICT&&this.dictionary){

this.err=zlib_inflate.inflateSetDictionary(this.strm,this.dictionary);
if(this.err===exports.Z_OK){

this.err=zlib_inflate.inflate(this.strm,this.flush);
}else if(this.err===exports.Z_DATA_ERROR){



this.err=exports.Z_NEED_DICT;
}
}
while(this.strm.avail_in>0&&this.mode===exports.GUNZIP&&this.err===exports.Z_STREAM_END&&this.strm.next_in[0]!==0x00){





this.reset();
this.err=zlib_inflate.inflate(this.strm,this.flush);
}
break;
default:
throw new Error('Unknown mode '+this.mode);}

};

Zlib.prototype._checkError=function(){

switch(this.err){
case exports.Z_OK:
case exports.Z_BUF_ERROR:
if(this.strm.avail_out!==0&&this.flush===exports.Z_FINISH){
this._error('unexpected end of file');
return false;
}
break;
case exports.Z_STREAM_END:

break;
case exports.Z_NEED_DICT:
if(this.dictionary==null){
this._error('Missing dictionary');
}else{
this._error('Bad dictionary');
}
return false;
default:

this._error('Zlib error');
return false;}


return true;
};

Zlib.prototype._after=function(){
if(!this._checkError()){
return;
}

var avail_out=this.strm.avail_out;
var avail_in=this.strm.avail_in;

this.write_in_progress=false;


this.callback(avail_in,avail_out);

if(this.pending_close){
this.close();
}
};

Zlib.prototype._error=function(message){
if(this.strm.msg){
message=this.strm.msg;
}
this.onerror(message,this.err);


this.write_in_progress=false;
if(this.pending_close){
this.close();
}
};

Zlib.prototype.init=function(windowBits,level,memLevel,strategy,dictionary){
assert(arguments.length===4||arguments.length===5,'init(windowBits, level, memLevel, strategy, [dictionary])');

assert(windowBits>=8&&windowBits<=15,'invalid windowBits');
assert(level>=-1&&level<=9,'invalid compression level');

assert(memLevel>=1&&memLevel<=9,'invalid memlevel');

assert(strategy===exports.Z_FILTERED||strategy===exports.Z_HUFFMAN_ONLY||strategy===exports.Z_RLE||strategy===exports.Z_FIXED||strategy===exports.Z_DEFAULT_STRATEGY,'invalid strategy');

this._init(level,windowBits,memLevel,strategy,dictionary);
this._setDictionary();
};

Zlib.prototype.params=function(){
throw new Error('deflateParams Not supported');
};

Zlib.prototype.reset=function(){
this._reset();
this._setDictionary();
};

Zlib.prototype._init=function(level,windowBits,memLevel,strategy,dictionary){
this.level=level;
this.windowBits=windowBits;
this.memLevel=memLevel;
this.strategy=strategy;

this.flush=exports.Z_NO_FLUSH;

this.err=exports.Z_OK;

if(this.mode===exports.GZIP||this.mode===exports.GUNZIP){
this.windowBits+=16;
}

if(this.mode===exports.UNZIP){
this.windowBits+=32;
}

if(this.mode===exports.DEFLATERAW||this.mode===exports.INFLATERAW){
this.windowBits=-1*this.windowBits;
}

this.strm=new Zstream();

switch(this.mode){
case exports.DEFLATE:
case exports.GZIP:
case exports.DEFLATERAW:
this.err=zlib_deflate.deflateInit2(this.strm,this.level,exports.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);
break;
case exports.INFLATE:
case exports.GUNZIP:
case exports.INFLATERAW:
case exports.UNZIP:
this.err=zlib_inflate.inflateInit2(this.strm,this.windowBits);
break;
default:
throw new Error('Unknown mode '+this.mode);}


if(this.err!==exports.Z_OK){
this._error('Init error');
}

this.dictionary=dictionary;

this.write_in_progress=false;
this.init_done=true;
};

Zlib.prototype._setDictionary=function(){
if(this.dictionary==null){
return;
}

this.err=exports.Z_OK;

switch(this.mode){
case exports.DEFLATE:
case exports.DEFLATERAW:
this.err=zlib_deflate.deflateSetDictionary(this.strm,this.dictionary);
break;
default:
break;}


if(this.err!==exports.Z_OK){
this._error('Failed to set dictionary');
}
};

Zlib.prototype._reset=function(){
this.err=exports.Z_OK;

switch(this.mode){
case exports.DEFLATE:
case exports.DEFLATERAW:
case exports.GZIP:
this.err=zlib_deflate.deflateReset(this.strm);
break;
case exports.INFLATE:
case exports.INFLATERAW:
case exports.GUNZIP:
this.err=zlib_inflate.inflateReset(this.strm);
break;
default:
break;}


if(this.err!==exports.Z_OK){
this._error('Failed to reset stream');
}
};

exports.Zlib=Zlib;
}).call(this,require('_process'),require("buffer").Buffer);
},{"_process":170,"assert":104,"buffer":114,"pako/lib/zlib/constants":161,"pako/lib/zlib/deflate.js":163,"pako/lib/zlib/inflate.js":113,"pako/lib/zlib/zstream":166}],112:[function(require,module,exports){
(function(process){
'use strict';

var Buffer=require('buffer').Buffer;
var Transform=require('stream').Transform;
var binding=require('./binding');
var util=require('util');
var assert=require('assert').ok;
var kMaxLength=require('buffer').kMaxLength;
var kRangeErrorMessage='Cannot create final Buffer. It would be larger '+'than 0x'+kMaxLength.toString(16)+' bytes';



binding.Z_MIN_WINDOWBITS=8;
binding.Z_MAX_WINDOWBITS=15;
binding.Z_DEFAULT_WINDOWBITS=15;




binding.Z_MIN_CHUNK=64;
binding.Z_MAX_CHUNK=Infinity;
binding.Z_DEFAULT_CHUNK=16*1024;

binding.Z_MIN_MEMLEVEL=1;
binding.Z_MAX_MEMLEVEL=9;
binding.Z_DEFAULT_MEMLEVEL=8;

binding.Z_MIN_LEVEL=-1;
binding.Z_MAX_LEVEL=9;
binding.Z_DEFAULT_LEVEL=binding.Z_DEFAULT_COMPRESSION;


var bkeys=Object.keys(binding);
for(var bk=0;bk<bkeys.length;bk++){
var bkey=bkeys[bk];
if(bkey.match(/^Z/)){
Object.defineProperty(exports,bkey,{
enumerable:true,value:binding[bkey],writable:false});

}
}


var codes={
Z_OK:binding.Z_OK,
Z_STREAM_END:binding.Z_STREAM_END,
Z_NEED_DICT:binding.Z_NEED_DICT,
Z_ERRNO:binding.Z_ERRNO,
Z_STREAM_ERROR:binding.Z_STREAM_ERROR,
Z_DATA_ERROR:binding.Z_DATA_ERROR,
Z_MEM_ERROR:binding.Z_MEM_ERROR,
Z_BUF_ERROR:binding.Z_BUF_ERROR,
Z_VERSION_ERROR:binding.Z_VERSION_ERROR};


var ckeys=Object.keys(codes);
for(var ck=0;ck<ckeys.length;ck++){
var ckey=ckeys[ck];
codes[codes[ckey]]=ckey;
}

Object.defineProperty(exports,'codes',{
enumerable:true,value:Object.freeze(codes),writable:false});


exports.Deflate=Deflate;
exports.Inflate=Inflate;
exports.Gzip=Gzip;
exports.Gunzip=Gunzip;
exports.DeflateRaw=DeflateRaw;
exports.InflateRaw=InflateRaw;
exports.Unzip=Unzip;

exports.createDeflate=function(o){
return new Deflate(o);
};

exports.createInflate=function(o){
return new Inflate(o);
};

exports.createDeflateRaw=function(o){
return new DeflateRaw(o);
};

exports.createInflateRaw=function(o){
return new InflateRaw(o);
};

exports.createGzip=function(o){
return new Gzip(o);
};

exports.createGunzip=function(o){
return new Gunzip(o);
};

exports.createUnzip=function(o){
return new Unzip(o);
};



exports.deflate=function(buffer,opts,callback){
if(typeof opts==='function'){
callback=opts;
opts={};
}
return zlibBuffer(new Deflate(opts),buffer,callback);
};

exports.deflateSync=function(buffer,opts){
return zlibBufferSync(new Deflate(opts),buffer);
};

exports.gzip=function(buffer,opts,callback){
if(typeof opts==='function'){
callback=opts;
opts={};
}
return zlibBuffer(new Gzip(opts),buffer,callback);
};

exports.gzipSync=function(buffer,opts){
return zlibBufferSync(new Gzip(opts),buffer);
};

exports.deflateRaw=function(buffer,opts,callback){
if(typeof opts==='function'){
callback=opts;
opts={};
}
return zlibBuffer(new DeflateRaw(opts),buffer,callback);
};

exports.deflateRawSync=function(buffer,opts){
return zlibBufferSync(new DeflateRaw(opts),buffer);
};

exports.unzip=function(buffer,opts,callback){
if(typeof opts==='function'){
callback=opts;
opts={};
}
return zlibBuffer(new Unzip(opts),buffer,callback);
};

exports.unzipSync=function(buffer,opts){
return zlibBufferSync(new Unzip(opts),buffer);
};

exports.inflate=function(buffer,opts,callback){
if(typeof opts==='function'){
callback=opts;
opts={};
}
return zlibBuffer(new Inflate(opts),buffer,callback);
};

exports.inflateSync=function(buffer,opts){
return zlibBufferSync(new Inflate(opts),buffer);
};

exports.gunzip=function(buffer,opts,callback){
if(typeof opts==='function'){
callback=opts;
opts={};
}
return zlibBuffer(new Gunzip(opts),buffer,callback);
};

exports.gunzipSync=function(buffer,opts){
return zlibBufferSync(new Gunzip(opts),buffer);
};

exports.inflateRaw=function(buffer,opts,callback){
if(typeof opts==='function'){
callback=opts;
opts={};
}
return zlibBuffer(new InflateRaw(opts),buffer,callback);
};

exports.inflateRawSync=function(buffer,opts){
return zlibBufferSync(new InflateRaw(opts),buffer);
};

function zlibBuffer(engine,buffer,callback){
var buffers=[];
var nread=0;

engine.on('error',onError);
engine.on('end',onEnd);

engine.end(buffer);
flow();

function flow(){
var chunk;
while(null!==(chunk=engine.read())){
buffers.push(chunk);
nread+=chunk.length;
}
engine.once('readable',flow);
}

function onError(err){
engine.removeListener('end',onEnd);
engine.removeListener('readable',flow);
callback(err);
}

function onEnd(){
var buf;
var err=null;

if(nread>=kMaxLength){
err=new RangeError(kRangeErrorMessage);
}else{
buf=Buffer.concat(buffers,nread);
}

buffers=[];
engine.close();
callback(err,buf);
}
}

function zlibBufferSync(engine,buffer){
if(typeof buffer==='string')buffer=Buffer.from(buffer);

if(!Buffer.isBuffer(buffer))throw new TypeError('Not a string or buffer');

var flushFlag=engine._finishFlushFlag;

return engine._processChunk(buffer,flushFlag);
}



function Deflate(opts){
if(!(this instanceof Deflate))return new Deflate(opts);
Zlib.call(this,opts,binding.DEFLATE);
}

function Inflate(opts){
if(!(this instanceof Inflate))return new Inflate(opts);
Zlib.call(this,opts,binding.INFLATE);
}


function Gzip(opts){
if(!(this instanceof Gzip))return new Gzip(opts);
Zlib.call(this,opts,binding.GZIP);
}

function Gunzip(opts){
if(!(this instanceof Gunzip))return new Gunzip(opts);
Zlib.call(this,opts,binding.GUNZIP);
}


function DeflateRaw(opts){
if(!(this instanceof DeflateRaw))return new DeflateRaw(opts);
Zlib.call(this,opts,binding.DEFLATERAW);
}

function InflateRaw(opts){
if(!(this instanceof InflateRaw))return new InflateRaw(opts);
Zlib.call(this,opts,binding.INFLATERAW);
}


function Unzip(opts){
if(!(this instanceof Unzip))return new Unzip(opts);
Zlib.call(this,opts,binding.UNZIP);
}

function isValidFlushFlag(flag){
return flag===binding.Z_NO_FLUSH||flag===binding.Z_PARTIAL_FLUSH||flag===binding.Z_SYNC_FLUSH||flag===binding.Z_FULL_FLUSH||flag===binding.Z_FINISH||flag===binding.Z_BLOCK;
}






function Zlib(opts,mode){
var _this=this;

this._opts=opts=opts||{};
this._chunkSize=opts.chunkSize||exports.Z_DEFAULT_CHUNK;

Transform.call(this,opts);

if(opts.flush&&!isValidFlushFlag(opts.flush)){
throw new Error('Invalid flush flag: '+opts.flush);
}
if(opts.finishFlush&&!isValidFlushFlag(opts.finishFlush)){
throw new Error('Invalid flush flag: '+opts.finishFlush);
}

this._flushFlag=opts.flush||binding.Z_NO_FLUSH;
this._finishFlushFlag=typeof opts.finishFlush!=='undefined'?opts.finishFlush:binding.Z_FINISH;

if(opts.chunkSize){
if(opts.chunkSize<exports.Z_MIN_CHUNK||opts.chunkSize>exports.Z_MAX_CHUNK){
throw new Error('Invalid chunk size: '+opts.chunkSize);
}
}

if(opts.windowBits){
if(opts.windowBits<exports.Z_MIN_WINDOWBITS||opts.windowBits>exports.Z_MAX_WINDOWBITS){
throw new Error('Invalid windowBits: '+opts.windowBits);
}
}

if(opts.level){
if(opts.level<exports.Z_MIN_LEVEL||opts.level>exports.Z_MAX_LEVEL){
throw new Error('Invalid compression level: '+opts.level);
}
}

if(opts.memLevel){
if(opts.memLevel<exports.Z_MIN_MEMLEVEL||opts.memLevel>exports.Z_MAX_MEMLEVEL){
throw new Error('Invalid memLevel: '+opts.memLevel);
}
}

if(opts.strategy){
if(opts.strategy!=exports.Z_FILTERED&&opts.strategy!=exports.Z_HUFFMAN_ONLY&&opts.strategy!=exports.Z_RLE&&opts.strategy!=exports.Z_FIXED&&opts.strategy!=exports.Z_DEFAULT_STRATEGY){
throw new Error('Invalid strategy: '+opts.strategy);
}
}

if(opts.dictionary){
if(!Buffer.isBuffer(opts.dictionary)){
throw new Error('Invalid dictionary: it should be a Buffer instance');
}
}

this._handle=new binding.Zlib(mode);

var self=this;
this._hadError=false;
this._handle.onerror=function(message,errno){


_close(self);
self._hadError=true;

var error=new Error(message);
error.errno=errno;
error.code=exports.codes[errno];
self.emit('error',error);
};

var level=exports.Z_DEFAULT_COMPRESSION;
if(typeof opts.level==='number')level=opts.level;

var strategy=exports.Z_DEFAULT_STRATEGY;
if(typeof opts.strategy==='number')strategy=opts.strategy;

this._handle.init(opts.windowBits||exports.Z_DEFAULT_WINDOWBITS,level,opts.memLevel||exports.Z_DEFAULT_MEMLEVEL,strategy,opts.dictionary);

this._buffer=Buffer.allocUnsafe(this._chunkSize);
this._offset=0;
this._level=level;
this._strategy=strategy;

this.once('end',this.close);

Object.defineProperty(this,'_closed',{
get:function(){
return!_this._handle;
},
configurable:true,
enumerable:true});

}

util.inherits(Zlib,Transform);

Zlib.prototype.params=function(level,strategy,callback){
if(level<exports.Z_MIN_LEVEL||level>exports.Z_MAX_LEVEL){
throw new RangeError('Invalid compression level: '+level);
}
if(strategy!=exports.Z_FILTERED&&strategy!=exports.Z_HUFFMAN_ONLY&&strategy!=exports.Z_RLE&&strategy!=exports.Z_FIXED&&strategy!=exports.Z_DEFAULT_STRATEGY){
throw new TypeError('Invalid strategy: '+strategy);
}

if(this._level!==level||this._strategy!==strategy){
var self=this;
this.flush(binding.Z_SYNC_FLUSH,function(){
assert(self._handle,'zlib binding closed');
self._handle.params(level,strategy);
if(!self._hadError){
self._level=level;
self._strategy=strategy;
if(callback)callback();
}
});
}else{
process.nextTick(callback);
}
};

Zlib.prototype.reset=function(){
assert(this._handle,'zlib binding closed');
return this._handle.reset();
};



Zlib.prototype._flush=function(callback){
this._transform(Buffer.alloc(0),'',callback);
};

Zlib.prototype.flush=function(kind,callback){
var _this2=this;

var ws=this._writableState;

if(typeof kind==='function'||kind===undefined&&!callback){
callback=kind;
kind=binding.Z_FULL_FLUSH;
}

if(ws.ended){
if(callback)process.nextTick(callback);
}else if(ws.ending){
if(callback)this.once('end',callback);
}else if(ws.needDrain){
if(callback){
this.once('drain',function(){
return _this2.flush(kind,callback);
});
}
}else{
this._flushFlag=kind;
this.write(Buffer.alloc(0),'',callback);
}
};

Zlib.prototype.close=function(callback){
_close(this,callback);
process.nextTick(emitCloseNT,this);
};

function _close(engine,callback){
if(callback)process.nextTick(callback);


if(!engine._handle)return;

engine._handle.close();
engine._handle=null;
}

function emitCloseNT(self){
self.emit('close');
}

Zlib.prototype._transform=function(chunk,encoding,cb){
var flushFlag;
var ws=this._writableState;
var ending=ws.ending||ws.ended;
var last=ending&&(!chunk||ws.length===chunk.length);

if(chunk!==null&&!Buffer.isBuffer(chunk))return cb(new Error('invalid input'));

if(!this._handle)return cb(new Error('zlib binding closed'));






if(last)flushFlag=this._finishFlushFlag;else{
flushFlag=this._flushFlag;


if(chunk.length>=ws.length){
this._flushFlag=this._opts.flush||binding.Z_NO_FLUSH;
}
}

this._processChunk(chunk,flushFlag,cb);
};

Zlib.prototype._processChunk=function(chunk,flushFlag,cb){
var availInBefore=chunk&&chunk.length;
var availOutBefore=this._chunkSize-this._offset;
var inOff=0;

var self=this;

var async=typeof cb==='function';

if(!async){
var buffers=[];
var nread=0;

var error;
this.on('error',function(er){
error=er;
});

assert(this._handle,'zlib binding closed');
do{
var res=this._handle.writeSync(flushFlag,chunk,
inOff,
availInBefore,
this._buffer,
this._offset,
availOutBefore);
}while(!this._hadError&&callback(res[0],res[1]));

if(this._hadError){
throw error;
}

if(nread>=kMaxLength){
_close(this);
throw new RangeError(kRangeErrorMessage);
}

var buf=Buffer.concat(buffers,nread);
_close(this);

return buf;
}

assert(this._handle,'zlib binding closed');
var req=this._handle.write(flushFlag,chunk,
inOff,
availInBefore,
this._buffer,
this._offset,
availOutBefore);

req.buffer=chunk;
req.callback=callback;

function callback(availInAfter,availOutAfter){





if(this){
this.buffer=null;
this.callback=null;
}

if(self._hadError)return;

var have=availOutBefore-availOutAfter;
assert(have>=0,'have should not go down');

if(have>0){
var out=self._buffer.slice(self._offset,self._offset+have);
self._offset+=have;

if(async){
self.push(out);
}else{
buffers.push(out);
nread+=out.length;
}
}


if(availOutAfter===0||self._offset>=self._chunkSize){
availOutBefore=self._chunkSize;
self._offset=0;
self._buffer=Buffer.allocUnsafe(self._chunkSize);
}

if(availOutAfter===0){




inOff+=availInBefore-availInAfter;
availInBefore=availInAfter;

if(!async)return true;

var newReq=self._handle.write(flushFlag,chunk,inOff,availInBefore,self._buffer,self._offset,self._chunkSize);
newReq.callback=callback;
newReq.buffer=chunk;
return;
}

if(!async)return false;


cb();
}
};

util.inherits(Deflate,Zlib);
util.inherits(Inflate,Zlib);
util.inherits(Gzip,Zlib);
util.inherits(Gunzip,Zlib);
util.inherits(DeflateRaw,Zlib);
util.inherits(InflateRaw,Zlib);
util.inherits(Unzip,Zlib);
}).call(this,require('_process'));
},{"./binding":111,"_process":170,"assert":104,"buffer":114,"stream":195,"util":204}],113:[function(require,module,exports){
arguments[4][110][0].apply(exports,arguments);
},{"dup":110}],114:[function(require,module,exports){
(function(Buffer){








'use strict';

var base64=require('base64-js');
var ieee754=require('ieee754');

exports.Buffer=Buffer;
exports.SlowBuffer=SlowBuffer;
exports.INSPECT_MAX_BYTES=50;

var K_MAX_LENGTH=0x7fffffff;
exports.kMaxLength=K_MAX_LENGTH;















Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();

if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!=='undefined'&&
typeof console.error==='function'){
console.error(
'This browser lacks typed array (Uint8Array) support which is required by '+
'`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');

}

function typedArraySupport(){

try{
var arr=new Uint8Array(1);
arr.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42;}};
return arr.foo()===42;
}catch(e){
return false;
}
}

Object.defineProperty(Buffer.prototype,'parent',{
enumerable:true,
get:function(){
if(!Buffer.isBuffer(this))return undefined;
return this.buffer;
}});


Object.defineProperty(Buffer.prototype,'offset',{
enumerable:true,
get:function(){
if(!Buffer.isBuffer(this))return undefined;
return this.byteOffset;
}});


function createBuffer(length){
if(length>K_MAX_LENGTH){
throw new RangeError('The value "'+length+'" is invalid for option "size"');
}

var buf=new Uint8Array(length);
buf.__proto__=Buffer.prototype;
return buf;
}











function Buffer(arg,encodingOrOffset,length){

if(typeof arg==='number'){
if(typeof encodingOrOffset==='string'){
throw new TypeError(
'The "string" argument must be of type string. Received type number');

}
return allocUnsafe(arg);
}
return from(arg,encodingOrOffset,length);
}


if(typeof Symbol!=='undefined'&&Symbol.species!=null&&
Buffer[Symbol.species]===Buffer){
Object.defineProperty(Buffer,Symbol.species,{
value:null,
configurable:true,
enumerable:false,
writable:false});

}

Buffer.poolSize=8192;

function from(value,encodingOrOffset,length){
if(typeof value==='string'){
return fromString(value,encodingOrOffset);
}

if(ArrayBuffer.isView(value)){
return fromArrayLike(value);
}

if(value==null){
throw TypeError(
'The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+
'or Array-like Object. Received type '+typeof value);

}

if(isInstance(value,ArrayBuffer)||
value&&isInstance(value.buffer,ArrayBuffer)){
return fromArrayBuffer(value,encodingOrOffset,length);
}

if(typeof value==='number'){
throw new TypeError(
'The "value" argument must not be of type number. Received type number');

}

var valueOf=value.valueOf&&value.valueOf();
if(valueOf!=null&&valueOf!==value){
return Buffer.from(valueOf,encodingOrOffset,length);
}

var b=fromObject(value);
if(b)return b;

if(typeof Symbol!=='undefined'&&Symbol.toPrimitive!=null&&
typeof value[Symbol.toPrimitive]==='function'){
return Buffer.from(
value[Symbol.toPrimitive]('string'),encodingOrOffset,length);

}

throw new TypeError(
'The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+
'or Array-like Object. Received type '+typeof value);

}









Buffer.from=function(value,encodingOrOffset,length){
return from(value,encodingOrOffset,length);
};



Buffer.prototype.__proto__=Uint8Array.prototype;
Buffer.__proto__=Uint8Array;

function assertSize(size){
if(typeof size!=='number'){
throw new TypeError('"size" argument must be of type number');
}else if(size<0){
throw new RangeError('The value "'+size+'" is invalid for option "size"');
}
}

function alloc(size,fill,encoding){
assertSize(size);
if(size<=0){
return createBuffer(size);
}
if(fill!==undefined){



return typeof encoding==='string'?
createBuffer(size).fill(fill,encoding):
createBuffer(size).fill(fill);
}
return createBuffer(size);
}





Buffer.alloc=function(size,fill,encoding){
return alloc(size,fill,encoding);
};

function allocUnsafe(size){
assertSize(size);
return createBuffer(size<0?0:checked(size)|0);
}




Buffer.allocUnsafe=function(size){
return allocUnsafe(size);
};



Buffer.allocUnsafeSlow=function(size){
return allocUnsafe(size);
};

function fromString(string,encoding){
if(typeof encoding!=='string'||encoding===''){
encoding='utf8';
}

if(!Buffer.isEncoding(encoding)){
throw new TypeError('Unknown encoding: '+encoding);
}

var length=byteLength(string,encoding)|0;
var buf=createBuffer(length);

var actual=buf.write(string,encoding);

if(actual!==length){



buf=buf.slice(0,actual);
}

return buf;
}

function fromArrayLike(array){
var length=array.length<0?0:checked(array.length)|0;
var buf=createBuffer(length);
for(var i=0;i<length;i+=1){
buf[i]=array[i]&255;
}
return buf;
}

function fromArrayBuffer(array,byteOffset,length){
if(byteOffset<0||array.byteLength<byteOffset){
throw new RangeError('"offset" is outside of buffer bounds');
}

if(array.byteLength<byteOffset+(length||0)){
throw new RangeError('"length" is outside of buffer bounds');
}

var buf;
if(byteOffset===undefined&&length===undefined){
buf=new Uint8Array(array);
}else if(length===undefined){
buf=new Uint8Array(array,byteOffset);
}else{
buf=new Uint8Array(array,byteOffset,length);
}


buf.__proto__=Buffer.prototype;
return buf;
}

function fromObject(obj){
if(Buffer.isBuffer(obj)){
var len=checked(obj.length)|0;
var buf=createBuffer(len);

if(buf.length===0){
return buf;
}

obj.copy(buf,0,0,len);
return buf;
}

if(obj.length!==undefined){
if(typeof obj.length!=='number'||numberIsNaN(obj.length)){
return createBuffer(0);
}
return fromArrayLike(obj);
}

if(obj.type==='Buffer'&&Array.isArray(obj.data)){
return fromArrayLike(obj.data);
}
}

function checked(length){


if(length>=K_MAX_LENGTH){
throw new RangeError('Attempt to allocate Buffer larger than maximum '+
'size: 0x'+K_MAX_LENGTH.toString(16)+' bytes');
}
return length|0;
}

function SlowBuffer(length){
if(+length!=length){
length=0;
}
return Buffer.alloc(+length);
}

Buffer.isBuffer=function isBuffer(b){
return b!=null&&b._isBuffer===true&&
b!==Buffer.prototype;
};

Buffer.compare=function compare(a,b){
if(isInstance(a,Uint8Array))a=Buffer.from(a,a.offset,a.byteLength);
if(isInstance(b,Uint8Array))b=Buffer.from(b,b.offset,b.byteLength);
if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){
throw new TypeError(
'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');

}

if(a===b)return 0;

var x=a.length;
var y=b.length;

for(var i=0,len=Math.min(x,y);i<len;++i){
if(a[i]!==b[i]){
x=a[i];
y=b[i];
break;
}
}

if(x<y)return-1;
if(y<x)return 1;
return 0;
};

Buffer.isEncoding=function isEncoding(encoding){
switch(String(encoding).toLowerCase()){
case'hex':
case'utf8':
case'utf-8':
case'ascii':
case'latin1':
case'binary':
case'base64':
case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return true;
default:
return false;}

};

Buffer.concat=function concat(list,length){
if(!Array.isArray(list)){
throw new TypeError('"list" argument must be an Array of Buffers');
}

if(list.length===0){
return Buffer.alloc(0);
}

var i;
if(length===undefined){
length=0;
for(i=0;i<list.length;++i){
length+=list[i].length;
}
}

var buffer=Buffer.allocUnsafe(length);
var pos=0;
for(i=0;i<list.length;++i){
var buf=list[i];
if(isInstance(buf,Uint8Array)){
buf=Buffer.from(buf);
}
if(!Buffer.isBuffer(buf)){
throw new TypeError('"list" argument must be an Array of Buffers');
}
buf.copy(buffer,pos);
pos+=buf.length;
}
return buffer;
};

function byteLength(string,encoding){
if(Buffer.isBuffer(string)){
return string.length;
}
if(ArrayBuffer.isView(string)||isInstance(string,ArrayBuffer)){
return string.byteLength;
}
if(typeof string!=='string'){
throw new TypeError(
'The "string" argument must be one of type string, Buffer, or ArrayBuffer. '+
'Received type '+typeof string);

}

var len=string.length;
var mustMatch=arguments.length>2&&arguments[2]===true;
if(!mustMatch&&len===0)return 0;


var loweredCase=false;
for(;;){
switch(encoding){
case'ascii':
case'latin1':
case'binary':
return len;
case'utf8':
case'utf-8':
return utf8ToBytes(string).length;
case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return len*2;
case'hex':
return len>>>1;
case'base64':
return base64ToBytes(string).length;
default:
if(loweredCase){
return mustMatch?-1:utf8ToBytes(string).length;
}
encoding=(''+encoding).toLowerCase();
loweredCase=true;}

}
}
Buffer.byteLength=byteLength;

function slowToString(encoding,start,end){
var loweredCase=false;








if(start===undefined||start<0){
start=0;
}


if(start>this.length){
return'';
}

if(end===undefined||end>this.length){
end=this.length;
}

if(end<=0){
return'';
}


end>>>=0;
start>>>=0;

if(end<=start){
return'';
}

if(!encoding)encoding='utf8';

while(true){
switch(encoding){
case'hex':
return hexSlice(this,start,end);

case'utf8':
case'utf-8':
return utf8Slice(this,start,end);

case'ascii':
return asciiSlice(this,start,end);

case'latin1':
case'binary':
return latin1Slice(this,start,end);

case'base64':
return base64Slice(this,start,end);

case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return utf16leSlice(this,start,end);

default:
if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);
encoding=(encoding+'').toLowerCase();
loweredCase=true;}

}
}







Buffer.prototype._isBuffer=true;

function swap(b,n,m){
var i=b[n];
b[n]=b[m];
b[m]=i;
}

Buffer.prototype.swap16=function swap16(){
var len=this.length;
if(len%2!==0){
throw new RangeError('Buffer size must be a multiple of 16-bits');
}
for(var i=0;i<len;i+=2){
swap(this,i,i+1);
}
return this;
};

Buffer.prototype.swap32=function swap32(){
var len=this.length;
if(len%4!==0){
throw new RangeError('Buffer size must be a multiple of 32-bits');
}
for(var i=0;i<len;i+=4){
swap(this,i,i+3);
swap(this,i+1,i+2);
}
return this;
};

Buffer.prototype.swap64=function swap64(){
var len=this.length;
if(len%8!==0){
throw new RangeError('Buffer size must be a multiple of 64-bits');
}
for(var i=0;i<len;i+=8){
swap(this,i,i+7);
swap(this,i+1,i+6);
swap(this,i+2,i+5);
swap(this,i+3,i+4);
}
return this;
};

Buffer.prototype.toString=function toString(){
var length=this.length;
if(length===0)return'';
if(arguments.length===0)return utf8Slice(this,0,length);
return slowToString.apply(this,arguments);
};

Buffer.prototype.toLocaleString=Buffer.prototype.toString;

Buffer.prototype.equals=function equals(b){
if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');
if(this===b)return true;
return Buffer.compare(this,b)===0;
};

Buffer.prototype.inspect=function inspect(){
var str='';
var max=exports.INSPECT_MAX_BYTES;
str=this.toString('hex',0,max).replace(/(.{2})/g,'$1 ').trim();
if(this.length>max)str+=' ... ';
return'<Buffer '+str+'>';
};

Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){
if(isInstance(target,Uint8Array)){
target=Buffer.from(target,target.offset,target.byteLength);
}
if(!Buffer.isBuffer(target)){
throw new TypeError(
'The "target" argument must be one of type Buffer or Uint8Array. '+
'Received type '+typeof target);

}

if(start===undefined){
start=0;
}
if(end===undefined){
end=target?target.length:0;
}
if(thisStart===undefined){
thisStart=0;
}
if(thisEnd===undefined){
thisEnd=this.length;
}

if(start<0||end>target.length||thisStart<0||thisEnd>this.length){
throw new RangeError('out of range index');
}

if(thisStart>=thisEnd&&start>=end){
return 0;
}
if(thisStart>=thisEnd){
return-1;
}
if(start>=end){
return 1;
}

start>>>=0;
end>>>=0;
thisStart>>>=0;
thisEnd>>>=0;

if(this===target)return 0;

var x=thisEnd-thisStart;
var y=end-start;
var len=Math.min(x,y);

var thisCopy=this.slice(thisStart,thisEnd);
var targetCopy=target.slice(start,end);

for(var i=0;i<len;++i){
if(thisCopy[i]!==targetCopy[i]){
x=thisCopy[i];
y=targetCopy[i];
break;
}
}

if(x<y)return-1;
if(y<x)return 1;
return 0;
};










function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){

if(buffer.length===0)return-1;


if(typeof byteOffset==='string'){
encoding=byteOffset;
byteOffset=0;
}else if(byteOffset>0x7fffffff){
byteOffset=0x7fffffff;
}else if(byteOffset<-0x80000000){
byteOffset=-0x80000000;
}
byteOffset=+byteOffset;
if(numberIsNaN(byteOffset)){

byteOffset=dir?0:buffer.length-1;
}


if(byteOffset<0)byteOffset=buffer.length+byteOffset;
if(byteOffset>=buffer.length){
if(dir)return-1;else
byteOffset=buffer.length-1;
}else if(byteOffset<0){
if(dir)byteOffset=0;else
return-1;
}


if(typeof val==='string'){
val=Buffer.from(val,encoding);
}


if(Buffer.isBuffer(val)){

if(val.length===0){
return-1;
}
return arrayIndexOf(buffer,val,byteOffset,encoding,dir);
}else if(typeof val==='number'){
val=val&0xFF;
if(typeof Uint8Array.prototype.indexOf==='function'){
if(dir){
return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);
}else{
return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);
}
}
return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);
}

throw new TypeError('val must be string, number or Buffer');
}

function arrayIndexOf(arr,val,byteOffset,encoding,dir){
var indexSize=1;
var arrLength=arr.length;
var valLength=val.length;

if(encoding!==undefined){
encoding=String(encoding).toLowerCase();
if(encoding==='ucs2'||encoding==='ucs-2'||
encoding==='utf16le'||encoding==='utf-16le'){
if(arr.length<2||val.length<2){
return-1;
}
indexSize=2;
arrLength/=2;
valLength/=2;
byteOffset/=2;
}
}

function read(buf,i){
if(indexSize===1){
return buf[i];
}else{
return buf.readUInt16BE(i*indexSize);
}
}

var i;
if(dir){
var foundIndex=-1;
for(i=byteOffset;i<arrLength;i++){
if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){
if(foundIndex===-1)foundIndex=i;
if(i-foundIndex+1===valLength)return foundIndex*indexSize;
}else{
if(foundIndex!==-1)i-=i-foundIndex;
foundIndex=-1;
}
}
}else{
if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;
for(i=byteOffset;i>=0;i--){
var found=true;
for(var j=0;j<valLength;j++){
if(read(arr,i+j)!==read(val,j)){
found=false;
break;
}
}
if(found)return i;
}
}

return-1;
}

Buffer.prototype.includes=function includes(val,byteOffset,encoding){
return this.indexOf(val,byteOffset,encoding)!==-1;
};

Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){
return bidirectionalIndexOf(this,val,byteOffset,encoding,true);
};

Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){
return bidirectionalIndexOf(this,val,byteOffset,encoding,false);
};

function hexWrite(buf,string,offset,length){
offset=Number(offset)||0;
var remaining=buf.length-offset;
if(!length){
length=remaining;
}else{
length=Number(length);
if(length>remaining){
length=remaining;
}
}

var strLen=string.length;

if(length>strLen/2){
length=strLen/2;
}
for(var i=0;i<length;++i){
var parsed=parseInt(string.substr(i*2,2),16);
if(numberIsNaN(parsed))return i;
buf[offset+i]=parsed;
}
return i;
}

function utf8Write(buf,string,offset,length){
return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);
}

function asciiWrite(buf,string,offset,length){
return blitBuffer(asciiToBytes(string),buf,offset,length);
}

function latin1Write(buf,string,offset,length){
return asciiWrite(buf,string,offset,length);
}

function base64Write(buf,string,offset,length){
return blitBuffer(base64ToBytes(string),buf,offset,length);
}

function ucs2Write(buf,string,offset,length){
return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);
}

Buffer.prototype.write=function write(string,offset,length,encoding){

if(offset===undefined){
encoding='utf8';
length=this.length;
offset=0;

}else if(length===undefined&&typeof offset==='string'){
encoding=offset;
length=this.length;
offset=0;

}else if(isFinite(offset)){
offset=offset>>>0;
if(isFinite(length)){
length=length>>>0;
if(encoding===undefined)encoding='utf8';
}else{
encoding=length;
length=undefined;
}
}else{
throw new Error(
'Buffer.write(string, encoding, offset[, length]) is no longer supported');

}

var remaining=this.length-offset;
if(length===undefined||length>remaining)length=remaining;

if(string.length>0&&(length<0||offset<0)||offset>this.length){
throw new RangeError('Attempt to write outside buffer bounds');
}

if(!encoding)encoding='utf8';

var loweredCase=false;
for(;;){
switch(encoding){
case'hex':
return hexWrite(this,string,offset,length);

case'utf8':
case'utf-8':
return utf8Write(this,string,offset,length);

case'ascii':
return asciiWrite(this,string,offset,length);

case'latin1':
case'binary':
return latin1Write(this,string,offset,length);

case'base64':

return base64Write(this,string,offset,length);

case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return ucs2Write(this,string,offset,length);

default:
if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);
encoding=(''+encoding).toLowerCase();
loweredCase=true;}

}
};

Buffer.prototype.toJSON=function toJSON(){
return{
type:'Buffer',
data:Array.prototype.slice.call(this._arr||this,0)};

};

function base64Slice(buf,start,end){
if(start===0&&end===buf.length){
return base64.fromByteArray(buf);
}else{
return base64.fromByteArray(buf.slice(start,end));
}
}

function utf8Slice(buf,start,end){
end=Math.min(buf.length,end);
var res=[];

var i=start;
while(i<end){
var firstByte=buf[i];
var codePoint=null;
var bytesPerSequence=firstByte>0xEF?4:
firstByte>0xDF?3:
firstByte>0xBF?2:
1;

if(i+bytesPerSequence<=end){
var secondByte,thirdByte,fourthByte,tempCodePoint;

switch(bytesPerSequence){
case 1:
if(firstByte<0x80){
codePoint=firstByte;
}
break;
case 2:
secondByte=buf[i+1];
if((secondByte&0xC0)===0x80){
tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;
if(tempCodePoint>0x7F){
codePoint=tempCodePoint;
}
}
break;
case 3:
secondByte=buf[i+1];
thirdByte=buf[i+2];
if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){
tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;
if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){
codePoint=tempCodePoint;
}
}
break;
case 4:
secondByte=buf[i+1];
thirdByte=buf[i+2];
fourthByte=buf[i+3];
if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){
tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;
if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){
codePoint=tempCodePoint;
}
}}

}

if(codePoint===null){


codePoint=0xFFFD;
bytesPerSequence=1;
}else if(codePoint>0xFFFF){

codePoint-=0x10000;
res.push(codePoint>>>10&0x3FF|0xD800);
codePoint=0xDC00|codePoint&0x3FF;
}

res.push(codePoint);
i+=bytesPerSequence;
}

return decodeCodePointsArray(res);
}




var MAX_ARGUMENTS_LENGTH=0x1000;

function decodeCodePointsArray(codePoints){
var len=codePoints.length;
if(len<=MAX_ARGUMENTS_LENGTH){
return String.fromCharCode.apply(String,codePoints);
}


var res='';
var i=0;
while(i<len){
res+=String.fromCharCode.apply(
String,
codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));

}
return res;
}

function asciiSlice(buf,start,end){
var ret='';
end=Math.min(buf.length,end);

for(var i=start;i<end;++i){
ret+=String.fromCharCode(buf[i]&0x7F);
}
return ret;
}

function latin1Slice(buf,start,end){
var ret='';
end=Math.min(buf.length,end);

for(var i=start;i<end;++i){
ret+=String.fromCharCode(buf[i]);
}
return ret;
}

function hexSlice(buf,start,end){
var len=buf.length;

if(!start||start<0)start=0;
if(!end||end<0||end>len)end=len;

var out='';
for(var i=start;i<end;++i){
out+=toHex(buf[i]);
}
return out;
}

function utf16leSlice(buf,start,end){
var bytes=buf.slice(start,end);
var res='';
for(var i=0;i<bytes.length;i+=2){
res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);
}
return res;
}

Buffer.prototype.slice=function slice(start,end){
var len=this.length;
start=~~start;
end=end===undefined?len:~~end;

if(start<0){
start+=len;
if(start<0)start=0;
}else if(start>len){
start=len;
}

if(end<0){
end+=len;
if(end<0)end=0;
}else if(end>len){
end=len;
}

if(end<start)end=start;

var newBuf=this.subarray(start,end);

newBuf.__proto__=Buffer.prototype;
return newBuf;
};




function checkOffset(offset,ext,length){
if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');
if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');
}

Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i<byteLength&&(mul*=0x100)){
val+=this[offset+i]*mul;
}

return val;
};

Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert){
checkOffset(offset,byteLength,this.length);
}

var val=this[offset+--byteLength];
var mul=1;
while(byteLength>0&&(mul*=0x100)){
val+=this[offset+--byteLength]*mul;
}

return val;
};

Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,1,this.length);
return this[offset];
};

Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,2,this.length);
return this[offset]|this[offset+1]<<8;
};

Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,2,this.length);
return this[offset]<<8|this[offset+1];
};

Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);

return(this[offset]|
this[offset+1]<<8|
this[offset+2]<<16)+
this[offset+3]*0x1000000;
};

Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]*0x1000000+(
this[offset+1]<<16|
this[offset+2]<<8|
this[offset+3]);
};

Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i<byteLength&&(mul*=0x100)){
val+=this[offset+i]*mul;
}
mul*=0x80;

if(val>=mul)val-=Math.pow(2,8*byteLength);

return val;
};

Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var i=byteLength;
var mul=1;
var val=this[offset+--i];
while(i>0&&(mul*=0x100)){
val+=this[offset+--i]*mul;
}
mul*=0x80;

if(val>=mul)val-=Math.pow(2,8*byteLength);

return val;
};

Buffer.prototype.readInt8=function readInt8(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,1,this.length);
if(!(this[offset]&0x80))return this[offset];
return(0xff-this[offset]+1)*-1;
};

Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,2,this.length);
var val=this[offset]|this[offset+1]<<8;
return val&0x8000?val|0xFFFF0000:val;
};

Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,2,this.length);
var val=this[offset+1]|this[offset]<<8;
return val&0x8000?val|0xFFFF0000:val;
};

Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]|
this[offset+1]<<8|
this[offset+2]<<16|
this[offset+3]<<24;
};

Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]<<24|
this[offset+1]<<16|
this[offset+2]<<8|
this[offset+3];
};

Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);
return ieee754.read(this,offset,true,23,4);
};

Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);
return ieee754.read(this,offset,false,23,4);
};

Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,8,this.length);
return ieee754.read(this,offset,true,52,8);
};

Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,8,this.length);
return ieee754.read(this,offset,false,52,8);
};

function checkInt(buf,value,offset,ext,max,min){
if(!Buffer.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');
if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');
if(offset+ext>buf.length)throw new RangeError('Index out of range');
}

Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){
value=+value;
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert){
var maxBytes=Math.pow(2,8*byteLength)-1;
checkInt(this,value,offset,byteLength,maxBytes,0);
}

var mul=1;
var i=0;
this[offset]=value&0xFF;
while(++i<byteLength&&(mul*=0x100)){
this[offset+i]=value/mul&0xFF;
}

return offset+byteLength;
};

Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){
value=+value;
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert){
var maxBytes=Math.pow(2,8*byteLength)-1;
checkInt(this,value,offset,byteLength,maxBytes,0);
}

var i=byteLength-1;
var mul=1;
this[offset+i]=value&0xFF;
while(--i>=0&&(mul*=0x100)){
this[offset+i]=value/mul&0xFF;
}

return offset+byteLength;
};

Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,1,0xff,0);
this[offset]=value&0xff;
return offset+1;
};

Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,2,0xffff,0);
this[offset]=value&0xff;
this[offset+1]=value>>>8;
return offset+2;
};

Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,2,0xffff,0);
this[offset]=value>>>8;
this[offset+1]=value&0xff;
return offset+2;
};

Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);
this[offset+3]=value>>>24;
this[offset+2]=value>>>16;
this[offset+1]=value>>>8;
this[offset]=value&0xff;
return offset+4;
};

Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);
this[offset]=value>>>24;
this[offset+1]=value>>>16;
this[offset+2]=value>>>8;
this[offset+3]=value&0xff;
return offset+4;
};

Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert){
var limit=Math.pow(2,8*byteLength-1);

checkInt(this,value,offset,byteLength,limit-1,-limit);
}

var i=0;
var mul=1;
var sub=0;
this[offset]=value&0xFF;
while(++i<byteLength&&(mul*=0x100)){
if(value<0&&sub===0&&this[offset+i-1]!==0){
sub=1;
}
this[offset+i]=(value/mul>>0)-sub&0xFF;
}

return offset+byteLength;
};

Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert){
var limit=Math.pow(2,8*byteLength-1);

checkInt(this,value,offset,byteLength,limit-1,-limit);
}

var i=byteLength-1;
var mul=1;
var sub=0;
this[offset+i]=value&0xFF;
while(--i>=0&&(mul*=0x100)){
if(value<0&&sub===0&&this[offset+i+1]!==0){
sub=1;
}
this[offset+i]=(value/mul>>0)-sub&0xFF;
}

return offset+byteLength;
};

Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);
if(value<0)value=0xff+value+1;
this[offset]=value&0xff;
return offset+1;
};

Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);
this[offset]=value&0xff;
this[offset+1]=value>>>8;
return offset+2;
};

Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);
this[offset]=value>>>8;
this[offset+1]=value&0xff;
return offset+2;
};

Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);
this[offset]=value&0xff;
this[offset+1]=value>>>8;
this[offset+2]=value>>>16;
this[offset+3]=value>>>24;
return offset+4;
};

Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);
if(value<0)value=0xffffffff+value+1;
this[offset]=value>>>24;
this[offset+1]=value>>>16;
this[offset+2]=value>>>8;
this[offset+3]=value&0xff;
return offset+4;
};

function checkIEEE754(buf,value,offset,ext,max,min){
if(offset+ext>buf.length)throw new RangeError('Index out of range');
if(offset<0)throw new RangeError('Index out of range');
}

function writeFloat(buf,value,offset,littleEndian,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert){
checkIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);
}
ieee754.write(buf,value,offset,littleEndian,23,4);
return offset+4;
}

Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){
return writeFloat(this,value,offset,true,noAssert);
};

Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){
return writeFloat(this,value,offset,false,noAssert);
};

function writeDouble(buf,value,offset,littleEndian,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert){
checkIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);
}
ieee754.write(buf,value,offset,littleEndian,52,8);
return offset+8;
}

Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){
return writeDouble(this,value,offset,true,noAssert);
};

Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){
return writeDouble(this,value,offset,false,noAssert);
};


Buffer.prototype.copy=function copy(target,targetStart,start,end){
if(!Buffer.isBuffer(target))throw new TypeError('argument should be a Buffer');
if(!start)start=0;
if(!end&&end!==0)end=this.length;
if(targetStart>=target.length)targetStart=target.length;
if(!targetStart)targetStart=0;
if(end>0&&end<start)end=start;


if(end===start)return 0;
if(target.length===0||this.length===0)return 0;


if(targetStart<0){
throw new RangeError('targetStart out of bounds');
}
if(start<0||start>=this.length)throw new RangeError('Index out of range');
if(end<0)throw new RangeError('sourceEnd out of bounds');


if(end>this.length)end=this.length;
if(target.length-targetStart<end-start){
end=target.length-targetStart+start;
}

var len=end-start;

if(this===target&&typeof Uint8Array.prototype.copyWithin==='function'){

this.copyWithin(targetStart,start,end);
}else if(this===target&&start<targetStart&&targetStart<end){

for(var i=len-1;i>=0;--i){
target[i+targetStart]=this[i+start];
}
}else{
Uint8Array.prototype.set.call(
target,
this.subarray(start,end),
targetStart);

}

return len;
};





Buffer.prototype.fill=function fill(val,start,end,encoding){

if(typeof val==='string'){
if(typeof start==='string'){
encoding=start;
start=0;
end=this.length;
}else if(typeof end==='string'){
encoding=end;
end=this.length;
}
if(encoding!==undefined&&typeof encoding!=='string'){
throw new TypeError('encoding must be a string');
}
if(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){
throw new TypeError('Unknown encoding: '+encoding);
}
if(val.length===1){
var code=val.charCodeAt(0);
if(encoding==='utf8'&&code<128||
encoding==='latin1'){

val=code;
}
}
}else if(typeof val==='number'){
val=val&255;
}


if(start<0||this.length<start||this.length<end){
throw new RangeError('Out of range index');
}

if(end<=start){
return this;
}

start=start>>>0;
end=end===undefined?this.length:end>>>0;

if(!val)val=0;

var i;
if(typeof val==='number'){
for(i=start;i<end;++i){
this[i]=val;
}
}else{
var bytes=Buffer.isBuffer(val)?
val:
Buffer.from(val,encoding);
var len=bytes.length;
if(len===0){
throw new TypeError('The value "'+val+
'" is invalid for argument "value"');
}
for(i=0;i<end-start;++i){
this[i+start]=bytes[i%len];
}
}

return this;
};




var INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;

function base64clean(str){

str=str.split('=')[0];

str=str.trim().replace(INVALID_BASE64_RE,'');

if(str.length<2)return'';

while(str.length%4!==0){
str=str+'=';
}
return str;
}

function toHex(n){
if(n<16)return'0'+n.toString(16);
return n.toString(16);
}

function utf8ToBytes(string,units){
units=units||Infinity;
var codePoint;
var length=string.length;
var leadSurrogate=null;
var bytes=[];

for(var i=0;i<length;++i){
codePoint=string.charCodeAt(i);


if(codePoint>0xD7FF&&codePoint<0xE000){

if(!leadSurrogate){

if(codePoint>0xDBFF){

if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
continue;
}else if(i+1===length){

if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
continue;
}


leadSurrogate=codePoint;

continue;
}


if(codePoint<0xDC00){
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
leadSurrogate=codePoint;
continue;
}


codePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;
}else if(leadSurrogate){

if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
}

leadSurrogate=null;


if(codePoint<0x80){
if((units-=1)<0)break;
bytes.push(codePoint);
}else if(codePoint<0x800){
if((units-=2)<0)break;
bytes.push(
codePoint>>0x6|0xC0,
codePoint&0x3F|0x80);

}else if(codePoint<0x10000){
if((units-=3)<0)break;
bytes.push(
codePoint>>0xC|0xE0,
codePoint>>0x6&0x3F|0x80,
codePoint&0x3F|0x80);

}else if(codePoint<0x110000){
if((units-=4)<0)break;
bytes.push(
codePoint>>0x12|0xF0,
codePoint>>0xC&0x3F|0x80,
codePoint>>0x6&0x3F|0x80,
codePoint&0x3F|0x80);

}else{
throw new Error('Invalid code point');
}
}

return bytes;
}

function asciiToBytes(str){
var byteArray=[];
for(var i=0;i<str.length;++i){

byteArray.push(str.charCodeAt(i)&0xFF);
}
return byteArray;
}

function utf16leToBytes(str,units){
var c,hi,lo;
var byteArray=[];
for(var i=0;i<str.length;++i){
if((units-=2)<0)break;

c=str.charCodeAt(i);
hi=c>>8;
lo=c%256;
byteArray.push(lo);
byteArray.push(hi);
}

return byteArray;
}

function base64ToBytes(str){
return base64.toByteArray(base64clean(str));
}

function blitBuffer(src,dst,offset,length){
for(var i=0;i<length;++i){
if(i+offset>=dst.length||i>=src.length)break;
dst[i+offset]=src[i];
}
return i;
}




function isInstance(obj,type){
return obj instanceof type||
obj!=null&&obj.constructor!=null&&obj.constructor.name!=null&&
obj.constructor.name===type.name;
}
function numberIsNaN(obj){

return obj!==obj;
}

}).call(this,require("buffer").Buffer);
},{"base64-js":109,"buffer":114,"ieee754":121}],115:[function(require,module,exports){
(function(Buffer){
























function isArray(arg){
if(Array.isArray){
return Array.isArray(arg);
}
return objectToString(arg)==='[object Array]';
}
exports.isArray=isArray;

function isBoolean(arg){
return typeof arg==='boolean';
}
exports.isBoolean=isBoolean;

function isNull(arg){
return arg===null;
}
exports.isNull=isNull;

function isNullOrUndefined(arg){
return arg==null;
}
exports.isNullOrUndefined=isNullOrUndefined;

function isNumber(arg){
return typeof arg==='number';
}
exports.isNumber=isNumber;

function isString(arg){
return typeof arg==='string';
}
exports.isString=isString;

function isSymbol(arg){
return typeof arg==='symbol';
}
exports.isSymbol=isSymbol;

function isUndefined(arg){
return arg===void 0;
}
exports.isUndefined=isUndefined;

function isRegExp(re){
return objectToString(re)==='[object RegExp]';
}
exports.isRegExp=isRegExp;

function isObject(arg){
return typeof arg==='object'&&arg!==null;
}
exports.isObject=isObject;

function isDate(d){
return objectToString(d)==='[object Date]';
}
exports.isDate=isDate;

function isError(e){
return objectToString(e)==='[object Error]'||e instanceof Error;
}
exports.isError=isError;

function isFunction(arg){
return typeof arg==='function';
}
exports.isFunction=isFunction;

function isPrimitive(arg){
return arg===null||
typeof arg==='boolean'||
typeof arg==='number'||
typeof arg==='string'||
typeof arg==='symbol'||
typeof arg==='undefined';
}
exports.isPrimitive=isPrimitive;

exports.isBuffer=Buffer.isBuffer;

function objectToString(o){
return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")});
},{"../../is-buffer/index.js":130}],116:[function(require,module,exports){
module.exports=[
"aliceblue",
"antiquewhite",
"aqua",
"aquamarine",
"azure",
"beige",
"bisque",
"black",
"blanchedalmond",
"blue",
"blueviolet",
"brown",
"burlywood",
"cadetblue",
"chartreuse",
"chocolate",
"coral",
"cornflowerblue",
"cornsilk",
"crimson",
"cyan",
"darkblue",
"darkcyan",
"darkgoldenrod",
"darkgray",
"darkgreen",
"darkgrey",
"darkkhaki",
"darkmagenta",
"darkolivegreen",
"darkorange",
"darkorchid",
"darkred",
"darksalmon",
"darkseagreen",
"darkslateblue",
"darkslategray",
"darkslategrey",
"darkturquoise",
"darkviolet",
"deeppink",
"deepskyblue",
"dimgray",
"dimgrey",
"dodgerblue",
"firebrick",
"floralwhite",
"forestgreen",
"fuchsia",
"gainsboro",
"ghostwhite",
"gold",
"goldenrod",
"gray",
"green",
"greenyellow",
"grey",
"honeydew",
"hotpink",
"indianred",
"indigo",
"ivory",
"khaki",
"lavender",
"lavenderblush",
"lawngreen",
"lemonchiffon",
"lightblue",
"lightcoral",
"lightcyan",
"lightgoldenrodyellow",
"lightgray",
"lightgreen",
"lightgrey",
"lightpink",
"lightsalmon",
"lightseagreen",
"lightskyblue",
"lightslategray",
"lightslategrey",
"lightsteelblue",
"lightyellow",
"lime",
"limegreen",
"linen",
"magenta",
"maroon",
"mediumaquamarine",
"mediumblue",
"mediumorchid",
"mediumpurple",
"mediumseagreen",
"mediumslateblue",
"mediumspringgreen",
"mediumturquoise",
"mediumvioletred",
"midnightblue",
"mintcream",
"mistyrose",
"moccasin",
"navajowhite",
"navy",
"oldlace",
"olive",
"olivedrab",
"orange",
"orangered",
"orchid",
"palegoldenrod",
"palegreen",
"paleturquoise",
"palevioletred",
"papayawhip",
"peachpuff",
"peru",
"pink",
"plum",
"powderblue",
"purple",
"rebeccapurple",
"red",
"rosybrown",
"royalblue",
"saddlebrown",
"salmon",
"sandybrown",
"seagreen",
"seashell",
"sienna",
"silver",
"skyblue",
"slateblue",
"slategray",
"slategrey",
"snow",
"springgreen",
"steelblue",
"tan",
"teal",
"thistle",
"tomato",
"turquoise",
"violet",
"wheat",
"white",
"whitesmoke",
"yellow",
"yellowgreen"];


},{}],117:[function(require,module,exports){




'use strict';

const namedColors=require('./named_colors.json');

exports.TYPES={
INTEGER:1,
NUMBER:2,
LENGTH:3,
PERCENT:4,
URL:5,
COLOR:6,
STRING:7,
ANGLE:8,
KEYWORD:9,
NULL_OR_EMPTY_STR:10};



var integerRegEx=/^[-+]?[0-9]+$/;
var numberRegEx=/^[-+]?[0-9]*\.[0-9]+$/;
var lengthRegEx=/^(0|[-+]?[0-9]*\.?[0-9]+(in|cm|em|mm|pt|pc|px|ex|rem|vh|vw))$/;
var percentRegEx=/^[-+]?[0-9]*\.?[0-9]+%$/;
var urlRegEx=/^url\(\s*([^)]*)\s*\)$/;
var stringRegEx=/^("[^"]*"|'[^']*')$/;
var colorRegEx1=/^#[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])?$/;
var colorRegEx2=/^rgb\(([^)]*)\)$/;
var colorRegEx3=/^rgba\(([^)]*)\)$/;
var colorRegEx4=/^hsla?\(\s*(-?\d+|-?\d*.\d+)\s*,\s*(-?\d+|-?\d*.\d+)%\s*,\s*(-?\d+|-?\d*.\d+)%\s*(,\s*(-?\d+|-?\d*.\d+)\s*)?\)/;
var angleRegEx=/^([-+]?[0-9]*\.?[0-9]+)(deg|grad|rad)$/;


exports.valueType=function valueType(val){
if(val===''||val===null){
return exports.TYPES.NULL_OR_EMPTY_STR;
}
if(typeof val==='number'){
val=val.toString();
}

if(typeof val!=='string'){
return undefined;
}

if(integerRegEx.test(val)){
return exports.TYPES.INTEGER;
}
if(numberRegEx.test(val)){
return exports.TYPES.NUMBER;
}
if(lengthRegEx.test(val)){
return exports.TYPES.LENGTH;
}
if(percentRegEx.test(val)){
return exports.TYPES.PERCENT;
}
if(urlRegEx.test(val)){
return exports.TYPES.URL;
}
if(stringRegEx.test(val)){
return exports.TYPES.STRING;
}
if(angleRegEx.test(val)){
return exports.TYPES.ANGLE;
}
if(colorRegEx1.test(val)){
return exports.TYPES.COLOR;
}
var res=colorRegEx2.exec(val);
var parts;
if(res!==null){
parts=res[1].split(/\s*,\s*/);
if(parts.length!==3){
return undefined;
}
if(
parts.every(percentRegEx.test.bind(percentRegEx))||
parts.every(integerRegEx.test.bind(integerRegEx)))
{
return exports.TYPES.COLOR;
}
return undefined;
}
res=colorRegEx3.exec(val);
if(res!==null){
parts=res[1].split(/\s*,\s*/);
if(parts.length!==4){
return undefined;
}
if(
parts.slice(0,3).every(percentRegEx.test.bind(percentRegEx))||
parts.every(integerRegEx.test.bind(integerRegEx)))
{
if(numberRegEx.test(parts[3])){
return exports.TYPES.COLOR;
}
}
return undefined;
}

if(colorRegEx4.test(val)){
return exports.TYPES.COLOR;
}


val=val.toLowerCase();

if(namedColors.includes(val)){
return exports.TYPES.COLOR;
}

switch(val){

case'activeborder':
case'activecaption':
case'appworkspace':
case'background':
case'buttonface':
case'buttonhighlight':
case'buttonshadow':
case'buttontext':
case'captiontext':
case'graytext':
case'highlight':
case'highlighttext':
case'inactiveborder':
case'inactivecaption':
case'inactivecaptiontext':
case'infobackground':
case'infotext':
case'menu':
case'menutext':
case'scrollbar':
case'threeddarkshadow':
case'threedface':
case'threedhighlight':
case'threedlightshadow':
case'threedshadow':
case'window':
case'windowframe':
case'windowtext':
return exports.TYPES.COLOR;
default:
return exports.TYPES.KEYWORD;}

};

exports.parseInteger=function parseInteger(val){
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
if(type!==exports.TYPES.INTEGER){
return undefined;
}
return String(parseInt(val,10));
};

exports.parseNumber=function parseNumber(val){
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
if(type!==exports.TYPES.NUMBER&&type!==exports.TYPES.INTEGER){
return undefined;
}
return String(parseFloat(val));
};

exports.parseLength=function parseLength(val){
if(val===0||val==='0'){
return'0px';
}
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
if(type!==exports.TYPES.LENGTH){
return undefined;
}
return val;
};

exports.parsePercent=function parsePercent(val){
if(val===0||val==='0'){
return'0%';
}
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
if(type!==exports.TYPES.PERCENT){
return undefined;
}
return val;
};


exports.parseMeasurement=function parseMeasurement(val){
var length=exports.parseLength(val);
if(length!==undefined){
return length;
}
return exports.parsePercent(val);
};

exports.parseUrl=function parseUrl(val){
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
var res=urlRegEx.exec(val);

if(!res){
return undefined;
}
var str=res[1];

if((str[0]==='"'||str[0]==="'")&&str[0]!==str[str.length-1]){
return undefined;
}
if(str[0]==='"'||str[0]==="'"){
str=str.substr(1,str.length-2);
}

var i;
for(i=0;i<str.length;i++){
switch(str[i]){
case'(':
case')':
case' ':
case'\t':
case'\n':
case"'":
case'"':
return undefined;
case'\\':
i++;
break;}

}

return'url('+str+')';
};

exports.parseString=function parseString(val){
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
if(type!==exports.TYPES.STRING){
return undefined;
}
var i;
for(i=1;i<val.length-1;i++){
switch(val[i]){
case val[0]:
return undefined;
case'\\':
i++;
while(i<val.length-1&&/[0-9A-Fa-f]/.test(val[i])){
i++;
}
break;}

}
if(i>=val.length){
return undefined;
}
return val;
};

exports.parseColor=function parseColor(val){
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
var red,
green,
blue,
hue,
saturation,
lightness,
alpha=1;
var parts;
var res=colorRegEx1.exec(val);

if(res){
var hex=val.substr(1);
if(hex.length===3){
hex=hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];
}
red=parseInt(hex.substr(0,2),16);
green=parseInt(hex.substr(2,2),16);
blue=parseInt(hex.substr(4,2),16);
return'rgb('+red+', '+green+', '+blue+')';
}

res=colorRegEx2.exec(val);
if(res){
parts=res[1].split(/\s*,\s*/);
if(parts.length!==3){
return undefined;
}
if(parts.every(percentRegEx.test.bind(percentRegEx))){
red=Math.floor(parseFloat(parts[0].slice(0,-1))*255/100);
green=Math.floor(parseFloat(parts[1].slice(0,-1))*255/100);
blue=Math.floor(parseFloat(parts[2].slice(0,-1))*255/100);
}else if(parts.every(integerRegEx.test.bind(integerRegEx))){
red=parseInt(parts[0],10);
green=parseInt(parts[1],10);
blue=parseInt(parts[2],10);
}else{
return undefined;
}
red=Math.min(255,Math.max(0,red));
green=Math.min(255,Math.max(0,green));
blue=Math.min(255,Math.max(0,blue));
return'rgb('+red+', '+green+', '+blue+')';
}

res=colorRegEx3.exec(val);
if(res){
parts=res[1].split(/\s*,\s*/);
if(parts.length!==4){
return undefined;
}
if(parts.slice(0,3).every(percentRegEx.test.bind(percentRegEx))){
red=Math.floor(parseFloat(parts[0].slice(0,-1))*255/100);
green=Math.floor(parseFloat(parts[1].slice(0,-1))*255/100);
blue=Math.floor(parseFloat(parts[2].slice(0,-1))*255/100);
alpha=parseFloat(parts[3]);
}else if(parts.slice(0,3).every(integerRegEx.test.bind(integerRegEx))){
red=parseInt(parts[0],10);
green=parseInt(parts[1],10);
blue=parseInt(parts[2],10);
alpha=parseFloat(parts[3]);
}else{
return undefined;
}
if(isNaN(alpha)){
alpha=1;
}
red=Math.min(255,Math.max(0,red));
green=Math.min(255,Math.max(0,green));
blue=Math.min(255,Math.max(0,blue));
alpha=Math.min(1,Math.max(0,alpha));
if(alpha===1){
return'rgb('+red+', '+green+', '+blue+')';
}
return'rgba('+red+', '+green+', '+blue+', '+alpha+')';
}

res=colorRegEx4.exec(val);
if(res){
const[,_hue,_saturation,_lightness,_alphaString='']=res;
const _alpha=parseFloat(_alphaString.replace(',','').trim());
if(!_hue||!_saturation||!_lightness){
return undefined;
}
hue=parseFloat(_hue);
saturation=parseInt(_saturation,10);
lightness=parseInt(_lightness,10);
if(_alpha&&numberRegEx.test(_alpha)){
alpha=parseFloat(_alpha);
}
if(!_alphaString||alpha===1){
return'hsl('+hue+', '+saturation+'%, '+lightness+'%)';
}
return'hsla('+hue+', '+saturation+'%, '+lightness+'%, '+alpha+')';
}

if(type===exports.TYPES.COLOR){
return val;
}
return undefined;
};

exports.parseAngle=function parseAngle(val){
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
if(type!==exports.TYPES.ANGLE){
return undefined;
}
var res=angleRegEx.exec(val);
var flt=parseFloat(res[1]);
if(res[2]==='rad'){
flt*=180/Math.PI;
}else if(res[2]==='grad'){
flt*=360/400;
}

while(flt<0){
flt+=360;
}
while(flt>360){
flt-=360;
}
return flt+'deg';
};

exports.parseKeyword=function parseKeyword(val,valid_keywords){
var type=exports.valueType(val);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
return val;
}
if(type!==exports.TYPES.KEYWORD){
return undefined;
}
val=val.toString().toLowerCase();
var i;
for(i=0;i<valid_keywords.length;i++){
if(valid_keywords[i].toLowerCase()===val){
return valid_keywords[i];
}
}
return undefined;
};


var dashedToCamelCase=function(dashed){
var i;
var camel='';
var nextCap=false;
for(i=0;i<dashed.length;i++){
if(dashed[i]!=='-'){
camel+=nextCap?dashed[i].toUpperCase():dashed[i];
nextCap=false;
}else{
nextCap=true;
}
}
return camel;
};
exports.dashedToCamelCase=dashedToCamelCase;

var is_space=/\s/;
var opening_deliminators=['"',"'",'('];
var closing_deliminators=['"',"'",')'];

var getParts=function(str){
var deliminator_stack=[];
var length=str.length;
var i;
var parts=[];
var current_part='';
var opening_index;
var closing_index;
for(i=0;i<length;i++){
opening_index=opening_deliminators.indexOf(str[i]);
closing_index=closing_deliminators.indexOf(str[i]);
if(is_space.test(str[i])){
if(deliminator_stack.length===0){
if(current_part!==''){
parts.push(current_part);
}
current_part='';
}else{
current_part+=str[i];
}
}else{
if(str[i]==='\\'){
i++;
current_part+=str[i];
}else{
current_part+=str[i];
if(
closing_index!==-1&&
closing_index===deliminator_stack[deliminator_stack.length-1])
{
deliminator_stack.pop();
}else if(opening_index!==-1){
deliminator_stack.push(opening_index);
}
}
}
}
if(current_part!==''){
parts.push(current_part);
}
return parts;
};







exports.shorthandParser=function parse(v,shorthand_for){
var obj={};
var type=exports.valueType(v);
if(type===exports.TYPES.NULL_OR_EMPTY_STR){
Object.keys(shorthand_for).forEach(function(property){
obj[property]='';
});
return obj;
}

if(typeof v==='number'){
v=v.toString();
}

if(typeof v!=='string'){
return undefined;
}

if(v.toLowerCase()==='inherit'){
return{};
}
var parts=getParts(v);
var valid=true;
parts.forEach(function(part,i){
var part_valid=false;
Object.keys(shorthand_for).forEach(function(property){
if(shorthand_for[property].isValid(part,i)){
part_valid=true;
obj[property]=part;
}
});
valid=valid&&part_valid;
});
if(!valid){
return undefined;
}
return obj;
};

exports.shorthandSetter=function(property,shorthand_for){
return function(v){
var obj=exports.shorthandParser(v,shorthand_for);
if(obj===undefined){
return;
}

Object.keys(obj).forEach(function(subprop){


var camel=dashedToCamelCase(subprop);
this[camel]=obj[subprop];

obj[subprop]=this[camel];
this.removeProperty(subprop);

if(obj[subprop]!==''){
this._values[subprop]=obj[subprop];
}
},this);
Object.keys(shorthand_for).forEach(function(subprop){
if(!obj.hasOwnProperty(subprop)){
this.removeProperty(subprop);
delete this._values[subprop];
}
},this);




this.removeProperty(property);
var calculated=exports.shorthandGetter(property,shorthand_for).call(this);
if(calculated!==''){
this._setProperty(property,calculated);
}
};
};

exports.shorthandGetter=function(property,shorthand_for){
return function(){
if(this._values[property]!==undefined){
return this.getPropertyValue(property);
}
return Object.keys(shorthand_for).
map(function(subprop){
return this.getPropertyValue(subprop);
},this).
filter(function(value){
return value!=='';
}).
join(' ');
};
};






exports.implicitSetter=function(property_before,property_after,isValid,parser){
property_after=property_after||'';
if(property_after!==''){
property_after='-'+property_after;
}
var part_names=['top','right','bottom','left'];

return function(v){
if(typeof v==='number'){
v=v.toString();
}
if(typeof v!=='string'){
return undefined;
}
var parts;
if(v.toLowerCase()==='inherit'||v===''){
parts=[v];
}else{
parts=getParts(v);
}
if(parts.length<1||parts.length>4){
return undefined;
}

if(!parts.every(isValid)){
return undefined;
}

parts=parts.map(function(part){
return parser(part);
});
this._setProperty(property_before+property_after,parts.join(' '));
if(parts.length===1){
parts[1]=parts[0];
}
if(parts.length===2){
parts[2]=parts[0];
}
if(parts.length===3){
parts[3]=parts[1];
}

for(var i=0;i<4;i++){
var property=property_before+'-'+part_names[i]+property_after;
this.removeProperty(property);
if(parts[i]!==''){
this._values[property]=parts[i];
}
}
return v;
};
};







exports.subImplicitSetter=function(prefix,part,isValid,parser){
var property=prefix+'-'+part;
var subparts=[prefix+'-top',prefix+'-right',prefix+'-bottom',prefix+'-left'];

return function(v){
if(typeof v==='number'){
v=v.toString();
}
if(typeof v!=='string'){
return undefined;
}
if(!isValid(v)){
return undefined;
}
v=parser(v);
this._setProperty(property,v);
var parts=[];
for(var i=0;i<4;i++){
if(this._values[subparts[i]]==null||this._values[subparts[i]]===''){
break;
}
parts.push(this._values[subparts[i]]);
}
if(parts.length===4){
for(i=0;i<4;i++){
this.removeProperty(subparts[i]);
this._values[subparts[i]]=parts[i];
}
this._setProperty(prefix,parts.join(' '));
}
return v;
};
};

var camel_to_dashed=/[A-Z]/g;
var first_segment=/^\([^-]\)-/;
var vendor_prefixes=['o','moz','ms','webkit'];
exports.camelToDashed=function(camel_case){
var match;
var dashed=camel_case.replace(camel_to_dashed,'-$&').toLowerCase();
match=dashed.match(first_segment);
if(match&&vendor_prefixes.indexOf(match[1])!==-1){
dashed='-'+dashed;
}
return dashed;
};

},{"./named_colors.json":116}],118:[function(require,module,exports){





















var objectCreate=Object.create||objectCreatePolyfill;
var objectKeys=Object.keys||objectKeysPolyfill;
var bind=Function.prototype.bind||functionBindPolyfill;

function EventEmitter(){
if(!this._events||!Object.prototype.hasOwnProperty.call(this,'_events')){
this._events=objectCreate(null);
this._eventsCount=0;
}

this._maxListeners=this._maxListeners||undefined;
}
module.exports=EventEmitter;


EventEmitter.EventEmitter=EventEmitter;

EventEmitter.prototype._events=undefined;
EventEmitter.prototype._maxListeners=undefined;



var defaultMaxListeners=10;

var hasDefineProperty;
try{
var o={};
if(Object.defineProperty)Object.defineProperty(o,'x',{value:0});
hasDefineProperty=o.x===0;
}catch(err){hasDefineProperty=false;}
if(hasDefineProperty){
Object.defineProperty(EventEmitter,'defaultMaxListeners',{
enumerable:true,
get:function(){
return defaultMaxListeners;
},
set:function(arg){


if(typeof arg!=='number'||arg<0||arg!==arg)
throw new TypeError('"defaultMaxListeners" must be a positive number');
defaultMaxListeners=arg;
}});

}else{
EventEmitter.defaultMaxListeners=defaultMaxListeners;
}



EventEmitter.prototype.setMaxListeners=function setMaxListeners(n){
if(typeof n!=='number'||n<0||isNaN(n))
throw new TypeError('"n" argument must be a positive number');
this._maxListeners=n;
return this;
};

function $getMaxListeners(that){
if(that._maxListeners===undefined)
return EventEmitter.defaultMaxListeners;
return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners=function getMaxListeners(){
return $getMaxListeners(this);
};






function emitNone(handler,isFn,self){
if(isFn)
handler.call(self);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i)
listeners[i].call(self);
}
}
function emitOne(handler,isFn,self,arg1){
if(isFn)
handler.call(self,arg1);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i)
listeners[i].call(self,arg1);
}
}
function emitTwo(handler,isFn,self,arg1,arg2){
if(isFn)
handler.call(self,arg1,arg2);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i)
listeners[i].call(self,arg1,arg2);
}
}
function emitThree(handler,isFn,self,arg1,arg2,arg3){
if(isFn)
handler.call(self,arg1,arg2,arg3);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i)
listeners[i].call(self,arg1,arg2,arg3);
}
}

function emitMany(handler,isFn,self,args){
if(isFn)
handler.apply(self,args);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i)
listeners[i].apply(self,args);
}
}

EventEmitter.prototype.emit=function emit(type){
var er,handler,len,args,i,events;
var doError=type==='error';

events=this._events;
if(events)
doError=doError&&events.error==null;else
if(!doError)
return false;


if(doError){
if(arguments.length>1)
er=arguments[1];
if(er instanceof Error){
throw er;
}else{

var err=new Error('Unhandled "error" event. ('+er+')');
err.context=er;
throw err;
}
return false;
}

handler=events[type];

if(!handler)
return false;

var isFn=typeof handler==='function';
len=arguments.length;
switch(len){

case 1:
emitNone(handler,isFn,this);
break;
case 2:
emitOne(handler,isFn,this,arguments[1]);
break;
case 3:
emitTwo(handler,isFn,this,arguments[1],arguments[2]);
break;
case 4:
emitThree(handler,isFn,this,arguments[1],arguments[2],arguments[3]);
break;

default:
args=new Array(len-1);
for(i=1;i<len;i++)
args[i-1]=arguments[i];
emitMany(handler,isFn,this,args);}


return true;
};

function _addListener(target,type,listener,prepend){
var m;
var events;
var existing;

if(typeof listener!=='function')
throw new TypeError('"listener" argument must be a function');

events=target._events;
if(!events){
events=target._events=objectCreate(null);
target._eventsCount=0;
}else{


if(events.newListener){
target.emit('newListener',type,
listener.listener?listener.listener:listener);



events=target._events;
}
existing=events[type];
}

if(!existing){

existing=events[type]=listener;
++target._eventsCount;
}else{
if(typeof existing==='function'){

existing=events[type]=
prepend?[listener,existing]:[existing,listener];
}else{

if(prepend){
existing.unshift(listener);
}else{
existing.push(listener);
}
}


if(!existing.warned){
m=$getMaxListeners(target);
if(m&&m>0&&existing.length>m){
existing.warned=true;
var w=new Error('Possible EventEmitter memory leak detected. '+
existing.length+' "'+String(type)+'" listeners '+
'added. Use emitter.setMaxListeners() to '+
'increase limit.');
w.name='MaxListenersExceededWarning';
w.emitter=target;
w.type=type;
w.count=existing.length;
if(typeof console==='object'&&console.warn){
console.warn('%s: %s',w.name,w.message);
}
}
}
}

return target;
}

EventEmitter.prototype.addListener=function addListener(type,listener){
return _addListener(this,type,listener,false);
};

EventEmitter.prototype.on=EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener=
function prependListener(type,listener){
return _addListener(this,type,listener,true);
};

function onceWrapper(){
if(!this.fired){
this.target.removeListener(this.type,this.wrapFn);
this.fired=true;
switch(arguments.length){
case 0:
return this.listener.call(this.target);
case 1:
return this.listener.call(this.target,arguments[0]);
case 2:
return this.listener.call(this.target,arguments[0],arguments[1]);
case 3:
return this.listener.call(this.target,arguments[0],arguments[1],
arguments[2]);
default:
var args=new Array(arguments.length);
for(var i=0;i<args.length;++i)
args[i]=arguments[i];
this.listener.apply(this.target,args);}

}
}

function _onceWrap(target,type,listener){
var state={fired:false,wrapFn:undefined,target:target,type:type,listener:listener};
var wrapped=bind.call(onceWrapper,state);
wrapped.listener=listener;
state.wrapFn=wrapped;
return wrapped;
}

EventEmitter.prototype.once=function once(type,listener){
if(typeof listener!=='function')
throw new TypeError('"listener" argument must be a function');
this.on(type,_onceWrap(this,type,listener));
return this;
};

EventEmitter.prototype.prependOnceListener=
function prependOnceListener(type,listener){
if(typeof listener!=='function')
throw new TypeError('"listener" argument must be a function');
this.prependListener(type,_onceWrap(this,type,listener));
return this;
};


EventEmitter.prototype.removeListener=
function removeListener(type,listener){
var list,events,position,i,originalListener;

if(typeof listener!=='function')
throw new TypeError('"listener" argument must be a function');

events=this._events;
if(!events)
return this;

list=events[type];
if(!list)
return this;

if(list===listener||list.listener===listener){
if(--this._eventsCount===0)
this._events=objectCreate(null);else
{
delete events[type];
if(events.removeListener)
this.emit('removeListener',type,list.listener||listener);
}
}else if(typeof list!=='function'){
position=-1;

for(i=list.length-1;i>=0;i--){
if(list[i]===listener||list[i].listener===listener){
originalListener=list[i].listener;
position=i;
break;
}
}

if(position<0)
return this;

if(position===0)
list.shift();else

spliceOne(list,position);

if(list.length===1)
events[type]=list[0];

if(events.removeListener)
this.emit('removeListener',type,originalListener||listener);
}

return this;
};

EventEmitter.prototype.removeAllListeners=
function removeAllListeners(type){
var listeners,events,i;

events=this._events;
if(!events)
return this;


if(!events.removeListener){
if(arguments.length===0){
this._events=objectCreate(null);
this._eventsCount=0;
}else if(events[type]){
if(--this._eventsCount===0)
this._events=objectCreate(null);else

delete events[type];
}
return this;
}


if(arguments.length===0){
var keys=objectKeys(events);
var key;
for(i=0;i<keys.length;++i){
key=keys[i];
if(key==='removeListener')continue;
this.removeAllListeners(key);
}
this.removeAllListeners('removeListener');
this._events=objectCreate(null);
this._eventsCount=0;
return this;
}

listeners=events[type];

if(typeof listeners==='function'){
this.removeListener(type,listeners);
}else if(listeners){

for(i=listeners.length-1;i>=0;i--){
this.removeListener(type,listeners[i]);
}
}

return this;
};

function _listeners(target,type,unwrap){
var events=target._events;

if(!events)
return[];

var evlistener=events[type];
if(!evlistener)
return[];

if(typeof evlistener==='function')
return unwrap?[evlistener.listener||evlistener]:[evlistener];

return unwrap?unwrapListeners(evlistener):arrayClone(evlistener,evlistener.length);
}

EventEmitter.prototype.listeners=function listeners(type){
return _listeners(this,type,true);
};

EventEmitter.prototype.rawListeners=function rawListeners(type){
return _listeners(this,type,false);
};

EventEmitter.listenerCount=function(emitter,type){
if(typeof emitter.listenerCount==='function'){
return emitter.listenerCount(type);
}else{
return listenerCount.call(emitter,type);
}
};

EventEmitter.prototype.listenerCount=listenerCount;
function listenerCount(type){
var events=this._events;

if(events){
var evlistener=events[type];

if(typeof evlistener==='function'){
return 1;
}else if(evlistener){
return evlistener.length;
}
}

return 0;
}

EventEmitter.prototype.eventNames=function eventNames(){
return this._eventsCount>0?Reflect.ownKeys(this._events):[];
};


function spliceOne(list,index){
for(var i=index,k=i+1,n=list.length;k<n;i+=1,k+=1)
list[i]=list[k];
list.pop();
}

function arrayClone(arr,n){
var copy=new Array(n);
for(var i=0;i<n;++i)
copy[i]=arr[i];
return copy;
}

function unwrapListeners(arr){
var ret=new Array(arr.length);
for(var i=0;i<ret.length;++i){
ret[i]=arr[i].listener||arr[i];
}
return ret;
}

function objectCreatePolyfill(proto){
var F=function(){};
F.prototype=proto;
return new F();
}
function objectKeysPolyfill(obj){
var keys=[];
for(var k in obj)if(Object.prototype.hasOwnProperty.call(obj,k)){
keys.push(k);
}
return k;
}
function functionBindPolyfill(context){
var fn=this;
return function(){
return fn.apply(context,arguments);
};
}

},{}],119:[function(require,module,exports){
(function(Buffer){
var querystring=require('querystring');
var trim=require('./trim');






function Link(value){

if(!(this instanceof Link)){
return new Link(value);
}


this.refs=[];

}





Link.pattern=/(?:\<([^\>]+)\>)((\s*;\s*([a-z\*]+)=(("[^"]+")|('[^']+')|([^\,\;]+)))*)(\s*,\s*|$)/gi;





Link.attrPattern=/([a-z\*]+)=(?:(?:"([^"]+)")|(?:'([^']+)')|([^\,\;]+))/gi;







Link.isCompatibleEncoding=function(value){
return /^utf-?8|ascii|utf-?16-?le|ucs-?2|base-?64|latin-?1$/i.test(value);
};







Link.formatExtendedAttribute=function(attr,data){

var encoding=(data.encoding||'utf-8').toUpperCase();
var language=data.language||'en';

var encodedValue='';

if(Buffer.isBuffer(data.value)&&Link.isCompatibleEncoding(encoding)){
encodedValue=data.value.toString(encoding);
}else if(Buffer.isBuffer(data.value)){
encodedValue=data.value.toString('hex').
replace(/[0-9a-f]{2}/gi,'%$1');
}else{
encodedValue=querystring.escape(data.value);
}

return attr+'='+encoding+'\''+
language+'\''+encodedValue;

};







Link.formatAttribute=function(attr,value){


if(/\*$/.test(attr)||typeof value!=='string')
return Link.formatExtendedAttribute(attr,value);



var needsQuotes=/[^a-z]/i.test(value);

if(needsQuotes){

value=querystring.escape(value).
replace(/%20/g,' ').
replace(/%2C/g,',').
replace(/%3B/g,';');

value='"'+value+'"';
}

return attr+'='+value;

};







Link.parseExtendedValue=function(value){
var parts=/([^']+)?(?:'([^']+)')?(.+)/.exec(value);
return{
language:parts[2].toLowerCase(),
encoding:Link.isCompatibleEncoding(parts[1])?
null:parts[1].toLowerCase(),
value:Link.isCompatibleEncoding(parts[1])?
querystring.unescape(parts[3]):parts[3]};

};







Link.setAttr=function(link,attr,value){



if(attr==='rel'&&link[attr]!=null)
return link;

if(Array.isArray(link[attr])){
link[attr].push(value);
}else if(link[attr]!=null){
link[attr]=[link[attr],value];
}else{
link[attr]=value;
}

return link;

};




Link.parseParams=function(link,uri){

var kvs={};
var params=/(.+)\?(.+)/gi.exec(uri);

if(!params){
return link;
}

params=params[2].split('&');

for(var i=0;i<params.length;i++){
var param=params[i].split('=');
kvs[param[0]]=param[1];
}

Link.setAttr(link,'params',kvs);

return link;

};








Link.parseAttrs=function(link,parts){

var match=null;
var attr='';
var value='';
var attrs='';

var uriAttrs=/<(.*)>;\s*(.*)/gi.exec(parts);
if(uriAttrs){
attrs=uriAttrs[2];
link=Link.parseParams(link,uriAttrs[1]);
}

while(match=Link.attrPattern.exec(attrs)){
attr=match[1].toLowerCase();
value=match[4]||match[3]||match[2];
if(/\*$/.test(attr)){
Link.setAttr(link,attr,Link.parseExtendedValue(value));
}else if(/%/.test(value)){
Link.setAttr(link,attr,querystring.unescape(value));
}else{
Link.setAttr(link,attr,value);
}
}

return link;

};

Link.parse=function(value){
return new Link().parse(value);
};





Link.prototype={

constructor:Link,






rel:function(value){

var links=[];

for(var i=0;i<this.refs.length;i++){
if(this.refs[i].rel===value){
links.push(this.refs[i]);
}
}

return links;

},







get:function(attr,value){

attr=attr.toLowerCase();

var links=[];

for(var i=0;i<this.refs.length;i++){
if(this.refs[i][attr]===value){
links.push(this.refs[i]);
}
}

return links;

},

set:function(link){
this.refs.push(link);
return this;
},

has:function(attr,value){
return this.get(attr,value)!=null;
},

parse:function(value){


value=trim(value).
replace(/\r?\n[\x20\x09]+/g,'');

var match=null;

while(match=Link.pattern.exec(value)){
var link=Link.parseAttrs({uri:match[1]},match[0]);
this.refs.push(link);
}

return this;

},

toString:function(){

var refs=[];
var link='';
var ref=null;

for(var i=0;i<this.refs.length;i++){
ref=this.refs[i];
link=Object.keys(this.refs[i]).reduce(function(link,attr){
if(attr==='uri')return link;
return link+'; '+Link.formatAttribute(attr,ref[attr]);
},'<'+ref.uri+'>');
refs.push(link);
}

return refs.join(', ');

}};




module.exports=Link;

}).call(this,{"isBuffer":require("../../is-buffer/index.js")});
},{"../../is-buffer/index.js":130,"./trim":120,"querystring":173}],120:[function(require,module,exports){
module.exports=function trim(value){
return value.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,'');
};

},{}],121:[function(require,module,exports){
exports.read=function(buffer,offset,isLE,mLen,nBytes){
var e,m;
var eLen=nBytes*8-mLen-1;
var eMax=(1<<eLen)-1;
var eBias=eMax>>1;
var nBits=-7;
var i=isLE?nBytes-1:0;
var d=isLE?-1:1;
var s=buffer[offset+i];

i+=d;

e=s&(1<<-nBits)-1;
s>>=-nBits;
nBits+=eLen;
for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}

m=e&(1<<-nBits)-1;
e>>=-nBits;
nBits+=mLen;
for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}

if(e===0){
e=1-eBias;
}else if(e===eMax){
return m?NaN:(s?-1:1)*Infinity;
}else{
m=m+Math.pow(2,mLen);
e=e-eBias;
}
return(s?-1:1)*m*Math.pow(2,e-mLen);
};

exports.write=function(buffer,value,offset,isLE,mLen,nBytes){
var e,m,c;
var eLen=nBytes*8-mLen-1;
var eMax=(1<<eLen)-1;
var eBias=eMax>>1;
var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;
var i=isLE?0:nBytes-1;
var d=isLE?1:-1;
var s=value<0||value===0&&1/value<0?1:0;

value=Math.abs(value);

if(isNaN(value)||value===Infinity){
m=isNaN(value)?1:0;
e=eMax;
}else{
e=Math.floor(Math.log(value)/Math.LN2);
if(value*(c=Math.pow(2,-e))<1){
e--;
c*=2;
}
if(e+eBias>=1){
value+=rt/c;
}else{
value+=rt*Math.pow(2,1-eBias);
}
if(value*c>=2){
e++;
c/=2;
}

if(e+eBias>=eMax){
m=0;
e=eMax;
}else if(e+eBias>=1){
m=(value*c-1)*Math.pow(2,mLen);
e=e+eBias;
}else{
m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);
e=0;
}
}

for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}

e=e<<mLen|m;
eLen+=mLen;
for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}

buffer[offset+i-d]|=s*128;
};

},{}],122:[function(require,module,exports){













var ImageSSIM;
(function(ImageSSIM){
'use strict';



(function(Channels){
Channels[Channels["Grey"]=1]="Grey";
Channels[Channels["GreyAlpha"]=2]="GreyAlpha";
Channels[Channels["RGB"]=3]="RGB";
Channels[Channels["RGBAlpha"]=4]="RGBAlpha";
})(ImageSSIM.Channels||(ImageSSIM.Channels={}));
var Channels=ImageSSIM.Channels;




function compare(image1,image2,windowSize,K1,K2,luminance,bitsPerComponent){
if(windowSize===void 0){windowSize=8;}
if(K1===void 0){K1=0.01;}
if(K2===void 0){K2=0.03;}
if(luminance===void 0){luminance=true;}
if(bitsPerComponent===void 0){bitsPerComponent=8;}
if(image1.width!==image2.width||image1.height!==image2.height){
throw new Error('Images have different sizes!');
}

var L=(1<<bitsPerComponent)-1;

var c1=Math.pow(K1*L,2),c2=Math.pow(K2*L,2),numWindows=0,mssim=0.0;
var mcs=0.0;
function iteration(lumaValues1,lumaValues2,averageLumaValue1,averageLumaValue2){

var sigxy,sigsqx,sigsqy;
sigxy=sigsqx=sigsqy=0.0;
for(var i=0;i<lumaValues1.length;i++){
sigsqx+=Math.pow(lumaValues1[i]-averageLumaValue1,2);
sigsqy+=Math.pow(lumaValues2[i]-averageLumaValue2,2);
sigxy+=(lumaValues1[i]-averageLumaValue1)*(lumaValues2[i]-averageLumaValue2);
}
var numPixelsInWin=lumaValues1.length-1;
sigsqx/=numPixelsInWin;
sigsqy/=numPixelsInWin;
sigxy/=numPixelsInWin;

var numerator=(2*averageLumaValue1*averageLumaValue2+c1)*(2*sigxy+c2);
var denominator=(Math.pow(averageLumaValue1,2)+Math.pow(averageLumaValue2,2)+c1)*(sigsqx+sigsqy+c2);
mssim+=numerator/denominator;
mcs+=(2*sigxy+c2)/(sigsqx+sigsqy+c2);
numWindows++;
}

Internals._iterate(image1,image2,windowSize,luminance,iteration);
return{ssim:mssim/numWindows,mcs:mcs/numWindows};
}
ImageSSIM.compare=compare;



var Internals;
(function(Internals){
function _iterate(image1,image2,windowSize,luminance,callback){
var width=image1.width,height=image1.height;
for(var y=0;y<height;y+=windowSize){
for(var x=0;x<width;x+=windowSize){

var windowWidth=Math.min(windowSize,width-x),windowHeight=Math.min(windowSize,height-y);
var lumaValues1=_lumaValuesForWindow(image1,x,y,windowWidth,windowHeight,luminance),lumaValues2=_lumaValuesForWindow(image2,x,y,windowWidth,windowHeight,luminance),averageLuma1=_averageLuma(lumaValues1),averageLuma2=_averageLuma(lumaValues2);
callback(lumaValues1,lumaValues2,averageLuma1,averageLuma2);
}
}
}
Internals._iterate=_iterate;
function _lumaValuesForWindow(image,x,y,width,height,luminance){
var array=image.data,lumaValues=new Float32Array(new ArrayBuffer(width*height*4)),counter=0;
var maxj=y+height;
for(var j=y;j<maxj;j++){
var offset=j*image.width;
var i=(offset+x)*image.channels;
var maxi=(offset+x+width)*image.channels;
switch(image.channels){
case 1:
while(i<maxi){

lumaValues[counter++]=array[i++];
}
break;
case 2:
while(i<maxi){
lumaValues[counter++]=array[i++]*(array[i++]/255);
}
break;
case 3:
if(luminance){
while(i<maxi){
lumaValues[counter++]=array[i++]*0.212655+array[i++]*0.715158+array[i++]*0.072187;
}
}else
{
while(i<maxi){
lumaValues[counter++]=array[i++]+array[i++]+array[i++];
}
}
break;
case 4:
if(luminance){
while(i<maxi){
lumaValues[counter++]=(array[i++]*0.212655+array[i++]*0.715158+array[i++]*0.072187)*(array[i++]/255);
}
}else
{
while(i<maxi){
lumaValues[counter++]=(array[i++]+array[i++]+array[i++])*(array[i++]/255);
}
}
break;}

}
return lumaValues;
}
function _averageLuma(lumaValues){
var sumLuma=0.0;
for(var i=0;i<lumaValues.length;i++){
sumLuma+=lumaValues[i];
}
return sumLuma/lumaValues.length;
}
})(Internals||(Internals={}));
})(ImageSSIM||(ImageSSIM={}));
module.exports=ImageSSIM;

},{}],123:[function(require,module,exports){
arguments[4][105][0].apply(exports,arguments);
},{"dup":105}],124:[function(require,module,exports){
'use strict';

var parser=require('./lib/parser');

module.exports=parser;
module.exports['default']=parser;

},{"./lib/parser":125}],125:[function(require,module,exports){






"use strict";

function peg$subclass(child,parent){
function ctor(){this.constructor=child;}
ctor.prototype=parent.prototype;
child.prototype=new ctor();
}

function peg$SyntaxError(message,expected,found,location){
this.message=message;
this.expected=expected;
this.found=found;
this.location=location;
this.name="SyntaxError";

if(typeof Error.captureStackTrace==="function"){
Error.captureStackTrace(this,peg$SyntaxError);
}
}

peg$subclass(peg$SyntaxError,Error);

peg$SyntaxError.buildMessage=function(expected,found){
var DESCRIBE_EXPECTATION_FNS={
literal:function(expectation){
return"\""+literalEscape(expectation.text)+"\"";
},

"class":function(expectation){
var escapedParts="",
i;

for(i=0;i<expectation.parts.length;i++){
escapedParts+=expectation.parts[i]instanceof Array?
classEscape(expectation.parts[i][0])+"-"+classEscape(expectation.parts[i][1]):
classEscape(expectation.parts[i]);
}

return"["+(expectation.inverted?"^":"")+escapedParts+"]";
},

any:function(expectation){
return"any character";
},

end:function(expectation){
return"end of input";
},

other:function(expectation){
return expectation.description;
}};


function hex(ch){
return ch.charCodeAt(0).toString(16).toUpperCase();
}

function literalEscape(s){
return s.
replace(/\\/g,'\\\\').
replace(/"/g,'\\"').
replace(/\0/g,'\\0').
replace(/\t/g,'\\t').
replace(/\n/g,'\\n').
replace(/\r/g,'\\r').
replace(/[\x00-\x0F]/g,function(ch){return'\\x0'+hex(ch);}).
replace(/[\x10-\x1F\x7F-\x9F]/g,function(ch){return'\\x'+hex(ch);});
}

function classEscape(s){
return s.
replace(/\\/g,'\\\\').
replace(/\]/g,'\\]').
replace(/\^/g,'\\^').
replace(/-/g,'\\-').
replace(/\0/g,'\\0').
replace(/\t/g,'\\t').
replace(/\n/g,'\\n').
replace(/\r/g,'\\r').
replace(/[\x00-\x0F]/g,function(ch){return'\\x0'+hex(ch);}).
replace(/[\x10-\x1F\x7F-\x9F]/g,function(ch){return'\\x'+hex(ch);});
}

function describeExpectation(expectation){
return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
}

function describeExpected(expected){
var descriptions=new Array(expected.length),
i,j;

for(i=0;i<expected.length;i++){
descriptions[i]=describeExpectation(expected[i]);
}

descriptions.sort();

if(descriptions.length>0){
for(i=1,j=1;i<descriptions.length;i++){
if(descriptions[i-1]!==descriptions[i]){
descriptions[j]=descriptions[i];
j++;
}
}
descriptions.length=j;
}

switch(descriptions.length){
case 1:
return descriptions[0];

case 2:
return descriptions[0]+" or "+descriptions[1];

default:
return descriptions.slice(0,-1).join(", ")+
", or "+
descriptions[descriptions.length-1];}

}

function describeFound(found){
return found?"\""+literalEscape(found)+"\"":"end of input";
}

return"Expected "+describeExpected(expected)+" but "+describeFound(found)+" found.";
};

function peg$parse(input,options){
options=options!==void 0?options:{};

var peg$FAILED={},

peg$startRuleFunctions={start:peg$parsestart},
peg$startRuleFunction=peg$parsestart,

peg$c0=function(elements){
return{
type:'messageFormatPattern',
elements:elements,
location:location()};

},
peg$c1=function(chunks){
return chunks.reduce(function(all,chunk){
return all.concat(chunk);
},[]).join('');
},
peg$c2=function(messageText){
return{
type:'messageTextElement',
value:messageText,
location:location()};

},
peg$c3=function(chars){return chars.join('');},
peg$c4="{",
peg$c5=peg$literalExpectation("{",false),
peg$c6=",",
peg$c7=peg$literalExpectation(",",false),
peg$c8="}",
peg$c9=peg$literalExpectation("}",false),
peg$c10=function(id,format){
return{
type:'argumentElement',
id:id,
format:format&&format[2],
location:location()};

},
peg$c11="number",
peg$c12=peg$literalExpectation("number",false),
peg$c13="date",
peg$c14=peg$literalExpectation("date",false),
peg$c15="time",
peg$c16=peg$literalExpectation("time",false),
peg$c17=function(type,style){
return{
type:type+'Format',
style:style&&style[2],
location:location()};

},
peg$c18="plural",
peg$c19=peg$literalExpectation("plural",false),
peg$c20=function(pluralStyle){
return{
type:pluralStyle.type,
ordinal:false,
offset:pluralStyle.offset||0,
options:pluralStyle.options,
location:location()};

},
peg$c21="selectordinal",
peg$c22=peg$literalExpectation("selectordinal",false),
peg$c23=function(pluralStyle){
return{
type:pluralStyle.type,
ordinal:true,
offset:pluralStyle.offset||0,
options:pluralStyle.options,
location:location()};

},
peg$c24="select",
peg$c25=peg$literalExpectation("select",false),
peg$c26=function(options){
return{
type:'selectFormat',
options:options,
location:location()};

},
peg$c27="=",
peg$c28=peg$literalExpectation("=",false),
peg$c29=function(selector,pattern){
return{
type:'optionalFormatPattern',
selector:selector,
value:pattern,
location:location()};

},
peg$c30="offset:",
peg$c31=peg$literalExpectation("offset:",false),
peg$c32=function(number){
return number;
},
peg$c33=function(offset,options){
return{
type:'pluralFormat',
offset:offset,
options:options,
location:location()};

},
peg$c34=peg$otherExpectation("whitespace"),
peg$c35=/^[ \t\n\r]/,
peg$c36=peg$classExpectation([" ","\t","\n","\r"],false,false),
peg$c37=peg$otherExpectation("optionalWhitespace"),
peg$c38=/^[0-9]/,
peg$c39=peg$classExpectation([["0","9"]],false,false),
peg$c40=/^[0-9a-f]/i,
peg$c41=peg$classExpectation([["0","9"],["a","f"]],false,true),
peg$c42="0",
peg$c43=peg$literalExpectation("0",false),
peg$c44=/^[1-9]/,
peg$c45=peg$classExpectation([["1","9"]],false,false),
peg$c46=function(digits){
return parseInt(digits,10);
},
peg$c47="'",
peg$c48=peg$literalExpectation("'",false),
peg$c49=/^[ \t\n\r,.+={}#]/,
peg$c50=peg$classExpectation([" ","\t","\n","\r",",",".","+","=","{","}","#"],false,false),
peg$c51=peg$anyExpectation(),
peg$c52=function(char){return char;},
peg$c53=function(sequence){return sequence;},
peg$c54=/^[^{}\\\0-\x1F\x7F \t\n\r]/,
peg$c55=peg$classExpectation(["{","}","\\",["\0","\x1F"],"\x7F"," ","\t","\n","\r"],true,false),
peg$c56="\\\\",
peg$c57=peg$literalExpectation("\\\\",false),
peg$c58=function(){return'\\';},
peg$c59="\\#",
peg$c60=peg$literalExpectation("\\#",false),
peg$c61=function(){return'\\#';},
peg$c62="\\{",
peg$c63=peg$literalExpectation("\\{",false),
peg$c64=function(){return'\u007B';},
peg$c65="\\}",
peg$c66=peg$literalExpectation("\\}",false),
peg$c67=function(){return'\u007D';},
peg$c68="\\u",
peg$c69=peg$literalExpectation("\\u",false),
peg$c70=function(digits){
return String.fromCharCode(parseInt(digits,16));
},

peg$currPos=0,
peg$savedPos=0,
peg$posDetailsCache=[{line:1,column:1}],
peg$maxFailPos=0,
peg$maxFailExpected=[],
peg$silentFails=0,

peg$result;

if("startRule"in options){
if(!(options.startRule in peg$startRuleFunctions)){
throw new Error("Can't start parsing from rule \""+options.startRule+"\".");
}

peg$startRuleFunction=peg$startRuleFunctions[options.startRule];
}

function text(){
return input.substring(peg$savedPos,peg$currPos);
}

function location(){
return peg$computeLocation(peg$savedPos,peg$currPos);
}

function expected(description,location){
location=location!==void 0?location:peg$computeLocation(peg$savedPos,peg$currPos);

throw peg$buildStructuredError(
[peg$otherExpectation(description)],
input.substring(peg$savedPos,peg$currPos),
location);

}

function error(message,location){
location=location!==void 0?location:peg$computeLocation(peg$savedPos,peg$currPos);

throw peg$buildSimpleError(message,location);
}

function peg$literalExpectation(text,ignoreCase){
return{type:"literal",text:text,ignoreCase:ignoreCase};
}

function peg$classExpectation(parts,inverted,ignoreCase){
return{type:"class",parts:parts,inverted:inverted,ignoreCase:ignoreCase};
}

function peg$anyExpectation(){
return{type:"any"};
}

function peg$endExpectation(){
return{type:"end"};
}

function peg$otherExpectation(description){
return{type:"other",description:description};
}

function peg$computePosDetails(pos){
var details=peg$posDetailsCache[pos],p;

if(details){
return details;
}else{
p=pos-1;
while(!peg$posDetailsCache[p]){
p--;
}

details=peg$posDetailsCache[p];
details={
line:details.line,
column:details.column};


while(p<pos){
if(input.charCodeAt(p)===10){
details.line++;
details.column=1;
}else{
details.column++;
}

p++;
}

peg$posDetailsCache[pos]=details;
return details;
}
}

function peg$computeLocation(startPos,endPos){
var startPosDetails=peg$computePosDetails(startPos),
endPosDetails=peg$computePosDetails(endPos);

return{
start:{
offset:startPos,
line:startPosDetails.line,
column:startPosDetails.column},

end:{
offset:endPos,
line:endPosDetails.line,
column:endPosDetails.column}};


}

function peg$fail(expected){
if(peg$currPos<peg$maxFailPos){return;}

if(peg$currPos>peg$maxFailPos){
peg$maxFailPos=peg$currPos;
peg$maxFailExpected=[];
}

peg$maxFailExpected.push(expected);
}

function peg$buildSimpleError(message,location){
return new peg$SyntaxError(message,null,null,location);
}

function peg$buildStructuredError(expected,found,location){
return new peg$SyntaxError(
peg$SyntaxError.buildMessage(expected,found),
expected,
found,
location);

}

function peg$parsestart(){
var s0;

s0=peg$parsemessageFormatPattern();

return s0;
}

function peg$parsemessageFormatPattern(){
var s0,s1,s2;

s0=peg$currPos;
s1=[];
s2=peg$parsemessageFormatElement();
while(s2!==peg$FAILED){
s1.push(s2);
s2=peg$parsemessageFormatElement();
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c0(s1);
}
s0=s1;

return s0;
}

function peg$parsemessageFormatElement(){
var s0;

s0=peg$parsemessageTextElement();
if(s0===peg$FAILED){
s0=peg$parseargumentElement();
}

return s0;
}

function peg$parsemessageText(){
var s0,s1,s2,s3,s4,s5;

s0=peg$currPos;
s1=[];
s2=peg$currPos;
s3=peg$parse_();
if(s3!==peg$FAILED){
s4=peg$parsechars();
if(s4!==peg$FAILED){
s5=peg$parse_();
if(s5!==peg$FAILED){
s3=[s3,s4,s5];
s2=s3;
}else{
peg$currPos=s2;
s2=peg$FAILED;
}
}else{
peg$currPos=s2;
s2=peg$FAILED;
}
}else{
peg$currPos=s2;
s2=peg$FAILED;
}
if(s2!==peg$FAILED){
while(s2!==peg$FAILED){
s1.push(s2);
s2=peg$currPos;
s3=peg$parse_();
if(s3!==peg$FAILED){
s4=peg$parsechars();
if(s4!==peg$FAILED){
s5=peg$parse_();
if(s5!==peg$FAILED){
s3=[s3,s4,s5];
s2=s3;
}else{
peg$currPos=s2;
s2=peg$FAILED;
}
}else{
peg$currPos=s2;
s2=peg$FAILED;
}
}else{
peg$currPos=s2;
s2=peg$FAILED;
}
}
}else{
s1=peg$FAILED;
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c1(s1);
}
s0=s1;
if(s0===peg$FAILED){
s0=peg$currPos;
s1=peg$parsews();
if(s1!==peg$FAILED){
s0=input.substring(s0,peg$currPos);
}else{
s0=s1;
}
}

return s0;
}

function peg$parsemessageTextElement(){
var s0,s1;

s0=peg$currPos;
s1=peg$parsemessageText();
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c2(s1);
}
s0=s1;

return s0;
}

function peg$parseargument(){
var s0,s1,s2;

s0=peg$parsenumber();
if(s0===peg$FAILED){
s0=peg$currPos;
s1=[];
s2=peg$parsequoteEscapedChar();
while(s2!==peg$FAILED){
s1.push(s2);
s2=peg$parsequoteEscapedChar();
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c3(s1);
}
s0=s1;
}

return s0;
}

function peg$parseargumentElement(){
var s0,s1,s2,s3,s4,s5,s6,s7,s8;

s0=peg$currPos;
if(input.charCodeAt(peg$currPos)===123){
s1=peg$c4;
peg$currPos++;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c5);}
}
if(s1!==peg$FAILED){
s2=peg$parse_();
if(s2!==peg$FAILED){
s3=peg$parseargument();
if(s3!==peg$FAILED){
s4=peg$parse_();
if(s4!==peg$FAILED){
s5=peg$currPos;
if(input.charCodeAt(peg$currPos)===44){
s6=peg$c6;
peg$currPos++;
}else{
s6=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c7);}
}
if(s6!==peg$FAILED){
s7=peg$parse_();
if(s7!==peg$FAILED){
s8=peg$parseelementFormat();
if(s8!==peg$FAILED){
s6=[s6,s7,s8];
s5=s6;
}else{
peg$currPos=s5;
s5=peg$FAILED;
}
}else{
peg$currPos=s5;
s5=peg$FAILED;
}
}else{
peg$currPos=s5;
s5=peg$FAILED;
}
if(s5===peg$FAILED){
s5=null;
}
if(s5!==peg$FAILED){
s6=peg$parse_();
if(s6!==peg$FAILED){
if(input.charCodeAt(peg$currPos)===125){
s7=peg$c8;
peg$currPos++;
}else{
s7=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c9);}
}
if(s7!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c10(s3,s5);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}

return s0;
}

function peg$parseelementFormat(){
var s0;

s0=peg$parsesimpleFormat();
if(s0===peg$FAILED){
s0=peg$parsepluralFormat();
if(s0===peg$FAILED){
s0=peg$parseselectOrdinalFormat();
if(s0===peg$FAILED){
s0=peg$parseselectFormat();
}
}
}

return s0;
}

function peg$parsesimpleFormat(){
var s0,s1,s2,s3,s4,s5,s6;

s0=peg$currPos;
if(input.substr(peg$currPos,6)===peg$c11){
s1=peg$c11;
peg$currPos+=6;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c12);}
}
if(s1===peg$FAILED){
if(input.substr(peg$currPos,4)===peg$c13){
s1=peg$c13;
peg$currPos+=4;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c14);}
}
if(s1===peg$FAILED){
if(input.substr(peg$currPos,4)===peg$c15){
s1=peg$c15;
peg$currPos+=4;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c16);}
}
}
}
if(s1!==peg$FAILED){
s2=peg$parse_();
if(s2!==peg$FAILED){
s3=peg$currPos;
if(input.charCodeAt(peg$currPos)===44){
s4=peg$c6;
peg$currPos++;
}else{
s4=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c7);}
}
if(s4!==peg$FAILED){
s5=peg$parse_();
if(s5!==peg$FAILED){
s6=peg$parsechars();
if(s6!==peg$FAILED){
s4=[s4,s5,s6];
s3=s4;
}else{
peg$currPos=s3;
s3=peg$FAILED;
}
}else{
peg$currPos=s3;
s3=peg$FAILED;
}
}else{
peg$currPos=s3;
s3=peg$FAILED;
}
if(s3===peg$FAILED){
s3=null;
}
if(s3!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c17(s1,s3);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}

return s0;
}

function peg$parsepluralFormat(){
var s0,s1,s2,s3,s4,s5;

s0=peg$currPos;
if(input.substr(peg$currPos,6)===peg$c18){
s1=peg$c18;
peg$currPos+=6;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c19);}
}
if(s1!==peg$FAILED){
s2=peg$parse_();
if(s2!==peg$FAILED){
if(input.charCodeAt(peg$currPos)===44){
s3=peg$c6;
peg$currPos++;
}else{
s3=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c7);}
}
if(s3!==peg$FAILED){
s4=peg$parse_();
if(s4!==peg$FAILED){
s5=peg$parsepluralStyle();
if(s5!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c20(s5);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}

return s0;
}

function peg$parseselectOrdinalFormat(){
var s0,s1,s2,s3,s4,s5;

s0=peg$currPos;
if(input.substr(peg$currPos,13)===peg$c21){
s1=peg$c21;
peg$currPos+=13;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c22);}
}
if(s1!==peg$FAILED){
s2=peg$parse_();
if(s2!==peg$FAILED){
if(input.charCodeAt(peg$currPos)===44){
s3=peg$c6;
peg$currPos++;
}else{
s3=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c7);}
}
if(s3!==peg$FAILED){
s4=peg$parse_();
if(s4!==peg$FAILED){
s5=peg$parsepluralStyle();
if(s5!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c23(s5);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}

return s0;
}

function peg$parseselectFormat(){
var s0,s1,s2,s3,s4,s5,s6;

s0=peg$currPos;
if(input.substr(peg$currPos,6)===peg$c24){
s1=peg$c24;
peg$currPos+=6;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c25);}
}
if(s1!==peg$FAILED){
s2=peg$parse_();
if(s2!==peg$FAILED){
if(input.charCodeAt(peg$currPos)===44){
s3=peg$c6;
peg$currPos++;
}else{
s3=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c7);}
}
if(s3!==peg$FAILED){
s4=peg$parse_();
if(s4!==peg$FAILED){
s5=[];
s6=peg$parseoptionalFormatPattern();
if(s6!==peg$FAILED){
while(s6!==peg$FAILED){
s5.push(s6);
s6=peg$parseoptionalFormatPattern();
}
}else{
s5=peg$FAILED;
}
if(s5!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c26(s5);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}

return s0;
}

function peg$parseselector(){
var s0,s1,s2,s3;

s0=peg$currPos;
s1=peg$currPos;
if(input.charCodeAt(peg$currPos)===61){
s2=peg$c27;
peg$currPos++;
}else{
s2=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c28);}
}
if(s2!==peg$FAILED){
s3=peg$parsenumber();
if(s3!==peg$FAILED){
s2=[s2,s3];
s1=s2;
}else{
peg$currPos=s1;
s1=peg$FAILED;
}
}else{
peg$currPos=s1;
s1=peg$FAILED;
}
if(s1!==peg$FAILED){
s0=input.substring(s0,peg$currPos);
}else{
s0=s1;
}
if(s0===peg$FAILED){
s0=peg$parsechars();
}

return s0;
}

function peg$parseoptionalFormatPattern(){
var s0,s1,s2,s3,s4,s5,s6;

s0=peg$currPos;
s1=peg$parse_();
if(s1!==peg$FAILED){
s2=peg$parseselector();
if(s2!==peg$FAILED){
s3=peg$parse_();
if(s3!==peg$FAILED){
if(input.charCodeAt(peg$currPos)===123){
s4=peg$c4;
peg$currPos++;
}else{
s4=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c5);}
}
if(s4!==peg$FAILED){
s5=peg$parsemessageFormatPattern();
if(s5!==peg$FAILED){
if(input.charCodeAt(peg$currPos)===125){
s6=peg$c8;
peg$currPos++;
}else{
s6=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c9);}
}
if(s6!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c29(s2,s5);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}

return s0;
}

function peg$parseoffset(){
var s0,s1,s2,s3;

s0=peg$currPos;
if(input.substr(peg$currPos,7)===peg$c30){
s1=peg$c30;
peg$currPos+=7;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c31);}
}
if(s1!==peg$FAILED){
s2=peg$parse_();
if(s2!==peg$FAILED){
s3=peg$parsenumber();
if(s3!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c32(s3);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}

return s0;
}

function peg$parsepluralStyle(){
var s0,s1,s2,s3,s4;

s0=peg$currPos;
s1=peg$parseoffset();
if(s1===peg$FAILED){
s1=null;
}
if(s1!==peg$FAILED){
s2=peg$parse_();
if(s2!==peg$FAILED){
s3=[];
s4=peg$parseoptionalFormatPattern();
if(s4!==peg$FAILED){
while(s4!==peg$FAILED){
s3.push(s4);
s4=peg$parseoptionalFormatPattern();
}
}else{
s3=peg$FAILED;
}
if(s3!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c33(s1,s3);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}

return s0;
}

function peg$parsews(){
var s0,s1;

peg$silentFails++;
s0=[];
if(peg$c35.test(input.charAt(peg$currPos))){
s1=input.charAt(peg$currPos);
peg$currPos++;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c36);}
}
if(s1!==peg$FAILED){
while(s1!==peg$FAILED){
s0.push(s1);
if(peg$c35.test(input.charAt(peg$currPos))){
s1=input.charAt(peg$currPos);
peg$currPos++;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c36);}
}
}
}else{
s0=peg$FAILED;
}
peg$silentFails--;
if(s0===peg$FAILED){
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c34);}
}

return s0;
}

function peg$parse_(){
var s0,s1,s2;

peg$silentFails++;
s0=peg$currPos;
s1=[];
s2=peg$parsews();
while(s2!==peg$FAILED){
s1.push(s2);
s2=peg$parsews();
}
if(s1!==peg$FAILED){
s0=input.substring(s0,peg$currPos);
}else{
s0=s1;
}
peg$silentFails--;
if(s0===peg$FAILED){
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c37);}
}

return s0;
}

function peg$parsedigit(){
var s0;

if(peg$c38.test(input.charAt(peg$currPos))){
s0=input.charAt(peg$currPos);
peg$currPos++;
}else{
s0=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c39);}
}

return s0;
}

function peg$parsehexDigit(){
var s0;

if(peg$c40.test(input.charAt(peg$currPos))){
s0=input.charAt(peg$currPos);
peg$currPos++;
}else{
s0=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c41);}
}

return s0;
}

function peg$parsenumber(){
var s0,s1,s2,s3,s4,s5;

s0=peg$currPos;
if(input.charCodeAt(peg$currPos)===48){
s1=peg$c42;
peg$currPos++;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c43);}
}
if(s1===peg$FAILED){
s1=peg$currPos;
s2=peg$currPos;
if(peg$c44.test(input.charAt(peg$currPos))){
s3=input.charAt(peg$currPos);
peg$currPos++;
}else{
s3=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c45);}
}
if(s3!==peg$FAILED){
s4=[];
s5=peg$parsedigit();
while(s5!==peg$FAILED){
s4.push(s5);
s5=peg$parsedigit();
}
if(s4!==peg$FAILED){
s3=[s3,s4];
s2=s3;
}else{
peg$currPos=s2;
s2=peg$FAILED;
}
}else{
peg$currPos=s2;
s2=peg$FAILED;
}
if(s2!==peg$FAILED){
s1=input.substring(s1,peg$currPos);
}else{
s1=s2;
}
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c46(s1);
}
s0=s1;

return s0;
}

function peg$parsequoteEscapedChar(){
var s0,s1,s2;

s0=peg$currPos;
s1=peg$currPos;
peg$silentFails++;
if(input.charCodeAt(peg$currPos)===39){
s2=peg$c47;
peg$currPos++;
}else{
s2=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c48);}
}
if(s2===peg$FAILED){
if(peg$c49.test(input.charAt(peg$currPos))){
s2=input.charAt(peg$currPos);
peg$currPos++;
}else{
s2=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c50);}
}
}
peg$silentFails--;
if(s2===peg$FAILED){
s1=void 0;
}else{
peg$currPos=s1;
s1=peg$FAILED;
}
if(s1!==peg$FAILED){
if(input.length>peg$currPos){
s2=input.charAt(peg$currPos);
peg$currPos++;
}else{
s2=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c51);}
}
if(s2!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c52(s2);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
if(s0===peg$FAILED){
s0=peg$currPos;
if(input.charCodeAt(peg$currPos)===39){
s1=peg$c47;
peg$currPos++;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c48);}
}
if(s1!==peg$FAILED){
s2=peg$parseescape();
if(s2!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c53(s2);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}

return s0;
}

function peg$parseapostrophe(){
var s0;

if(input.charCodeAt(peg$currPos)===39){
s0=peg$c47;
peg$currPos++;
}else{
s0=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c48);}
}

return s0;
}

function peg$parseescape(){
var s0;

if(peg$c49.test(input.charAt(peg$currPos))){
s0=input.charAt(peg$currPos);
peg$currPos++;
}else{
s0=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c50);}
}
if(s0===peg$FAILED){
s0=peg$parseapostrophe();
}

return s0;
}

function peg$parsechar(){
var s0,s1,s2,s3,s4,s5,s6,s7;

s0=peg$currPos;
if(input.charCodeAt(peg$currPos)===39){
s1=peg$c47;
peg$currPos++;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c48);}
}
if(s1!==peg$FAILED){
s2=peg$parseapostrophe();
if(s2!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c53(s2);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
if(s0===peg$FAILED){
if(peg$c54.test(input.charAt(peg$currPos))){
s0=input.charAt(peg$currPos);
peg$currPos++;
}else{
s0=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c55);}
}
if(s0===peg$FAILED){
s0=peg$currPos;
if(input.substr(peg$currPos,2)===peg$c56){
s1=peg$c56;
peg$currPos+=2;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c57);}
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c58();
}
s0=s1;
if(s0===peg$FAILED){
s0=peg$currPos;
if(input.substr(peg$currPos,2)===peg$c59){
s1=peg$c59;
peg$currPos+=2;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c60);}
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c61();
}
s0=s1;
if(s0===peg$FAILED){
s0=peg$currPos;
if(input.substr(peg$currPos,2)===peg$c62){
s1=peg$c62;
peg$currPos+=2;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c63);}
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c64();
}
s0=s1;
if(s0===peg$FAILED){
s0=peg$currPos;
if(input.substr(peg$currPos,2)===peg$c65){
s1=peg$c65;
peg$currPos+=2;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c66);}
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c67();
}
s0=s1;
if(s0===peg$FAILED){
s0=peg$currPos;
if(input.substr(peg$currPos,2)===peg$c68){
s1=peg$c68;
peg$currPos+=2;
}else{
s1=peg$FAILED;
if(peg$silentFails===0){peg$fail(peg$c69);}
}
if(s1!==peg$FAILED){
s2=peg$currPos;
s3=peg$currPos;
s4=peg$parsehexDigit();
if(s4!==peg$FAILED){
s5=peg$parsehexDigit();
if(s5!==peg$FAILED){
s6=peg$parsehexDigit();
if(s6!==peg$FAILED){
s7=peg$parsehexDigit();
if(s7!==peg$FAILED){
s4=[s4,s5,s6,s7];
s3=s4;
}else{
peg$currPos=s3;
s3=peg$FAILED;
}
}else{
peg$currPos=s3;
s3=peg$FAILED;
}
}else{
peg$currPos=s3;
s3=peg$FAILED;
}
}else{
peg$currPos=s3;
s3=peg$FAILED;
}
if(s3!==peg$FAILED){
s2=input.substring(s2,peg$currPos);
}else{
s2=s3;
}
if(s2!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c70(s2);
s0=s1;
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}else{
peg$currPos=s0;
s0=peg$FAILED;
}
}
}
}
}
}
}

return s0;
}

function peg$parsechars(){
var s0,s1,s2;

s0=peg$currPos;
s1=[];
s2=peg$parsechar();
if(s2!==peg$FAILED){
while(s2!==peg$FAILED){
s1.push(s2);
s2=peg$parsechar();
}
}else{
s1=peg$FAILED;
}
if(s1!==peg$FAILED){
peg$savedPos=s0;
s1=peg$c3(s1);
}
s0=s1;

return s0;
}

peg$result=peg$startRuleFunction();

if(peg$result!==peg$FAILED&&peg$currPos===input.length){
return peg$result;
}else{
if(peg$result!==peg$FAILED&&peg$currPos<input.length){
peg$fail(peg$endExpectation());
}

throw peg$buildStructuredError(
peg$maxFailExpected,
peg$maxFailPos<input.length?input.charAt(peg$maxFailPos):null,
peg$maxFailPos<input.length?
peg$computeLocation(peg$maxFailPos,peg$maxFailPos+1):
peg$computeLocation(peg$maxFailPos,peg$maxFailPos));

}
}

module.exports={
SyntaxError:peg$SyntaxError,
parse:peg$parse};


},{}],126:[function(require,module,exports){
"use strict";





var __extends=this&&this.__extends||function(){
var extendStatics=function(d,b){
extendStatics=Object.setPrototypeOf||
{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||
function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};
return extendStatics(d,b);
};
return function(d,b){
extendStatics(d,b);
function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());
};
}();
Object.defineProperty(exports,"__esModule",{value:true});
var Compiler=function(){
function Compiler(locales,formats,formatters){
this.locales=[];
this.formats={
number:{},
date:{},
time:{}};

this.pluralNumberFormat=null;
this.currentPlural=null;
this.pluralStack=[];
this.locales=locales;
this.formats=formats;
this.formatters=formatters;
}
Compiler.prototype.compile=function(ast){
this.pluralStack=[];
this.currentPlural=null;
this.pluralNumberFormat=null;
return this.compileMessage(ast);
};
Compiler.prototype.compileMessage=function(ast){
var _this=this;
if(!(ast&&ast.type==='messageFormatPattern')){
throw new Error('Message AST is not of type: "messageFormatPattern"');
}
var elements=ast.elements;
var pattern=elements.
filter(function(el){
return el.type==='messageTextElement'||el.type==='argumentElement';
}).
map(function(el){
return el.type==='messageTextElement'?
_this.compileMessageText(el):
_this.compileArgument(el);
});
if(pattern.length!==elements.length){
throw new Error('Message element does not have a valid type');
}
return pattern;
};
Compiler.prototype.compileMessageText=function(element){



if(this.currentPlural&&/(^|[^\\])#/g.test(element.value)){


if(!this.pluralNumberFormat){
this.pluralNumberFormat=new Intl.NumberFormat(this.locales);
}
return new PluralOffsetString(this.currentPlural.id,this.currentPlural.format.offset,this.pluralNumberFormat,element.value);
}

return element.value.replace(/\\#/g,'#');
};
Compiler.prototype.compileArgument=function(element){
var format=element.format,id=element.id;
var formatters=this.formatters;
if(!format){
return new StringFormat(id);
}
var _a=this,formats=_a.formats,locales=_a.locales;
switch(format.type){
case'numberFormat':
return{
id:id,
format:formatters.getNumberFormat(locales,formats.number[format.style]).format};

case'dateFormat':
return{
id:id,
format:formatters.getDateTimeFormat(locales,formats.date[format.style]).format};

case'timeFormat':
return{
id:id,
format:formatters.getDateTimeFormat(locales,formats.time[format.style]).format};

case'pluralFormat':
return new PluralFormat(id,format.offset,this.compileOptions(element),formatters.getPluralRules(locales,{
type:format.ordinal?'ordinal':'cardinal'}));

case'selectFormat':
return new SelectFormat(id,this.compileOptions(element));
default:
throw new Error('Message element does not have a valid format type');}

};
Compiler.prototype.compileOptions=function(element){
var _this=this;
var format=element.format;
var options=format.options;



this.pluralStack.push(this.currentPlural);
this.currentPlural=format.type==='pluralFormat'?element:null;
var optionsHash=options.reduce(function(all,option){

all[option.selector]=_this.compileMessage(option.value);
return all;
},{});

this.currentPlural=this.pluralStack.pop();
return optionsHash;
};
return Compiler;
}();
exports.default=Compiler;

var Formatter=function(){
function Formatter(id){
this.id=id;
}
return Formatter;
}();
var StringFormat=function(_super){
__extends(StringFormat,_super);
function StringFormat(){
return _super!==null&&_super.apply(this,arguments)||this;
}
StringFormat.prototype.format=function(value){
if(!value&&typeof value!=='number'){
return'';
}
return typeof value==='string'?value:String(value);
};
return StringFormat;
}(Formatter);
var PluralFormat=function(){
function PluralFormat(id,offset,options,pluralRules){
this.id=id;
this.offset=offset;
this.options=options;
this.pluralRules=pluralRules;
}
PluralFormat.prototype.getOption=function(value){
var options=this.options;
var option=options['='+value]||
options[this.pluralRules.select(value-this.offset)];
return option||options.other;
};
return PluralFormat;
}();
var PluralOffsetString=function(_super){
__extends(PluralOffsetString,_super);
function PluralOffsetString(id,offset,numberFormat,string){
var _this=_super.call(this,id)||this;
_this.offset=offset;
_this.numberFormat=numberFormat;
_this.string=string;
return _this;
}
PluralOffsetString.prototype.format=function(value){
var number=this.numberFormat.format(value-this.offset);
return this.string.
replace(/(^|[^\\])#/g,'$1'+number).
replace(/\\#/g,'#');
};
return PluralOffsetString;
}(Formatter);
exports.PluralOffsetString=PluralOffsetString;
var SelectFormat=function(){
function SelectFormat(id,options){
this.id=id;
this.options=options;
}
SelectFormat.prototype.getOption=function(value){
var options=this.options;
return options[value]||options.other;
};
return SelectFormat;
}();
exports.SelectFormat=SelectFormat;
function isSelectOrPluralFormat(f){
return!!f.options;
}
exports.isSelectOrPluralFormat=isSelectOrPluralFormat;

},{}],127:[function(require,module,exports){
"use strict";





var __extends=this&&this.__extends||function(){
var extendStatics=function(d,b){
extendStatics=Object.setPrototypeOf||
{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||
function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};
return extendStatics(d,b);
};
return function(d,b){
extendStatics(d,b);
function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());
};
}();
var __assign=this&&this.__assign||function(){
__assign=Object.assign||function(t){
for(var s,i=1,n=arguments.length;i<n;i++){
s=arguments[i];
for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))
t[p]=s[p];
}
return t;
};
return __assign.apply(this,arguments);
};
Object.defineProperty(exports,"__esModule",{value:true});

var compiler_1=require("./compiler");

function resolveLocale(locales){
if(typeof locales==='string'){
locales=[locales];
}
try{
return Intl.NumberFormat.supportedLocalesOf(locales,{


localeMatcher:'best fit'})[
0];
}
catch(e){
return IntlMessageFormat.defaultLocale;
}
}
function formatPatterns(pattern,values){
var result='';
for(var _i=0,pattern_1=pattern;_i<pattern_1.length;_i++){
var part=pattern_1[_i];

if(typeof part==='string'){
result+=part;
continue;
}
var id=part.id;

if(!(values&&id in values)){
throw new FormatError("A value must be provided for: "+id,id);
}
var value=values[id];



if(compiler_1.isSelectOrPluralFormat(part)){
result+=formatPatterns(part.getOption(value),values);
}else
{
result+=part.format(value);
}
}
return result;
}
function mergeConfig(c1,c2){
if(!c2){
return c1;
}
return __assign({},c1||{},c2||{},Object.keys(c1).reduce(function(all,k){
all[k]=__assign({},c1[k],c2[k]||{});
return all;
},{}));
}
function mergeConfigs(defaultConfig,configs){
if(!configs){
return defaultConfig;
}
return Object.keys(defaultConfig).reduce(function(all,k){
all[k]=mergeConfig(defaultConfig[k],configs[k]);
return all;
},__assign({},defaultConfig));
}
var FormatError=function(_super){
__extends(FormatError,_super);
function FormatError(msg,variableId){
var _this=_super.call(this,msg)||this;
_this.variableId=variableId;
return _this;
}
return FormatError;
}(Error);
function createDefaultFormatters(){
return{
getNumberFormat:function(){
var _a;
var args=[];
for(var _i=0;_i<arguments.length;_i++){
args[_i]=arguments[_i];
}
return new((_a=Intl.NumberFormat).bind.apply(_a,[void 0].concat(args)))();
},
getDateTimeFormat:function(){
var _a;
var args=[];
for(var _i=0;_i<arguments.length;_i++){
args[_i]=arguments[_i];
}
return new((_a=Intl.DateTimeFormat).bind.apply(_a,[void 0].concat(args)))();
},
getPluralRules:function(){
var _a;
var args=[];
for(var _i=0;_i<arguments.length;_i++){
args[_i]=arguments[_i];
}
return new((_a=Intl.PluralRules).bind.apply(_a,[void 0].concat(args)))();
}};

}
exports.createDefaultFormatters=createDefaultFormatters;
var IntlMessageFormat=function(){
function IntlMessageFormat(message,locales,overrideFormats,opts){
var _this=this;
if(locales===void 0){locales=IntlMessageFormat.defaultLocale;}
this.format=function(values){
try{
return formatPatterns(_this.pattern,values);
}
catch(e){
if(e.variableId){
throw new Error("The intl string context variable '"+e.variableId+"' was not provided to the string '"+_this.message+"'");
}else
{
throw e;
}
}
};
if(typeof message==='string'){
if(!IntlMessageFormat.__parse){
throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');
}

this.ast=IntlMessageFormat.__parse(message);
}else
{
this.ast=message;
}
this.message=message;
if(!(this.ast&&this.ast.type==='messageFormatPattern')){
throw new TypeError('A message must be provided as a String or AST.');
}


var formats=mergeConfigs(IntlMessageFormat.formats,overrideFormats);

this.locale=resolveLocale(locales||[]);
var formatters=opts&&opts.formatters||createDefaultFormatters();



this.pattern=new compiler_1.default(locales,formats,formatters).compile(this.ast);


}
IntlMessageFormat.prototype.resolvedOptions=function(){
return{locale:this.locale};
};
IntlMessageFormat.prototype.getAst=function(){
return this.ast;
};
IntlMessageFormat.defaultLocale='en';
IntlMessageFormat.__parse=undefined;



IntlMessageFormat.formats={
number:{
currency:{
style:'currency'},

percent:{
style:'percent'}},


date:{
short:{
month:'numeric',
day:'numeric',
year:'2-digit'},

medium:{
month:'short',
day:'numeric',
year:'numeric'},

long:{
month:'long',
day:'numeric',
year:'numeric'},

full:{
weekday:'long',
month:'long',
day:'numeric',
year:'numeric'}},


time:{
short:{
hour:'numeric',
minute:'numeric'},

medium:{
hour:'numeric',
minute:'numeric',
second:'numeric'},

long:{
hour:'numeric',
minute:'numeric',
second:'numeric',
timeZoneName:'short'},

full:{
hour:'numeric',
minute:'numeric',
second:'numeric',
timeZoneName:'short'}}};



return IntlMessageFormat;
}();
exports.IntlMessageFormat=IntlMessageFormat;
exports.default=IntlMessageFormat;

},{"./compiler":126}],128:[function(require,module,exports){
"use strict";





function __export(m){
for(var p in m)if(!exports.hasOwnProperty(p))exports[p]=m[p];
}
Object.defineProperty(exports,"__esModule",{value:true});
var intl_messageformat_parser_1=require("intl-messageformat-parser");
var core_1=require("./core");
core_1.default.__parse=intl_messageformat_parser_1.default.parse;
__export(require("./core"));
exports.default=core_1.default;

},{"./core":127,"intl-messageformat-parser":124}],129:[function(require,module,exports){
'use strict';
var IntlMessageFormat=require('./dist').default;




exports=module.exports=IntlMessageFormat;
exports['default']=exports;

},{"./dist":128}],130:[function(require,module,exports){









module.exports=function(obj){
return obj!=null&&(isBuffer(obj)||isSlowBuffer(obj)||!!obj._isBuffer);
};

function isBuffer(obj){
return!!obj.constructor&&typeof obj.constructor.isBuffer==='function'&&obj.constructor.isBuffer(obj);
}


function isSlowBuffer(obj){
return typeof obj.readFloatLE==='function'&&typeof obj.slice==='function'&&isBuffer(obj.slice(0,0));
}

},{}],131:[function(require,module,exports){
var toString={}.toString;

module.exports=Array.isArray||function(arr){
return toString.call(arr)=='[object Array]';
};

},{}],132:[function(require,module,exports){
var encode=require('./lib/encoder'),
decode=require('./lib/decoder');

module.exports={
encode:encode,
decode:decode};


},{"./lib/decoder":133,"./lib/encoder":134}],133:[function(require,module,exports){
(function(Buffer){


























var JpegImage=function jpegImage(){
"use strict";
var dctZigZag=new Int32Array([
0,
1,8,
16,9,2,
3,10,17,24,
32,25,18,11,4,
5,12,19,26,33,40,
48,41,34,27,20,13,6,
7,14,21,28,35,42,49,56,
57,50,43,36,29,22,15,
23,30,37,44,51,58,
59,52,45,38,31,
39,46,53,60,
61,54,47,
55,62,
63]);


var dctCos1=4017;
var dctSin1=799;
var dctCos3=3406;
var dctSin3=2276;
var dctCos6=1567;
var dctSin6=3784;
var dctSqrt2=5793;
var dctSqrt1d2=2896;

function constructor(){
}

function buildHuffmanTable(codeLengths,values){
var k=0,code=[],i,j,length=16;
while(length>0&&!codeLengths[length-1])
length--;
code.push({children:[],index:0});
var p=code[0],q;
for(i=0;i<length;i++){
for(j=0;j<codeLengths[i];j++){
p=code.pop();
p.children[p.index]=values[k];
while(p.index>0){
p=code.pop();
}
p.index++;
code.push(p);
while(code.length<=i){
code.push(q={children:[],index:0});
p.children[p.index]=q.children;
p=q;
}
k++;
}
if(i+1<length){

code.push(q={children:[],index:0});
p.children[p.index]=q.children;
p=q;
}
}
return code[0].children;
}

function decodeScan(data,offset,
frame,components,resetInterval,
spectralStart,spectralEnd,
successivePrev,successive){
var precision=frame.precision;
var samplesPerLine=frame.samplesPerLine;
var scanLines=frame.scanLines;
var mcusPerLine=frame.mcusPerLine;
var progressive=frame.progressive;
var maxH=frame.maxH,maxV=frame.maxV;

var startOffset=offset,bitsData=0,bitsCount=0;
function readBit(){
if(bitsCount>0){
bitsCount--;
return bitsData>>bitsCount&1;
}
bitsData=data[offset++];
if(bitsData==0xFF){
var nextByte=data[offset++];
if(nextByte){
throw"unexpected marker: "+(bitsData<<8|nextByte).toString(16);
}

}
bitsCount=7;
return bitsData>>>7;
}
function decodeHuffman(tree){
var node=tree,bit;
while((bit=readBit())!==null){
node=node[bit];
if(typeof node==='number')
return node;
if(typeof node!=='object')
throw"invalid huffman sequence";
}
return null;
}
function receive(length){
var n=0;
while(length>0){
var bit=readBit();
if(bit===null)return;
n=n<<1|bit;
length--;
}
return n;
}
function receiveAndExtend(length){
var n=receive(length);
if(n>=1<<length-1)
return n;
return n+(-1<<length)+1;
}
function decodeBaseline(component,zz){
var t=decodeHuffman(component.huffmanTableDC);
var diff=t===0?0:receiveAndExtend(t);
zz[0]=component.pred+=diff;
var k=1;
while(k<64){
var rs=decodeHuffman(component.huffmanTableAC);
var s=rs&15,r=rs>>4;
if(s===0){
if(r<15)
break;
k+=16;
continue;
}
k+=r;
var z=dctZigZag[k];
zz[z]=receiveAndExtend(s);
k++;
}
}
function decodeDCFirst(component,zz){
var t=decodeHuffman(component.huffmanTableDC);
var diff=t===0?0:receiveAndExtend(t)<<successive;
zz[0]=component.pred+=diff;
}
function decodeDCSuccessive(component,zz){
zz[0]|=readBit()<<successive;
}
var eobrun=0;
function decodeACFirst(component,zz){
if(eobrun>0){
eobrun--;
return;
}
var k=spectralStart,e=spectralEnd;
while(k<=e){
var rs=decodeHuffman(component.huffmanTableAC);
var s=rs&15,r=rs>>4;
if(s===0){
if(r<15){
eobrun=receive(r)+(1<<r)-1;
break;
}
k+=16;
continue;
}
k+=r;
var z=dctZigZag[k];
zz[z]=receiveAndExtend(s)*(1<<successive);
k++;
}
}
var successiveACState=0,successiveACNextValue;
function decodeACSuccessive(component,zz){
var k=spectralStart,e=spectralEnd,r=0;
while(k<=e){
var z=dctZigZag[k];
switch(successiveACState){
case 0:
var rs=decodeHuffman(component.huffmanTableAC);
var s=rs&15,r=rs>>4;
if(s===0){
if(r<15){
eobrun=receive(r)+(1<<r);
successiveACState=4;
}else{
r=16;
successiveACState=1;
}
}else{
if(s!==1)
throw"invalid ACn encoding";
successiveACNextValue=receiveAndExtend(s);
successiveACState=r?2:3;
}
continue;
case 1:
case 2:
if(zz[z])
zz[z]+=readBit()<<successive;else
{
r--;
if(r===0)
successiveACState=successiveACState==2?3:0;
}
break;
case 3:
if(zz[z])
zz[z]+=readBit()<<successive;else
{
zz[z]=successiveACNextValue<<successive;
successiveACState=0;
}
break;
case 4:
if(zz[z])
zz[z]+=readBit()<<successive;
break;}

k++;
}
if(successiveACState===4){
eobrun--;
if(eobrun===0)
successiveACState=0;
}
}
function decodeMcu(component,decode,mcu,row,col){
var mcuRow=mcu/mcusPerLine|0;
var mcuCol=mcu%mcusPerLine;
var blockRow=mcuRow*component.v+row;
var blockCol=mcuCol*component.h+col;
decode(component,component.blocks[blockRow][blockCol]);
}
function decodeBlock(component,decode,mcu){
var blockRow=mcu/component.blocksPerLine|0;
var blockCol=mcu%component.blocksPerLine;
decode(component,component.blocks[blockRow][blockCol]);
}

var componentsLength=components.length;
var component,i,j,k,n;
var decodeFn;
if(progressive){
if(spectralStart===0)
decodeFn=successivePrev===0?decodeDCFirst:decodeDCSuccessive;else

decodeFn=successivePrev===0?decodeACFirst:decodeACSuccessive;
}else{
decodeFn=decodeBaseline;
}

var mcu=0,marker;
var mcuExpected;
if(componentsLength==1){
mcuExpected=components[0].blocksPerLine*components[0].blocksPerColumn;
}else{
mcuExpected=mcusPerLine*frame.mcusPerColumn;
}
if(!resetInterval)resetInterval=mcuExpected;

var h,v;
while(mcu<mcuExpected){

for(i=0;i<componentsLength;i++)
components[i].pred=0;
eobrun=0;

if(componentsLength==1){
component=components[0];
for(n=0;n<resetInterval;n++){
decodeBlock(component,decodeFn,mcu);
mcu++;
}
}else{
for(n=0;n<resetInterval;n++){
for(i=0;i<componentsLength;i++){
component=components[i];
h=component.h;
v=component.v;
for(j=0;j<v;j++){
for(k=0;k<h;k++){
decodeMcu(component,decodeFn,mcu,j,k);
}
}
}
mcu++;


if(mcu===mcuExpected)break;
}
}


bitsCount=0;
marker=data[offset]<<8|data[offset+1];
if(marker<0xFF00){
throw"marker was not found";
}

if(marker>=0xFFD0&&marker<=0xFFD7){
offset+=2;
}else

break;
}

return offset-startOffset;
}

function buildComponentData(frame,component){
var lines=[];
var blocksPerLine=component.blocksPerLine;
var blocksPerColumn=component.blocksPerColumn;
var samplesPerLine=blocksPerLine<<3;
var R=new Int32Array(64),r=new Uint8Array(64);






function quantizeAndInverse(zz,dataOut,dataIn){
var qt=component.quantizationTable;
var v0,v1,v2,v3,v4,v5,v6,v7,t;
var p=dataIn;
var i;


for(i=0;i<64;i++)
p[i]=zz[i]*qt[i];


for(i=0;i<8;++i){
var row=8*i;


if(p[1+row]==0&&p[2+row]==0&&p[3+row]==0&&
p[4+row]==0&&p[5+row]==0&&p[6+row]==0&&
p[7+row]==0){
t=dctSqrt2*p[0+row]+512>>10;
p[0+row]=t;
p[1+row]=t;
p[2+row]=t;
p[3+row]=t;
p[4+row]=t;
p[5+row]=t;
p[6+row]=t;
p[7+row]=t;
continue;
}


v0=dctSqrt2*p[0+row]+128>>8;
v1=dctSqrt2*p[4+row]+128>>8;
v2=p[2+row];
v3=p[6+row];
v4=dctSqrt1d2*(p[1+row]-p[7+row])+128>>8;
v7=dctSqrt1d2*(p[1+row]+p[7+row])+128>>8;
v5=p[3+row]<<4;
v6=p[5+row]<<4;


t=v0-v1+1>>1;
v0=v0+v1+1>>1;
v1=t;
t=v2*dctSin6+v3*dctCos6+128>>8;
v2=v2*dctCos6-v3*dctSin6+128>>8;
v3=t;
t=v4-v6+1>>1;
v4=v4+v6+1>>1;
v6=t;
t=v7+v5+1>>1;
v5=v7-v5+1>>1;
v7=t;


t=v0-v3+1>>1;
v0=v0+v3+1>>1;
v3=t;
t=v1-v2+1>>1;
v1=v1+v2+1>>1;
v2=t;
t=v4*dctSin3+v7*dctCos3+2048>>12;
v4=v4*dctCos3-v7*dctSin3+2048>>12;
v7=t;
t=v5*dctSin1+v6*dctCos1+2048>>12;
v5=v5*dctCos1-v6*dctSin1+2048>>12;
v6=t;


p[0+row]=v0+v7;
p[7+row]=v0-v7;
p[1+row]=v1+v6;
p[6+row]=v1-v6;
p[2+row]=v2+v5;
p[5+row]=v2-v5;
p[3+row]=v3+v4;
p[4+row]=v3-v4;
}


for(i=0;i<8;++i){
var col=i;


if(p[1*8+col]==0&&p[2*8+col]==0&&p[3*8+col]==0&&
p[4*8+col]==0&&p[5*8+col]==0&&p[6*8+col]==0&&
p[7*8+col]==0){
t=dctSqrt2*dataIn[i+0]+8192>>14;
p[0*8+col]=t;
p[1*8+col]=t;
p[2*8+col]=t;
p[3*8+col]=t;
p[4*8+col]=t;
p[5*8+col]=t;
p[6*8+col]=t;
p[7*8+col]=t;
continue;
}


v0=dctSqrt2*p[0*8+col]+2048>>12;
v1=dctSqrt2*p[4*8+col]+2048>>12;
v2=p[2*8+col];
v3=p[6*8+col];
v4=dctSqrt1d2*(p[1*8+col]-p[7*8+col])+2048>>12;
v7=dctSqrt1d2*(p[1*8+col]+p[7*8+col])+2048>>12;
v5=p[3*8+col];
v6=p[5*8+col];


t=v0-v1+1>>1;
v0=v0+v1+1>>1;
v1=t;
t=v2*dctSin6+v3*dctCos6+2048>>12;
v2=v2*dctCos6-v3*dctSin6+2048>>12;
v3=t;
t=v4-v6+1>>1;
v4=v4+v6+1>>1;
v6=t;
t=v7+v5+1>>1;
v5=v7-v5+1>>1;
v7=t;


t=v0-v3+1>>1;
v0=v0+v3+1>>1;
v3=t;
t=v1-v2+1>>1;
v1=v1+v2+1>>1;
v2=t;
t=v4*dctSin3+v7*dctCos3+2048>>12;
v4=v4*dctCos3-v7*dctSin3+2048>>12;
v7=t;
t=v5*dctSin1+v6*dctCos1+2048>>12;
v5=v5*dctCos1-v6*dctSin1+2048>>12;
v6=t;


p[0*8+col]=v0+v7;
p[7*8+col]=v0-v7;
p[1*8+col]=v1+v6;
p[6*8+col]=v1-v6;
p[2*8+col]=v2+v5;
p[5*8+col]=v2-v5;
p[3*8+col]=v3+v4;
p[4*8+col]=v3-v4;
}


for(i=0;i<64;++i){
var sample=128+(p[i]+8>>4);
dataOut[i]=sample<0?0:sample>0xFF?0xFF:sample;
}
}

var i,j;
for(var blockRow=0;blockRow<blocksPerColumn;blockRow++){
var scanLine=blockRow<<3;
for(i=0;i<8;i++)
lines.push(new Uint8Array(samplesPerLine));
for(var blockCol=0;blockCol<blocksPerLine;blockCol++){
quantizeAndInverse(component.blocks[blockRow][blockCol],r,R);

var offset=0,sample=blockCol<<3;
for(j=0;j<8;j++){
var line=lines[scanLine+j];
for(i=0;i<8;i++)
line[sample+i]=r[offset++];
}
}
}
return lines;
}

function clampTo8bit(a){
return a<0?0:a>255?255:a;
}

constructor.prototype={
load:function load(path){
var xhr=new XMLHttpRequest();
xhr.open("GET",path,true);
xhr.responseType="arraybuffer";
xhr.onload=function(){

var data=new Uint8Array(xhr.response||xhr.mozResponseArrayBuffer);
this.parse(data);
if(this.onload)
this.onload();
}.bind(this);
xhr.send(null);
},
parse:function parse(data){
var offset=0,length=data.length;
function readUint16(){
var value=data[offset]<<8|data[offset+1];
offset+=2;
return value;
}
function readDataBlock(){
var length=readUint16();
var array=data.subarray(offset,offset+length-2);
offset+=array.length;
return array;
}
function prepareComponents(frame){
var maxH=0,maxV=0;
var component,componentId;
for(componentId in frame.components){
if(frame.components.hasOwnProperty(componentId)){
component=frame.components[componentId];
if(maxH<component.h)maxH=component.h;
if(maxV<component.v)maxV=component.v;
}
}
var mcusPerLine=Math.ceil(frame.samplesPerLine/8/maxH);
var mcusPerColumn=Math.ceil(frame.scanLines/8/maxV);
for(componentId in frame.components){
if(frame.components.hasOwnProperty(componentId)){
component=frame.components[componentId];
var blocksPerLine=Math.ceil(Math.ceil(frame.samplesPerLine/8)*component.h/maxH);
var blocksPerColumn=Math.ceil(Math.ceil(frame.scanLines/8)*component.v/maxV);
var blocksPerLineForMcu=mcusPerLine*component.h;
var blocksPerColumnForMcu=mcusPerColumn*component.v;
var blocks=[];
for(var i=0;i<blocksPerColumnForMcu;i++){
var row=[];
for(var j=0;j<blocksPerLineForMcu;j++)
row.push(new Int32Array(64));
blocks.push(row);
}
component.blocksPerLine=blocksPerLine;
component.blocksPerColumn=blocksPerColumn;
component.blocks=blocks;
}
}
frame.maxH=maxH;
frame.maxV=maxV;
frame.mcusPerLine=mcusPerLine;
frame.mcusPerColumn=mcusPerColumn;
}
var jfif=null;
var adobe=null;
var pixels=null;
var frame,resetInterval;
var quantizationTables=[],frames=[];
var huffmanTablesAC=[],huffmanTablesDC=[];
var fileMarker=readUint16();
if(fileMarker!=0xFFD8){
throw"SOI not found";
}

fileMarker=readUint16();
while(fileMarker!=0xFFD9){
var i,j,l;
switch(fileMarker){
case 0xFF00:break;
case 0xFFE0:
case 0xFFE1:
case 0xFFE2:
case 0xFFE3:
case 0xFFE4:
case 0xFFE5:
case 0xFFE6:
case 0xFFE7:
case 0xFFE8:
case 0xFFE9:
case 0xFFEA:
case 0xFFEB:
case 0xFFEC:
case 0xFFED:
case 0xFFEE:
case 0xFFEF:
case 0xFFFE:
var appData=readDataBlock();

if(fileMarker===0xFFE0){
if(appData[0]===0x4A&&appData[1]===0x46&&appData[2]===0x49&&
appData[3]===0x46&&appData[4]===0){
jfif={
version:{major:appData[5],minor:appData[6]},
densityUnits:appData[7],
xDensity:appData[8]<<8|appData[9],
yDensity:appData[10]<<8|appData[11],
thumbWidth:appData[12],
thumbHeight:appData[13],
thumbData:appData.subarray(14,14+3*appData[12]*appData[13])};

}
}

if(fileMarker===0xFFEE){
if(appData[0]===0x41&&appData[1]===0x64&&appData[2]===0x6F&&
appData[3]===0x62&&appData[4]===0x65&&appData[5]===0){
adobe={
version:appData[6],
flags0:appData[7]<<8|appData[8],
flags1:appData[9]<<8|appData[10],
transformCode:appData[11]};

}
}
break;

case 0xFFDB:
var quantizationTablesLength=readUint16();
var quantizationTablesEnd=quantizationTablesLength+offset-2;
while(offset<quantizationTablesEnd){
var quantizationTableSpec=data[offset++];
var tableData=new Int32Array(64);
if(quantizationTableSpec>>4===0){
for(j=0;j<64;j++){
var z=dctZigZag[j];
tableData[z]=data[offset++];
}
}else if(quantizationTableSpec>>4===1){
for(j=0;j<64;j++){
var z=dctZigZag[j];
tableData[z]=readUint16();
}
}else
throw"DQT: invalid table spec";
quantizationTables[quantizationTableSpec&15]=tableData;
}
break;

case 0xFFC0:
case 0xFFC1:
case 0xFFC2:
readUint16();
frame={};
frame.extended=fileMarker===0xFFC1;
frame.progressive=fileMarker===0xFFC2;
frame.precision=data[offset++];
frame.scanLines=readUint16();
frame.samplesPerLine=readUint16();
frame.components={};
frame.componentsOrder=[];
var componentsCount=data[offset++],componentId;
var maxH=0,maxV=0;
for(i=0;i<componentsCount;i++){
componentId=data[offset];
var h=data[offset+1]>>4;
var v=data[offset+1]&15;
var qId=data[offset+2];
frame.componentsOrder.push(componentId);
frame.components[componentId]={
h:h,
v:v,
quantizationIdx:qId};

offset+=3;
}
prepareComponents(frame);
frames.push(frame);
break;

case 0xFFC4:
var huffmanLength=readUint16();
for(i=2;i<huffmanLength;){
var huffmanTableSpec=data[offset++];
var codeLengths=new Uint8Array(16);
var codeLengthSum=0;
for(j=0;j<16;j++,offset++)
codeLengthSum+=codeLengths[j]=data[offset];
var huffmanValues=new Uint8Array(codeLengthSum);
for(j=0;j<codeLengthSum;j++,offset++)
huffmanValues[j]=data[offset];
i+=17+codeLengthSum;

(huffmanTableSpec>>4===0?
huffmanTablesDC:huffmanTablesAC)[huffmanTableSpec&15]=
buildHuffmanTable(codeLengths,huffmanValues);
}
break;

case 0xFFDD:
readUint16();
resetInterval=readUint16();
break;

case 0xFFDA:
var scanLength=readUint16();
var selectorsCount=data[offset++];
var components=[],component;
for(i=0;i<selectorsCount;i++){
component=frame.components[data[offset++]];
var tableSpec=data[offset++];
component.huffmanTableDC=huffmanTablesDC[tableSpec>>4];
component.huffmanTableAC=huffmanTablesAC[tableSpec&15];
components.push(component);
}
var spectralStart=data[offset++];
var spectralEnd=data[offset++];
var successiveApproximation=data[offset++];
var processed=decodeScan(data,offset,
frame,components,resetInterval,
spectralStart,spectralEnd,
successiveApproximation>>4,successiveApproximation&15);
offset+=processed;
break;
default:
if(data[offset-3]==0xFF&&
data[offset-2]>=0xC0&&data[offset-2]<=0xFE){


offset-=3;
break;
}
throw"unknown JPEG marker "+fileMarker.toString(16);}

fileMarker=readUint16();
}
if(frames.length!=1)
throw"only single frame JPEGs supported";


for(var i=0;i<frames.length;i++){
var cp=frames[i].components;
for(var j in cp){
cp[j].quantizationTable=quantizationTables[cp[j].quantizationIdx];
delete cp[j].quantizationIdx;
}
}

this.width=frame.samplesPerLine;
this.height=frame.scanLines;
this.jfif=jfif;
this.adobe=adobe;
this.components=[];
for(var i=0;i<frame.componentsOrder.length;i++){
var component=frame.components[frame.componentsOrder[i]];
this.components.push({
lines:buildComponentData(frame,component),
scaleX:component.h/frame.maxH,
scaleY:component.v/frame.maxV});

}
},
getData:function getData(width,height){
var scaleX=this.width/width,scaleY=this.height/height;

var component1,component2,component3,component4;
var component1Line,component2Line,component3Line,component4Line;
var x,y;
var offset=0;
var Y,Cb,Cr,K,C,M,Ye,R,G,B;
var colorTransform;
var dataLength=width*height*this.components.length;
var data=new Uint8Array(dataLength);
switch(this.components.length){
case 1:
component1=this.components[0];
for(y=0;y<height;y++){
component1Line=component1.lines[0|y*component1.scaleY*scaleY];
for(x=0;x<width;x++){
Y=component1Line[0|x*component1.scaleX*scaleX];

data[offset++]=Y;
}
}
break;
case 2:

component1=this.components[0];
component2=this.components[1];
for(y=0;y<height;y++){
component1Line=component1.lines[0|y*component1.scaleY*scaleY];
component2Line=component2.lines[0|y*component2.scaleY*scaleY];
for(x=0;x<width;x++){
Y=component1Line[0|x*component1.scaleX*scaleX];
data[offset++]=Y;
Y=component2Line[0|x*component2.scaleX*scaleX];
data[offset++]=Y;
}
}
break;
case 3:

colorTransform=true;

if(this.adobe&&this.adobe.transformCode)
colorTransform=true;else
if(typeof this.colorTransform!=='undefined')
colorTransform=!!this.colorTransform;

component1=this.components[0];
component2=this.components[1];
component3=this.components[2];
for(y=0;y<height;y++){
component1Line=component1.lines[0|y*component1.scaleY*scaleY];
component2Line=component2.lines[0|y*component2.scaleY*scaleY];
component3Line=component3.lines[0|y*component3.scaleY*scaleY];
for(x=0;x<width;x++){
if(!colorTransform){
R=component1Line[0|x*component1.scaleX*scaleX];
G=component2Line[0|x*component2.scaleX*scaleX];
B=component3Line[0|x*component3.scaleX*scaleX];
}else{
Y=component1Line[0|x*component1.scaleX*scaleX];
Cb=component2Line[0|x*component2.scaleX*scaleX];
Cr=component3Line[0|x*component3.scaleX*scaleX];

R=clampTo8bit(Y+1.402*(Cr-128));
G=clampTo8bit(Y-0.3441363*(Cb-128)-0.71413636*(Cr-128));
B=clampTo8bit(Y+1.772*(Cb-128));
}

data[offset++]=R;
data[offset++]=G;
data[offset++]=B;
}
}
break;
case 4:
if(!this.adobe)
throw'Unsupported color mode (4 components)';

colorTransform=false;

if(this.adobe&&this.adobe.transformCode)
colorTransform=true;else
if(typeof this.colorTransform!=='undefined')
colorTransform=!!this.colorTransform;

component1=this.components[0];
component2=this.components[1];
component3=this.components[2];
component4=this.components[3];
for(y=0;y<height;y++){
component1Line=component1.lines[0|y*component1.scaleY*scaleY];
component2Line=component2.lines[0|y*component2.scaleY*scaleY];
component3Line=component3.lines[0|y*component3.scaleY*scaleY];
component4Line=component4.lines[0|y*component4.scaleY*scaleY];
for(x=0;x<width;x++){
if(!colorTransform){
C=component1Line[0|x*component1.scaleX*scaleX];
M=component2Line[0|x*component2.scaleX*scaleX];
Ye=component3Line[0|x*component3.scaleX*scaleX];
K=component4Line[0|x*component4.scaleX*scaleX];
}else{
Y=component1Line[0|x*component1.scaleX*scaleX];
Cb=component2Line[0|x*component2.scaleX*scaleX];
Cr=component3Line[0|x*component3.scaleX*scaleX];
K=component4Line[0|x*component4.scaleX*scaleX];

C=255-clampTo8bit(Y+1.402*(Cr-128));
M=255-clampTo8bit(Y-0.3441363*(Cb-128)-0.71413636*(Cr-128));
Ye=255-clampTo8bit(Y+1.772*(Cb-128));
}
data[offset++]=255-C;
data[offset++]=255-M;
data[offset++]=255-Ye;
data[offset++]=255-K;
}
}
break;
default:
throw'Unsupported color mode';}

return data;
},
copyToImageData:function copyToImageData(imageData){
var width=imageData.width,height=imageData.height;
var imageDataArray=imageData.data;
var data=this.getData(width,height);
var i=0,j=0,x,y;
var Y,K,C,M,R,G,B;
switch(this.components.length){
case 1:
for(y=0;y<height;y++){
for(x=0;x<width;x++){
Y=data[i++];

imageDataArray[j++]=Y;
imageDataArray[j++]=Y;
imageDataArray[j++]=Y;
imageDataArray[j++]=255;
}
}
break;
case 3:
for(y=0;y<height;y++){
for(x=0;x<width;x++){
R=data[i++];
G=data[i++];
B=data[i++];

imageDataArray[j++]=R;
imageDataArray[j++]=G;
imageDataArray[j++]=B;
imageDataArray[j++]=255;
}
}
break;
case 4:
for(y=0;y<height;y++){
for(x=0;x<width;x++){
C=data[i++];
M=data[i++];
Y=data[i++];
K=data[i++];

R=255-clampTo8bit(C*(1-K/255)+K);
G=255-clampTo8bit(M*(1-K/255)+K);
B=255-clampTo8bit(Y*(1-K/255)+K);

imageDataArray[j++]=R;
imageDataArray[j++]=G;
imageDataArray[j++]=B;
imageDataArray[j++]=255;
}
}
break;
default:
throw'Unsupported color mode';}

}};


return constructor;
}();
module.exports=decode;

function decode(jpegData){
var arr=new Uint8Array(jpegData);
var decoder=new JpegImage();
decoder.parse(arr);

var image={
width:decoder.width,
height:decoder.height,
data:new Buffer(decoder.width*decoder.height*4)};


decoder.copyToImageData(image);

return image;
}

}).call(this,require("buffer").Buffer);
},{"buffer":114}],134:[function(require,module,exports){
(function(Buffer){





































var btoa=btoa||function(buf){
return new Buffer(buf).toString('base64');
};

function JPEGEncoder(quality){
var self=this;
var fround=Math.round;
var ffloor=Math.floor;
var YTable=new Array(64);
var UVTable=new Array(64);
var fdtbl_Y=new Array(64);
var fdtbl_UV=new Array(64);
var YDC_HT;
var UVDC_HT;
var YAC_HT;
var UVAC_HT;

var bitcode=new Array(65535);
var category=new Array(65535);
var outputfDCTQuant=new Array(64);
var DU=new Array(64);
var byteout=[];
var bytenew=0;
var bytepos=7;

var YDU=new Array(64);
var UDU=new Array(64);
var VDU=new Array(64);
var clt=new Array(256);
var RGB_YUV_TABLE=new Array(2048);
var currentQuality;

var ZigZag=[
0,1,5,6,14,15,27,28,
2,4,7,13,16,26,29,42,
3,8,12,17,25,30,41,43,
9,11,18,24,31,40,44,53,
10,19,23,32,39,45,52,54,
20,22,33,38,46,51,55,60,
21,34,37,47,50,56,59,61,
35,36,48,49,57,58,62,63];


var std_dc_luminance_nrcodes=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0];
var std_dc_luminance_values=[0,1,2,3,4,5,6,7,8,9,10,11];
var std_ac_luminance_nrcodes=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d];
var std_ac_luminance_values=[
0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,
0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,
0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,
0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,
0x24,0x33,0x62,0x72,0x82,0x09,0x0a,0x16,
0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,
0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,
0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,
0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,
0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,
0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,
0x7a,0x83,0x84,0x85,0x86,0x87,0x88,0x89,
0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,
0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,
0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,
0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,
0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,
0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,
0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,
0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,
0xf9,0xfa];


var std_dc_chrominance_nrcodes=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0];
var std_dc_chrominance_values=[0,1,2,3,4,5,6,7,8,9,10,11];
var std_ac_chrominance_nrcodes=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77];
var std_ac_chrominance_values=[
0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,
0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,
0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,
0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,
0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,
0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,
0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,
0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,
0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,
0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,
0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,
0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,
0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,
0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,
0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,
0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,
0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,
0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,
0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,
0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,
0xf9,0xfa];


function initQuantTables(sf){
var YQT=[
16,11,10,16,24,40,51,61,
12,12,14,19,26,58,60,55,
14,13,16,24,40,57,69,56,
14,17,22,29,51,87,80,62,
18,22,37,56,68,109,103,77,
24,35,55,64,81,104,113,92,
49,64,78,87,103,121,120,101,
72,92,95,98,112,100,103,99];


for(var i=0;i<64;i++){
var t=ffloor((YQT[i]*sf+50)/100);
if(t<1){
t=1;
}else if(t>255){
t=255;
}
YTable[ZigZag[i]]=t;
}
var UVQT=[
17,18,24,47,99,99,99,99,
18,21,26,66,99,99,99,99,
24,26,56,99,99,99,99,99,
47,66,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99];

for(var j=0;j<64;j++){
var u=ffloor((UVQT[j]*sf+50)/100);
if(u<1){
u=1;
}else if(u>255){
u=255;
}
UVTable[ZigZag[j]]=u;
}
var aasf=[
1.0,1.387039845,1.306562965,1.175875602,
1.0,0.785694958,0.541196100,0.275899379];

var k=0;
for(var row=0;row<8;row++)
{
for(var col=0;col<8;col++)
{
fdtbl_Y[k]=1.0/(YTable[ZigZag[k]]*aasf[row]*aasf[col]*8.0);
fdtbl_UV[k]=1.0/(UVTable[ZigZag[k]]*aasf[row]*aasf[col]*8.0);
k++;
}
}
}

function computeHuffmanTbl(nrcodes,std_table){
var codevalue=0;
var pos_in_table=0;
var HT=new Array();
for(var k=1;k<=16;k++){
for(var j=1;j<=nrcodes[k];j++){
HT[std_table[pos_in_table]]=[];
HT[std_table[pos_in_table]][0]=codevalue;
HT[std_table[pos_in_table]][1]=k;
pos_in_table++;
codevalue++;
}
codevalue*=2;
}
return HT;
}

function initHuffmanTbl()
{
YDC_HT=computeHuffmanTbl(std_dc_luminance_nrcodes,std_dc_luminance_values);
UVDC_HT=computeHuffmanTbl(std_dc_chrominance_nrcodes,std_dc_chrominance_values);
YAC_HT=computeHuffmanTbl(std_ac_luminance_nrcodes,std_ac_luminance_values);
UVAC_HT=computeHuffmanTbl(std_ac_chrominance_nrcodes,std_ac_chrominance_values);
}

function initCategoryNumber()
{
var nrlower=1;
var nrupper=2;
for(var cat=1;cat<=15;cat++){

for(var nr=nrlower;nr<nrupper;nr++){
category[32767+nr]=cat;
bitcode[32767+nr]=[];
bitcode[32767+nr][1]=cat;
bitcode[32767+nr][0]=nr;
}

for(var nrneg=-(nrupper-1);nrneg<=-nrlower;nrneg++){
category[32767+nrneg]=cat;
bitcode[32767+nrneg]=[];
bitcode[32767+nrneg][1]=cat;
bitcode[32767+nrneg][0]=nrupper-1+nrneg;
}
nrlower<<=1;
nrupper<<=1;
}
}

function initRGBYUVTable(){
for(var i=0;i<256;i++){
RGB_YUV_TABLE[i]=19595*i;
RGB_YUV_TABLE[i+256>>0]=38470*i;
RGB_YUV_TABLE[i+512>>0]=7471*i+0x8000;
RGB_YUV_TABLE[i+768>>0]=-11059*i;
RGB_YUV_TABLE[i+1024>>0]=-21709*i;
RGB_YUV_TABLE[i+1280>>0]=32768*i+0x807FFF;
RGB_YUV_TABLE[i+1536>>0]=-27439*i;
RGB_YUV_TABLE[i+1792>>0]=-5329*i;
}
}


function writeBits(bs)
{
var value=bs[0];
var posval=bs[1]-1;
while(posval>=0){
if(value&1<<posval){
bytenew|=1<<bytepos;
}
posval--;
bytepos--;
if(bytepos<0){
if(bytenew==0xFF){
writeByte(0xFF);
writeByte(0);
}else
{
writeByte(bytenew);
}
bytepos=7;
bytenew=0;
}
}
}

function writeByte(value)
{

byteout.push(value);
}

function writeWord(value)
{
writeByte(value>>8&0xFF);
writeByte(value&0xFF);
}


function fDCTQuant(data,fdtbl)
{
var d0,d1,d2,d3,d4,d5,d6,d7;

var dataOff=0;
var i;
const I8=8;
const I64=64;
for(i=0;i<I8;++i)
{
d0=data[dataOff];
d1=data[dataOff+1];
d2=data[dataOff+2];
d3=data[dataOff+3];
d4=data[dataOff+4];
d5=data[dataOff+5];
d6=data[dataOff+6];
d7=data[dataOff+7];

var tmp0=d0+d7;
var tmp7=d0-d7;
var tmp1=d1+d6;
var tmp6=d1-d6;
var tmp2=d2+d5;
var tmp5=d2-d5;
var tmp3=d3+d4;
var tmp4=d3-d4;


var tmp10=tmp0+tmp3;
var tmp13=tmp0-tmp3;
var tmp11=tmp1+tmp2;
var tmp12=tmp1-tmp2;

data[dataOff]=tmp10+tmp11;
data[dataOff+4]=tmp10-tmp11;

var z1=(tmp12+tmp13)*0.707106781;
data[dataOff+2]=tmp13+z1;
data[dataOff+6]=tmp13-z1;


tmp10=tmp4+tmp5;
tmp11=tmp5+tmp6;
tmp12=tmp6+tmp7;


var z5=(tmp10-tmp12)*0.382683433;
var z2=0.541196100*tmp10+z5;
var z4=1.306562965*tmp12+z5;
var z3=tmp11*0.707106781;

var z11=tmp7+z3;
var z13=tmp7-z3;

data[dataOff+5]=z13+z2;
data[dataOff+3]=z13-z2;
data[dataOff+1]=z11+z4;
data[dataOff+7]=z11-z4;

dataOff+=8;
}


dataOff=0;
for(i=0;i<I8;++i)
{
d0=data[dataOff];
d1=data[dataOff+8];
d2=data[dataOff+16];
d3=data[dataOff+24];
d4=data[dataOff+32];
d5=data[dataOff+40];
d6=data[dataOff+48];
d7=data[dataOff+56];

var tmp0p2=d0+d7;
var tmp7p2=d0-d7;
var tmp1p2=d1+d6;
var tmp6p2=d1-d6;
var tmp2p2=d2+d5;
var tmp5p2=d2-d5;
var tmp3p2=d3+d4;
var tmp4p2=d3-d4;


var tmp10p2=tmp0p2+tmp3p2;
var tmp13p2=tmp0p2-tmp3p2;
var tmp11p2=tmp1p2+tmp2p2;
var tmp12p2=tmp1p2-tmp2p2;

data[dataOff]=tmp10p2+tmp11p2;
data[dataOff+32]=tmp10p2-tmp11p2;

var z1p2=(tmp12p2+tmp13p2)*0.707106781;
data[dataOff+16]=tmp13p2+z1p2;
data[dataOff+48]=tmp13p2-z1p2;


tmp10p2=tmp4p2+tmp5p2;
tmp11p2=tmp5p2+tmp6p2;
tmp12p2=tmp6p2+tmp7p2;


var z5p2=(tmp10p2-tmp12p2)*0.382683433;
var z2p2=0.541196100*tmp10p2+z5p2;
var z4p2=1.306562965*tmp12p2+z5p2;
var z3p2=tmp11p2*0.707106781;

var z11p2=tmp7p2+z3p2;
var z13p2=tmp7p2-z3p2;

data[dataOff+40]=z13p2+z2p2;
data[dataOff+24]=z13p2-z2p2;
data[dataOff+8]=z11p2+z4p2;
data[dataOff+56]=z11p2-z4p2;

dataOff++;
}


var fDCTQuant;
for(i=0;i<I64;++i)
{

fDCTQuant=data[i]*fdtbl[i];
outputfDCTQuant[i]=fDCTQuant>0.0?fDCTQuant+0.5|0:fDCTQuant-0.5|0;


}
return outputfDCTQuant;
}

function writeAPP0()
{
writeWord(0xFFE0);
writeWord(16);
writeByte(0x4A);
writeByte(0x46);
writeByte(0x49);
writeByte(0x46);
writeByte(0);
writeByte(1);
writeByte(1);
writeByte(0);
writeWord(1);
writeWord(1);
writeByte(0);
writeByte(0);
}

function writeSOF0(width,height)
{
writeWord(0xFFC0);
writeWord(17);
writeByte(8);
writeWord(height);
writeWord(width);
writeByte(3);
writeByte(1);
writeByte(0x11);
writeByte(0);
writeByte(2);
writeByte(0x11);
writeByte(1);
writeByte(3);
writeByte(0x11);
writeByte(1);
}

function writeDQT()
{
writeWord(0xFFDB);
writeWord(132);
writeByte(0);
for(var i=0;i<64;i++){
writeByte(YTable[i]);
}
writeByte(1);
for(var j=0;j<64;j++){
writeByte(UVTable[j]);
}
}

function writeDHT()
{
writeWord(0xFFC4);
writeWord(0x01A2);

writeByte(0);
for(var i=0;i<16;i++){
writeByte(std_dc_luminance_nrcodes[i+1]);
}
for(var j=0;j<=11;j++){
writeByte(std_dc_luminance_values[j]);
}

writeByte(0x10);
for(var k=0;k<16;k++){
writeByte(std_ac_luminance_nrcodes[k+1]);
}
for(var l=0;l<=161;l++){
writeByte(std_ac_luminance_values[l]);
}

writeByte(1);
for(var m=0;m<16;m++){
writeByte(std_dc_chrominance_nrcodes[m+1]);
}
for(var n=0;n<=11;n++){
writeByte(std_dc_chrominance_values[n]);
}

writeByte(0x11);
for(var o=0;o<16;o++){
writeByte(std_ac_chrominance_nrcodes[o+1]);
}
for(var p=0;p<=161;p++){
writeByte(std_ac_chrominance_values[p]);
}
}

function writeSOS()
{
writeWord(0xFFDA);
writeWord(12);
writeByte(3);
writeByte(1);
writeByte(0);
writeByte(2);
writeByte(0x11);
writeByte(3);
writeByte(0x11);
writeByte(0);
writeByte(0x3f);
writeByte(0);
}

function processDU(CDU,fdtbl,DC,HTDC,HTAC){
var EOB=HTAC[0x00];
var M16zeroes=HTAC[0xF0];
var pos;
const I16=16;
const I63=63;
const I64=64;
var DU_DCT=fDCTQuant(CDU,fdtbl);

for(var j=0;j<I64;++j){
DU[ZigZag[j]]=DU_DCT[j];
}
var Diff=DU[0]-DC;DC=DU[0];

if(Diff==0){
writeBits(HTDC[0]);
}else{
pos=32767+Diff;
writeBits(HTDC[category[pos]]);
writeBits(bitcode[pos]);
}

var end0pos=63;
for(;end0pos>0&&DU[end0pos]==0;end0pos--){};

if(end0pos==0){
writeBits(EOB);
return DC;
}
var i=1;
var lng;
while(i<=end0pos){
var startpos=i;
for(;DU[i]==0&&i<=end0pos;++i){}
var nrzeroes=i-startpos;
if(nrzeroes>=I16){
lng=nrzeroes>>4;
for(var nrmarker=1;nrmarker<=lng;++nrmarker)
writeBits(M16zeroes);
nrzeroes=nrzeroes&0xF;
}
pos=32767+DU[i];
writeBits(HTAC[(nrzeroes<<4)+category[pos]]);
writeBits(bitcode[pos]);
i++;
}
if(end0pos!=I63){
writeBits(EOB);
}
return DC;
}

function initCharLookupTable(){
var sfcc=String.fromCharCode;
for(var i=0;i<256;i++){
clt[i]=sfcc(i);
}
}

this.encode=function(image,quality)
{
var time_start=new Date().getTime();

if(quality)setQuality(quality);


byteout=new Array();
bytenew=0;
bytepos=7;


writeWord(0xFFD8);
writeAPP0();
writeDQT();
writeSOF0(image.width,image.height);
writeDHT();
writeSOS();



var DCY=0;
var DCU=0;
var DCV=0;

bytenew=0;
bytepos=7;


this.encode.displayName="_encode_";

var imageData=image.data;
var width=image.width;
var height=image.height;

var quadWidth=width*4;
var tripleWidth=width*3;

var x,y=0;
var r,g,b;
var start,p,col,row,pos;
while(y<height){
x=0;
while(x<quadWidth){
start=quadWidth*y+x;
p=start;
col=-1;
row=0;

for(pos=0;pos<64;pos++){
row=pos>>3;
col=(pos&7)*4;
p=start+row*quadWidth+col;

if(y+row>=height){
p-=quadWidth*(y+1+row-height);
}

if(x+col>=quadWidth){
p-=x+col-quadWidth+4;
}

r=imageData[p++];
g=imageData[p++];
b=imageData[p++];









YDU[pos]=(RGB_YUV_TABLE[r]+RGB_YUV_TABLE[g+256>>0]+RGB_YUV_TABLE[b+512>>0]>>16)-128;
UDU[pos]=(RGB_YUV_TABLE[r+768>>0]+RGB_YUV_TABLE[g+1024>>0]+RGB_YUV_TABLE[b+1280>>0]>>16)-128;
VDU[pos]=(RGB_YUV_TABLE[r+1280>>0]+RGB_YUV_TABLE[g+1536>>0]+RGB_YUV_TABLE[b+1792>>0]>>16)-128;

}

DCY=processDU(YDU,fdtbl_Y,DCY,YDC_HT,YAC_HT);
DCU=processDU(UDU,fdtbl_UV,DCU,UVDC_HT,UVAC_HT);
DCV=processDU(VDU,fdtbl_UV,DCV,UVDC_HT,UVAC_HT);
x+=32;
}
y+=8;
}





if(bytepos>=0){
var fillbits=[];
fillbits[1]=bytepos+1;
fillbits[0]=(1<<bytepos+1)-1;
writeBits(fillbits);
}

writeWord(0xFFD9);


return new Buffer(byteout);

var jpegDataUri='data:image/jpeg;base64,'+btoa(byteout.join(''));

byteout=[];


var duration=new Date().getTime()-time_start;



return jpegDataUri;
};

function setQuality(quality){
if(quality<=0){
quality=1;
}
if(quality>100){
quality=100;
}

if(currentQuality==quality)return;

var sf=0;
if(quality<50){
sf=Math.floor(5000/quality);
}else{
sf=Math.floor(200-quality*2);
}

initQuantTables(sf);
currentQuality=quality;

}

function init(){
var time_start=new Date().getTime();
if(!quality)quality=50;

initCharLookupTable();
initHuffmanTbl();
initCategoryNumber();
initRGBYUVTable();

setQuality(quality);
var duration=new Date().getTime()-time_start;

}

init();

};
module.exports=encode;

function encode(imgData,qu){
if(typeof qu==='undefined')qu=50;
var encoder=new JPEGEncoder(qu);
var data=encoder.encode(imgData,qu);
return{
data:data,
width:imgData.width,
height:imgData.height};

}


function getImageDataFromImage(idOrElement){
var theImg=typeof idOrElement=='string'?document.getElementById(idOrElement):idOrElement;
var cvs=document.createElement('canvas');
cvs.width=theImg.width;
cvs.height=theImg.height;
var ctx=cvs.getContext("2d");
ctx.drawImage(theImg,0,0);

return ctx.getImageData(0,0,cvs.width,cvs.height);
}

}).call(this,require("buffer").Buffer);
},{"buffer":114}],135:[function(require,module,exports){
(function(process){





'use strict';

const debug=require('debug');
const marky=require('marky');

const EventEmitter=require('events').EventEmitter;
const isWindows=process.platform==='win32';


const isBrowser=process.browser;

const colors={
red:isBrowser?'crimson':1,
yellow:isBrowser?'gold':3,
cyan:isBrowser?'darkturquoise':6,
green:isBrowser?'forestgreen':2,
blue:isBrowser?'steelblue':4,
magenta:isBrowser?'palevioletred':5};



debug.colors=[colors.cyan,colors.green,colors.blue,colors.magenta];

class Emitter extends EventEmitter{






issueStatus(title,argsArray){
if(title==='status'||title==='statusEnd'){
this.emit(title,[title,...argsArray]);
}
}







issueWarning(title,argsArray){
this.emit('warning',[title,...argsArray]);
}}


const loggersByTitle={};
const loggingBufferColumns=25;
let level_;

class Log{
static _logToStdErr(title,argsArray){
const log=Log.loggerfn(title);
log(...argsArray);
}

static loggerfn(title){
let log=loggersByTitle[title];
if(!log){
log=debug(title);
loggersByTitle[title]=log;

if(title.endsWith('error')){
log.color=colors.red;
}else if(title.endsWith('warn')){
log.color=colors.yellow;
}
}
return log;
}




static setLevel(level){
level_=level;
switch(level){
case'silent':
debug.enable('-*');
break;
case'verbose':
debug.enable('*');
break;
case'error':
debug.enable('-*, *:error');
break;
default:
debug.enable('*, -*:verbose');}

}







static formatProtocol(prefix,data,level){
const columns=!process||process.browser?Infinity:process.stdout.columns;
const method=data.method||'?????';
const maxLength=columns-method.length-prefix.length-loggingBufferColumns;

const snippet=data.params&&method!=='IO.read'?
JSON.stringify(data.params).substr(0,maxLength):'';
Log._logToStdErr(`${prefix}:${level||''}`,[method,snippet]);
}




static isVerbose(){
return level_==='verbose';
}

static time({msg,id,args=[]},level='log'){
marky.mark(id);
Log[level]('status',msg,...args);
}

static timeEnd({msg,id,args=[]},level='verbose'){
Log[level]('statusEnd',msg,...args);
marky.stop(id);
}

static log(title,...args){
Log.events.issueStatus(title,args);
return Log._logToStdErr(title,args);
}

static warn(title,...args){
Log.events.issueWarning(title,args);
return Log._logToStdErr(`${title}:warn`,args);
}

static error(title,...args){
return Log._logToStdErr(`${title}:error`,args);
}

static verbose(title,...args){
Log.events.issueStatus(title,args);
return Log._logToStdErr(`${title}:verbose`,args);
}






static greenify(str){
return`${Log.green}${str}${Log.reset}`;
}






static redify(str){
return`${Log.red}${str}${Log.reset}`;
}

static get green(){
return'\x1B[32m';
}

static get red(){
return'\x1B[31m';
}

static get yellow(){
return'\x1b[33m';
}

static get purple(){
return'\x1b[95m';
}

static get reset(){
return'\x1B[0m';
}

static get bold(){
return'\x1b[1m';
}

static get dim(){
return'\x1b[2m';
}

static get tick(){
return isWindows?'\u221A':'✓';
}

static get cross(){
return isWindows?'\u00D7':'✘';
}

static get whiteSmallSquare(){
return isWindows?'\u0387':'▫';
}

static get heavyHorizontal(){
return isWindows?'\u2500':'━';
}

static get heavyVertical(){
return isWindows?'\u2502 ':'┃ ';
}

static get heavyUpAndRight(){
return isWindows?'\u2514':'┗';
}

static get heavyVerticalAndRight(){
return isWindows?'\u251C':'┣';
}

static get heavyDownAndHorizontal(){
return isWindows?'\u252C':'┳';
}

static get doubleLightHorizontal(){
return'──';
}}


Log.events=new Emitter();
Log.takeTimeEntries=()=>{
const entries=marky.getEntries();
marky.clear();
return entries;
};
Log.getTimeEntries=()=>marky.getEntries();

module.exports=Log;

}).call(this,require('_process'));
},{"_process":170,"debug":136,"events":118,"marky":156}],136:[function(require,module,exports){
(function(process){






exports=module.exports=require('./debug');
exports.log=log;
exports.formatArgs=formatArgs;
exports.save=save;
exports.load=load;
exports.useColors=useColors;
exports.storage='undefined'!=typeof chrome&&
'undefined'!=typeof chrome.storage?
chrome.storage.local:
localstorage();





exports.colors=[
'lightseagreen',
'forestgreen',
'goldenrod',
'dodgerblue',
'darkorchid',
'crimson'];










function useColors(){



if(typeof window!=='undefined'&&window.process&&window.process.type==='renderer'){
return true;
}



return typeof document!=='undefined'&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||

typeof window!=='undefined'&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||


typeof navigator!=='undefined'&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||

typeof navigator!=='undefined'&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
}





exports.formatters.j=function(v){
try{
return JSON.stringify(v);
}catch(err){
return'[UnexpectedJSONParseError]: '+err.message;
}
};








function formatArgs(args){
var useColors=this.useColors;

args[0]=(useColors?'%c':'')+
this.namespace+(
useColors?' %c':' ')+
args[0]+(
useColors?'%c ':' ')+
'+'+exports.humanize(this.diff);

if(!useColors)return;

var c='color: '+this.color;
args.splice(1,0,c,'color: inherit');




var index=0;
var lastC=0;
args[0].replace(/%[a-zA-Z%]/g,function(match){
if('%%'===match)return;
index++;
if('%c'===match){


lastC=index;
}
});

args.splice(lastC,0,c);
}








function log(){


return'object'===typeof console&&
console.log&&
Function.prototype.apply.call(console.log,console,arguments);
}








function save(namespaces){
try{
if(null==namespaces){
exports.storage.removeItem('debug');
}else{
exports.storage.debug=namespaces;
}
}catch(e){}
}








function load(){
var r;
try{
r=exports.storage.debug;
}catch(e){}


if(!r&&typeof process!=='undefined'&&'env'in process){
r=process.env.DEBUG;
}

return r;
}





exports.enable(load());












function localstorage(){
try{
return window.localStorage;
}catch(e){}
}

}).call(this,require('_process'));
},{"./debug":137,"_process":170}],137:[function(require,module,exports){








exports=module.exports=createDebug.debug=createDebug['default']=createDebug;
exports.coerce=coerce;
exports.disable=disable;
exports.enable=enable;
exports.enabled=enabled;
exports.humanize=require('ms');





exports.names=[];
exports.skips=[];







exports.formatters={};





var prevTime;








function selectColor(namespace){
var hash=0,i;

for(i in namespace){
hash=(hash<<5)-hash+namespace.charCodeAt(i);
hash|=0;
}

return exports.colors[Math.abs(hash)%exports.colors.length];
}









function createDebug(namespace){

function debug(){

if(!debug.enabled)return;

var self=debug;


var curr=+new Date();
var ms=curr-(prevTime||curr);
self.diff=ms;
self.prev=prevTime;
self.curr=curr;
prevTime=curr;


var args=new Array(arguments.length);
for(var i=0;i<args.length;i++){
args[i]=arguments[i];
}

args[0]=exports.coerce(args[0]);

if('string'!==typeof args[0]){

args.unshift('%O');
}


var index=0;
args[0]=args[0].replace(/%([a-zA-Z%])/g,function(match,format){

if(match==='%%')return match;
index++;
var formatter=exports.formatters[format];
if('function'===typeof formatter){
var val=args[index];
match=formatter.call(self,val);


args.splice(index,1);
index--;
}
return match;
});


exports.formatArgs.call(self,args);

var logFn=debug.log||exports.log||console.log.bind(console);
logFn.apply(self,args);
}

debug.namespace=namespace;
debug.enabled=exports.enabled(namespace);
debug.useColors=exports.useColors();
debug.color=selectColor(namespace);


if('function'===typeof exports.init){
exports.init(debug);
}

return debug;
}









function enable(namespaces){
exports.save(namespaces);

exports.names=[];
exports.skips=[];

var split=(typeof namespaces==='string'?namespaces:'').split(/[\s,]+/);
var len=split.length;

for(var i=0;i<len;i++){
if(!split[i])continue;
namespaces=split[i].replace(/\*/g,'.*?');
if(namespaces[0]==='-'){
exports.skips.push(new RegExp('^'+namespaces.substr(1)+'$'));
}else{
exports.names.push(new RegExp('^'+namespaces+'$'));
}
}
}







function disable(){
exports.enable('');
}









function enabled(name){
var i,len;
for(i=0,len=exports.skips.length;i<len;i++){
if(exports.skips[i].test(name)){
return false;
}
}
for(i=0,len=exports.names.length;i<len;i++){
if(exports.names[i].test(name)){
return true;
}
}
return false;
}









function coerce(val){
if(val instanceof Error)return val.stack||val.message;
return val;
}

},{"ms":158}],138:[function(require,module,exports){














const BaseNode=require('lighthouse/lighthouse-core/lib/dependency-graph/base-node.js');

const CpuNode=require('lighthouse/lighthouse-core/lib/dependency-graph/cpu-node.js');

const LanternMetric=require('lighthouse/lighthouse-core/computed/metrics/lantern-metric');

const NetworkNode=require('lighthouse/lighthouse-core/lib/dependency-graph/network-node.js');
const{isBidRelatedRequest,isImpressionPing,isGoogleAds,isGptAdRequest,isGptTag,isGptImplTag}=require('../utils/resource-classification');
const{URL}=require('url');









function getFrame(event){

return event.args.frame||event.args.data&&event.args.data.frame||null;
}






function getCpuNodeUrls(cpuNode){
const results=new Set();
for(const{args}of cpuNode.childEvents){
if(args.data&&args.data.url){
results.add(args.data.url);
}
}
return Array.from(results);
}






function isAdTask(cpuNode){
return!!getCpuNodeUrls(cpuNode).find(
url=>isBidRelatedRequest(url)||isGoogleAds(new URL(url)));
}






function isLongTask(cpuNode){


return cpuNode.event.dur>50*1000;
}





function addEdges(graph){
const adRequestNodes=[];
const gptJsNodes=[];
graph.traverse(node=>{
if(node.type!==BaseNode.TYPES.NETWORK){
return;
}
if(isGptTag(node.record.url)&&node.record.resourceType==='Script'){
gptJsNodes.push(node);
}else if(isGptAdRequest(node.record)){
adRequestNodes.push(node);
}
});
graph.traverse(node=>{
if(node.type!==BaseNode.TYPES.NETWORK){
return;
}
if(isGptImplTag(node.record.url)){
for(const gptJsNode of gptJsNodes){
if(gptJsNode.record.endTime<=node.record.startTime){
node.addDependency(gptJsNode);
}
}
}
if(isBidRelatedRequest(node.record)){
for(const adNode of adRequestNodes){


if(adNode.record.startTime>=node.record.endTime){
node.addDependent(adNode);
}
}
}
if(isImpressionPing(node.record.url)){
for(const adNode of adRequestNodes){
if(adNode.record.endTime>node.record.startTime){
continue;
}
adNode.addDependent(node);
for(const dependent of adNode.getDependents()){
if(dependent.endTime<=node.startTime){
dependent.addDependency(node);
}
}
}
}
});
}


class AdLanternMetric extends LanternMetric{




static get COEFFICIENTS(){
return{
intercept:0,

optimistic:1,
pessimistic:0};

}







static getPessimisticGraph(graph){

const pessimisticGraph=graph.cloneWithRelationships(_=>true);
addEdges(pessimisticGraph);
return pessimisticGraph;
}







static getOptimisticGraph(graph){

const mainFrame=graph.record.frameId;
const pessimisticGraph=AdLanternMetric.getPessimisticGraph(graph);

const optimisticGraph=pessimisticGraph.cloneWithRelationships(node=>{
if(node.type===BaseNode.TYPES.CPU){
return(
isLongTask(node)||
isAdTask(node)||
!!getFrame(node.event)&&getFrame(node.event)!==mainFrame);
}
if(node.hasRenderBlockingPriority()){
return true;
}
const url=node.record.url;
return isBidRelatedRequest(url)||isGoogleAds(new URL(url));
});
return optimisticGraph;
}







static getEstimateFromSimulation(simulationResult,extras){
throw new Error(
'getEstimateFromSimulation not implemented by '+this.name);
}






static findTiming(nodeTimings,isTargetNode){
let leastTiming={startTime:Infinity,endTime:-Infinity,duration:0};
for(const[node,timing]of nodeTimings.entries()){
if(isTargetNode(node,timing)&&
leastTiming.startTime>timing.startTime){
leastTiming=timing;
}
}
return leastTiming;
}






static findNetworkTiming(nodeTimings,isTargetRequest){
return this.findTiming(
nodeTimings,
node=>
node.type===BaseNode.TYPES.NETWORK&&isTargetRequest(node.record));
}}


module.exports=AdLanternMetric;

},{"../utils/resource-classification":152,"lighthouse/lighthouse-core/computed/metrics/lantern-metric":28,"lighthouse/lighthouse-core/lib/dependency-graph/base-node.js":68,"lighthouse/lighthouse-core/lib/dependency-graph/cpu-node.js":69,"lighthouse/lighthouse-core/lib/dependency-graph/network-node.js":70,"url":"url"}],139:[function(require,module,exports){














const AdLanternMetric=require('./ad-lantern-metric');

const ComputedMetric=require('lighthouse/lighthouse-core/computed/metrics/metric');

const makeComputedArtifact=require('lighthouse/lighthouse-core/computed/computed-artifact');
const{getPageStartTime,getImpressionStartTime}=require('../utils/network-timing');
const{isImpressionPing}=require('../utils/resource-classification');






class LanternAdRenderTime extends AdLanternMetric{






static getEstimateFromSimulation(simulationResult,extras){
const{nodeTimings}=simulationResult;
const timeInMs=AdLanternMetric.findNetworkTiming(
nodeTimings,
req=>!!req.url&&isImpressionPing(new URL(req.url))).startTime;
return{timeInMs,nodeTimings};
}}





LanternAdRenderTime=makeComputedArtifact(LanternAdRenderTime);


class AdRenderTime extends ComputedMetric{






static async computeSimulatedMetric(data,context){

return LanternAdRenderTime.request(data,context);
}







static async computeObservedMetric(data,context){
const{networkRecords}=data;
const pageStartTime=getPageStartTime(networkRecords);
const impressionStartTime=getImpressionStartTime(networkRecords);
const firstPaintMs=(impressionStartTime-pageStartTime)*1000;
return Promise.resolve({timing:firstPaintMs});
}}





AdRenderTime=makeComputedArtifact(AdRenderTime);

module.exports=AdRenderTime;


},{"../utils/network-timing":150,"../utils/resource-classification":152,"./ad-lantern-metric":138,"lighthouse/lighthouse-core/computed/computed-artifact":8,"lighthouse/lighthouse-core/computed/metrics/metric":33}],140:[function(require,module,exports){














const AdLanternMetric=require('./ad-lantern-metric');

const ComputedMetric=require('lighthouse/lighthouse-core/computed/metrics/metric');

const makeComputedArtifact=require('lighthouse/lighthouse-core/computed/computed-artifact');
const{getAdStartTime,getPageStartTime}=require('../utils/network-timing');
const{isAdRequest}=require('../utils/resource-classification');






class LanternAdRequestTime extends AdLanternMetric{






static getEstimateFromSimulation(simulationResult,extras){
const{nodeTimings}=simulationResult;
const timeInMs=AdLanternMetric.findNetworkTiming(
nodeTimings,isAdRequest).startTime;
return{timeInMs,nodeTimings};
}}





LanternAdRequestTime=makeComputedArtifact(LanternAdRequestTime);


class AdRequestTime extends ComputedMetric{






static async computeSimulatedMetric(data,context){

return LanternAdRequestTime.request(data,context);
}






static async computeObservedMetric(data){
const{networkRecords}=data;
const pageStartTime=getPageStartTime(networkRecords);
const adStartTime=getAdStartTime(networkRecords);
const adRequestTimeMs=(adStartTime-pageStartTime)*1000;
return Promise.resolve({timing:adRequestTimeMs});
}}





AdRequestTime=makeComputedArtifact(AdRequestTime);

module.exports=AdRequestTime;

},{"../utils/network-timing":150,"../utils/resource-classification":152,"./ad-lantern-metric":138,"lighthouse/lighthouse-core/computed/computed-artifact":8,"lighthouse/lighthouse-core/computed/metrics/metric":33}],141:[function(require,module,exports){














const AdLanternMetric=require('./ad-lantern-metric');

const ComputedMetric=require('lighthouse/lighthouse-core/computed/metrics/metric');

const makeComputedArtifact=require('lighthouse/lighthouse-core/computed/computed-artifact');
const{getAdStartTime,getBidStartTime,getPageStartTime}=require('../utils/network-timing');
const{isAdRequest,isBidRequest}=require('../utils/resource-classification');






class LanternBidRequestTime extends AdLanternMetric{






static getEstimateFromSimulation(simulationResult,extras){
const{nodeTimings}=simulationResult;
const bidTimeInMs=AdLanternMetric.findNetworkTiming(
nodeTimings,isBidRequest).startTime;
const adRequestTimeMs=AdLanternMetric.findNetworkTiming(
nodeTimings,isAdRequest).startTime;
if(bidTimeInMs>adRequestTimeMs){
return{timeInMs:-1,nodeTimings};
}
return{timeInMs:bidTimeInMs,nodeTimings};
}}





LanternBidRequestTime=makeComputedArtifact(LanternBidRequestTime);


class BidRequestTime extends ComputedMetric{






static async computeSimulatedMetric(data,context){

return LanternBidRequestTime.request(data,context);
}






static async computeObservedMetric(data){
const{networkRecords}=data;
const pageStartTime=getPageStartTime(networkRecords);
const bidStartTime=getBidStartTime(networkRecords);
const adStartTime=getAdStartTime(networkRecords);
if(adStartTime<bidStartTime){
return{timing:-1};
}
const bidRequestTimeMs=(bidStartTime-pageStartTime)*1000;
return{timing:bidRequestTimeMs};
}}





BidRequestTime=makeComputedArtifact(BidRequestTime);

module.exports=BidRequestTime;

},{"../utils/network-timing":150,"../utils/resource-classification":152,"./ad-lantern-metric":138,"lighthouse/lighthouse-core/computed/computed-artifact":8,"lighthouse/lighthouse-core/computed/metrics/metric":33}],142:[function(require,module,exports){














const AdLanternMetric=require('../computed/ad-lantern-metric');
const BaseNode=require('lighthouse/lighthouse-core/lib/dependency-graph/base-node.js');

const ComputedMetric=require('lighthouse/lighthouse-core/computed/metrics/metric');

const CpuNode=require('lighthouse/lighthouse-core/lib/dependency-graph/cpu-node.js');
const{getAttributableUrl}=require('../utils/tasks');

const LoadSimulator=require('lighthouse/lighthouse-core/computed/load-simulator');
const MainThreadTasks=require('lighthouse/lighthouse-core/computed/main-thread-tasks');

const makeComputedArtifact=require('lighthouse/lighthouse-core/computed/computed-artifact');

const NetworkNode=require('lighthouse/lighthouse-core/lib/dependency-graph/network-node.js');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const PageDependencyGraph=require('lighthouse/lighthouse-core/computed/page-dependency-graph');

const PROVIDED_LONG_TASK_THRESHOLD_MS=50;
const SIMULATED_LONG_TASK_THRESHOLD_MS=100;






function isLong(task,knownScripts){
if(task.duration<PROVIDED_LONG_TASK_THRESHOLD_MS){
return false;
}
const script=getAttributableUrl(task,knownScripts);
if(!script){
return false;
}
if(task.parent){


const parentScript=getAttributableUrl(task.parent,knownScripts);
return script!=parentScript;
}
return true;
}


class LongTasks extends ComputedMetric{






static async getSimulationGraph(trace,devtoolsLog,context){

const documentNode=

await PageDependencyGraph.request({trace,devtoolsLog},context);
return AdLanternMetric.getOptimisticGraph(documentNode);
}







static async computeSimulatedResult(trace,devtoolsLog,context){
const graph=await this.getSimulationGraph(trace,devtoolsLog,context);
const simulator=await LoadSimulator.request(
{devtoolsLog,settings:context.settings},context);
const{nodeTimings}=simulator.simulate(graph,{});

const tasks=[];
for(const[node,timing]of nodeTimings.entries()){
if(node.type!==BaseNode.TYPES.CPU||
timing.duration<SIMULATED_LONG_TASK_THRESHOLD_MS){
continue;
}
tasks.push({
event:node.event,
startTime:timing.startTime,
endTime:timing.endTime,
duration:timing.duration,
selfTime:timing.duration,
attributableURLs:Array.from(node.getEvaluateScriptURLs()),
children:[],
parent:node.parent,
unbounded:node.unbounded,
group:node.group});

}
return tasks;
}







static async computeObservedResult(trace,devtoolsLog,context){
const tasks=await MainThreadTasks.request(trace,context);
const networkRecords=await NetworkRecords.request(devtoolsLog,context);

const knownScripts=new Set(networkRecords.
filter(record=>record.resourceType==='Script').
map(record=>record.url));
return tasks.filter(t=>isLong(t,knownScripts));
}






static async compute_({trace,devtoolsLog},context){
return context.settings.throttlingMethod=='simulate'?
this.computeSimulatedResult(trace,devtoolsLog,context):
this.computeObservedResult(trace,devtoolsLog,context);
}}





LongTasks=makeComputedArtifact(LongTasks);

module.exports=LongTasks;

},{"../computed/ad-lantern-metric":138,"../utils/tasks":153,"lighthouse/lighthouse-core/computed/computed-artifact":8,"lighthouse/lighthouse-core/computed/load-simulator":11,"lighthouse/lighthouse-core/computed/main-thread-tasks":13,"lighthouse/lighthouse-core/computed/metrics/metric":33,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/computed/page-dependency-graph":40,"lighthouse/lighthouse-core/lib/dependency-graph/base-node.js":68,"lighthouse/lighthouse-core/lib/dependency-graph/cpu-node.js":69,"lighthouse/lighthouse-core/lib/dependency-graph/network-node.js":70}],143:[function(require,module,exports){














const AdLanternMetric=require('./ad-lantern-metric');

const ComputedMetric=require('lighthouse/lighthouse-core/computed/metrics/metric');

const makeComputedArtifact=require('lighthouse/lighthouse-core/computed/computed-artifact');
const{getPageStartTime,getTagEndTime}=require('../utils/network-timing');
const{isImplTag}=require('../utils/resource-classification');
const{URL}=require('url');






class LanternTagLoadTime extends AdLanternMetric{






static getEstimateFromSimulation(simulationResult,extras){
const{nodeTimings}=simulationResult;
const timeInMs=AdLanternMetric.findNetworkTiming(
nodeTimings,req=>!!req.url&&isImplTag(new URL(req.url))).endTime;
return{timeInMs,nodeTimings};
}}





LanternTagLoadTime=makeComputedArtifact(LanternTagLoadTime);


class TagLoadTime extends ComputedMetric{






static async computeSimulatedMetric(data,context){

return LanternTagLoadTime.request(data,context);
}







static async computeObservedMetric(data,context){
const{networkRecords}=data;
const pageStartTime=getPageStartTime(networkRecords);
const tagEndTime=getTagEndTime(networkRecords);
const tagLoadMs=(tagEndTime-pageStartTime)*1000;
return Promise.resolve({timing:tagLoadMs});
}}





TagLoadTime=makeComputedArtifact(TagLoadTime);

module.exports=TagLoadTime;


},{"../utils/network-timing":150,"../utils/resource-classification":152,"./ad-lantern-metric":138,"lighthouse/lighthouse-core/computed/computed-artifact":8,"lighthouse/lighthouse-core/computed/metrics/metric":33,"url":"url"}],144:[function(require,module,exports){
(function(__filename){














const UIStrings={
GROUPS__METRICS:'Metrics',
GROUPS__ADS_PERFORMANCE:'Ad Speed',
GROUPS__ADS_BEST_PRACTICES:'Tag Best Practices',

NOT_APPLICABLE__DEFAULT:'Audit not applicable',
NOT_APPLICABLE__INVALID_TIMING:'Invalid timing task data',
NOT_APPLICABLE__NO_AD_RELATED_REQ:'No ad-related requests',
NOT_APPLICABLE__NO_AD_RENDERED:'No ads rendered',
NOT_APPLICABLE__NO_ADS_VIEWPORT:'No ads in viewport',
NOT_APPLICABLE__NO_ADS:'No ads requested',
NOT_APPLICABLE__NO_BIDS:'No bids detected',
NOT_APPLICABLE__NO_EVENT_MATCHING_REQ:'No event matches network records',
NOT_APPLICABLE__NO_GPT:'GPT not requested',
NOT_APPLICABLE__NO_RECORDS:'No successful network records',
NOT_APPLICABLE__NO_VISIBLE_SLOTS:'No visible slots',
NOT_APPLICABLE__NO_TAG:'No tag requested',
NOT_APPLICABLE__NO_TAGS:'No tags requested',
NOT_APPLICABLE__NO_TASKS:'No tasks to compare',
NOT_APPLICABLE__NO_VALID_AD_WIDTHS:'No requested ads contain ads of valid width',

ERRORS__AREA_LARGER_THAN_VIEWPORT:'Calculated ad area is larger than viewport',
ERRORS__VIEWPORT_AREA_ZERO:'Viewport area is zero',

WARNINGS__NO_ADS:'No ads were requested when fetching this page.',
WARNINGS__NO_AD_RENDERED:'No ads were rendered when rendering this page.',
WARNINGS__NO_TAG:'The GPT tag was not requested.'};

const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');

const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);






const notApplicableObj=message=>({
notApplicable:true,
score:1,
displayValue:str_(message)});






const auditNotApplicable={
Default:notApplicableObj(UIStrings.NOT_APPLICABLE__DEFAULT),
InvalidTiming:notApplicableObj(UIStrings.NOT_APPLICABLE__INVALID_TIMING),
NoAdRelatedReq:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_AD_RELATED_REQ),
NoAdRendered:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_AD_RENDERED),
NoAdsViewport:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_ADS_VIEWPORT),
NoAds:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_ADS),
NoBids:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_BIDS),
NoEventMatchingReq:notApplicableObj(
UIStrings.NOT_APPLICABLE__NO_EVENT_MATCHING_REQ),
NoGpt:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_GPT),
NoRecords:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_RECORDS),
NoVisibleSlots:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_VISIBLE_SLOTS),
NoTag:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_TAG),
NoTags:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_TAGS),
NoTasks:notApplicableObj(UIStrings.NOT_APPLICABLE__NO_TASKS),
NoValidAdWidths:notApplicableObj(
UIStrings.NOT_APPLICABLE__NO_VALID_AD_WIDTHS)};


const runWarning={
NoAds:str_(UIStrings.WARNINGS__NO_ADS),
NoAdRendered:str_(UIStrings.WARNINGS__NO_AD_RENDERED),
NoTag:str_(UIStrings.WARNINGS__NO_TAG)};


const auditError={
AreaLargerThanViewport:str_(UIStrings.ERRORS__AREA_LARGER_THAN_VIEWPORT),
ViewportAreaZero:str_(UIStrings.ERRORS__VIEWPORT_AREA_ZERO)};


const group={
Metrics:str_(UIStrings.GROUPS__METRICS),
AdsPerformance:str_(UIStrings.GROUPS__ADS_PERFORMANCE),
AdsBestPractices:str_(UIStrings.GROUPS__ADS_BEST_PRACTICES)};


module.exports={auditNotApplicable,runWarning,auditError,group};
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/messages/common-strings.js");
},{"lighthouse/lighthouse-core/lib/i18n/i18n":77}],145:[function(require,module,exports){





















function count(arr,pred){
let num=0;
for(const el of arr){
if(pred(el)){
num++;
}
}
return num;
}










function bucket(array,splitter){

const buckets=new Map();
for(const element of array){
const result=splitter(element);
if(result!=null){


const bucket=buckets.get(result)||[];
bucket.push(element);
buckets.set(result,bucket);
}
}
return buckets;
}







function flatten(arrs){
const result=[];
for(const arr of arrs){
result.push(...arr);
}
return result;
}

module.exports={
count,bucket,flatten};


},{}],146:[function(require,module,exports){



















function assert(x){
if(x==null)throw new Error('Expected not to be null');
return x;
}

module.exports={
assert};


},{}],147:[function(require,module,exports){














module.exports=[
{
label:'Prebid JS',
patterns:[
`^https?://([^.]*.)?prebid[.]org/.*`,
'^https?://acdn[.]adnxs[.]com/prebid/.*']},


{
label:'33Across',
patterns:[
'^https?://ssc[.]33across.com/api/.*']},


{
label:'AppNexus',
patterns:[
'^https?://ib[.]adnxs[.]com/.*']},


{
label:'Amazon',
patterns:[
'^https?://[a-z-_.]*[.]amazon-adsystem[.]com/.*bid.*']},


{
label:'AdTechus (AOL)',
patterns:[
'^https?://([^.]*.)?adserver[.]adtechus[.]com/.*']},


{
label:'Aardvark',
patterns:[
'^https?://thor[.]rtk[.]io/.*']},


{
label:'AdBlade',
patterns:[
'^https?://rtb[.]adblade[.]com/prebidjs/bid.*']},


{
label:'AdBund',
patterns:[
'^https?://us-east-engine[.]adbund[.]xyz/prebid/ad/get.*',
'^https?://us-west-engine[.]adbund[.]xyz/prebid/ad/get.*']},


{
label:'AdButler',
patterns:[
'^https?://servedbyadbutler[.]com/adserve.*']},


{
label:'Adequant',
patterns:[
'^https?://rex[.]adequant[.]com/rex/c2s_prebid.*']},


{
label:'AdForm',
patterns:[
'^https?://adx[.]adform[.]net/adx.*']},


{
label:'AdMedia',
patterns:[
'^https?://b[.]admedia[.]com/banner/prebid/bidder.*']},


{
label:'AdMixer',
patterns:[
'^https?://inv-nets[.]admixer[.]net/prebid[.]aspx.*',
'^https?://inv-nets[.]admixer[.]net/videoprebid[.]aspx.*']},


{
label:'AOL',
patterns:[
'^https?://adserver-us[.]adtech[.]advertising[.]com.*',
'^https?://adserver-eu[.]adtech[.]advertising[.]com.*',
'^https?://adserver-as[.]adtech[.]advertising[.]com.*',
'^https?://adserver[.]adtech[.]de/pubapi/.*']},


{
label:'Beachfront',
patterns:[
'^https?://reachms[.]bfmio[.]com/bid[.]json?exchange_id=.*']},


{
label:'Bidfluence',
patterns:[
'^https?://cdn[.]bidfluence[.]com/forge[.]js.*']},


{
label:'Brightcom',
patterns:[
'^https?://hb[.]iselephant[.]com/auc/ortb.*']},


{
label:'C1x',
patterns:[
'^https?://ht-integration[.]c1exchange[.]com:9000/ht.*']},


{
label:'CentroBid',
patterns:[
'^https?://t[.]brand-server[.]com/hb.*']},


{
label:'Conversant',
patterns:[
'^https?://media[.]msg[.]dotomi[.]com/s2s/.*']},


{
label:'Criteo',
patterns:[
'^https?://static[.]criteo[.]net/js/ld/publishertag[.]js.*',
'^https?://([^.]*.)?bidder[.]criteo[.]com/cdb.*',
'^https?://([^.]*.)?rtax[.]criteo[.]com/delivery/rta.*',
'^https?://([^.]*.)?rtax[.]eu[.]criteo[.]com/delivery/rta.*']},


{
label:'Datablocks',
patterns:[
'^https?://[a-z0-9_.-]*[.]dblks[.]net/.*']},


{
label:'Districtm',
patterns:[
'^https?://prebid[.]districtm[.]ca/lib[.]js.*']},


{
label:'E-Planning',
patterns:[
'^https?://ads[.]us[.]e-planning[.]net.*']},


{
label:'Essens',
patterns:[
'^https?://bid[.]essrtb[.]com/bid/prebid_call.*']},


{
label:'Facebook',
patterns:[
'^https?://an[.]facebook[.]com/v2/placementbid[.]json.*']},


{
label:'FeatureForward',
patterns:[
'^https?://prmbdr[.]featureforward[.]com/newbidder/.*']},


{
label:'Fidelity',
patterns:[
'^https?://x[.]fidelity-media[.]com.*']},


{
label:'GetIntent',
patterns:[
'^https?://px[.]adhigh[.]net/rtb/direct_banner.*',
'^https?://px[.]adhigh[.]net/rtb/direct_vast.*']},


{
label:'GumGum',
patterns:[
'^https?://g2[.]gumgum[.]com/hbid/imp.*']},


{
label:'Hiromedia',
patterns:[
'^https?://hb-rtb[.]ktdpublishers[.]com/bid/get.*']},


{
label:'Imonomy',
patterns:[
'^https?://b[.]imonomy[.]com/openrtb/hb/.*']},


{
label:'ImproveDigital',
patterns:[
'^https?://ad[.]360yield[.]com/hb.*']},


{
label:'IndexExchange',
patterns:[
'^https?://as(-sec)?[.]casalemedia[.]com/(cygnus|headertag).*',
'^https?://js(-sec)?[.]indexww[.]com/ht/.*']},


{
label:'InnerActive',
patterns:[
'^https?://ad-tag[.]inner-active[.]mobi/simpleM2M/requestJsonAd.*']},


{
label:'Innity',
patterns:[
'^https?://as[.]innity[.]com/synd/.*']},


{
label:'JCM',
patterns:[
'^https?://media[.]adfrontiers[.]com/pq.*']},


{
label:'JustPremium',
patterns:[
'^https?://pre[.]ads[.]justpremium[.]com/v/.*']},


{
label:'Kargo',
patterns:[
'^https?://krk[.]kargo[.]com/api/v1/bid.*']},


{
label:'Komoona',
patterns:[
'^https?://bidder[.]komoona[.]com/v1/GetSBids.*']},


{
label:'KruxLink',
patterns:[
'^https?://link[.]krxd[.]net/hb.*']},


{
label:'Kumma',
patterns:[
'^https?://cdn[.]kumma[.]com/pb_ortb[.]js.*']},


{
label:'Mantis',
patterns:[
'^https?://mantodea[.]mantisadnetwork[.]com/website/prebid.*']},


{
label:'MarsMedia',
patterns:[
'^https?://bid306[.]rtbsrv[.]com:9306/bidder.*']},


{
label:'Media.net',
patterns:[
'^https?://contextual[.]media[.]net/bidexchange.*']},


{
label:'MemeGlobal',
patterns:[
'^https?://stinger[.]memeglobal[.]com/api/v1/services/prebid.*']},


{
label:'MobFox',
patterns:[
'^https?://my[.]mobfox[.]com/request[.]php.*']},


{
label:'NanoInteractive',
patterns:[
'^https?://tmp[.]audiencemanager[.]de/hb.*']},


{
label:'OpenX',
patterns:[
'^https?://([^.]*.)?d[.]openx[.]net/w/1[.]0/arj.*',
'^https?://([^.]*.)?servedbyopenx[.]com/.*']},


{
label:'Piximedia',
patterns:[
'^https?://static[.]adserver[.]pm/prebid.*']},


{
label:'Platformio',
patterns:[
'^https?://piohbdisp[.]hb[.]adx1[.]com.*']},


{
label:'Pollux',
patterns:[
'^https?://adn[.]plxnt[.]com/prebid.*']},


{
label:'PubGears',
patterns:[
'^https?://c[.]pubgears[.]com/tags.*']},


{
label:'Pubmatic',
patterns:[
'^https?://ads[.]pubmatic[.]com/AdServer/js/gshowad[.]js.*',
'^https?://([^.]*.)?gads.pubmatic[.]com/.*',
'^https?://hbopenbid.pubmatic[.]com/.*']},


{
label:'Pulsepoint',
patterns:[
'^https?://bid[.]contextweb[.]com/header/tag.*']},


{
label:'Quantcast',
patterns:[
'^https?://global[.]qc[.]rtb[.]quantserve[.]com:8080/qchb.*']},


{
label:'Rhythmone',
patterns:[
'^https?://tag[.]1rx[.]io/rmp/.*']},


{
label:'Roxot',
patterns:[
'^https?://r[.]rxthdr[.]com.*']},


{
label:'Rubicon',
patterns:[
'^https?://([^.]*.)?(fastlane|optimized-by|anvil)[.]rubiconproject[.]com/a/api.*',
'^https?://fastlane-adv[.]rubiconproject[.]com/v1/auction/video.*']},


{
label:'Sekindo',
patterns:[
'^https?://hb[.]sekindo[.]com/live/liveView[.]php.*']},


{
label:'ShareThrough',
patterns:[
'^https?://btlr[.]sharethrough[.]com/header-bid/.*']},


{
label:'Smart AdServer',
patterns:[
'^https?://prg[.]smartadserver[.]com/prebid.*']},


{
label:'Sonobi',
patterns:[
'^https?://apex[.]go[.]sonobi[.]com/trinity[.]js.*']},


{
label:'Sovrn',
patterns:[
'^https?://ap[.]lijit[.]com/rtb/bid.*']},


{
label:'SpringServe',
patterns:[
'^https?://bidder[.]springserve[.]com/display/hbid.*']},


{
label:'StickyAds',
patterns:[
'^https?://cdn[.]stickyadstv[.]com/mustang/mustang[.]min[.]js.*',
'^https?://cdn[.]stickyadstv[.]com/prime-time/.*']},


{
label:'TapSense3',
patterns:[
'^https?://ads04[.]tapsense[.]com/ads/headerad.*']},


{
label:'ThoughtLeadr',
patterns:[
'^https?://a[.]thoughtleadr[.]com/v4/.*']},


{
label:'TremorBid',
patterns:[
'^https?://([^.]*.)?ads[.]tremorhub[.]com/ad/tag.*']},


{
label:'Trion',
patterns:[
'^https?://in-appadvertising[.]com/api/bidRequest.*']},


{
label:'TripleLift',
patterns:[
'^https?://tlx[.]3lift[.]com/header/auction.*']},


{
label:'TrustX',
patterns:[
'^https?://sofia[.]trustx[.]org/hb.*']},


{
label:'UCFunnel',
patterns:[
'^https?://agent[.]aralego[.]com/header.*']},


{
label:'Underdog Media',
patterns:[
'^https?://udmserve[.]net/udm/img[.]fetch.*']},


{
label:'UnRuly',
patterns:[
'^https?://targeting[.]unrulymedia[.]com/prebid.*']},


{
label:'VertaMedia',
patterns:[
'^https?://rtb[.]vertamedia[.]com/hb/.*']},


{
label:'Vertoz',
patterns:[
'^https?://hb[.]vrtzads[.]com/vzhbidder/bid.*']},


{
label:'WideOrbig',
patterns:[
'^https?://([^.]*.)?atemda[.]com/JSAdservingMP[.]ashx.*']},


{
label:'WideSpace',
patterns:[
'^https?://engine[.]widespace[.]com/map/engine/hb/.*']},


{
label:'YieldBot',
patterns:[
'^https?://cdn[.]yldbt[.]com/js/yieldbot[.]intent[.]js.*']},


{
label:'YieldMo',
patterns:[
'^https?://ads[.]yieldmo[.]com/exchange/prebid.*']}];




},{}],148:[function(require,module,exports){



















function isBoxInViewport(clientRect,viewport){
const{innerWidth,innerHeight}=viewport;
const{left,top,right,bottom}=clientRect;

return left<right&&top<bottom&&
left<innerWidth&&top<innerHeight&&0<right&&0<bottom;
}






function boxViewableArea(clientRect,viewport){
if(!isBoxInViewport(clientRect,viewport))return 0;

const{innerWidth,innerHeight}=viewport;
const{left,top,right,bottom}=clientRect;

return(Math.min(right,innerWidth)-Math.max(left,0))*(
Math.min(bottom,innerHeight)-Math.max(top,0));
}

module.exports={
isBoxInViewport,
boxViewableArea};



},{}],149:[function(require,module,exports){














const BaseNode=require('lighthouse/lighthouse-core/lib/dependency-graph/base-node');

const CpuNode=require('lighthouse/lighthouse-core/lib/dependency-graph/cpu-node.js');

const NetworkNode=require('lighthouse/lighthouse-core/lib/dependency-graph/network-node.js');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const{assert}=require('./asserts');
const{getAbbreviatedUrl,trimUrl}=require('../utils/resource-classification');
const{getNetworkInitiators}=require('lighthouse/lighthouse-core/computed/page-dependency-graph');
const{getTimingsByRecord}=require('../utils/network-timing');
const{isAdRequest,getHeaderBidder}=require('./resource-classification');

















function findTargetRequest(root,isTargetRequest){

let firstTarget=null;
root.traverse(node=>{
if(node.type===BaseNode.TYPES.CPU||!isTargetRequest(node.record)){
return;
}
if(firstTarget&&firstTarget.startTime<node.startTime){
return;
}
firstTarget=node;
});
return firstTarget;
}








function getTransitiveClosure(root,isTargetRequest){

const closure=new Set();

const firstTarget=findTargetRequest(root,isTargetRequest);


const requests=[];

const traceEvents=[];

if(firstTarget==null){
return{requests,traceEvents};
}

const stack=[firstTarget];


while(stack.length){
const node=stack.pop();
if(!node||closure.has(node)){
continue;
}
closure.add(node);
stack.push(...node.getDependencies());
}


const visited=new Set();
stack.push(...root.getDependents());
while(stack.length){
const node=stack.pop();
if(!node||visited.has(node)){
continue;
}
visited.add(node);
if(closure.has(node)){
for(const n of stack){
closure.add(n);
}
}
stack.push(...node.getDependents());
}


for(const node of closure){
if(node.type===BaseNode.TYPES.NETWORK){
if(node.endTime<assert(firstTarget).startTime){
requests.push(node.record);
}
}else if(node.type===BaseNode.TYPES.CPU){
if(node.event.ts<assert(firstTarget).startTime*1e6){
traceEvents.push(node.event,...node.childEvents);
}
}
}
return{requests,traceEvents};
}








function isXhrCritical(xhrReq,networkSummary,criticalRequests){
const edges=networkSummary.xhrEdges.get(xhrReq.url);
if(!edges){
return false;
}
for(const{url}of criticalRequests){
if(edges.has(url)){
return true;
}
}
return false;
}









function addInitiatedRequests(
scriptReq,parentReq,networkSummary,criticalRequests){
const initiatedRequests=networkSummary.allRecords.
filter(r=>r.resourceType!=undefined).
filter(r=>['Script','XHR'].includes(r.resourceType||'')&&
r.endTime<parentReq.startTime).
filter(r=>r.initiatorRequest==scriptReq||
getNetworkInitiators(r).includes(scriptReq.url));

for(const initiatedReq of initiatedRequests){

const blocking=
initiatedReq.resourceType=='XHR'&&
isXhrCritical(initiatedReq,networkSummary,criticalRequests);
if(blocking){
linkGraph(networkSummary,initiatedReq,criticalRequests);
}
}
}








function getCriticalGraph(networkRecords,traceEvents,targetRequest){
const summary=buildNetworkSummary(networkRecords,traceEvents);
const criticalRequests=new Set();
linkGraph(summary,targetRequest,criticalRequests);
return criticalRequests;
}








function linkGraph(
networkSummary,targetRequest,criticalRequests=new Set()){
if(!targetRequest||criticalRequests.has(targetRequest)){
return criticalRequests;
}
criticalRequests.add(targetRequest);
const seen=new Set();
for(let stack=targetRequest.initiator.stack;stack;stack=stack.parent){
for(const{url}of stack.callFrames){
if(seen.has(url))continue;
seen.add(url);

const request=networkSummary.requestsByUrl.get(url);
if(!request)continue;

linkGraph(networkSummary,request,criticalRequests);

if(request.resourceType=='Script'){
const scriptUrl=stack.callFrames[0].url;
const scriptReq=networkSummary.requestsByUrl.get(scriptUrl);
if(scriptReq){
addInitiatedRequests(
scriptReq,
targetRequest,
networkSummary,
criticalRequests);
}
}
}
}

linkGraph(
networkSummary,targetRequest.initiatorRequest||null,criticalRequests);
return criticalRequests;
}






function buildNetworkSummary(networkRecords,traceEvents){
const requestsByUrl=new Map();
for(const req of networkRecords){
requestsByUrl.set(req.url,req);
}

const xhrEvents=traceEvents.
filter(t=>t.name.startsWith('XHR')).
filter(t=>!!(t.args.data||{}).url);
const xhrEdges=new Map();
for(const e of xhrEvents){
const data=e.args.data||{};
const edges=xhrEdges.get(data.url)||new Set();
for(const{url}of data.stackTrace||[]){
edges.add(url);
}
xhrEdges.set(data.url,edges);
}
return{requestsByUrl,xhrEdges,allRecords:networkRecords};
}



















function areSimilarRequests(r1,r2){
if(Math.max(r1.startTime,r2.startTime)>Math.min(r1.endTime,r2.endTime)){
return false;
}
if(r1.type&&r2.type&&r1.type!=r2.type){
return false;
}
return r1.abbreviatedUrl==r2.abbreviatedUrl;
}







function computeSummaries(requests){



requests.sort((a,b)=>{
if(a.abbreviatedUrl!=b.abbreviatedUrl){
return a.abbreviatedUrl<b.abbreviatedUrl?-1:1;
}
if(a.type!=b.type){
return a.type<b.type?-1:1;
}
if(a.startTime!=b.startTime){
return a.startTime<b.startTime?-1:1;
}
return a.endTime-b.endTime;
});
const result=[];
for(let i=0;i<requests.length;i++){
const current=requests[i];
let next;
while(i<requests.length){
next=requests[i+1];
if(!next||!areSimilarRequests(next,current)){
break;
}
current.url=current.abbreviatedUrl;
current.endTime=Math.max(current.endTime,next.endTime);
current.duration=current.endTime-current.startTime;
i++;
}
result.push(current);
}
result.sort((a,b)=>a.startTime-b.startTime);
return result;
}





function computeSelfTimes(requests){
if(!requests.length){
return[];
}

let bottlneckRequest=assert(requests[0]);
bottlneckRequest.selfTime=bottlneckRequest.duration;

let scanEnd=bottlneckRequest.startTime;

for(const current of requests){
if(current.endTime<scanEnd||current==bottlneckRequest){

continue;
}
const left=Math.max(scanEnd,current.startTime);
const right=Math.min(bottlneckRequest.endTime,current.endTime);
if(left<right){

bottlneckRequest.selfTime-=right-left;
}
scanEnd=Math.max(scanEnd,right);
if(current.endTime>bottlneckRequest.endTime){
current.selfTime=current.endTime-left;
bottlneckRequest=current;
}
}
}










async function computeAdRequestWaterfall(trace,devtoolsLog,context){
const networkRecords=await NetworkRecords.request(devtoolsLog,context);

const maybeFirstAdRequest=networkRecords.find(isAdRequest);
const criticalRequests=new Set();
if(maybeFirstAdRequest==null){
return Promise.resolve([]);
}
const firstAdRequest=assert(maybeFirstAdRequest);
const bidRequests=networkRecords.filter(r=>
!!getHeaderBidder(r.url)&&r.endTime<=firstAdRequest.startTime);
const summary=buildNetworkSummary(networkRecords,trace.traceEvents);
for(const req of[firstAdRequest,...bidRequests]){
linkGraph(summary,req,criticalRequests);
}

const REQUEST_TYPES=new Set([
'Script','XHR','Fetch','EventStream','Document',undefined]);
const waterfall=Array.from(criticalRequests).
filter(r=>r.endTime<firstAdRequest.startTime).
filter(r=>REQUEST_TYPES.has(r.resourceType)).
filter(r=>r.mimeType!='text/css');


const timingsByRecord=
await getTimingsByRecord(trace,devtoolsLog,context);
const timedWaterfall=waterfall.map(req=>{
const{startTime,endTime}=timingsByRecord.get(req)||req;
return{
startTime,
endTime,
duration:endTime-startTime,
selfTime:0,
url:trimUrl(req.url),
abbreviatedUrl:getAbbreviatedUrl(req.url),
type:req.resourceType,
record:req};

});
const result=computeSummaries(timedWaterfall);
computeSelfTimes(result);
return result;
}

module.exports={
getTransitiveClosure,
getCriticalGraph,
computeAdRequestWaterfall};


},{"../utils/network-timing":150,"../utils/resource-classification":152,"./asserts":146,"./resource-classification":152,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/computed/page-dependency-graph":40,"lighthouse/lighthouse-core/lib/dependency-graph/base-node":68,"lighthouse/lighthouse-core/lib/dependency-graph/cpu-node.js":69,"lighthouse/lighthouse-core/lib/dependency-graph/network-node.js":70}],150:[function(require,module,exports){














const AdLanternMetric=require('../computed/ad-lantern-metric');

const LoadSimulator=require('lighthouse/lighthouse-core/computed/load-simulator');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const PageDependencyGraph=require('lighthouse/lighthouse-core/computed/page-dependency-graph');
const{isAdRequest,isBidRequest,isImplTag,isImpressionPing}=require('./resource-classification');
const{URL}=require('url');














function getTagEndTime(networkRecords){
const tagRecord=networkRecords.find(
record=>isImplTag(new URL(record.url)));
return tagRecord?tagRecord.endTime:-1;
}






function getAdStartTime(networkRecords){
const firstAdRecord=networkRecords.find(isAdRequest);
return firstAdRecord?firstAdRecord.startTime:-1;
}






function getBidStartTime(networkRecords){
const firstBidRecord=networkRecords.find(isBidRequest);
return firstBidRecord?firstBidRecord.startTime:-1;
}






function getImpressionStartTime(networkRecords){
const firstImpressionRecord=networkRecords.find(
record=>isImpressionPing(record.url));
return firstImpressionRecord?firstImpressionRecord.startTime:-1;
}







function getPageStartTime(networkRecords,defaultValue=-1){
const firstSuccessRecord=networkRecords.find(
record=>record.statusCode==200);
return firstSuccessRecord?firstSuccessRecord.startTime:defaultValue;
}







function getPageResponseTime(networkRecords,defaultValue=-1){
const firstSuccessRecord=networkRecords.find(
record=>record.statusCode==200);
return firstSuccessRecord?
firstSuccessRecord.responseReceivedTime:defaultValue;
}







async function getTimingsByRecord(trace,devtoolsLog,context){

const timingsByRecord=new Map();
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
if(context.settings.throttlingMethod=='simulate'){

const documentNode=

await PageDependencyGraph.request({trace,devtoolsLog},context);
const releventGraph=AdLanternMetric.getOptimisticGraph(documentNode);
const simulator=await LoadSimulator.request(
{devtoolsLog,settings:context.settings},context);
const{nodeTimings}=simulator.simulate(releventGraph,{});
for(const[{record},timing]of nodeTimings.entries()){
if(!record)continue;
timingsByRecord.set(record,timing);
}
}else{
const pageStartTime=getPageStartTime(networkRecords);
for(const record of networkRecords){
timingsByRecord.set(record,{
startTime:(record.startTime-pageStartTime)*1000,
endTime:(record.endTime-pageStartTime)*1000,
duration:(record.endTime-record.startTime)*1000});

}
}
return timingsByRecord;
}





function getScriptUrl(e){
if(!e.args.data){
return undefined;
}
if(!['EvaluateScript','FunctionCall'].includes(e.name)){
return undefined;
}
if(e.args.data.url){
return e.args.data.url;
}
if(e.args.data.stackTrace){
return e.args.data.stackTrace[0].url;
}
return undefined;
}











async function getScriptEvaluationTimes(trace,devtoolsLog,context){
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const pageStartTime=getPageStartTime(networkRecords)*1000;

const rawTimes=new Map();
for(const e of trace.traceEvents){
const script=getScriptUrl(e);
if(!script){
continue;
}
const time=e.ts/1000-pageStartTime;

if(!rawTimes.has(script)||rawTimes.get(script)>time){
rawTimes.set(script,time);
}
}
if(context.settings.throttlingMethod!=='simulate'){
return rawTimes;
}

const timingsByRecord=await getTimingsByRecord(trace,devtoolsLog,context);

const simulatedTimes=new Map();
for(const[req,timing]of timingsByRecord.entries()){
const scriptEvalTime=rawTimes.get(req.url);
if(!scriptEvalTime){
continue;
}
if(simulatedTimes.has(req.url)){
continue;
}
const unsimulatedNetworkTime=req.startTime*1000-pageStartTime;
const simulatedNetworkTime=timing.endTime;

const cpuFactor=context.settings.throttling.cpuSlowdownMultiplier;

const unsimulatedCpuTime=scriptEvalTime-unsimulatedNetworkTime;
const simulatedCpuTime=cpuFactor*unsimulatedCpuTime;

simulatedTimes.set(req.url,simulatedNetworkTime+simulatedCpuTime);
}
return simulatedTimes;
}

module.exports={
getTagEndTime,
getImpressionStartTime,
getAdStartTime,
getBidStartTime,
getPageStartTime,
getPageResponseTime,
getTimingsByRecord,
getScriptEvaluationTimes};


},{"../computed/ad-lantern-metric":138,"./resource-classification":152,"lighthouse/lighthouse-core/computed/load-simulator":11,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/computed/page-dependency-graph":40,"url":"url"}],151:[function(require,module,exports){















const CacheHeaders=require('lighthouse/lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl');

const{parse:parseCacheControl}=require('@tusbar/cache-control');






function getHeader(req,header){
const lowerHeader=header.toLowerCase();
return(req.responseHeaders||[]).find(
h=>h.name.toLowerCase()===lowerHeader);
}






function isCacheable(req){

if(!CacheHeaders.isCacheableAsset(req)){
return false;
}
const cacheControlHeader=getHeader(req,'cache-control');
if(cacheControlHeader){
try{
const cacheControl=parseCacheControl(cacheControlHeader.value);
if(cacheControl.noStore||cacheControl.noCache||
cacheControl.maxAge===0){
return false;
}
}catch(e){}
return true;
}

return!!getHeader(req,'expires')||!!getHeader(req,'last-modified');
}

module.exports={
isCacheable};


},{"@tusbar/cache-control":103,"lighthouse/lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl":"../audits/byte-efficiency/uses-long-cache-ttl"}],152:[function(require,module,exports){














const bidderPatterns=require('./bidder-patterns');
const{isCacheable}=require('../utils/network');
const{URL}=require('url');







function toURL(urlOrStr){
return typeof urlOrStr==='string'?new URL(urlOrStr):urlOrStr;
}






function isGoogleAds(url){
return /(^|\.)(doubleclick.net|google(syndication|tagservices).com)$/.
test(url.hostname);
}






function isAdSenseTag(url){
url=toURL(url);
const matchesHost=url.host==='pagead2.googlesyndication.com';
const matchesPath=
[
'/pagead/js/adsbygoogle.js',
'/pagead/show_ads.js'].
includes(url.pathname);
return matchesHost&&matchesPath;
}






function isAdSenseImplTag(url){
url=toURL(url);
const matchesHost=url.host==='pagead2.googlesyndication.com';
const matchesPath=
/(^\/pagead\/js\/.*\/show_ads_impl.*?\.js)/.test(url.pathname);
return matchesHost&&matchesPath;
}






function isAdSense(url){
return isAdSenseTag(url)||isAdSenseImplTag(url);
}






function isAdSenseAdRequest(request){
if(!request)return false;
const url=new URL(request.url);
return(
url.pathname==='/pagead/ads'&&
url.host==='googleads.g.doubleclick.net');

}





function isAdSenseIframe(iframe){
return /(^aswift_\d+)/.test(iframe.id);
}






function isImpressionPing(url){
const{host,pathname}=toURL(url);
return(
[
'securepubads.g.doubleclick.net',
'googleads4.g.doubleclick.net'].
includes(host)&&
['/pcs/view','/pagead/adview'].includes(pathname));

}






function isGptTag(url){
const{host,pathname}=toURL(url);
const matchesHost=[
'www.googletagservices.com',
'securepubads.g.doubleclick.net'].includes(host);
const matchesPath=
['/tag/js/gpt.js','/tag/js/gpt_mobile.js'].includes(pathname);
return matchesHost&&matchesPath;
}






function isGptImplTag(url){
return(
/(^\/gpt\/pubads_impl([a-z_]*)((?<!rendering)_)\d+\.js)/.
test(toURL(url).pathname));

}






function isGpt(url){
return isGptTag(url)||isGptImplTag(url);
}






function isGptAdRequest(request){
if(!request)return false;
const url=new URL(request.url);
return(
url.pathname==='/gampad/ads'&&
url.host==='securepubads.g.doubleclick.net'&&
request.resourceType==='XHR');

}





function isGptIframe(iframe){
return /(^google_ads_iframe_)/.test(iframe.id);
}






function isAdTag(url){
return isAdSenseTag(url)||isGptTag(url);
}






function isAdScript(url){
return isAdSense(url)||isGpt(url);
}






function isAdRequest(request){
return isAdSenseAdRequest(request)||isGptAdRequest(request);
}






function isAdIframe(iframe){
return isAdSenseIframe(iframe)||isGptIframe(iframe);
}






function isImplTag(url){
return isAdSenseTag(url)||isGptImplTag(url);
}







function containsAnySubstring(str,substrings){
return substrings.some(substring=>str.includes(substring));
}






function hasImpressionPath(url){
return url.pathname==='/pcs/view'||
url.pathname==='/pagead/adview';
}






function getHeaderBidder(url){
for(const def of bidderPatterns){
for(const pattern of def.patterns){
if(new RegExp(pattern).test(url)){
return def.label;
}
}
}
return undefined;
}







function isBidRelatedRequest(requestOrUrl){
return!!getHeaderBidder(
typeof requestOrUrl=='string'?requestOrUrl:requestOrUrl.url);
}






function isPossibleBidRequest(req){
return(req.resourceSize==null||req.resourceSize>0)&&
req.resourceType!='Image'&&
!isCacheable(req);
}






function isBidRequest(req){
return isBidRelatedRequest(req)&&isPossibleBidRequest(req);
}





function isStaticRequest(request){

return['parser','preload','other'].includes(request.initiator.type);
}






function trimUrl(url){
const u=new URL(url);
const PATH_MAX=60;
const path=u.pathname.length>PATH_MAX?
u.pathname.substr(0,PATH_MAX)+'...':u.pathname;
return u.origin+path;
}







function getAbbreviatedUrl(url){
const u=new URL(trimUrl(url));
const parts=u.pathname.split('/');
if(parts.length>4){
u.pathname=[...parts.splice(0,4),'...'].join('/');
}
return u.toString();
}

module.exports={
isGoogleAds,
isGptAdRequest,
isImpressionPing,
isGpt,
isAdSense,
isAdSenseTag,
isAdSenseImplTag,
isAdSenseAdRequest,
isAdSenseIframe,
isGptTag,
isGptImplTag,
isGptIframe,
isAdTag,
isAdScript,
isAdRequest,
isAdIframe,
isImplTag,
containsAnySubstring,
hasImpressionPath,
getHeaderBidder,
isBidRelatedRequest,
isBidRequest,
isStaticRequest,
trimUrl,
getAbbreviatedUrl};


},{"../utils/network":151,"./bidder-patterns":147,"url":"url"}],153:[function(require,module,exports){





















function getAttributableUrl(longTask,knownScripts=new Set()){
const scriptUrl=longTask.attributableURLs.find(
url=>knownScripts.has(url));
const fallbackUrl=longTask.attributableURLs[0];
const attributableUrl=scriptUrl||fallbackUrl;

if(attributableUrl){
return attributableUrl;
}
let maxChildDuration=50;
let childUrl='';
for(const child of longTask.children){
const url=getAttributableUrl(child,knownScripts);
if(url&&child.duration>maxChildDuration){
childUrl=url;
maxChildDuration=child.duration;
}
}
return childUrl;
}

module.exports={getAttributableUrl};

},{}],154:[function(require,module,exports){
(function(global){










var LARGE_ARRAY_SIZE=200;


var HASH_UNDEFINED='__lodash_hash_undefined__';


var COMPARE_PARTIAL_FLAG=1,
COMPARE_UNORDERED_FLAG=2;


var MAX_SAFE_INTEGER=9007199254740991;


var argsTag='[object Arguments]',
arrayTag='[object Array]',
asyncTag='[object AsyncFunction]',
boolTag='[object Boolean]',
dateTag='[object Date]',
errorTag='[object Error]',
funcTag='[object Function]',
genTag='[object GeneratorFunction]',
mapTag='[object Map]',
numberTag='[object Number]',
nullTag='[object Null]',
objectTag='[object Object]',
promiseTag='[object Promise]',
proxyTag='[object Proxy]',
regexpTag='[object RegExp]',
setTag='[object Set]',
stringTag='[object String]',
symbolTag='[object Symbol]',
undefinedTag='[object Undefined]',
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]',
dataViewTag='[object DataView]',
float32Tag='[object Float32Array]',
float64Tag='[object Float64Array]',
int8Tag='[object Int8Array]',
int16Tag='[object Int16Array]',
int32Tag='[object Int32Array]',
uint8Tag='[object Uint8Array]',
uint8ClampedTag='[object Uint8ClampedArray]',
uint16Tag='[object Uint16Array]',
uint32Tag='[object Uint32Array]';





var reRegExpChar=/[\\^$.*+?()[\]{}|]/g;


var reIsHostCtor=/^\[object .+?Constructor\]$/;


var reIsUint=/^(?:0|[1-9]\d*)$/;


var typedArrayTags={};
typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=
typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=
typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=
typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=
typedArrayTags[uint32Tag]=true;
typedArrayTags[argsTag]=typedArrayTags[arrayTag]=
typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=
typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=
typedArrayTags[errorTag]=typedArrayTags[funcTag]=
typedArrayTags[mapTag]=typedArrayTags[numberTag]=
typedArrayTags[objectTag]=typedArrayTags[regexpTag]=
typedArrayTags[setTag]=typedArrayTags[stringTag]=
typedArrayTags[weakMapTag]=false;


var freeGlobal=typeof global=='object'&&global&&global.Object===Object&&global;


var freeSelf=typeof self=='object'&&self&&self.Object===Object&&self;


var root=freeGlobal||freeSelf||Function('return this')();


var freeExports=typeof exports=='object'&&exports&&!exports.nodeType&&exports;


var freeModule=freeExports&&typeof module=='object'&&module&&!module.nodeType&&module;


var moduleExports=freeModule&&freeModule.exports===freeExports;


var freeProcess=moduleExports&&freeGlobal.process;


var nodeUtil=function(){
try{
return freeProcess&&freeProcess.binding&&freeProcess.binding('util');
}catch(e){}
}();


var nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;










function arrayFilter(array,predicate){
var index=-1,
length=array==null?0:array.length,
resIndex=0,
result=[];

while(++index<length){
var value=array[index];
if(predicate(value,index,array)){
result[resIndex++]=value;
}
}
return result;
}









function arrayPush(array,values){
var index=-1,
length=values.length,
offset=array.length;

while(++index<length){
array[offset+index]=values[index];
}
return array;
}











function arraySome(array,predicate){
var index=-1,
length=array==null?0:array.length;

while(++index<length){
if(predicate(array[index],index,array)){
return true;
}
}
return false;
}










function baseTimes(n,iteratee){
var index=-1,
result=Array(n);

while(++index<n){
result[index]=iteratee(index);
}
return result;
}








function baseUnary(func){
return function(value){
return func(value);
};
}









function cacheHas(cache,key){
return cache.has(key);
}









function getValue(object,key){
return object==null?undefined:object[key];
}








function mapToArray(map){
var index=-1,
result=Array(map.size);

map.forEach(function(value,key){
result[++index]=[key,value];
});
return result;
}









function overArg(func,transform){
return function(arg){
return func(transform(arg));
};
}








function setToArray(set){
var index=-1,
result=Array(set.size);

set.forEach(function(value){
result[++index]=value;
});
return result;
}


var arrayProto=Array.prototype,
funcProto=Function.prototype,
objectProto=Object.prototype;


var coreJsData=root['__core-js_shared__'];


var funcToString=funcProto.toString;


var hasOwnProperty=objectProto.hasOwnProperty;


var maskSrcKey=function(){
var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');
return uid?'Symbol(src)_1.'+uid:'';
}();






var nativeObjectToString=objectProto.toString;


var reIsNative=RegExp('^'+
funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').
replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');



var Buffer=moduleExports?root.Buffer:undefined,
Symbol=root.Symbol,
Uint8Array=root.Uint8Array,
propertyIsEnumerable=objectProto.propertyIsEnumerable,
splice=arrayProto.splice,
symToStringTag=Symbol?Symbol.toStringTag:undefined;


var nativeGetSymbols=Object.getOwnPropertySymbols,
nativeIsBuffer=Buffer?Buffer.isBuffer:undefined,
nativeKeys=overArg(Object.keys,Object);


var DataView=getNative(root,'DataView'),
Map=getNative(root,'Map'),
Promise=getNative(root,'Promise'),
Set=getNative(root,'Set'),
WeakMap=getNative(root,'WeakMap'),
nativeCreate=getNative(Object,'create');


var dataViewCtorString=toSource(DataView),
mapCtorString=toSource(Map),
promiseCtorString=toSource(Promise),
setCtorString=toSource(Set),
weakMapCtorString=toSource(WeakMap);


var symbolProto=Symbol?Symbol.prototype:undefined,
symbolValueOf=symbolProto?symbolProto.valueOf:undefined;








function Hash(entries){
var index=-1,
length=entries==null?0:entries.length;

this.clear();
while(++index<length){
var entry=entries[index];
this.set(entry[0],entry[1]);
}
}








function hashClear(){
this.__data__=nativeCreate?nativeCreate(null):{};
this.size=0;
}











function hashDelete(key){
var result=this.has(key)&&delete this.__data__[key];
this.size-=result?1:0;
return result;
}










function hashGet(key){
var data=this.__data__;
if(nativeCreate){
var result=data[key];
return result===HASH_UNDEFINED?undefined:result;
}
return hasOwnProperty.call(data,key)?data[key]:undefined;
}










function hashHas(key){
var data=this.__data__;
return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key);
}











function hashSet(key,value){
var data=this.__data__;
this.size+=this.has(key)?0:1;
data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;
return this;
}


Hash.prototype.clear=hashClear;
Hash.prototype['delete']=hashDelete;
Hash.prototype.get=hashGet;
Hash.prototype.has=hashHas;
Hash.prototype.set=hashSet;








function ListCache(entries){
var index=-1,
length=entries==null?0:entries.length;

this.clear();
while(++index<length){
var entry=entries[index];
this.set(entry[0],entry[1]);
}
}








function listCacheClear(){
this.__data__=[];
this.size=0;
}










function listCacheDelete(key){
var data=this.__data__,
index=assocIndexOf(data,key);

if(index<0){
return false;
}
var lastIndex=data.length-1;
if(index==lastIndex){
data.pop();
}else{
splice.call(data,index,1);
}
--this.size;
return true;
}










function listCacheGet(key){
var data=this.__data__,
index=assocIndexOf(data,key);

return index<0?undefined:data[index][1];
}










function listCacheHas(key){
return assocIndexOf(this.__data__,key)>-1;
}











function listCacheSet(key,value){
var data=this.__data__,
index=assocIndexOf(data,key);

if(index<0){
++this.size;
data.push([key,value]);
}else{
data[index][1]=value;
}
return this;
}


ListCache.prototype.clear=listCacheClear;
ListCache.prototype['delete']=listCacheDelete;
ListCache.prototype.get=listCacheGet;
ListCache.prototype.has=listCacheHas;
ListCache.prototype.set=listCacheSet;








function MapCache(entries){
var index=-1,
length=entries==null?0:entries.length;

this.clear();
while(++index<length){
var entry=entries[index];
this.set(entry[0],entry[1]);
}
}








function mapCacheClear(){
this.size=0;
this.__data__={
'hash':new Hash(),
'map':new(Map||ListCache)(),
'string':new Hash()};

}










function mapCacheDelete(key){
var result=getMapData(this,key)['delete'](key);
this.size-=result?1:0;
return result;
}










function mapCacheGet(key){
return getMapData(this,key).get(key);
}










function mapCacheHas(key){
return getMapData(this,key).has(key);
}











function mapCacheSet(key,value){
var data=getMapData(this,key),
size=data.size;

data.set(key,value);
this.size+=data.size==size?0:1;
return this;
}


MapCache.prototype.clear=mapCacheClear;
MapCache.prototype['delete']=mapCacheDelete;
MapCache.prototype.get=mapCacheGet;
MapCache.prototype.has=mapCacheHas;
MapCache.prototype.set=mapCacheSet;









function SetCache(values){
var index=-1,
length=values==null?0:values.length;

this.__data__=new MapCache();
while(++index<length){
this.add(values[index]);
}
}











function setCacheAdd(value){
this.__data__.set(value,HASH_UNDEFINED);
return this;
}










function setCacheHas(value){
return this.__data__.has(value);
}


SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;
SetCache.prototype.has=setCacheHas;








function Stack(entries){
var data=this.__data__=new ListCache(entries);
this.size=data.size;
}








function stackClear(){
this.__data__=new ListCache();
this.size=0;
}










function stackDelete(key){
var data=this.__data__,
result=data['delete'](key);

this.size=data.size;
return result;
}










function stackGet(key){
return this.__data__.get(key);
}










function stackHas(key){
return this.__data__.has(key);
}











function stackSet(key,value){
var data=this.__data__;
if(data instanceof ListCache){
var pairs=data.__data__;
if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){
pairs.push([key,value]);
this.size=++data.size;
return this;
}
data=this.__data__=new MapCache(pairs);
}
data.set(key,value);
this.size=data.size;
return this;
}


Stack.prototype.clear=stackClear;
Stack.prototype['delete']=stackDelete;
Stack.prototype.get=stackGet;
Stack.prototype.has=stackHas;
Stack.prototype.set=stackSet;









function arrayLikeKeys(value,inherited){
var isArr=isArray(value),
isArg=!isArr&&isArguments(value),
isBuff=!isArr&&!isArg&&isBuffer(value),
isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),
skipIndexes=isArr||isArg||isBuff||isType,
result=skipIndexes?baseTimes(value.length,String):[],
length=result.length;

for(var key in value){
if((inherited||hasOwnProperty.call(value,key))&&
!(skipIndexes&&(

key=='length'||

isBuff&&(key=='offset'||key=='parent')||

isType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||

isIndex(key,length))))
{
result.push(key);
}
}
return result;
}









function assocIndexOf(array,key){
var length=array.length;
while(length--){
if(eq(array[length][0],key)){
return length;
}
}
return-1;
}












function baseGetAllKeys(object,keysFunc,symbolsFunc){
var result=keysFunc(object);
return isArray(object)?result:arrayPush(result,symbolsFunc(object));
}








function baseGetTag(value){
if(value==null){
return value===undefined?undefinedTag:nullTag;
}
return symToStringTag&&symToStringTag in Object(value)?
getRawTag(value):
objectToString(value);
}








function baseIsArguments(value){
return isObjectLike(value)&&baseGetTag(value)==argsTag;
}















function baseIsEqual(value,other,bitmask,customizer,stack){
if(value===other){
return true;
}
if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){
return value!==value&&other!==other;
}
return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);
}















function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){
var objIsArr=isArray(object),
othIsArr=isArray(other),
objTag=objIsArr?arrayTag:getTag(object),
othTag=othIsArr?arrayTag:getTag(other);

objTag=objTag==argsTag?objectTag:objTag;
othTag=othTag==argsTag?objectTag:othTag;

var objIsObj=objTag==objectTag,
othIsObj=othTag==objectTag,
isSameTag=objTag==othTag;

if(isSameTag&&isBuffer(object)){
if(!isBuffer(other)){
return false;
}
objIsArr=true;
objIsObj=false;
}
if(isSameTag&&!objIsObj){
stack||(stack=new Stack());
return objIsArr||isTypedArray(object)?
equalArrays(object,other,bitmask,customizer,equalFunc,stack):
equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);
}
if(!(bitmask&COMPARE_PARTIAL_FLAG)){
var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),
othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');

if(objIsWrapped||othIsWrapped){
var objUnwrapped=objIsWrapped?object.value():object,
othUnwrapped=othIsWrapped?other.value():other;

stack||(stack=new Stack());
return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);
}
}
if(!isSameTag){
return false;
}
stack||(stack=new Stack());
return equalObjects(object,other,bitmask,customizer,equalFunc,stack);
}









function baseIsNative(value){
if(!isObject(value)||isMasked(value)){
return false;
}
var pattern=isFunction(value)?reIsNative:reIsHostCtor;
return pattern.test(toSource(value));
}








function baseIsTypedArray(value){
return isObjectLike(value)&&
isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];
}








function baseKeys(object){
if(!isPrototype(object)){
return nativeKeys(object);
}
var result=[];
for(var key in Object(object)){
if(hasOwnProperty.call(object,key)&&key!='constructor'){
result.push(key);
}
}
return result;
}














function equalArrays(array,other,bitmask,customizer,equalFunc,stack){
var isPartial=bitmask&COMPARE_PARTIAL_FLAG,
arrLength=array.length,
othLength=other.length;

if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){
return false;
}

var stacked=stack.get(array);
if(stacked&&stack.get(other)){
return stacked==other;
}
var index=-1,
result=true,
seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache():undefined;

stack.set(array,other);
stack.set(other,array);


while(++index<arrLength){
var arrValue=array[index],
othValue=other[index];

if(customizer){
var compared=isPartial?
customizer(othValue,arrValue,index,other,array,stack):
customizer(arrValue,othValue,index,array,other,stack);
}
if(compared!==undefined){
if(compared){
continue;
}
result=false;
break;
}

if(seen){
if(!arraySome(other,function(othValue,othIndex){
if(!cacheHas(seen,othIndex)&&(
arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){
return seen.push(othIndex);
}
})){
result=false;
break;
}
}else if(!(
arrValue===othValue||
equalFunc(arrValue,othValue,bitmask,customizer,stack)))
{
result=false;
break;
}
}
stack['delete'](array);
stack['delete'](other);
return result;
}


















function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){
switch(tag){
case dataViewTag:
if(object.byteLength!=other.byteLength||
object.byteOffset!=other.byteOffset){
return false;
}
object=object.buffer;
other=other.buffer;

case arrayBufferTag:
if(object.byteLength!=other.byteLength||
!equalFunc(new Uint8Array(object),new Uint8Array(other))){
return false;
}
return true;

case boolTag:
case dateTag:
case numberTag:


return eq(+object,+other);

case errorTag:
return object.name==other.name&&object.message==other.message;

case regexpTag:
case stringTag:



return object==other+'';

case mapTag:
var convert=mapToArray;

case setTag:
var isPartial=bitmask&COMPARE_PARTIAL_FLAG;
convert||(convert=setToArray);

if(object.size!=other.size&&!isPartial){
return false;
}

var stacked=stack.get(object);
if(stacked){
return stacked==other;
}
bitmask|=COMPARE_UNORDERED_FLAG;


stack.set(object,other);
var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);
stack['delete'](object);
return result;

case symbolTag:
if(symbolValueOf){
return symbolValueOf.call(object)==symbolValueOf.call(other);
}}

return false;
}














function equalObjects(object,other,bitmask,customizer,equalFunc,stack){
var isPartial=bitmask&COMPARE_PARTIAL_FLAG,
objProps=getAllKeys(object),
objLength=objProps.length,
othProps=getAllKeys(other),
othLength=othProps.length;

if(objLength!=othLength&&!isPartial){
return false;
}
var index=objLength;
while(index--){
var key=objProps[index];
if(!(isPartial?key in other:hasOwnProperty.call(other,key))){
return false;
}
}

var stacked=stack.get(object);
if(stacked&&stack.get(other)){
return stacked==other;
}
var result=true;
stack.set(object,other);
stack.set(other,object);

var skipCtor=isPartial;
while(++index<objLength){
key=objProps[index];
var objValue=object[key],
othValue=other[key];

if(customizer){
var compared=isPartial?
customizer(othValue,objValue,key,other,object,stack):
customizer(objValue,othValue,key,object,other,stack);
}

if(!(compared===undefined?
objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):
compared))
{
result=false;
break;
}
skipCtor||(skipCtor=key=='constructor');
}
if(result&&!skipCtor){
var objCtor=object.constructor,
othCtor=other.constructor;


if(objCtor!=othCtor&&
'constructor'in object&&'constructor'in other&&
!(typeof objCtor=='function'&&objCtor instanceof objCtor&&
typeof othCtor=='function'&&othCtor instanceof othCtor)){
result=false;
}
}
stack['delete'](object);
stack['delete'](other);
return result;
}








function getAllKeys(object){
return baseGetAllKeys(object,keys,getSymbols);
}









function getMapData(map,key){
var data=map.__data__;
return isKeyable(key)?
data[typeof key=='string'?'string':'hash']:
data.map;
}









function getNative(object,key){
var value=getValue(object,key);
return baseIsNative(value)?value:undefined;
}








function getRawTag(value){
var isOwn=hasOwnProperty.call(value,symToStringTag),
tag=value[symToStringTag];

try{
value[symToStringTag]=undefined;
var unmasked=true;
}catch(e){}

var result=nativeObjectToString.call(value);
if(unmasked){
if(isOwn){
value[symToStringTag]=tag;
}else{
delete value[symToStringTag];
}
}
return result;
}








var getSymbols=!nativeGetSymbols?stubArray:function(object){
if(object==null){
return[];
}
object=Object(object);
return arrayFilter(nativeGetSymbols(object),function(symbol){
return propertyIsEnumerable.call(object,symbol);
});
};








var getTag=baseGetTag;


if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||
Map&&getTag(new Map())!=mapTag||
Promise&&getTag(Promise.resolve())!=promiseTag||
Set&&getTag(new Set())!=setTag||
WeakMap&&getTag(new WeakMap())!=weakMapTag){
getTag=function(value){
var result=baseGetTag(value),
Ctor=result==objectTag?value.constructor:undefined,
ctorString=Ctor?toSource(Ctor):'';

if(ctorString){
switch(ctorString){
case dataViewCtorString:return dataViewTag;
case mapCtorString:return mapTag;
case promiseCtorString:return promiseTag;
case setCtorString:return setTag;
case weakMapCtorString:return weakMapTag;}

}
return result;
};
}









function isIndex(value,length){
length=length==null?MAX_SAFE_INTEGER:length;
return!!length&&(
typeof value=='number'||reIsUint.test(value))&&
value>-1&&value%1==0&&value<length;
}








function isKeyable(value){
var type=typeof value;
return type=='string'||type=='number'||type=='symbol'||type=='boolean'?
value!=='__proto__':
value===null;
}








function isMasked(func){
return!!maskSrcKey&&maskSrcKey in func;
}








function isPrototype(value){
var Ctor=value&&value.constructor,
proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;

return value===proto;
}








function objectToString(value){
return nativeObjectToString.call(value);
}








function toSource(func){
if(func!=null){
try{
return funcToString.call(func);
}catch(e){}
try{
return func+'';
}catch(e){}
}
return'';
}

































function eq(value,other){
return value===other||value!==value&&other!==other;
}



















var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){
return isObjectLike(value)&&hasOwnProperty.call(value,'callee')&&
!propertyIsEnumerable.call(value,'callee');
};
























var isArray=Array.isArray;


























function isArrayLike(value){
return value!=null&&isLength(value.length)&&!isFunction(value);
}


















var isBuffer=nativeIsBuffer||stubFalse;





























function isEqual(value,other){
return baseIsEqual(value,other);
}


















function isFunction(value){
if(!isObject(value)){
return false;
}


var tag=baseGetTag(value);
return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;
}



























function isLength(value){
return typeof value=='number'&&
value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;
}


























function isObject(value){
var type=typeof value;
return value!=null&&(type=='object'||type=='function');
}

























function isObjectLike(value){
return value!=null&&typeof value=='object';
}


















var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;





























function keys(object){
return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);
}



















function stubArray(){
return[];
}














function stubFalse(){
return false;
}

module.exports=isEqual;

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],155:[function(require,module,exports){



module.exports=function lookupClosestLocale(locale,available){
if(typeof locale==='string'&&available[locale])return locale;
var locales=[].concat(locale||[]);
for(var l=0,ll=locales.length;l<ll;++l){
var current=locales[l].split('-');
while(current.length){
var candidate=current.join('-');
if(available[candidate])return candidate;
current.pop();
}
}
};

},{}],156:[function(require,module,exports){
'use strict';

Object.defineProperty(exports,'__esModule',{value:true});


var perf=typeof performance!=='undefined'&&performance;

var now=perf&&perf.now?function(){return perf.now();}:function(){return Date.now();};

function throwIfEmpty(name){
if(!name){
throw new Error('name must be non-empty');
}
}


function insertSorted(arr,item){
var low=0;
var high=arr.length;
var mid;
while(low<high){
mid=low+high>>>1;
if(arr[mid].startTime<item.startTime){
low=mid+1;
}else{
high=mid;
}
}
arr.splice(low,0,item);
}

if(perf&&perf.mark){
exports.mark=function(name){
throwIfEmpty(name);
perf.mark("start "+name);
};
exports.stop=function(name){
throwIfEmpty(name);
perf.mark("end "+name);
perf.measure(name,"start "+name,"end "+name);
var entries=perf.getEntriesByName(name);
return entries[entries.length-1];
};
exports.getEntries=function(){return perf.getEntriesByType('measure');};
exports.clear=function(){
perf.clearMarks();
perf.clearMeasures();
};
}else{
var marks={};
var entries=[];
exports.mark=function(name){
throwIfEmpty(name);
var startTime=now();
marks['$'+name]=startTime;
};
exports.stop=function(name){
throwIfEmpty(name);
var endTime=now();
var startTime=marks['$'+name];
if(!startTime){
throw new Error("no known mark: "+name);
}
var entry={
startTime:startTime,
name:name,
duration:endTime-startTime,
entryType:'measure'};




insertSorted(entries,entry);
return entry;
};
exports.getEntries=function(){return entries;};
exports.clear=function(){entries=[];};
}

},{}],157:[function(require,module,exports){
exports.getRenderingDataFromViewport=function(viewportProperties,uaDeviceWidth,uaDeviceHeight,uaMaxZoom,uaMinZoom){

var vw=uaDeviceWidth/100;
var vh=uaDeviceHeight/100;



var maxZoom=null;
var minZoom=null;
var zoom=null;
var minWidth=null;
var minHeight=null;
var maxWidth=null;
var maxHeight=null;
var width=null,height=null;
var initialWidth=uaDeviceWidth;
var initialHeight=uaDeviceHeight;
var userZoom="zoom";

if(viewportProperties["maximum-scale"]!==undefined){
maxZoom=translateZoomProperty(viewportProperties["maximum-scale"]);
}
if(viewportProperties["minimum-scale"]!==undefined){
minZoom=translateZoomProperty(viewportProperties["minimum-scale"]);
}
if(viewportProperties["initial-scale"]!==undefined){
zoom=translateZoomProperty(viewportProperties["initial-scale"]);
}







if(minZoom!==null&&maxZoom===null){
minZoom=min(uaMaxZoom,translateZoomProperty(viewportProperties["minimum-scale"]));
}

if(viewportProperties["width"]!==undefined){
minWidth="extend-to-zoom";
maxWidth=translateLengthProperty(viewportProperties["width"],vw,vh);
}

if(viewportProperties["height"]!==undefined){
minHeight="extend-to-zoom";
maxHeight=translateLengthProperty(viewportProperties["height"],vw,vh);
}


if(viewportProperties["user-scalable"]!==undefined){
userZoom=viewportProperties["user-scalable"];
if(typeof userZoom==="number"){
if(userZoom>=1||userZoom<=-1){
userZoom="zoom";
}else{
userZoom="fixed";
}
}else{
switch(userZoom){
case"yes":
case"device-width":
case"device-height":
userZoom="zoom";
break;
case"no":
default:
userZoom="fixed";
break;}

}
}



if(zoom!==null&&(
viewportProperties["width"]===undefined||width===undefined)){
if(viewportProperties["height"]!==undefined){

minWidth=null;
maxWidth=null;
}else{

minWidth="extend-to-zoom";
maxWidth="extend-to-zoom";
}
}






if(minZoom!==null&&maxZoom!==null){
maxZoom=max(minZoom,maxZoom);
}


if(zoom!==null){
zoom=clamp(zoom,minZoom,maxZoom);
}


var extendZoom=zoom===null&&maxZoom===null?null:min(zoom,maxZoom);
var extendWidth,extendHeight;
if(extendZoom===null){
if(maxWidth==="extend-to-zoom"){
maxWidth=null;
}
if(maxHeight==="extend-to-zoom"){
maxHeight=null;
}
if(minWidth==="extend-to-zoom"){
minWidth=maxWidth;
}
if(minHeight==="extend-to-zoom"){
minHeight=maxHeight;
}
}else{
extendWidth=initialWidth/extendZoom;
extendHeight=initialHeight/extendZoom;

if(maxWidth==="extend-to-zoom"){
maxWidth=extendWidth;
}
if(maxHeight==="extend-to-zoom"){
maxHeight=extendHeight;
}
if(minWidth==="extend-to-zoom"){
minWidth=max(extendWidth,maxWidth);
}
if(minHeight==="extend-to-zoom"){
minHeight=max(extendHeight,maxHeight);
}
}


if(minWidth!==null||maxWidth!==null){
width=max(minWidth,min(maxWidth,initialWidth));
}
if(minHeight!==null||maxHeight!==null){
height=max(minHeight,min(maxHeight,initialHeight));
}


if(width===null){
if(height===null){
width=initialWidth;
}else{
if(initialHeight!==0){
width=Math.round(height*(initialWidth/initialHeight));
}else{
width=initialWidth;
}
}
}
if(height===null){
if(initialWidth!==0){
height=Math.round(width*(initialHeight/initialWidth));
}else{
height=initialHeight;
}
}

return{zoom:zoom,width:width,height:height,userZoom:userZoom};
};

function min(a,b){
if(a===null)return b;
if(b===null)return a;
return Math.min(a,b);
}

function max(a,b){
if(a===null)return b;
if(b===null)return a;
return Math.max(a,b);
}


function translateLengthProperty(prop,vw,vh){

if(typeof prop==="number"){
if(prop>=0){

return clamp(prop,1,10000);
}else{
return undefined;
}
}
if(prop==="device-width"){
return 100*vw;
}
if(prop==="device-height"){
return 100*vh;
}
return 1;
}

function translateZoomProperty(prop){

if(typeof prop==="number"){
if(prop>=0){

return clamp(prop,0.1,10);
}else{
return undefined;
}
}
if(prop==="yes"){
return 1;
}
if(prop==="device-width"||prop==="device-height"){
return 10;
}
if(prop==="no"||prop===null){
return 0.1;
}
}


function clamp(value,minv,maxv){
return max(min(value,maxv),minv);
}
































exports.parseMetaViewPortContent=function(S){
var parsedContent={
validProperties:{},
unknownProperties:{},
invalidValues:{}};

var i=1;
while(i<=S.length){
while(i<=S.length&&RegExp(' |\x0A|\x09|\0d|,|;|=').test(S[i-1])){
i++;
}
if(i<=S.length){
i=parseProperty(parsedContent,S,i);
}
}
return parsedContent;
};

var propertyNames=["width","height","initial-scale","minimum-scale","maximum-scale","user-scalable","shrink-to-fit","viewport-fit"];

function parseProperty(parsedContent,S,i){
var start=i;
while(i<=S.length&&!RegExp(' |\x0A|\x09|\0d|,|;|=').test(S[i-1])){
i++;
}
if(i>S.length||RegExp(',|;').test(S[i-1])){
return i;
}
var propertyName=S.slice(start-1,i-1);
while(i<=S.length&&!RegExp(',|;|=').test(S[i-1])){
i++;
}
if(i>S.length||RegExp(',|;').test(S[i-1])){
return i;
}
while(i<=S.length&&RegExp(' |\x0A|\x09|\0d|=').test(S[i-1])){
i++;
}
if(i>S.length||RegExp(',|;').test(S[i-1])){
return i;
}
start=i;
while(i<=S.length&&!RegExp(' |\x0A|\x09|\0d|,|;|=').test(S[i-1])){
i++;
}
var propertyValue=S.slice(start-1,i-1);
setProperty(parsedContent,propertyName,propertyValue);
return i;
}

function setProperty(parsedContent,name,value){
if(propertyNames.indexOf(name)>=0){
var number=parseFloat(value);
if(!isNaN(number)){
parsedContent.validProperties[name]=number;
return;
}
var string=value.toLowerCase();

if(string==="yes"||string==="no"||string==="device-width"||string==="device-height"||


name.toLowerCase()==='viewport-fit'&&(string==='auto'||string==='cover')){

parsedContent.validProperties[name]=string;
return;
}

parsedContent.validProperties[name]=null;
parsedContent.invalidValues[name]=value;
}else{
parsedContent.unknownProperties[name]=value;
}
}

exports.expectedValues={
"width":["device-width","device-height","a positive number"],
"height":["device-width","device-height","a positive number"],
"initial-scale":["a positive number"],
"minimum-scale":["a positive number"],
"maximum-scale":["a positive number"],
"user-scalable":["yes","no","0","1"],
"shrink-to-fit":["yes","no"],
"viewport-fit":["auto","cover"]};


},{}],158:[function(require,module,exports){




var s=1000;
var m=s*60;
var h=m*60;
var d=h*24;
var y=d*365.25;















module.exports=function(val,options){
options=options||{};
var type=typeof val;
if(type==='string'&&val.length>0){
return parse(val);
}else if(type==='number'&&isNaN(val)===false){
return options.long?fmtLong(val):fmtShort(val);
}
throw new Error(
'val is not a non-empty string or a valid number. val='+
JSON.stringify(val));

};









function parse(str){
str=String(str);
if(str.length>100){
return;
}
var match=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
str);

if(!match){
return;
}
var n=parseFloat(match[1]);
var type=(match[2]||'ms').toLowerCase();
switch(type){
case'years':
case'year':
case'yrs':
case'yr':
case'y':
return n*y;
case'days':
case'day':
case'd':
return n*d;
case'hours':
case'hour':
case'hrs':
case'hr':
case'h':
return n*h;
case'minutes':
case'minute':
case'mins':
case'min':
case'm':
return n*m;
case'seconds':
case'second':
case'secs':
case'sec':
case's':
return n*s;
case'milliseconds':
case'millisecond':
case'msecs':
case'msec':
case'ms':
return n;
default:
return undefined;}

}









function fmtShort(ms){
if(ms>=d){
return Math.round(ms/d)+'d';
}
if(ms>=h){
return Math.round(ms/h)+'h';
}
if(ms>=m){
return Math.round(ms/m)+'m';
}
if(ms>=s){
return Math.round(ms/s)+'s';
}
return ms+'ms';
}









function fmtLong(ms){
return plural(ms,d,'day')||
plural(ms,h,'hour')||
plural(ms,m,'minute')||
plural(ms,s,'second')||
ms+' ms';
}





function plural(ms,n,name){
if(ms<n){
return;
}
if(ms<n*1.5){
return Math.floor(ms/n)+' '+name;
}
return Math.ceil(ms/n)+' '+name+'s';
}

},{}],159:[function(require,module,exports){
'use strict';


var TYPED_OK=typeof Uint8Array!=='undefined'&&
typeof Uint16Array!=='undefined'&&
typeof Int32Array!=='undefined';

function _has(obj,key){
return Object.prototype.hasOwnProperty.call(obj,key);
}

exports.assign=function(obj){
var sources=Array.prototype.slice.call(arguments,1);
while(sources.length){
var source=sources.shift();
if(!source){continue;}

if(typeof source!=='object'){
throw new TypeError(source+'must be non-object');
}

for(var p in source){
if(_has(source,p)){
obj[p]=source[p];
}
}
}

return obj;
};



exports.shrinkBuf=function(buf,size){
if(buf.length===size){return buf;}
if(buf.subarray){return buf.subarray(0,size);}
buf.length=size;
return buf;
};


var fnTyped={
arraySet:function(dest,src,src_offs,len,dest_offs){
if(src.subarray&&dest.subarray){
dest.set(src.subarray(src_offs,src_offs+len),dest_offs);
return;
}

for(var i=0;i<len;i++){
dest[dest_offs+i]=src[src_offs+i];
}
},

flattenChunks:function(chunks){
var i,l,len,pos,chunk,result;


len=0;
for(i=0,l=chunks.length;i<l;i++){
len+=chunks[i].length;
}


result=new Uint8Array(len);
pos=0;
for(i=0,l=chunks.length;i<l;i++){
chunk=chunks[i];
result.set(chunk,pos);
pos+=chunk.length;
}

return result;
}};


var fnUntyped={
arraySet:function(dest,src,src_offs,len,dest_offs){
for(var i=0;i<len;i++){
dest[dest_offs+i]=src[src_offs+i];
}
},

flattenChunks:function(chunks){
return[].concat.apply([],chunks);
}};





exports.setTyped=function(on){
if(on){
exports.Buf8=Uint8Array;
exports.Buf16=Uint16Array;
exports.Buf32=Int32Array;
exports.assign(exports,fnTyped);
}else{
exports.Buf8=Array;
exports.Buf16=Array;
exports.Buf32=Array;
exports.assign(exports,fnUntyped);
}
};

exports.setTyped(TYPED_OK);

},{}],160:[function(require,module,exports){
'use strict';
























function adler32(adler,buf,len,pos){
var s1=adler&0xffff|0,
s2=adler>>>16&0xffff|0,
n=0;

while(len!==0){



n=len>2000?2000:len;
len-=n;

do{
s1=s1+buf[pos++]|0;
s2=s2+s1|0;
}while(--n);

s1%=65521;
s2%=65521;
}

return s1|s2<<16|0;
}


module.exports=adler32;

},{}],161:[function(require,module,exports){
'use strict';




















module.exports={


Z_NO_FLUSH:0,
Z_PARTIAL_FLUSH:1,
Z_SYNC_FLUSH:2,
Z_FULL_FLUSH:3,
Z_FINISH:4,
Z_BLOCK:5,
Z_TREES:6,




Z_OK:0,
Z_STREAM_END:1,
Z_NEED_DICT:2,
Z_ERRNO:-1,
Z_STREAM_ERROR:-2,
Z_DATA_ERROR:-3,

Z_BUF_ERROR:-5,



Z_NO_COMPRESSION:0,
Z_BEST_SPEED:1,
Z_BEST_COMPRESSION:9,
Z_DEFAULT_COMPRESSION:-1,


Z_FILTERED:1,
Z_HUFFMAN_ONLY:2,
Z_RLE:3,
Z_FIXED:4,
Z_DEFAULT_STRATEGY:0,


Z_BINARY:0,
Z_TEXT:1,

Z_UNKNOWN:2,


Z_DEFLATED:8};



},{}],162:[function(require,module,exports){
'use strict';

























function makeTable(){
var c,table=[];

for(var n=0;n<256;n++){
c=n;
for(var k=0;k<8;k++){
c=c&1?0xEDB88320^c>>>1:c>>>1;
}
table[n]=c;
}

return table;
}


var crcTable=makeTable();


function crc32(crc,buf,len,pos){
var t=crcTable,
end=pos+len;

crc^=-1;

for(var i=pos;i<end;i++){
crc=crc>>>8^t[(crc^buf[i])&0xFF];
}

return crc^-1;
}


module.exports=crc32;

},{}],163:[function(require,module,exports){
'use strict';




















var utils=require('../utils/common');
var trees=require('./trees');
var adler32=require('./adler32');
var crc32=require('./crc32');
var msg=require('./messages');






var Z_NO_FLUSH=0;
var Z_PARTIAL_FLUSH=1;

var Z_FULL_FLUSH=3;
var Z_FINISH=4;
var Z_BLOCK=5;






var Z_OK=0;
var Z_STREAM_END=1;


var Z_STREAM_ERROR=-2;
var Z_DATA_ERROR=-3;

var Z_BUF_ERROR=-5;







var Z_DEFAULT_COMPRESSION=-1;


var Z_FILTERED=1;
var Z_HUFFMAN_ONLY=2;
var Z_RLE=3;
var Z_FIXED=4;
var Z_DEFAULT_STRATEGY=0;





var Z_UNKNOWN=2;



var Z_DEFLATED=8;




var MAX_MEM_LEVEL=9;

var MAX_WBITS=15;

var DEF_MEM_LEVEL=8;


var LENGTH_CODES=29;

var LITERALS=256;

var L_CODES=LITERALS+1+LENGTH_CODES;

var D_CODES=30;

var BL_CODES=19;

var HEAP_SIZE=2*L_CODES+1;

var MAX_BITS=15;


var MIN_MATCH=3;
var MAX_MATCH=258;
var MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1;

var PRESET_DICT=0x20;

var INIT_STATE=42;
var EXTRA_STATE=69;
var NAME_STATE=73;
var COMMENT_STATE=91;
var HCRC_STATE=103;
var BUSY_STATE=113;
var FINISH_STATE=666;

var BS_NEED_MORE=1;
var BS_BLOCK_DONE=2;
var BS_FINISH_STARTED=3;
var BS_FINISH_DONE=4;

var OS_CODE=0x03;

function err(strm,errorCode){
strm.msg=msg[errorCode];
return errorCode;
}

function rank(f){
return(f<<1)-(f>4?9:0);
}

function zero(buf){var len=buf.length;while(--len>=0){buf[len]=0;}}








function flush_pending(strm){
var s=strm.state;


var len=s.pending;
if(len>strm.avail_out){
len=strm.avail_out;
}
if(len===0){return;}

utils.arraySet(strm.output,s.pending_buf,s.pending_out,len,strm.next_out);
strm.next_out+=len;
s.pending_out+=len;
strm.total_out+=len;
strm.avail_out-=len;
s.pending-=len;
if(s.pending===0){
s.pending_out=0;
}
}


function flush_block_only(s,last){
trees._tr_flush_block(s,s.block_start>=0?s.block_start:-1,s.strstart-s.block_start,last);
s.block_start=s.strstart;
flush_pending(s.strm);
}


function put_byte(s,b){
s.pending_buf[s.pending++]=b;
}







function putShortMSB(s,b){


s.pending_buf[s.pending++]=b>>>8&0xff;
s.pending_buf[s.pending++]=b&0xff;
}









function read_buf(strm,buf,start,size){
var len=strm.avail_in;

if(len>size){len=size;}
if(len===0){return 0;}

strm.avail_in-=len;


utils.arraySet(buf,strm.input,strm.next_in,len,start);
if(strm.state.wrap===1){
strm.adler=adler32(strm.adler,buf,len,start);
}else

if(strm.state.wrap===2){
strm.adler=crc32(strm.adler,buf,len,start);
}

strm.next_in+=len;
strm.total_in+=len;

return len;
}











function longest_match(s,cur_match){
var chain_length=s.max_chain_length;
var scan=s.strstart;
var match;
var len;
var best_len=s.prev_length;
var nice_match=s.nice_match;
var limit=s.strstart>s.w_size-MIN_LOOKAHEAD?
s.strstart-(s.w_size-MIN_LOOKAHEAD):0;

var _win=s.window;

var wmask=s.w_mask;
var prev=s.prev;





var strend=s.strstart+MAX_MATCH;
var scan_end1=_win[scan+best_len-1];
var scan_end=_win[scan+best_len];







if(s.prev_length>=s.good_match){
chain_length>>=2;
}



if(nice_match>s.lookahead){nice_match=s.lookahead;}



do{

match=cur_match;










if(_win[match+best_len]!==scan_end||
_win[match+best_len-1]!==scan_end1||
_win[match]!==_win[scan]||
_win[++match]!==_win[scan+1]){
continue;
}







scan+=2;
match++;





do{

}while(_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&
_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&
_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&
_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&
scan<strend);



len=MAX_MATCH-(strend-scan);
scan=strend-MAX_MATCH;

if(len>best_len){
s.match_start=cur_match;
best_len=len;
if(len>=nice_match){
break;
}
scan_end1=_win[scan+best_len-1];
scan_end=_win[scan+best_len];
}
}while((cur_match=prev[cur_match&wmask])>limit&&--chain_length!==0);

if(best_len<=s.lookahead){
return best_len;
}
return s.lookahead;
}












function fill_window(s){
var _w_size=s.w_size;
var p,n,m,more,str;



do{
more=s.window_size-s.lookahead-s.strstart;



















if(s.strstart>=_w_size+(_w_size-MIN_LOOKAHEAD)){

utils.arraySet(s.window,s.window,_w_size,_w_size,0);
s.match_start-=_w_size;
s.strstart-=_w_size;

s.block_start-=_w_size;








n=s.hash_size;
p=n;
do{
m=s.head[--p];
s.head[p]=m>=_w_size?m-_w_size:0;
}while(--n);

n=_w_size;
p=n;
do{
m=s.prev[--p];
s.prev[p]=m>=_w_size?m-_w_size:0;



}while(--n);

more+=_w_size;
}
if(s.strm.avail_in===0){
break;
}













n=read_buf(s.strm,s.window,s.strstart+s.lookahead,more);
s.lookahead+=n;


if(s.lookahead+s.insert>=MIN_MATCH){
str=s.strstart-s.insert;
s.ins_h=s.window[str];


s.ins_h=(s.ins_h<<s.hash_shift^s.window[str+1])&s.hash_mask;



while(s.insert){

s.ins_h=(s.ins_h<<s.hash_shift^s.window[str+MIN_MATCH-1])&s.hash_mask;

s.prev[str&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=str;
str++;
s.insert--;
if(s.lookahead+s.insert<MIN_MATCH){
break;
}
}
}




}while(s.lookahead<MIN_LOOKAHEAD&&s.strm.avail_in!==0);





































}










function deflate_stored(s,flush){



var max_block_size=0xffff;

if(max_block_size>s.pending_buf_size-5){
max_block_size=s.pending_buf_size-5;
}


for(;;){

if(s.lookahead<=1){








fill_window(s);
if(s.lookahead===0&&flush===Z_NO_FLUSH){
return BS_NEED_MORE;
}

if(s.lookahead===0){
break;
}

}



s.strstart+=s.lookahead;
s.lookahead=0;


var max_start=s.block_start+max_block_size;

if(s.strstart===0||s.strstart>=max_start){

s.lookahead=s.strstart-max_start;
s.strstart=max_start;

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}



}



if(s.strstart-s.block_start>=s.w_size-MIN_LOOKAHEAD){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}
}

s.insert=0;

if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;
}

return BS_FINISH_DONE;
}

if(s.strstart>s.block_start){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}

return BS_NEED_MORE;
}








function deflate_fast(s,flush){
var hash_head;
var bflush;

for(;;){





if(s.lookahead<MIN_LOOKAHEAD){
fill_window(s);
if(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){
return BS_NEED_MORE;
}
if(s.lookahead===0){
break;
}
}




hash_head=0;
if(s.lookahead>=MIN_MATCH){

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;
hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=s.strstart;

}




if(hash_head!==0&&s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD){




s.match_length=longest_match(s,hash_head);

}
if(s.match_length>=MIN_MATCH){




bflush=trees._tr_tally(s,s.strstart-s.match_start,s.match_length-MIN_MATCH);

s.lookahead-=s.match_length;




if(s.match_length<=s.max_lazy_match&&s.lookahead>=MIN_MATCH){
s.match_length--;
do{
s.strstart++;

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;
hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=s.strstart;




}while(--s.match_length!==0);
s.strstart++;
}else
{
s.strstart+=s.match_length;
s.match_length=0;
s.ins_h=s.window[s.strstart];

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+1])&s.hash_mask;







}
}else{



bflush=trees._tr_tally(s,0,s.window[s.strstart]);

s.lookahead--;
s.strstart++;
}
if(bflush){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}
}
s.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;
if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;
}

return BS_FINISH_DONE;
}
if(s.last_lit){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}
return BS_BLOCK_DONE;
}






function deflate_slow(s,flush){
var hash_head;
var bflush;

var max_insert;


for(;;){





if(s.lookahead<MIN_LOOKAHEAD){
fill_window(s);
if(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){
return BS_NEED_MORE;
}
if(s.lookahead===0){break;}
}




hash_head=0;
if(s.lookahead>=MIN_MATCH){

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;
hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=s.strstart;

}



s.prev_length=s.match_length;
s.prev_match=s.match_start;
s.match_length=MIN_MATCH-1;

if(hash_head!==0&&s.prev_length<s.max_lazy_match&&
s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD){




s.match_length=longest_match(s,hash_head);


if(s.match_length<=5&&(
s.strategy===Z_FILTERED||s.match_length===MIN_MATCH&&s.strstart-s.match_start>4096)){




s.match_length=MIN_MATCH-1;
}
}



if(s.prev_length>=MIN_MATCH&&s.match_length<=s.prev_length){
max_insert=s.strstart+s.lookahead-MIN_MATCH;






bflush=trees._tr_tally(s,s.strstart-1-s.prev_match,s.prev_length-MIN_MATCH);





s.lookahead-=s.prev_length-1;
s.prev_length-=2;
do{
if(++s.strstart<=max_insert){

s.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;
hash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];
s.head[s.ins_h]=s.strstart;

}
}while(--s.prev_length!==0);
s.match_available=0;
s.match_length=MIN_MATCH-1;
s.strstart++;

if(bflush){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}

}else if(s.match_available){






bflush=trees._tr_tally(s,0,s.window[s.strstart-1]);

if(bflush){

flush_block_only(s,false);

}
s.strstart++;
s.lookahead--;
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}
}else{



s.match_available=1;
s.strstart++;
s.lookahead--;
}
}

if(s.match_available){


bflush=trees._tr_tally(s,0,s.window[s.strstart-1]);

s.match_available=0;
}
s.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;
if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;
}

return BS_FINISH_DONE;
}
if(s.last_lit){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}

return BS_BLOCK_DONE;
}







function deflate_rle(s,flush){
var bflush;
var prev;
var scan,strend;

var _win=s.window;

for(;;){




if(s.lookahead<=MAX_MATCH){
fill_window(s);
if(s.lookahead<=MAX_MATCH&&flush===Z_NO_FLUSH){
return BS_NEED_MORE;
}
if(s.lookahead===0){break;}
}


s.match_length=0;
if(s.lookahead>=MIN_MATCH&&s.strstart>0){
scan=s.strstart-1;
prev=_win[scan];
if(prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]){
strend=s.strstart+MAX_MATCH;
do{

}while(prev===_win[++scan]&&prev===_win[++scan]&&
prev===_win[++scan]&&prev===_win[++scan]&&
prev===_win[++scan]&&prev===_win[++scan]&&
prev===_win[++scan]&&prev===_win[++scan]&&
scan<strend);
s.match_length=MAX_MATCH-(strend-scan);
if(s.match_length>s.lookahead){
s.match_length=s.lookahead;
}
}

}


if(s.match_length>=MIN_MATCH){



bflush=trees._tr_tally(s,1,s.match_length-MIN_MATCH);

s.lookahead-=s.match_length;
s.strstart+=s.match_length;
s.match_length=0;
}else{



bflush=trees._tr_tally(s,0,s.window[s.strstart]);

s.lookahead--;
s.strstart++;
}
if(bflush){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}
}
s.insert=0;
if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;
}

return BS_FINISH_DONE;
}
if(s.last_lit){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}
return BS_BLOCK_DONE;
}





function deflate_huff(s,flush){
var bflush;

for(;;){

if(s.lookahead===0){
fill_window(s);
if(s.lookahead===0){
if(flush===Z_NO_FLUSH){
return BS_NEED_MORE;
}
break;
}
}


s.match_length=0;


bflush=trees._tr_tally(s,0,s.window[s.strstart]);
s.lookahead--;
s.strstart++;
if(bflush){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}
}
s.insert=0;
if(flush===Z_FINISH){

flush_block_only(s,true);
if(s.strm.avail_out===0){
return BS_FINISH_STARTED;
}

return BS_FINISH_DONE;
}
if(s.last_lit){

flush_block_only(s,false);
if(s.strm.avail_out===0){
return BS_NEED_MORE;
}

}
return BS_BLOCK_DONE;
}






function Config(good_length,max_lazy,nice_length,max_chain,func){
this.good_length=good_length;
this.max_lazy=max_lazy;
this.nice_length=nice_length;
this.max_chain=max_chain;
this.func=func;
}

var configuration_table;

configuration_table=[

new Config(0,0,0,0,deflate_stored),
new Config(4,4,8,4,deflate_fast),
new Config(4,5,16,8,deflate_fast),
new Config(4,6,32,32,deflate_fast),

new Config(4,4,16,16,deflate_slow),
new Config(8,16,32,32,deflate_slow),
new Config(8,16,128,128,deflate_slow),
new Config(8,32,128,256,deflate_slow),
new Config(32,128,258,1024,deflate_slow),
new Config(32,258,258,4096,deflate_slow)];






function lm_init(s){
s.window_size=2*s.w_size;


zero(s.head);



s.max_lazy_match=configuration_table[s.level].max_lazy;
s.good_match=configuration_table[s.level].good_length;
s.nice_match=configuration_table[s.level].nice_length;
s.max_chain_length=configuration_table[s.level].max_chain;

s.strstart=0;
s.block_start=0;
s.lookahead=0;
s.insert=0;
s.match_length=s.prev_length=MIN_MATCH-1;
s.match_available=0;
s.ins_h=0;
}


function DeflateState(){
this.strm=null;
this.status=0;
this.pending_buf=null;
this.pending_buf_size=0;
this.pending_out=0;
this.pending=0;
this.wrap=0;
this.gzhead=null;
this.gzindex=0;
this.method=Z_DEFLATED;
this.last_flush=-1;

this.w_size=0;
this.w_bits=0;
this.w_mask=0;

this.window=null;







this.window_size=0;




this.prev=null;





this.head=null;

this.ins_h=0;
this.hash_size=0;
this.hash_bits=0;
this.hash_mask=0;

this.hash_shift=0;






this.block_start=0;




this.match_length=0;
this.prev_match=0;
this.match_available=0;
this.strstart=0;
this.match_start=0;
this.lookahead=0;

this.prev_length=0;




this.max_chain_length=0;





this.max_lazy_match=0;











this.level=0;
this.strategy=0;

this.good_match=0;


this.nice_match=0;











this.dyn_ltree=new utils.Buf16(HEAP_SIZE*2);
this.dyn_dtree=new utils.Buf16((2*D_CODES+1)*2);
this.bl_tree=new utils.Buf16((2*BL_CODES+1)*2);
zero(this.dyn_ltree);
zero(this.dyn_dtree);
zero(this.bl_tree);

this.l_desc=null;
this.d_desc=null;
this.bl_desc=null;


this.bl_count=new utils.Buf16(MAX_BITS+1);



this.heap=new utils.Buf16(2*L_CODES+1);
zero(this.heap);

this.heap_len=0;
this.heap_max=0;




this.depth=new utils.Buf16(2*L_CODES+1);
zero(this.depth);



this.l_buf=0;

this.lit_bufsize=0;



















this.last_lit=0;

this.d_buf=0;





this.opt_len=0;
this.static_len=0;
this.matches=0;
this.insert=0;


this.bi_buf=0;



this.bi_valid=0;












}


function deflateResetKeep(strm){
var s;

if(!strm||!strm.state){
return err(strm,Z_STREAM_ERROR);
}

strm.total_in=strm.total_out=0;
strm.data_type=Z_UNKNOWN;

s=strm.state;
s.pending=0;
s.pending_out=0;

if(s.wrap<0){
s.wrap=-s.wrap;

}
s.status=s.wrap?INIT_STATE:BUSY_STATE;
strm.adler=s.wrap===2?
0:

1;
s.last_flush=Z_NO_FLUSH;
trees._tr_init(s);
return Z_OK;
}


function deflateReset(strm){
var ret=deflateResetKeep(strm);
if(ret===Z_OK){
lm_init(strm.state);
}
return ret;
}


function deflateSetHeader(strm,head){
if(!strm||!strm.state){return Z_STREAM_ERROR;}
if(strm.state.wrap!==2){return Z_STREAM_ERROR;}
strm.state.gzhead=head;
return Z_OK;
}


function deflateInit2(strm,level,method,windowBits,memLevel,strategy){
if(!strm){
return Z_STREAM_ERROR;
}
var wrap=1;

if(level===Z_DEFAULT_COMPRESSION){
level=6;
}

if(windowBits<0){
wrap=0;
windowBits=-windowBits;
}else

if(windowBits>15){
wrap=2;
windowBits-=16;
}


if(memLevel<1||memLevel>MAX_MEM_LEVEL||method!==Z_DEFLATED||
windowBits<8||windowBits>15||level<0||level>9||
strategy<0||strategy>Z_FIXED){
return err(strm,Z_STREAM_ERROR);
}


if(windowBits===8){
windowBits=9;
}


var s=new DeflateState();

strm.state=s;
s.strm=strm;

s.wrap=wrap;
s.gzhead=null;
s.w_bits=windowBits;
s.w_size=1<<s.w_bits;
s.w_mask=s.w_size-1;

s.hash_bits=memLevel+7;
s.hash_size=1<<s.hash_bits;
s.hash_mask=s.hash_size-1;
s.hash_shift=~~((s.hash_bits+MIN_MATCH-1)/MIN_MATCH);

s.window=new utils.Buf8(s.w_size*2);
s.head=new utils.Buf16(s.hash_size);
s.prev=new utils.Buf16(s.w_size);




s.lit_bufsize=1<<memLevel+6;

s.pending_buf_size=s.lit_bufsize*4;



s.pending_buf=new utils.Buf8(s.pending_buf_size);



s.d_buf=1*s.lit_bufsize;


s.l_buf=(1+2)*s.lit_bufsize;

s.level=level;
s.strategy=strategy;
s.method=method;

return deflateReset(strm);
}

function deflateInit(strm,level){
return deflateInit2(strm,level,Z_DEFLATED,MAX_WBITS,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY);
}


function deflate(strm,flush){
var old_flush,s;
var beg,val;

if(!strm||!strm.state||
flush>Z_BLOCK||flush<0){
return strm?err(strm,Z_STREAM_ERROR):Z_STREAM_ERROR;
}

s=strm.state;

if(!strm.output||
!strm.input&&strm.avail_in!==0||
s.status===FINISH_STATE&&flush!==Z_FINISH){
return err(strm,strm.avail_out===0?Z_BUF_ERROR:Z_STREAM_ERROR);
}

s.strm=strm;
old_flush=s.last_flush;
s.last_flush=flush;


if(s.status===INIT_STATE){

if(s.wrap===2){
strm.adler=0;
put_byte(s,31);
put_byte(s,139);
put_byte(s,8);
if(!s.gzhead){
put_byte(s,0);
put_byte(s,0);
put_byte(s,0);
put_byte(s,0);
put_byte(s,0);
put_byte(s,s.level===9?2:
s.strategy>=Z_HUFFMAN_ONLY||s.level<2?
4:0);
put_byte(s,OS_CODE);
s.status=BUSY_STATE;
}else
{
put_byte(s,(s.gzhead.text?1:0)+(
s.gzhead.hcrc?2:0)+(
!s.gzhead.extra?0:4)+(
!s.gzhead.name?0:8)+(
!s.gzhead.comment?0:16));

put_byte(s,s.gzhead.time&0xff);
put_byte(s,s.gzhead.time>>8&0xff);
put_byte(s,s.gzhead.time>>16&0xff);
put_byte(s,s.gzhead.time>>24&0xff);
put_byte(s,s.level===9?2:
s.strategy>=Z_HUFFMAN_ONLY||s.level<2?
4:0);
put_byte(s,s.gzhead.os&0xff);
if(s.gzhead.extra&&s.gzhead.extra.length){
put_byte(s,s.gzhead.extra.length&0xff);
put_byte(s,s.gzhead.extra.length>>8&0xff);
}
if(s.gzhead.hcrc){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending,0);
}
s.gzindex=0;
s.status=EXTRA_STATE;
}
}else

{
var header=Z_DEFLATED+(s.w_bits-8<<4)<<8;
var level_flags=-1;

if(s.strategy>=Z_HUFFMAN_ONLY||s.level<2){
level_flags=0;
}else if(s.level<6){
level_flags=1;
}else if(s.level===6){
level_flags=2;
}else{
level_flags=3;
}
header|=level_flags<<6;
if(s.strstart!==0){header|=PRESET_DICT;}
header+=31-header%31;

s.status=BUSY_STATE;
putShortMSB(s,header);


if(s.strstart!==0){
putShortMSB(s,strm.adler>>>16);
putShortMSB(s,strm.adler&0xffff);
}
strm.adler=1;
}
}


if(s.status===EXTRA_STATE){
if(s.gzhead.extra){
beg=s.pending;

while(s.gzindex<(s.gzhead.extra.length&0xffff)){
if(s.pending===s.pending_buf_size){
if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);
}
flush_pending(strm);
beg=s.pending;
if(s.pending===s.pending_buf_size){
break;
}
}
put_byte(s,s.gzhead.extra[s.gzindex]&0xff);
s.gzindex++;
}
if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);
}
if(s.gzindex===s.gzhead.extra.length){
s.gzindex=0;
s.status=NAME_STATE;
}
}else
{
s.status=NAME_STATE;
}
}
if(s.status===NAME_STATE){
if(s.gzhead.name){
beg=s.pending;


do{
if(s.pending===s.pending_buf_size){
if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);
}
flush_pending(strm);
beg=s.pending;
if(s.pending===s.pending_buf_size){
val=1;
break;
}
}

if(s.gzindex<s.gzhead.name.length){
val=s.gzhead.name.charCodeAt(s.gzindex++)&0xff;
}else{
val=0;
}
put_byte(s,val);
}while(val!==0);

if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);
}
if(val===0){
s.gzindex=0;
s.status=COMMENT_STATE;
}
}else
{
s.status=COMMENT_STATE;
}
}
if(s.status===COMMENT_STATE){
if(s.gzhead.comment){
beg=s.pending;


do{
if(s.pending===s.pending_buf_size){
if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);
}
flush_pending(strm);
beg=s.pending;
if(s.pending===s.pending_buf_size){
val=1;
break;
}
}

if(s.gzindex<s.gzhead.comment.length){
val=s.gzhead.comment.charCodeAt(s.gzindex++)&0xff;
}else{
val=0;
}
put_byte(s,val);
}while(val!==0);

if(s.gzhead.hcrc&&s.pending>beg){
strm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);
}
if(val===0){
s.status=HCRC_STATE;
}
}else
{
s.status=HCRC_STATE;
}
}
if(s.status===HCRC_STATE){
if(s.gzhead.hcrc){
if(s.pending+2>s.pending_buf_size){
flush_pending(strm);
}
if(s.pending+2<=s.pending_buf_size){
put_byte(s,strm.adler&0xff);
put_byte(s,strm.adler>>8&0xff);
strm.adler=0;
s.status=BUSY_STATE;
}
}else
{
s.status=BUSY_STATE;
}
}



if(s.pending!==0){
flush_pending(strm);
if(strm.avail_out===0){






s.last_flush=-1;
return Z_OK;
}





}else if(strm.avail_in===0&&rank(flush)<=rank(old_flush)&&
flush!==Z_FINISH){
return err(strm,Z_BUF_ERROR);
}


if(s.status===FINISH_STATE&&strm.avail_in!==0){
return err(strm,Z_BUF_ERROR);
}



if(strm.avail_in!==0||s.lookahead!==0||
flush!==Z_NO_FLUSH&&s.status!==FINISH_STATE){
var bstate=s.strategy===Z_HUFFMAN_ONLY?deflate_huff(s,flush):
s.strategy===Z_RLE?deflate_rle(s,flush):
configuration_table[s.level].func(s,flush);

if(bstate===BS_FINISH_STARTED||bstate===BS_FINISH_DONE){
s.status=FINISH_STATE;
}
if(bstate===BS_NEED_MORE||bstate===BS_FINISH_STARTED){
if(strm.avail_out===0){
s.last_flush=-1;

}
return Z_OK;







}
if(bstate===BS_BLOCK_DONE){
if(flush===Z_PARTIAL_FLUSH){
trees._tr_align(s);
}else
if(flush!==Z_BLOCK){

trees._tr_stored_block(s,0,0,false);



if(flush===Z_FULL_FLUSH){

zero(s.head);

if(s.lookahead===0){
s.strstart=0;
s.block_start=0;
s.insert=0;
}
}
}
flush_pending(strm);
if(strm.avail_out===0){
s.last_flush=-1;
return Z_OK;
}
}
}



if(flush!==Z_FINISH){return Z_OK;}
if(s.wrap<=0){return Z_STREAM_END;}


if(s.wrap===2){
put_byte(s,strm.adler&0xff);
put_byte(s,strm.adler>>8&0xff);
put_byte(s,strm.adler>>16&0xff);
put_byte(s,strm.adler>>24&0xff);
put_byte(s,strm.total_in&0xff);
put_byte(s,strm.total_in>>8&0xff);
put_byte(s,strm.total_in>>16&0xff);
put_byte(s,strm.total_in>>24&0xff);
}else

{
putShortMSB(s,strm.adler>>>16);
putShortMSB(s,strm.adler&0xffff);
}

flush_pending(strm);



if(s.wrap>0){s.wrap=-s.wrap;}

return s.pending!==0?Z_OK:Z_STREAM_END;
}

function deflateEnd(strm){
var status;

if(!strm||!strm.state){
return Z_STREAM_ERROR;
}

status=strm.state.status;
if(status!==INIT_STATE&&
status!==EXTRA_STATE&&
status!==NAME_STATE&&
status!==COMMENT_STATE&&
status!==HCRC_STATE&&
status!==BUSY_STATE&&
status!==FINISH_STATE)
{
return err(strm,Z_STREAM_ERROR);
}

strm.state=null;

return status===BUSY_STATE?err(strm,Z_DATA_ERROR):Z_OK;
}






function deflateSetDictionary(strm,dictionary){
var dictLength=dictionary.length;

var s;
var str,n;
var wrap;
var avail;
var next;
var input;
var tmpDict;

if(!strm||!strm.state){
return Z_STREAM_ERROR;
}

s=strm.state;
wrap=s.wrap;

if(wrap===2||wrap===1&&s.status!==INIT_STATE||s.lookahead){
return Z_STREAM_ERROR;
}


if(wrap===1){

strm.adler=adler32(strm.adler,dictionary,dictLength,0);
}

s.wrap=0;


if(dictLength>=s.w_size){
if(wrap===0){

zero(s.head);
s.strstart=0;
s.block_start=0;
s.insert=0;
}


tmpDict=new utils.Buf8(s.w_size);
utils.arraySet(tmpDict,dictionary,dictLength-s.w_size,s.w_size,0);
dictionary=tmpDict;
dictLength=s.w_size;
}

avail=strm.avail_in;
next=strm.next_in;
input=strm.input;
strm.avail_in=dictLength;
strm.next_in=0;
strm.input=dictionary;
fill_window(s);
while(s.lookahead>=MIN_MATCH){
str=s.strstart;
n=s.lookahead-(MIN_MATCH-1);
do{

s.ins_h=(s.ins_h<<s.hash_shift^s.window[str+MIN_MATCH-1])&s.hash_mask;

s.prev[str&s.w_mask]=s.head[s.ins_h];

s.head[s.ins_h]=str;
str++;
}while(--n);
s.strstart=str;
s.lookahead=MIN_MATCH-1;
fill_window(s);
}
s.strstart+=s.lookahead;
s.block_start=s.strstart;
s.insert=s.lookahead;
s.lookahead=0;
s.match_length=s.prev_length=MIN_MATCH-1;
s.match_available=0;
strm.next_in=next;
strm.input=input;
strm.avail_in=avail;
s.wrap=wrap;
return Z_OK;
}


exports.deflateInit=deflateInit;
exports.deflateInit2=deflateInit2;
exports.deflateReset=deflateReset;
exports.deflateResetKeep=deflateResetKeep;
exports.deflateSetHeader=deflateSetHeader;
exports.deflate=deflate;
exports.deflateEnd=deflateEnd;
exports.deflateSetDictionary=deflateSetDictionary;
exports.deflateInfo='pako deflate (from Nodeca project)';










},{"../utils/common":159,"./adler32":160,"./crc32":162,"./messages":164,"./trees":165}],164:[function(require,module,exports){
'use strict';




















module.exports={
2:'need dictionary',
1:'stream end',
0:'',
'-1':'file error',
'-2':'stream error',
'-3':'data error',
'-4':'insufficient memory',
'-5':'buffer error',
'-6':'incompatible version'};


},{}],165:[function(require,module,exports){
'use strict';






















var utils=require('../utils/common');








var Z_FIXED=4;



var Z_BINARY=0;
var Z_TEXT=1;

var Z_UNKNOWN=2;




function zero(buf){var len=buf.length;while(--len>=0){buf[len]=0;}}



var STORED_BLOCK=0;
var STATIC_TREES=1;
var DYN_TREES=2;


var MIN_MATCH=3;
var MAX_MATCH=258;







var LENGTH_CODES=29;


var LITERALS=256;


var L_CODES=LITERALS+1+LENGTH_CODES;


var D_CODES=30;


var BL_CODES=19;


var HEAP_SIZE=2*L_CODES+1;


var MAX_BITS=15;


var Buf_size=16;







var MAX_BL_BITS=7;


var END_BLOCK=256;


var REP_3_6=16;


var REPZ_3_10=17;


var REPZ_11_138=18;



var extra_lbits=
[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits=
[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits=
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order=
[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];












var DIST_CODE_LEN=512;


var static_ltree=new Array((L_CODES+2)*2);
zero(static_ltree);






var static_dtree=new Array(D_CODES*2);
zero(static_dtree);




var _dist_code=new Array(DIST_CODE_LEN);
zero(_dist_code);





var _length_code=new Array(MAX_MATCH-MIN_MATCH+1);
zero(_length_code);


var base_length=new Array(LENGTH_CODES);
zero(base_length);


var base_dist=new Array(D_CODES);
zero(base_dist);



function StaticTreeDesc(static_tree,extra_bits,extra_base,elems,max_length){

this.static_tree=static_tree;
this.extra_bits=extra_bits;
this.extra_base=extra_base;
this.elems=elems;
this.max_length=max_length;


this.has_stree=static_tree&&static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree,stat_desc){
this.dyn_tree=dyn_tree;
this.max_code=0;
this.stat_desc=stat_desc;
}



function d_code(dist){
return dist<256?_dist_code[dist]:_dist_code[256+(dist>>>7)];
}






function put_short(s,w){


s.pending_buf[s.pending++]=w&0xff;
s.pending_buf[s.pending++]=w>>>8&0xff;
}






function send_bits(s,value,length){
if(s.bi_valid>Buf_size-length){
s.bi_buf|=value<<s.bi_valid&0xffff;
put_short(s,s.bi_buf);
s.bi_buf=value>>Buf_size-s.bi_valid;
s.bi_valid+=length-Buf_size;
}else{
s.bi_buf|=value<<s.bi_valid&0xffff;
s.bi_valid+=length;
}
}


function send_code(s,c,tree){
send_bits(s,tree[c*2],tree[c*2+1]);
}







function bi_reverse(code,len){
var res=0;
do{
res|=code&1;
code>>>=1;
res<<=1;
}while(--len>0);
return res>>>1;
}





function bi_flush(s){
if(s.bi_valid===16){
put_short(s,s.bi_buf);
s.bi_buf=0;
s.bi_valid=0;

}else if(s.bi_valid>=8){
s.pending_buf[s.pending++]=s.bi_buf&0xff;
s.bi_buf>>=8;
s.bi_valid-=8;
}
}












function gen_bitlen(s,desc)


{
var tree=desc.dyn_tree;
var max_code=desc.max_code;
var stree=desc.stat_desc.static_tree;
var has_stree=desc.stat_desc.has_stree;
var extra=desc.stat_desc.extra_bits;
var base=desc.stat_desc.extra_base;
var max_length=desc.stat_desc.max_length;
var h;
var n,m;
var bits;
var xbits;
var f;
var overflow=0;

for(bits=0;bits<=MAX_BITS;bits++){
s.bl_count[bits]=0;
}




tree[s.heap[s.heap_max]*2+1]=0;

for(h=s.heap_max+1;h<HEAP_SIZE;h++){
n=s.heap[h];
bits=tree[tree[n*2+1]*2+1]+1;
if(bits>max_length){
bits=max_length;
overflow++;
}
tree[n*2+1]=bits;


if(n>max_code){continue;}

s.bl_count[bits]++;
xbits=0;
if(n>=base){
xbits=extra[n-base];
}
f=tree[n*2];
s.opt_len+=f*(bits+xbits);
if(has_stree){
s.static_len+=f*(stree[n*2+1]+xbits);
}
}
if(overflow===0){return;}





do{
bits=max_length-1;
while(s.bl_count[bits]===0){bits--;}
s.bl_count[bits]--;
s.bl_count[bits+1]+=2;
s.bl_count[max_length]--;



overflow-=2;
}while(overflow>0);






for(bits=max_length;bits!==0;bits--){
n=s.bl_count[bits];
while(n!==0){
m=s.heap[--h];
if(m>max_code){continue;}
if(tree[m*2+1]!==bits){

s.opt_len+=(bits-tree[m*2+1])*tree[m*2];
tree[m*2+1]=bits;
}
n--;
}
}
}










function gen_codes(tree,max_code,bl_count)



{
var next_code=new Array(MAX_BITS+1);
var code=0;
var bits;
var n;




for(bits=1;bits<=MAX_BITS;bits++){
next_code[bits]=code=code+bl_count[bits-1]<<1;
}







for(n=0;n<=max_code;n++){
var len=tree[n*2+1];
if(len===0){continue;}

tree[n*2]=bi_reverse(next_code[len]++,len);



}
}





function tr_static_init(){
var n;
var bits;
var length;
var code;
var dist;
var bl_count=new Array(MAX_BITS+1);















length=0;
for(code=0;code<LENGTH_CODES-1;code++){
base_length[code]=length;
for(n=0;n<1<<extra_lbits[code];n++){
_length_code[length++]=code;
}
}





_length_code[length-1]=code;


dist=0;
for(code=0;code<16;code++){
base_dist[code]=dist;
for(n=0;n<1<<extra_dbits[code];n++){
_dist_code[dist++]=code;
}
}

dist>>=7;
for(;code<D_CODES;code++){
base_dist[code]=dist<<7;
for(n=0;n<1<<extra_dbits[code]-7;n++){
_dist_code[256+dist++]=code;
}
}



for(bits=0;bits<=MAX_BITS;bits++){
bl_count[bits]=0;
}

n=0;
while(n<=143){
static_ltree[n*2+1]=8;
n++;
bl_count[8]++;
}
while(n<=255){
static_ltree[n*2+1]=9;
n++;
bl_count[9]++;
}
while(n<=279){
static_ltree[n*2+1]=7;
n++;
bl_count[7]++;
}
while(n<=287){
static_ltree[n*2+1]=8;
n++;
bl_count[8]++;
}




gen_codes(static_ltree,L_CODES+1,bl_count);


for(n=0;n<D_CODES;n++){
static_dtree[n*2+1]=5;
static_dtree[n*2]=bi_reverse(n,5);
}


static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS+1,L_CODES,MAX_BITS);
static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES,MAX_BITS);
static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES,MAX_BL_BITS);


}





function init_block(s){
var n;


for(n=0;n<L_CODES;n++){s.dyn_ltree[n*2]=0;}
for(n=0;n<D_CODES;n++){s.dyn_dtree[n*2]=0;}
for(n=0;n<BL_CODES;n++){s.bl_tree[n*2]=0;}

s.dyn_ltree[END_BLOCK*2]=1;
s.opt_len=s.static_len=0;
s.last_lit=s.matches=0;
}





function bi_windup(s)
{
if(s.bi_valid>8){
put_short(s,s.bi_buf);
}else if(s.bi_valid>0){

s.pending_buf[s.pending++]=s.bi_buf;
}
s.bi_buf=0;
s.bi_valid=0;
}





function copy_block(s,buf,len,header)




{
bi_windup(s);

if(header){
put_short(s,len);
put_short(s,~len);
}



utils.arraySet(s.pending_buf,s.window,buf,len,s.pending);
s.pending+=len;
}





function smaller(tree,n,m,depth){
var _n2=n*2;
var _m2=m*2;
return tree[_n2]<tree[_m2]||
tree[_n2]===tree[_m2]&&depth[n]<=depth[m];
}







function pqdownheap(s,tree,k)



{
var v=s.heap[k];
var j=k<<1;
while(j<=s.heap_len){

if(j<s.heap_len&&
smaller(tree,s.heap[j+1],s.heap[j],s.depth)){
j++;
}

if(smaller(tree,v,s.heap[j],s.depth)){break;}


s.heap[k]=s.heap[j];
k=j;


j<<=1;
}
s.heap[k]=v;
}








function compress_block(s,ltree,dtree)



{
var dist;
var lc;
var lx=0;
var code;
var extra;

if(s.last_lit!==0){
do{
dist=s.pending_buf[s.d_buf+lx*2]<<8|s.pending_buf[s.d_buf+lx*2+1];
lc=s.pending_buf[s.l_buf+lx];
lx++;

if(dist===0){
send_code(s,lc,ltree);

}else{

code=_length_code[lc];
send_code(s,code+LITERALS+1,ltree);
extra=extra_lbits[code];
if(extra!==0){
lc-=base_length[code];
send_bits(s,lc,extra);
}
dist--;
code=d_code(dist);


send_code(s,code,dtree);
extra=extra_dbits[code];
if(extra!==0){
dist-=base_dist[code];
send_bits(s,dist,extra);
}
}





}while(lx<s.last_lit);
}

send_code(s,END_BLOCK,ltree);
}










function build_tree(s,desc)


{
var tree=desc.dyn_tree;
var stree=desc.stat_desc.static_tree;
var has_stree=desc.stat_desc.has_stree;
var elems=desc.stat_desc.elems;
var n,m;
var max_code=-1;
var node;





s.heap_len=0;
s.heap_max=HEAP_SIZE;

for(n=0;n<elems;n++){
if(tree[n*2]!==0){
s.heap[++s.heap_len]=max_code=n;
s.depth[n]=0;

}else{
tree[n*2+1]=0;
}
}






while(s.heap_len<2){
node=s.heap[++s.heap_len]=max_code<2?++max_code:0;
tree[node*2]=1;
s.depth[node]=0;
s.opt_len--;

if(has_stree){
s.static_len-=stree[node*2+1];
}

}
desc.max_code=max_code;




for(n=s.heap_len>>1;n>=1;n--){pqdownheap(s,tree,n);}




node=elems;
do{


n=s.heap[1];
s.heap[1]=s.heap[s.heap_len--];
pqdownheap(s,tree,1);


m=s.heap[1];

s.heap[--s.heap_max]=n;
s.heap[--s.heap_max]=m;


tree[node*2]=tree[n*2]+tree[m*2];
s.depth[node]=(s.depth[n]>=s.depth[m]?s.depth[n]:s.depth[m])+1;
tree[n*2+1]=tree[m*2+1]=node;


s.heap[1]=node++;
pqdownheap(s,tree,1);

}while(s.heap_len>=2);

s.heap[--s.heap_max]=s.heap[1];




gen_bitlen(s,desc);


gen_codes(tree,max_code,s.bl_count);
}






function scan_tree(s,tree,max_code)



{
var n;
var prevlen=-1;
var curlen;

var nextlen=tree[0*2+1];

var count=0;
var max_count=7;
var min_count=4;

if(nextlen===0){
max_count=138;
min_count=3;
}
tree[(max_code+1)*2+1]=0xffff;

for(n=0;n<=max_code;n++){
curlen=nextlen;
nextlen=tree[(n+1)*2+1];

if(++count<max_count&&curlen===nextlen){
continue;

}else if(count<min_count){
s.bl_tree[curlen*2]+=count;

}else if(curlen!==0){

if(curlen!==prevlen){s.bl_tree[curlen*2]++;}
s.bl_tree[REP_3_6*2]++;

}else if(count<=10){
s.bl_tree[REPZ_3_10*2]++;

}else{
s.bl_tree[REPZ_11_138*2]++;
}

count=0;
prevlen=curlen;

if(nextlen===0){
max_count=138;
min_count=3;

}else if(curlen===nextlen){
max_count=6;
min_count=3;

}else{
max_count=7;
min_count=4;
}
}
}






function send_tree(s,tree,max_code)



{
var n;
var prevlen=-1;
var curlen;

var nextlen=tree[0*2+1];

var count=0;
var max_count=7;
var min_count=4;


if(nextlen===0){
max_count=138;
min_count=3;
}

for(n=0;n<=max_code;n++){
curlen=nextlen;
nextlen=tree[(n+1)*2+1];

if(++count<max_count&&curlen===nextlen){
continue;

}else if(count<min_count){
do{send_code(s,curlen,s.bl_tree);}while(--count!==0);

}else if(curlen!==0){
if(curlen!==prevlen){
send_code(s,curlen,s.bl_tree);
count--;
}

send_code(s,REP_3_6,s.bl_tree);
send_bits(s,count-3,2);

}else if(count<=10){
send_code(s,REPZ_3_10,s.bl_tree);
send_bits(s,count-3,3);

}else{
send_code(s,REPZ_11_138,s.bl_tree);
send_bits(s,count-11,7);
}

count=0;
prevlen=curlen;
if(nextlen===0){
max_count=138;
min_count=3;

}else if(curlen===nextlen){
max_count=6;
min_count=3;

}else{
max_count=7;
min_count=4;
}
}
}






function build_bl_tree(s){
var max_blindex;


scan_tree(s,s.dyn_ltree,s.l_desc.max_code);
scan_tree(s,s.dyn_dtree,s.d_desc.max_code);


build_tree(s,s.bl_desc);








for(max_blindex=BL_CODES-1;max_blindex>=3;max_blindex--){
if(s.bl_tree[bl_order[max_blindex]*2+1]!==0){
break;
}
}

s.opt_len+=3*(max_blindex+1)+5+5+4;



return max_blindex;
}







function send_all_trees(s,lcodes,dcodes,blcodes)


{
var rank;





send_bits(s,lcodes-257,5);
send_bits(s,dcodes-1,5);
send_bits(s,blcodes-4,4);
for(rank=0;rank<blcodes;rank++){

send_bits(s,s.bl_tree[bl_order[rank]*2+1],3);
}


send_tree(s,s.dyn_ltree,lcodes-1);


send_tree(s,s.dyn_dtree,dcodes-1);

}















function detect_data_type(s){




var black_mask=0xf3ffc07f;
var n;


for(n=0;n<=31;n++,black_mask>>>=1){
if(black_mask&1&&s.dyn_ltree[n*2]!==0){
return Z_BINARY;
}
}


if(s.dyn_ltree[9*2]!==0||s.dyn_ltree[10*2]!==0||
s.dyn_ltree[13*2]!==0){
return Z_TEXT;
}
for(n=32;n<LITERALS;n++){
if(s.dyn_ltree[n*2]!==0){
return Z_TEXT;
}
}




return Z_BINARY;
}


var static_init_done=false;




function _tr_init(s)
{

if(!static_init_done){
tr_static_init();
static_init_done=true;
}

s.l_desc=new TreeDesc(s.dyn_ltree,static_l_desc);
s.d_desc=new TreeDesc(s.dyn_dtree,static_d_desc);
s.bl_desc=new TreeDesc(s.bl_tree,static_bl_desc);

s.bi_buf=0;
s.bi_valid=0;


init_block(s);
}





function _tr_stored_block(s,buf,stored_len,last)




{
send_bits(s,(STORED_BLOCK<<1)+(last?1:0),3);
copy_block(s,buf,stored_len,true);
}






function _tr_align(s){
send_bits(s,STATIC_TREES<<1,3);
send_code(s,END_BLOCK,static_ltree);
bi_flush(s);
}






function _tr_flush_block(s,buf,stored_len,last)




{
var opt_lenb,static_lenb;
var max_blindex=0;


if(s.level>0){


if(s.strm.data_type===Z_UNKNOWN){
s.strm.data_type=detect_data_type(s);
}


build_tree(s,s.l_desc);



build_tree(s,s.d_desc);









max_blindex=build_bl_tree(s);


opt_lenb=s.opt_len+3+7>>>3;
static_lenb=s.static_len+3+7>>>3;





if(static_lenb<=opt_lenb){opt_lenb=static_lenb;}

}else{

opt_lenb=static_lenb=stored_len+5;
}

if(stored_len+4<=opt_lenb&&buf!==-1){








_tr_stored_block(s,buf,stored_len,last);

}else if(s.strategy===Z_FIXED||static_lenb===opt_lenb){

send_bits(s,(STATIC_TREES<<1)+(last?1:0),3);
compress_block(s,static_ltree,static_dtree);

}else{
send_bits(s,(DYN_TREES<<1)+(last?1:0),3);
send_all_trees(s,s.l_desc.max_code+1,s.d_desc.max_code+1,max_blindex+1);
compress_block(s,s.dyn_ltree,s.dyn_dtree);
}




init_block(s);

if(last){
bi_windup(s);
}


}





function _tr_tally(s,dist,lc)



{


s.pending_buf[s.d_buf+s.last_lit*2]=dist>>>8&0xff;
s.pending_buf[s.d_buf+s.last_lit*2+1]=dist&0xff;

s.pending_buf[s.l_buf+s.last_lit]=lc&0xff;
s.last_lit++;

if(dist===0){

s.dyn_ltree[lc*2]++;
}else{
s.matches++;

dist--;




s.dyn_ltree[(_length_code[lc]+LITERALS+1)*2]++;
s.dyn_dtree[d_code(dist)*2]++;
}
























return s.last_lit===s.lit_bufsize-1;




}

exports._tr_init=_tr_init;
exports._tr_stored_block=_tr_stored_block;
exports._tr_flush_block=_tr_flush_block;
exports._tr_tally=_tr_tally;
exports._tr_align=_tr_align;

},{"../utils/common":159}],166:[function(require,module,exports){
'use strict';




















function ZStream(){

this.input=null;
this.next_in=0;

this.avail_in=0;

this.total_in=0;

this.output=null;
this.next_out=0;

this.avail_out=0;

this.total_out=0;

this.msg='';

this.state=null;

this.data_type=2;

this.adler=0;
}

module.exports=ZStream;

},{}],167:[function(require,module,exports){
module.exports=function parseCacheControl(field){

if(typeof field!=='string'){
return null;
}









var regex=/(?:^|(?:\s*\,\s*))([^\x00-\x20\(\)<>@\,;\:\\"\/\[\]\?\=\{\}\x7F]+)(?:\=(?:([^\x00-\x20\(\)<>@\,;\:\\"\/\[\]\?\=\{\}\x7F]+)|(?:\"((?:[^"\\]|\\.)*)\")))?/g;

var header={};
var err=field.replace(regex,function($0,$1,$2,$3){
var value=$2||$3;
header[$1]=value?value.toLowerCase():true;
return'';
});

if(header['max-age']){
try{
var maxAge=parseInt(header['max-age'],10);
if(isNaN(maxAge)){
return null;
}

header['max-age']=maxAge;
}
catch(err){}
}

return err?null:header;
};

},{}],168:[function(require,module,exports){
(function(process){




























function normalizeArray(parts,allowAboveRoot){

var up=0;
for(var i=parts.length-1;i>=0;i--){
var last=parts[i];
if(last==='.'){
parts.splice(i,1);
}else if(last==='..'){
parts.splice(i,1);
up++;
}else if(up){
parts.splice(i,1);
up--;
}
}


if(allowAboveRoot){
for(;up--;up){
parts.unshift('..');
}
}

return parts;
}



exports.resolve=function(){
var resolvedPath='',
resolvedAbsolute=false;

for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){
var path=i>=0?arguments[i]:process.cwd();


if(typeof path!=='string'){
throw new TypeError('Arguments to path.resolve must be strings');
}else if(!path){
continue;
}

resolvedPath=path+'/'+resolvedPath;
resolvedAbsolute=path.charAt(0)==='/';
}





resolvedPath=normalizeArray(filter(resolvedPath.split('/'),function(p){
return!!p;
}),!resolvedAbsolute).join('/');

return(resolvedAbsolute?'/':'')+resolvedPath||'.';
};



exports.normalize=function(path){
var isAbsolute=exports.isAbsolute(path),
trailingSlash=substr(path,-1)==='/';


path=normalizeArray(filter(path.split('/'),function(p){
return!!p;
}),!isAbsolute).join('/');

if(!path&&!isAbsolute){
path='.';
}
if(path&&trailingSlash){
path+='/';
}

return(isAbsolute?'/':'')+path;
};


exports.isAbsolute=function(path){
return path.charAt(0)==='/';
};


exports.join=function(){
var paths=Array.prototype.slice.call(arguments,0);
return exports.normalize(filter(paths,function(p,index){
if(typeof p!=='string'){
throw new TypeError('Arguments to path.join must be strings');
}
return p;
}).join('/'));
};




exports.relative=function(from,to){
from=exports.resolve(from).substr(1);
to=exports.resolve(to).substr(1);

function trim(arr){
var start=0;
for(;start<arr.length;start++){
if(arr[start]!=='')break;
}

var end=arr.length-1;
for(;end>=0;end--){
if(arr[end]!=='')break;
}

if(start>end)return[];
return arr.slice(start,end-start+1);
}

var fromParts=trim(from.split('/'));
var toParts=trim(to.split('/'));

var length=Math.min(fromParts.length,toParts.length);
var samePartsLength=length;
for(var i=0;i<length;i++){
if(fromParts[i]!==toParts[i]){
samePartsLength=i;
break;
}
}

var outputParts=[];
for(var i=samePartsLength;i<fromParts.length;i++){
outputParts.push('..');
}

outputParts=outputParts.concat(toParts.slice(samePartsLength));

return outputParts.join('/');
};

exports.sep='/';
exports.delimiter=':';

exports.dirname=function(path){
if(typeof path!=='string')path=path+'';
if(path.length===0)return'.';
var code=path.charCodeAt(0);
var hasRoot=code===47;
var end=-1;
var matchedSlash=true;
for(var i=path.length-1;i>=1;--i){
code=path.charCodeAt(i);
if(code===47){
if(!matchedSlash){
end=i;
break;
}
}else{

matchedSlash=false;
}
}

if(end===-1)return hasRoot?'/':'.';
if(hasRoot&&end===1){


return'/';
}
return path.slice(0,end);
};

function basename(path){
if(typeof path!=='string')path=path+'';

var start=0;
var end=-1;
var matchedSlash=true;
var i;

for(i=path.length-1;i>=0;--i){
if(path.charCodeAt(i)===47){


if(!matchedSlash){
start=i+1;
break;
}
}else if(end===-1){


matchedSlash=false;
end=i+1;
}
}

if(end===-1)return'';
return path.slice(start,end);
}



exports.basename=function(path,ext){
var f=basename(path);
if(ext&&f.substr(-1*ext.length)===ext){
f=f.substr(0,f.length-ext.length);
}
return f;
};

exports.extname=function(path){
if(typeof path!=='string')path=path+'';
var startDot=-1;
var startPart=0;
var end=-1;
var matchedSlash=true;


var preDotState=0;
for(var i=path.length-1;i>=0;--i){
var code=path.charCodeAt(i);
if(code===47){


if(!matchedSlash){
startPart=i+1;
break;
}
continue;
}
if(end===-1){


matchedSlash=false;
end=i+1;
}
if(code===46){

if(startDot===-1)
startDot=i;else
if(preDotState!==1)
preDotState=1;
}else if(startDot!==-1){


preDotState=-1;
}
}

if(startDot===-1||end===-1||

preDotState===0||

preDotState===1&&startDot===end-1&&startDot===startPart+1){
return'';
}
return path.slice(startDot,end);
};

function filter(xs,f){
if(xs.filter)return xs.filter(f);
var res=[];
for(var i=0;i<xs.length;i++){
if(f(xs[i],i,xs))res.push(xs[i]);
}
return res;
}


var substr='ab'.substr(-1)==='b'?
function(str,start,len){return str.substr(start,len);}:
function(str,start,len){
if(start<0)start=str.length+start;
return str.substr(start,len);
};


}).call(this,require('_process'));
},{"_process":170}],169:[function(require,module,exports){
(function(process){
'use strict';

if(typeof process==='undefined'||
!process.version||
process.version.indexOf('v0.')===0||
process.version.indexOf('v1.')===0&&process.version.indexOf('v1.8.')!==0){
module.exports={nextTick:nextTick};
}else{
module.exports=process;
}

function nextTick(fn,arg1,arg2,arg3){
if(typeof fn!=='function'){
throw new TypeError('"callback" argument must be a function');
}
var len=arguments.length;
var args,i;
switch(len){
case 0:
case 1:
return process.nextTick(fn);
case 2:
return process.nextTick(function afterTickOne(){
fn.call(null,arg1);
});
case 3:
return process.nextTick(function afterTickTwo(){
fn.call(null,arg1,arg2);
});
case 4:
return process.nextTick(function afterTickThree(){
fn.call(null,arg1,arg2,arg3);
});
default:
args=new Array(len-1);
i=0;
while(i<args.length){
args[i++]=arguments[i];
}
return process.nextTick(function afterTick(){
fn.apply(null,args);
});}

}


}).call(this,require('_process'));
},{"_process":170}],170:[function(require,module,exports){

var process=module.exports={};






var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout(){
throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout(){
throw new Error('clearTimeout has not been defined');
}
(function(){
try{
if(typeof setTimeout==='function'){
cachedSetTimeout=setTimeout;
}else{
cachedSetTimeout=defaultSetTimout;
}
}catch(e){
cachedSetTimeout=defaultSetTimout;
}
try{
if(typeof clearTimeout==='function'){
cachedClearTimeout=clearTimeout;
}else{
cachedClearTimeout=defaultClearTimeout;
}
}catch(e){
cachedClearTimeout=defaultClearTimeout;
}
})();
function runTimeout(fun){
if(cachedSetTimeout===setTimeout){

return setTimeout(fun,0);
}

if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){
cachedSetTimeout=setTimeout;
return setTimeout(fun,0);
}
try{

return cachedSetTimeout(fun,0);
}catch(e){
try{

return cachedSetTimeout.call(null,fun,0);
}catch(e){

return cachedSetTimeout.call(this,fun,0);
}
}


}
function runClearTimeout(marker){
if(cachedClearTimeout===clearTimeout){

return clearTimeout(marker);
}

if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){
cachedClearTimeout=clearTimeout;
return clearTimeout(marker);
}
try{

return cachedClearTimeout(marker);
}catch(e){
try{

return cachedClearTimeout.call(null,marker);
}catch(e){


return cachedClearTimeout.call(this,marker);
}
}



}
var queue=[];
var draining=false;
var currentQueue;
var queueIndex=-1;

function cleanUpNextTick(){
if(!draining||!currentQueue){
return;
}
draining=false;
if(currentQueue.length){
queue=currentQueue.concat(queue);
}else{
queueIndex=-1;
}
if(queue.length){
drainQueue();
}
}

function drainQueue(){
if(draining){
return;
}
var timeout=runTimeout(cleanUpNextTick);
draining=true;

var len=queue.length;
while(len){
currentQueue=queue;
queue=[];
while(++queueIndex<len){
if(currentQueue){
currentQueue[queueIndex].run();
}
}
queueIndex=-1;
len=queue.length;
}
currentQueue=null;
draining=false;
runClearTimeout(timeout);
}

process.nextTick=function(fun){
var args=new Array(arguments.length-1);
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args[i-1]=arguments[i];
}
}
queue.push(new Item(fun,args));
if(queue.length===1&&!draining){
runTimeout(drainQueue);
}
};


function Item(fun,array){
this.fun=fun;
this.array=array;
}
Item.prototype.run=function(){
this.fun.apply(null,this.array);
};
process.title='browser';
process.browser=true;
process.env={};
process.argv=[];
process.version='';
process.versions={};

function noop(){}

process.on=noop;
process.addListener=noop;
process.once=noop;
process.off=noop;
process.removeListener=noop;
process.removeAllListeners=noop;
process.emit=noop;
process.prependListener=noop;
process.prependOnceListener=noop;

process.listeners=function(name){return[];};

process.binding=function(name){
throw new Error('process.binding is not supported');
};

process.cwd=function(){return'/';};
process.chdir=function(dir){
throw new Error('process.chdir is not supported');
};
process.umask=function(){return 0;};

},{}],171:[function(require,module,exports){





















'use strict';




function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);
}

module.exports=function(qs,sep,eq,options){
sep=sep||'&';
eq=eq||'=';
var obj={};

if(typeof qs!=='string'||qs.length===0){
return obj;
}

var regexp=/\+/g;
qs=qs.split(sep);

var maxKeys=1000;
if(options&&typeof options.maxKeys==='number'){
maxKeys=options.maxKeys;
}

var len=qs.length;

if(maxKeys>0&&len>maxKeys){
len=maxKeys;
}

for(var i=0;i<len;++i){
var x=qs[i].replace(regexp,'%20'),
idx=x.indexOf(eq),
kstr,vstr,k,v;

if(idx>=0){
kstr=x.substr(0,idx);
vstr=x.substr(idx+1);
}else{
kstr=x;
vstr='';
}

k=decodeURIComponent(kstr);
v=decodeURIComponent(vstr);

if(!hasOwnProperty(obj,k)){
obj[k]=v;
}else if(isArray(obj[k])){
obj[k].push(v);
}else{
obj[k]=[obj[k],v];
}
}

return obj;
};

var isArray=Array.isArray||function(xs){
return Object.prototype.toString.call(xs)==='[object Array]';
};

},{}],172:[function(require,module,exports){





















'use strict';

var stringifyPrimitive=function(v){
switch(typeof v){
case'string':
return v;

case'boolean':
return v?'true':'false';

case'number':
return isFinite(v)?v:'';

default:
return'';}

};

module.exports=function(obj,sep,eq,name){
sep=sep||'&';
eq=eq||'=';
if(obj===null){
obj=undefined;
}

if(typeof obj==='object'){
return map(objectKeys(obj),function(k){
var ks=encodeURIComponent(stringifyPrimitive(k))+eq;
if(isArray(obj[k])){
return map(obj[k],function(v){
return ks+encodeURIComponent(stringifyPrimitive(v));
}).join(sep);
}else{
return ks+encodeURIComponent(stringifyPrimitive(obj[k]));
}
}).join(sep);

}

if(!name)return'';
return encodeURIComponent(stringifyPrimitive(name))+eq+
encodeURIComponent(stringifyPrimitive(obj));
};

var isArray=Array.isArray||function(xs){
return Object.prototype.toString.call(xs)==='[object Array]';
};

function map(xs,f){
if(xs.map)return xs.map(f);
var res=[];
for(var i=0;i<xs.length;i++){
res.push(f(xs[i],i));
}
return res;
}

var objectKeys=Object.keys||function(obj){
var res=[];
for(var key in obj){
if(Object.prototype.hasOwnProperty.call(obj,key))res.push(key);
}
return res;
};

},{}],173:[function(require,module,exports){
'use strict';

exports.decode=exports.parse=require('./decode');
exports.encode=exports.stringify=require('./encode');

},{"./decode":171,"./encode":172}],174:[function(require,module,exports){
module.exports=require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":175}],175:[function(require,module,exports){


























'use strict';



var pna=require('process-nextick-args');



var objectKeys=Object.keys||function(obj){
var keys=[];
for(var key in obj){
keys.push(key);
}return keys;
};


module.exports=Duplex;


var util=require('core-util-is');
util.inherits=require('inherits');


var Readable=require('./_stream_readable');
var Writable=require('./_stream_writable');

util.inherits(Duplex,Readable);

{

var keys=objectKeys(Writable.prototype);
for(var v=0;v<keys.length;v++){
var method=keys[v];
if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method];
}
}

function Duplex(options){
if(!(this instanceof Duplex))return new Duplex(options);

Readable.call(this,options);
Writable.call(this,options);

if(options&&options.readable===false)this.readable=false;

if(options&&options.writable===false)this.writable=false;

this.allowHalfOpen=true;
if(options&&options.allowHalfOpen===false)this.allowHalfOpen=false;

this.once('end',onend);
}

Object.defineProperty(Duplex.prototype,'writableHighWaterMark',{



enumerable:false,
get:function(){
return this._writableState.highWaterMark;
}});



function onend(){


if(this.allowHalfOpen||this._writableState.ended)return;



pna.nextTick(onEndNT,this);
}

function onEndNT(self){
self.end();
}

Object.defineProperty(Duplex.prototype,'destroyed',{
get:function(){
if(this._readableState===undefined||this._writableState===undefined){
return false;
}
return this._readableState.destroyed&&this._writableState.destroyed;
},
set:function(value){


if(this._readableState===undefined||this._writableState===undefined){
return;
}



this._readableState.destroyed=value;
this._writableState.destroyed=value;
}});


Duplex.prototype._destroy=function(err,cb){
this.push(null);
this.end();

pna.nextTick(cb,err);
};
},{"./_stream_readable":177,"./_stream_writable":179,"core-util-is":115,"inherits":183,"process-nextick-args":169}],176:[function(require,module,exports){

























'use strict';

module.exports=PassThrough;

var Transform=require('./_stream_transform');


var util=require('core-util-is');
util.inherits=require('inherits');


util.inherits(PassThrough,Transform);

function PassThrough(options){
if(!(this instanceof PassThrough))return new PassThrough(options);

Transform.call(this,options);
}

PassThrough.prototype._transform=function(chunk,encoding,cb){
cb(null,chunk);
};
},{"./_stream_transform":178,"core-util-is":115,"inherits":183}],177:[function(require,module,exports){
(function(process,global){





















'use strict';



var pna=require('process-nextick-args');


module.exports=Readable;


var isArray=require('isarray');



var Duplex;


Readable.ReadableState=ReadableState;


var EE=require('events').EventEmitter;

var EElistenerCount=function(emitter,type){
return emitter.listeners(type).length;
};



var Stream=require('./internal/streams/stream');




var Buffer=require('safe-buffer').Buffer;
var OurUint8Array=global.Uint8Array||function(){};
function _uint8ArrayToBuffer(chunk){
return Buffer.from(chunk);
}
function _isUint8Array(obj){
return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;
}




var util=require('core-util-is');
util.inherits=require('inherits');



var debugUtil=require('util');
var debug=void 0;
if(debugUtil&&debugUtil.debuglog){
debug=debugUtil.debuglog('stream');
}else{
debug=function(){};
}


var BufferList=require('./internal/streams/BufferList');
var destroyImpl=require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable,Stream);

var kProxyEvents=['error','close','destroy','pause','resume'];

function prependListener(emitter,event,fn){


if(typeof emitter.prependListener==='function')return emitter.prependListener(event,fn);





if(!emitter._events||!emitter._events[event])emitter.on(event,fn);else if(isArray(emitter._events[event]))emitter._events[event].unshift(fn);else emitter._events[event]=[fn,emitter._events[event]];
}

function ReadableState(options,stream){
Duplex=Duplex||require('./_stream_duplex');

options=options||{};






var isDuplex=stream instanceof Duplex;



this.objectMode=!!options.objectMode;

if(isDuplex)this.objectMode=this.objectMode||!!options.readableObjectMode;



var hwm=options.highWaterMark;
var readableHwm=options.readableHighWaterMark;
var defaultHwm=this.objectMode?16:16*1024;

if(hwm||hwm===0)this.highWaterMark=hwm;else if(isDuplex&&(readableHwm||readableHwm===0))this.highWaterMark=readableHwm;else this.highWaterMark=defaultHwm;


this.highWaterMark=Math.floor(this.highWaterMark);




this.buffer=new BufferList();
this.length=0;
this.pipes=null;
this.pipesCount=0;
this.flowing=null;
this.ended=false;
this.endEmitted=false;
this.reading=false;





this.sync=true;



this.needReadable=false;
this.emittedReadable=false;
this.readableListening=false;
this.resumeScheduled=false;


this.destroyed=false;




this.defaultEncoding=options.defaultEncoding||'utf8';


this.awaitDrain=0;


this.readingMore=false;

this.decoder=null;
this.encoding=null;
if(options.encoding){
if(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;
this.decoder=new StringDecoder(options.encoding);
this.encoding=options.encoding;
}
}

function Readable(options){
Duplex=Duplex||require('./_stream_duplex');

if(!(this instanceof Readable))return new Readable(options);

this._readableState=new ReadableState(options,this);


this.readable=true;

if(options){
if(typeof options.read==='function')this._read=options.read;

if(typeof options.destroy==='function')this._destroy=options.destroy;
}

Stream.call(this);
}

Object.defineProperty(Readable.prototype,'destroyed',{
get:function(){
if(this._readableState===undefined){
return false;
}
return this._readableState.destroyed;
},
set:function(value){


if(!this._readableState){
return;
}



this._readableState.destroyed=value;
}});


Readable.prototype.destroy=destroyImpl.destroy;
Readable.prototype._undestroy=destroyImpl.undestroy;
Readable.prototype._destroy=function(err,cb){
this.push(null);
cb(err);
};





Readable.prototype.push=function(chunk,encoding){
var state=this._readableState;
var skipChunkCheck;

if(!state.objectMode){
if(typeof chunk==='string'){
encoding=encoding||state.defaultEncoding;
if(encoding!==state.encoding){
chunk=Buffer.from(chunk,encoding);
encoding='';
}
skipChunkCheck=true;
}
}else{
skipChunkCheck=true;
}

return readableAddChunk(this,chunk,encoding,false,skipChunkCheck);
};


Readable.prototype.unshift=function(chunk){
return readableAddChunk(this,chunk,null,true,false);
};

function readableAddChunk(stream,chunk,encoding,addToFront,skipChunkCheck){
var state=stream._readableState;
if(chunk===null){
state.reading=false;
onEofChunk(stream,state);
}else{
var er;
if(!skipChunkCheck)er=chunkInvalid(state,chunk);
if(er){
stream.emit('error',er);
}else if(state.objectMode||chunk&&chunk.length>0){
if(typeof chunk!=='string'&&!state.objectMode&&Object.getPrototypeOf(chunk)!==Buffer.prototype){
chunk=_uint8ArrayToBuffer(chunk);
}

if(addToFront){
if(state.endEmitted)stream.emit('error',new Error('stream.unshift() after end event'));else addChunk(stream,state,chunk,true);
}else if(state.ended){
stream.emit('error',new Error('stream.push() after EOF'));
}else{
state.reading=false;
if(state.decoder&&!encoding){
chunk=state.decoder.write(chunk);
if(state.objectMode||chunk.length!==0)addChunk(stream,state,chunk,false);else maybeReadMore(stream,state);
}else{
addChunk(stream,state,chunk,false);
}
}
}else if(!addToFront){
state.reading=false;
}
}

return needMoreData(state);
}

function addChunk(stream,state,chunk,addToFront){
if(state.flowing&&state.length===0&&!state.sync){
stream.emit('data',chunk);
stream.read(0);
}else{

state.length+=state.objectMode?1:chunk.length;
if(addToFront)state.buffer.unshift(chunk);else state.buffer.push(chunk);

if(state.needReadable)emitReadable(stream);
}
maybeReadMore(stream,state);
}

function chunkInvalid(state,chunk){
var er;
if(!_isUint8Array(chunk)&&typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){
er=new TypeError('Invalid non-string/buffer chunk');
}
return er;
}








function needMoreData(state){
return!state.ended&&(state.needReadable||state.length<state.highWaterMark||state.length===0);
}

Readable.prototype.isPaused=function(){
return this._readableState.flowing===false;
};


Readable.prototype.setEncoding=function(enc){
if(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;
this._readableState.decoder=new StringDecoder(enc);
this._readableState.encoding=enc;
return this;
};


var MAX_HWM=0x800000;
function computeNewHighWaterMark(n){
if(n>=MAX_HWM){
n=MAX_HWM;
}else{


n--;
n|=n>>>1;
n|=n>>>2;
n|=n>>>4;
n|=n>>>8;
n|=n>>>16;
n++;
}
return n;
}



function howMuchToRead(n,state){
if(n<=0||state.length===0&&state.ended)return 0;
if(state.objectMode)return 1;
if(n!==n){

if(state.flowing&&state.length)return state.buffer.head.data.length;else return state.length;
}

if(n>state.highWaterMark)state.highWaterMark=computeNewHighWaterMark(n);
if(n<=state.length)return n;

if(!state.ended){
state.needReadable=true;
return 0;
}
return state.length;
}


Readable.prototype.read=function(n){
debug('read',n);
n=parseInt(n,10);
var state=this._readableState;
var nOrig=n;

if(n!==0)state.emittedReadable=false;




if(n===0&&state.needReadable&&(state.length>=state.highWaterMark||state.ended)){
debug('read: emitReadable',state.length,state.ended);
if(state.length===0&&state.ended)endReadable(this);else emitReadable(this);
return null;
}

n=howMuchToRead(n,state);


if(n===0&&state.ended){
if(state.length===0)endReadable(this);
return null;
}
























var doRead=state.needReadable;
debug('need readable',doRead);


if(state.length===0||state.length-n<state.highWaterMark){
doRead=true;
debug('length less than watermark',doRead);
}



if(state.ended||state.reading){
doRead=false;
debug('reading or ended',doRead);
}else if(doRead){
debug('do read');
state.reading=true;
state.sync=true;

if(state.length===0)state.needReadable=true;

this._read(state.highWaterMark);
state.sync=false;


if(!state.reading)n=howMuchToRead(nOrig,state);
}

var ret;
if(n>0)ret=fromList(n,state);else ret=null;

if(ret===null){
state.needReadable=true;
n=0;
}else{
state.length-=n;
}

if(state.length===0){


if(!state.ended)state.needReadable=true;


if(nOrig!==n&&state.ended)endReadable(this);
}

if(ret!==null)this.emit('data',ret);

return ret;
};

function onEofChunk(stream,state){
if(state.ended)return;
if(state.decoder){
var chunk=state.decoder.end();
if(chunk&&chunk.length){
state.buffer.push(chunk);
state.length+=state.objectMode?1:chunk.length;
}
}
state.ended=true;


emitReadable(stream);
}




function emitReadable(stream){
var state=stream._readableState;
state.needReadable=false;
if(!state.emittedReadable){
debug('emitReadable',state.flowing);
state.emittedReadable=true;
if(state.sync)pna.nextTick(emitReadable_,stream);else emitReadable_(stream);
}
}

function emitReadable_(stream){
debug('emit readable');
stream.emit('readable');
flow(stream);
}







function maybeReadMore(stream,state){
if(!state.readingMore){
state.readingMore=true;
pna.nextTick(maybeReadMore_,stream,state);
}
}

function maybeReadMore_(stream,state){
var len=state.length;
while(!state.reading&&!state.flowing&&!state.ended&&state.length<state.highWaterMark){
debug('maybeReadMore read 0');
stream.read(0);
if(len===state.length)

break;else len=state.length;
}
state.readingMore=false;
}





Readable.prototype._read=function(n){
this.emit('error',new Error('_read() is not implemented'));
};

Readable.prototype.pipe=function(dest,pipeOpts){
var src=this;
var state=this._readableState;

switch(state.pipesCount){
case 0:
state.pipes=dest;
break;
case 1:
state.pipes=[state.pipes,dest];
break;
default:
state.pipes.push(dest);
break;}

state.pipesCount+=1;
debug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);

var doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process.stdout&&dest!==process.stderr;

var endFn=doEnd?onend:unpipe;
if(state.endEmitted)pna.nextTick(endFn);else src.once('end',endFn);

dest.on('unpipe',onunpipe);
function onunpipe(readable,unpipeInfo){
debug('onunpipe');
if(readable===src){
if(unpipeInfo&&unpipeInfo.hasUnpiped===false){
unpipeInfo.hasUnpiped=true;
cleanup();
}
}
}

function onend(){
debug('onend');
dest.end();
}





var ondrain=pipeOnDrain(src);
dest.on('drain',ondrain);

var cleanedUp=false;
function cleanup(){
debug('cleanup');

dest.removeListener('close',onclose);
dest.removeListener('finish',onfinish);
dest.removeListener('drain',ondrain);
dest.removeListener('error',onerror);
dest.removeListener('unpipe',onunpipe);
src.removeListener('end',onend);
src.removeListener('end',unpipe);
src.removeListener('data',ondata);

cleanedUp=true;






if(state.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain();
}





var increasedAwaitDrain=false;
src.on('data',ondata);
function ondata(chunk){
debug('ondata');
increasedAwaitDrain=false;
var ret=dest.write(chunk);
if(false===ret&&!increasedAwaitDrain){




if((state.pipesCount===1&&state.pipes===dest||state.pipesCount>1&&indexOf(state.pipes,dest)!==-1)&&!cleanedUp){
debug('false write response, pause',src._readableState.awaitDrain);
src._readableState.awaitDrain++;
increasedAwaitDrain=true;
}
src.pause();
}
}



function onerror(er){
debug('onerror',er);
unpipe();
dest.removeListener('error',onerror);
if(EElistenerCount(dest,'error')===0)dest.emit('error',er);
}


prependListener(dest,'error',onerror);


function onclose(){
dest.removeListener('finish',onfinish);
unpipe();
}
dest.once('close',onclose);
function onfinish(){
debug('onfinish');
dest.removeListener('close',onclose);
unpipe();
}
dest.once('finish',onfinish);

function unpipe(){
debug('unpipe');
src.unpipe(dest);
}


dest.emit('pipe',src);


if(!state.flowing){
debug('pipe resume');
src.resume();
}

return dest;
};

function pipeOnDrain(src){
return function(){
var state=src._readableState;
debug('pipeOnDrain',state.awaitDrain);
if(state.awaitDrain)state.awaitDrain--;
if(state.awaitDrain===0&&EElistenerCount(src,'data')){
state.flowing=true;
flow(src);
}
};
}

Readable.prototype.unpipe=function(dest){
var state=this._readableState;
var unpipeInfo={hasUnpiped:false};


if(state.pipesCount===0)return this;


if(state.pipesCount===1){

if(dest&&dest!==state.pipes)return this;

if(!dest)dest=state.pipes;


state.pipes=null;
state.pipesCount=0;
state.flowing=false;
if(dest)dest.emit('unpipe',this,unpipeInfo);
return this;
}



if(!dest){

var dests=state.pipes;
var len=state.pipesCount;
state.pipes=null;
state.pipesCount=0;
state.flowing=false;

for(var i=0;i<len;i++){
dests[i].emit('unpipe',this,unpipeInfo);
}return this;
}


var index=indexOf(state.pipes,dest);
if(index===-1)return this;

state.pipes.splice(index,1);
state.pipesCount-=1;
if(state.pipesCount===1)state.pipes=state.pipes[0];

dest.emit('unpipe',this,unpipeInfo);

return this;
};



Readable.prototype.on=function(ev,fn){
var res=Stream.prototype.on.call(this,ev,fn);

if(ev==='data'){

if(this._readableState.flowing!==false)this.resume();
}else if(ev==='readable'){
var state=this._readableState;
if(!state.endEmitted&&!state.readableListening){
state.readableListening=state.needReadable=true;
state.emittedReadable=false;
if(!state.reading){
pna.nextTick(nReadingNextTick,this);
}else if(state.length){
emitReadable(this);
}
}
}

return res;
};
Readable.prototype.addListener=Readable.prototype.on;

function nReadingNextTick(self){
debug('readable nexttick read 0');
self.read(0);
}



Readable.prototype.resume=function(){
var state=this._readableState;
if(!state.flowing){
debug('resume');
state.flowing=true;
resume(this,state);
}
return this;
};

function resume(stream,state){
if(!state.resumeScheduled){
state.resumeScheduled=true;
pna.nextTick(resume_,stream,state);
}
}

function resume_(stream,state){
if(!state.reading){
debug('resume read 0');
stream.read(0);
}

state.resumeScheduled=false;
state.awaitDrain=0;
stream.emit('resume');
flow(stream);
if(state.flowing&&!state.reading)stream.read(0);
}

Readable.prototype.pause=function(){
debug('call pause flowing=%j',this._readableState.flowing);
if(false!==this._readableState.flowing){
debug('pause');
this._readableState.flowing=false;
this.emit('pause');
}
return this;
};

function flow(stream){
var state=stream._readableState;
debug('flow',state.flowing);
while(state.flowing&&stream.read()!==null){}
}




Readable.prototype.wrap=function(stream){
var _this=this;

var state=this._readableState;
var paused=false;

stream.on('end',function(){
debug('wrapped end');
if(state.decoder&&!state.ended){
var chunk=state.decoder.end();
if(chunk&&chunk.length)_this.push(chunk);
}

_this.push(null);
});

stream.on('data',function(chunk){
debug('wrapped data');
if(state.decoder)chunk=state.decoder.write(chunk);


if(state.objectMode&&(chunk===null||chunk===undefined))return;else if(!state.objectMode&&(!chunk||!chunk.length))return;

var ret=_this.push(chunk);
if(!ret){
paused=true;
stream.pause();
}
});



for(var i in stream){
if(this[i]===undefined&&typeof stream[i]==='function'){
this[i]=function(method){
return function(){
return stream[method].apply(stream,arguments);
};
}(i);
}
}


for(var n=0;n<kProxyEvents.length;n++){
stream.on(kProxyEvents[n],this.emit.bind(this,kProxyEvents[n]));
}



this._read=function(n){
debug('wrapped _read',n);
if(paused){
paused=false;
stream.resume();
}
};

return this;
};

Object.defineProperty(Readable.prototype,'readableHighWaterMark',{



enumerable:false,
get:function(){
return this._readableState.highWaterMark;
}});



Readable._fromList=fromList;





function fromList(n,state){

if(state.length===0)return null;

var ret;
if(state.objectMode)ret=state.buffer.shift();else if(!n||n>=state.length){

if(state.decoder)ret=state.buffer.join('');else if(state.buffer.length===1)ret=state.buffer.head.data;else ret=state.buffer.concat(state.length);
state.buffer.clear();
}else{

ret=fromListPartial(n,state.buffer,state.decoder);
}

return ret;
}




function fromListPartial(n,list,hasStrings){
var ret;
if(n<list.head.data.length){

ret=list.head.data.slice(0,n);
list.head.data=list.head.data.slice(n);
}else if(n===list.head.data.length){

ret=list.shift();
}else{

ret=hasStrings?copyFromBufferString(n,list):copyFromBuffer(n,list);
}
return ret;
}





function copyFromBufferString(n,list){
var p=list.head;
var c=1;
var ret=p.data;
n-=ret.length;
while(p=p.next){
var str=p.data;
var nb=n>str.length?str.length:n;
if(nb===str.length)ret+=str;else ret+=str.slice(0,n);
n-=nb;
if(n===0){
if(nb===str.length){
++c;
if(p.next)list.head=p.next;else list.head=list.tail=null;
}else{
list.head=p;
p.data=str.slice(nb);
}
break;
}
++c;
}
list.length-=c;
return ret;
}




function copyFromBuffer(n,list){
var ret=Buffer.allocUnsafe(n);
var p=list.head;
var c=1;
p.data.copy(ret);
n-=p.data.length;
while(p=p.next){
var buf=p.data;
var nb=n>buf.length?buf.length:n;
buf.copy(ret,ret.length-n,0,nb);
n-=nb;
if(n===0){
if(nb===buf.length){
++c;
if(p.next)list.head=p.next;else list.head=list.tail=null;
}else{
list.head=p;
p.data=buf.slice(nb);
}
break;
}
++c;
}
list.length-=c;
return ret;
}

function endReadable(stream){
var state=stream._readableState;



if(state.length>0)throw new Error('"endReadable()" called on non-empty stream');

if(!state.endEmitted){
state.ended=true;
pna.nextTick(endReadableNT,state,stream);
}
}

function endReadableNT(state,stream){

if(!state.endEmitted&&state.length===0){
state.endEmitted=true;
stream.readable=false;
stream.emit('end');
}
}

function indexOf(xs,x){
for(var i=0,l=xs.length;i<l;i++){
if(xs[i]===x)return i;
}
return-1;
}
}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"./_stream_duplex":175,"./internal/streams/BufferList":180,"./internal/streams/destroy":181,"./internal/streams/stream":182,"_process":170,"core-util-is":115,"events":118,"inherits":183,"isarray":131,"process-nextick-args":169,"safe-buffer":190,"string_decoder/":196,"util":110}],178:[function(require,module,exports){































































'use strict';

module.exports=Transform;

var Duplex=require('./_stream_duplex');


var util=require('core-util-is');
util.inherits=require('inherits');


util.inherits(Transform,Duplex);

function afterTransform(er,data){
var ts=this._transformState;
ts.transforming=false;

var cb=ts.writecb;

if(!cb){
return this.emit('error',new Error('write callback called multiple times'));
}

ts.writechunk=null;
ts.writecb=null;

if(data!=null)
this.push(data);

cb(er);

var rs=this._readableState;
rs.reading=false;
if(rs.needReadable||rs.length<rs.highWaterMark){
this._read(rs.highWaterMark);
}
}

function Transform(options){
if(!(this instanceof Transform))return new Transform(options);

Duplex.call(this,options);

this._transformState={
afterTransform:afterTransform.bind(this),
needTransform:false,
transforming:false,
writecb:null,
writechunk:null,
writeencoding:null};



this._readableState.needReadable=true;




this._readableState.sync=false;

if(options){
if(typeof options.transform==='function')this._transform=options.transform;

if(typeof options.flush==='function')this._flush=options.flush;
}


this.on('prefinish',prefinish);
}

function prefinish(){
var _this=this;

if(typeof this._flush==='function'){
this._flush(function(er,data){
done(_this,er,data);
});
}else{
done(this,null,null);
}
}

Transform.prototype.push=function(chunk,encoding){
this._transformState.needTransform=false;
return Duplex.prototype.push.call(this,chunk,encoding);
};











Transform.prototype._transform=function(chunk,encoding,cb){
throw new Error('_transform() is not implemented');
};

Transform.prototype._write=function(chunk,encoding,cb){
var ts=this._transformState;
ts.writecb=cb;
ts.writechunk=chunk;
ts.writeencoding=encoding;
if(!ts.transforming){
var rs=this._readableState;
if(ts.needTransform||rs.needReadable||rs.length<rs.highWaterMark)this._read(rs.highWaterMark);
}
};




Transform.prototype._read=function(n){
var ts=this._transformState;

if(ts.writechunk!==null&&ts.writecb&&!ts.transforming){
ts.transforming=true;
this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);
}else{


ts.needTransform=true;
}
};

Transform.prototype._destroy=function(err,cb){
var _this2=this;

Duplex.prototype._destroy.call(this,err,function(err2){
cb(err2);
_this2.emit('close');
});
};

function done(stream,er,data){
if(er)return stream.emit('error',er);

if(data!=null)
stream.push(data);



if(stream._writableState.length)throw new Error('Calling transform done when ws.length != 0');

if(stream._transformState.transforming)throw new Error('Calling transform done when still transforming');

return stream.push(null);
}
},{"./_stream_duplex":175,"core-util-is":115,"inherits":183}],179:[function(require,module,exports){
(function(process,global,setImmediate){

























'use strict';



var pna=require('process-nextick-args');


module.exports=Writable;


function WriteReq(chunk,encoding,cb){
this.chunk=chunk;
this.encoding=encoding;
this.callback=cb;
this.next=null;
}



function CorkedRequest(state){
var _this=this;

this.next=null;
this.entry=null;
this.finish=function(){
onCorkedFinish(_this,state);
};
}



var asyncWrite=!process.browser&&['v0.10','v0.9.'].indexOf(process.version.slice(0,5))>-1?setImmediate:pna.nextTick;



var Duplex;


Writable.WritableState=WritableState;


var util=require('core-util-is');
util.inherits=require('inherits');



var internalUtil={
deprecate:require('util-deprecate')};




var Stream=require('./internal/streams/stream');




var Buffer=require('safe-buffer').Buffer;
var OurUint8Array=global.Uint8Array||function(){};
function _uint8ArrayToBuffer(chunk){
return Buffer.from(chunk);
}
function _isUint8Array(obj){
return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;
}



var destroyImpl=require('./internal/streams/destroy');

util.inherits(Writable,Stream);

function nop(){}

function WritableState(options,stream){
Duplex=Duplex||require('./_stream_duplex');

options=options||{};






var isDuplex=stream instanceof Duplex;



this.objectMode=!!options.objectMode;

if(isDuplex)this.objectMode=this.objectMode||!!options.writableObjectMode;




var hwm=options.highWaterMark;
var writableHwm=options.writableHighWaterMark;
var defaultHwm=this.objectMode?16:16*1024;

if(hwm||hwm===0)this.highWaterMark=hwm;else if(isDuplex&&(writableHwm||writableHwm===0))this.highWaterMark=writableHwm;else this.highWaterMark=defaultHwm;


this.highWaterMark=Math.floor(this.highWaterMark);


this.finalCalled=false;


this.needDrain=false;

this.ending=false;

this.ended=false;

this.finished=false;


this.destroyed=false;




var noDecode=options.decodeStrings===false;
this.decodeStrings=!noDecode;




this.defaultEncoding=options.defaultEncoding||'utf8';




this.length=0;


this.writing=false;


this.corked=0;





this.sync=true;




this.bufferProcessing=false;


this.onwrite=function(er){
onwrite(stream,er);
};


this.writecb=null;


this.writelen=0;

this.bufferedRequest=null;
this.lastBufferedRequest=null;



this.pendingcb=0;



this.prefinished=false;


this.errorEmitted=false;


this.bufferedRequestCount=0;



this.corkedRequestsFree=new CorkedRequest(this);
}

WritableState.prototype.getBuffer=function getBuffer(){
var current=this.bufferedRequest;
var out=[];
while(current){
out.push(current);
current=current.next;
}
return out;
};

(function(){
try{
Object.defineProperty(WritableState.prototype,'buffer',{
get:internalUtil.deprecate(function(){
return this.getBuffer();
},'_writableState.buffer is deprecated. Use _writableState.getBuffer '+'instead.','DEP0003')});

}catch(_){}
})();



var realHasInstance;
if(typeof Symbol==='function'&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==='function'){
realHasInstance=Function.prototype[Symbol.hasInstance];
Object.defineProperty(Writable,Symbol.hasInstance,{
value:function(object){
if(realHasInstance.call(this,object))return true;
if(this!==Writable)return false;

return object&&object._writableState instanceof WritableState;
}});

}else{
realHasInstance=function(object){
return object instanceof this;
};
}

function Writable(options){
Duplex=Duplex||require('./_stream_duplex');








if(!realHasInstance.call(Writable,this)&&!(this instanceof Duplex)){
return new Writable(options);
}

this._writableState=new WritableState(options,this);


this.writable=true;

if(options){
if(typeof options.write==='function')this._write=options.write;

if(typeof options.writev==='function')this._writev=options.writev;

if(typeof options.destroy==='function')this._destroy=options.destroy;

if(typeof options.final==='function')this._final=options.final;
}

Stream.call(this);
}


Writable.prototype.pipe=function(){
this.emit('error',new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream,cb){
var er=new Error('write after end');

stream.emit('error',er);
pna.nextTick(cb,er);
}




function validChunk(stream,state,chunk,cb){
var valid=true;
var er=false;

if(chunk===null){
er=new TypeError('May not write null values to stream');
}else if(typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){
er=new TypeError('Invalid non-string/buffer chunk');
}
if(er){
stream.emit('error',er);
pna.nextTick(cb,er);
valid=false;
}
return valid;
}

Writable.prototype.write=function(chunk,encoding,cb){
var state=this._writableState;
var ret=false;
var isBuf=!state.objectMode&&_isUint8Array(chunk);

if(isBuf&&!Buffer.isBuffer(chunk)){
chunk=_uint8ArrayToBuffer(chunk);
}

if(typeof encoding==='function'){
cb=encoding;
encoding=null;
}

if(isBuf)encoding='buffer';else if(!encoding)encoding=state.defaultEncoding;

if(typeof cb!=='function')cb=nop;

if(state.ended)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state,chunk,cb)){
state.pendingcb++;
ret=writeOrBuffer(this,state,isBuf,chunk,encoding,cb);
}

return ret;
};

Writable.prototype.cork=function(){
var state=this._writableState;

state.corked++;
};

Writable.prototype.uncork=function(){
var state=this._writableState;

if(state.corked){
state.corked--;

if(!state.writing&&!state.corked&&!state.finished&&!state.bufferProcessing&&state.bufferedRequest)clearBuffer(this,state);
}
};

Writable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){

if(typeof encoding==='string')encoding=encoding.toLowerCase();
if(!(['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le','raw'].indexOf((encoding+'').toLowerCase())>-1))throw new TypeError('Unknown encoding: '+encoding);
this._writableState.defaultEncoding=encoding;
return this;
};

function decodeChunk(state,chunk,encoding){
if(!state.objectMode&&state.decodeStrings!==false&&typeof chunk==='string'){
chunk=Buffer.from(chunk,encoding);
}
return chunk;
}

Object.defineProperty(Writable.prototype,'writableHighWaterMark',{



enumerable:false,
get:function(){
return this._writableState.highWaterMark;
}});





function writeOrBuffer(stream,state,isBuf,chunk,encoding,cb){
if(!isBuf){
var newChunk=decodeChunk(state,chunk,encoding);
if(chunk!==newChunk){
isBuf=true;
encoding='buffer';
chunk=newChunk;
}
}
var len=state.objectMode?1:chunk.length;

state.length+=len;

var ret=state.length<state.highWaterMark;

if(!ret)state.needDrain=true;

if(state.writing||state.corked){
var last=state.lastBufferedRequest;
state.lastBufferedRequest={
chunk:chunk,
encoding:encoding,
isBuf:isBuf,
callback:cb,
next:null};

if(last){
last.next=state.lastBufferedRequest;
}else{
state.bufferedRequest=state.lastBufferedRequest;
}
state.bufferedRequestCount+=1;
}else{
doWrite(stream,state,false,len,chunk,encoding,cb);
}

return ret;
}

function doWrite(stream,state,writev,len,chunk,encoding,cb){
state.writelen=len;
state.writecb=cb;
state.writing=true;
state.sync=true;
if(writev)stream._writev(chunk,state.onwrite);else stream._write(chunk,encoding,state.onwrite);
state.sync=false;
}

function onwriteError(stream,state,sync,er,cb){
--state.pendingcb;

if(sync){


pna.nextTick(cb,er);


pna.nextTick(finishMaybe,stream,state);
stream._writableState.errorEmitted=true;
stream.emit('error',er);
}else{


cb(er);
stream._writableState.errorEmitted=true;
stream.emit('error',er);


finishMaybe(stream,state);
}
}

function onwriteStateUpdate(state){
state.writing=false;
state.writecb=null;
state.length-=state.writelen;
state.writelen=0;
}

function onwrite(stream,er){
var state=stream._writableState;
var sync=state.sync;
var cb=state.writecb;

onwriteStateUpdate(state);

if(er)onwriteError(stream,state,sync,er,cb);else{

var finished=needFinish(state);

if(!finished&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest){
clearBuffer(stream,state);
}

if(sync){

asyncWrite(afterWrite,stream,state,finished,cb);

}else{
afterWrite(stream,state,finished,cb);
}
}
}

function afterWrite(stream,state,finished,cb){
if(!finished)onwriteDrain(stream,state);
state.pendingcb--;
cb();
finishMaybe(stream,state);
}




function onwriteDrain(stream,state){
if(state.length===0&&state.needDrain){
state.needDrain=false;
stream.emit('drain');
}
}


function clearBuffer(stream,state){
state.bufferProcessing=true;
var entry=state.bufferedRequest;

if(stream._writev&&entry&&entry.next){

var l=state.bufferedRequestCount;
var buffer=new Array(l);
var holder=state.corkedRequestsFree;
holder.entry=entry;

var count=0;
var allBuffers=true;
while(entry){
buffer[count]=entry;
if(!entry.isBuf)allBuffers=false;
entry=entry.next;
count+=1;
}
buffer.allBuffers=allBuffers;

doWrite(stream,state,true,state.length,buffer,'',holder.finish);



state.pendingcb++;
state.lastBufferedRequest=null;
if(holder.next){
state.corkedRequestsFree=holder.next;
holder.next=null;
}else{
state.corkedRequestsFree=new CorkedRequest(state);
}
state.bufferedRequestCount=0;
}else{

while(entry){
var chunk=entry.chunk;
var encoding=entry.encoding;
var cb=entry.callback;
var len=state.objectMode?1:chunk.length;

doWrite(stream,state,false,len,chunk,encoding,cb);
entry=entry.next;
state.bufferedRequestCount--;




if(state.writing){
break;
}
}

if(entry===null)state.lastBufferedRequest=null;
}

state.bufferedRequest=entry;
state.bufferProcessing=false;
}

Writable.prototype._write=function(chunk,encoding,cb){
cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev=null;

Writable.prototype.end=function(chunk,encoding,cb){
var state=this._writableState;

if(typeof chunk==='function'){
cb=chunk;
chunk=null;
encoding=null;
}else if(typeof encoding==='function'){
cb=encoding;
encoding=null;
}

if(chunk!==null&&chunk!==undefined)this.write(chunk,encoding);


if(state.corked){
state.corked=1;
this.uncork();
}


if(!state.ending&&!state.finished)endWritable(this,state,cb);
};

function needFinish(state){
return state.ending&&state.length===0&&state.bufferedRequest===null&&!state.finished&&!state.writing;
}
function callFinal(stream,state){
stream._final(function(err){
state.pendingcb--;
if(err){
stream.emit('error',err);
}
state.prefinished=true;
stream.emit('prefinish');
finishMaybe(stream,state);
});
}
function prefinish(stream,state){
if(!state.prefinished&&!state.finalCalled){
if(typeof stream._final==='function'){
state.pendingcb++;
state.finalCalled=true;
pna.nextTick(callFinal,stream,state);
}else{
state.prefinished=true;
stream.emit('prefinish');
}
}
}

function finishMaybe(stream,state){
var need=needFinish(state);
if(need){
prefinish(stream,state);
if(state.pendingcb===0){
state.finished=true;
stream.emit('finish');
}
}
return need;
}

function endWritable(stream,state,cb){
state.ending=true;
finishMaybe(stream,state);
if(cb){
if(state.finished)pna.nextTick(cb);else stream.once('finish',cb);
}
state.ended=true;
stream.writable=false;
}

function onCorkedFinish(corkReq,state,err){
var entry=corkReq.entry;
corkReq.entry=null;
while(entry){
var cb=entry.callback;
state.pendingcb--;
cb(err);
entry=entry.next;
}
if(state.corkedRequestsFree){
state.corkedRequestsFree.next=corkReq;
}else{
state.corkedRequestsFree=corkReq;
}
}

Object.defineProperty(Writable.prototype,'destroyed',{
get:function(){
if(this._writableState===undefined){
return false;
}
return this._writableState.destroyed;
},
set:function(value){


if(!this._writableState){
return;
}



this._writableState.destroyed=value;
}});


Writable.prototype.destroy=destroyImpl.destroy;
Writable.prototype._undestroy=destroyImpl.undestroy;
Writable.prototype._destroy=function(err,cb){
this.end();
cb(err);
};
}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("timers").setImmediate);
},{"./_stream_duplex":175,"./internal/streams/destroy":181,"./internal/streams/stream":182,"_process":170,"core-util-is":115,"inherits":183,"process-nextick-args":169,"safe-buffer":190,"timers":201,"util-deprecate":202}],180:[function(require,module,exports){
'use strict';

function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

var Buffer=require('safe-buffer').Buffer;
var util=require('util');

function copyBuffer(src,target,offset){
src.copy(target,offset);
}

module.exports=function(){
function BufferList(){
_classCallCheck(this,BufferList);

this.head=null;
this.tail=null;
this.length=0;
}

BufferList.prototype.push=function push(v){
var entry={data:v,next:null};
if(this.length>0)this.tail.next=entry;else this.head=entry;
this.tail=entry;
++this.length;
};

BufferList.prototype.unshift=function unshift(v){
var entry={data:v,next:this.head};
if(this.length===0)this.tail=entry;
this.head=entry;
++this.length;
};

BufferList.prototype.shift=function shift(){
if(this.length===0)return;
var ret=this.head.data;
if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;
--this.length;
return ret;
};

BufferList.prototype.clear=function clear(){
this.head=this.tail=null;
this.length=0;
};

BufferList.prototype.join=function join(s){
if(this.length===0)return'';
var p=this.head;
var ret=''+p.data;
while(p=p.next){
ret+=s+p.data;
}return ret;
};

BufferList.prototype.concat=function concat(n){
if(this.length===0)return Buffer.alloc(0);
if(this.length===1)return this.head.data;
var ret=Buffer.allocUnsafe(n>>>0);
var p=this.head;
var i=0;
while(p){
copyBuffer(p.data,ret,i);
i+=p.data.length;
p=p.next;
}
return ret;
};

return BufferList;
}();

if(util&&util.inspect&&util.inspect.custom){
module.exports.prototype[util.inspect.custom]=function(){
var obj=util.inspect({length:this.length});
return this.constructor.name+' '+obj;
};
}
},{"safe-buffer":190,"util":110}],181:[function(require,module,exports){
'use strict';



var pna=require('process-nextick-args');



function destroy(err,cb){
var _this=this;

var readableDestroyed=this._readableState&&this._readableState.destroyed;
var writableDestroyed=this._writableState&&this._writableState.destroyed;

if(readableDestroyed||writableDestroyed){
if(cb){
cb(err);
}else if(err&&(!this._writableState||!this._writableState.errorEmitted)){
pna.nextTick(emitErrorNT,this,err);
}
return this;
}




if(this._readableState){
this._readableState.destroyed=true;
}


if(this._writableState){
this._writableState.destroyed=true;
}

this._destroy(err||null,function(err){
if(!cb&&err){
pna.nextTick(emitErrorNT,_this,err);
if(_this._writableState){
_this._writableState.errorEmitted=true;
}
}else if(cb){
cb(err);
}
});

return this;
}

function undestroy(){
if(this._readableState){
this._readableState.destroyed=false;
this._readableState.reading=false;
this._readableState.ended=false;
this._readableState.endEmitted=false;
}

if(this._writableState){
this._writableState.destroyed=false;
this._writableState.ended=false;
this._writableState.ending=false;
this._writableState.finished=false;
this._writableState.errorEmitted=false;
}
}

function emitErrorNT(self,err){
self.emit('error',err);
}

module.exports={
destroy:destroy,
undestroy:undestroy};

},{"process-nextick-args":169}],182:[function(require,module,exports){
module.exports=require('events').EventEmitter;

},{"events":118}],183:[function(require,module,exports){
if(typeof Object.create==='function'){

module.exports=function inherits(ctor,superCtor){
if(superCtor){
ctor.super_=superCtor;
ctor.prototype=Object.create(superCtor.prototype,{
constructor:{
value:ctor,
enumerable:false,
writable:true,
configurable:true}});


}
};
}else{

module.exports=function inherits(ctor,superCtor){
if(superCtor){
ctor.super_=superCtor;
var TempCtor=function(){};
TempCtor.prototype=superCtor.prototype;
ctor.prototype=new TempCtor();
ctor.prototype.constructor=ctor;
}
};
}

},{}],184:[function(require,module,exports){
module.exports=require('./readable').PassThrough;

},{"./readable":185}],185:[function(require,module,exports){
exports=module.exports=require('./lib/_stream_readable.js');
exports.Stream=exports;
exports.Readable=exports;
exports.Writable=require('./lib/_stream_writable.js');
exports.Duplex=require('./lib/_stream_duplex.js');
exports.Transform=require('./lib/_stream_transform.js');
exports.PassThrough=require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":175,"./lib/_stream_passthrough.js":176,"./lib/_stream_readable.js":177,"./lib/_stream_transform.js":178,"./lib/_stream_writable.js":179}],186:[function(require,module,exports){
module.exports=require('./readable').Transform;

},{"./readable":185}],187:[function(require,module,exports){
module.exports=require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":179}],188:[function(require,module,exports){
var URL=require('url').URL;











function trimLine(line){
if(!line){
return null;
}

if(Array.isArray(line)){
return line.map(trimLine);
}

return String(line).trim();
}








function removeComments(line){
var commentStartIndex=line.indexOf('#');
if(commentStartIndex>-1){
return line.substr(0,commentStartIndex);
}

return line;
}








function splitLine(line){
var idx=String(line).indexOf(':');

if(!line||idx<0){
return null;
}

return[line.slice(0,idx),line.slice(idx+1)];
}









function formatUserAgent(userAgent){
var formattedUserAgent=userAgent.toLowerCase();


var idx=formattedUserAgent.indexOf('/');
if(idx>-1){
formattedUserAgent=formattedUserAgent.substr(0,idx);
}

return formattedUserAgent.trim();
}









function normaliseEncoding(path){
try{
return urlEncodeToUpper(encodeURI(path).replace(/%25/g,'%'));
}catch(e){
return path;
}
}










function urlEncodeToUpper(path){
return path.replace(/%[0-9a-fA-F]{2}/g,function(match){
return match.toUpperCase();
});
}











function parsePattern(pattern){
var regexSpecialChars=/[\-\[\]\/\{\}\(\)\+\?\.\\\^\$\|]/g;
var wildCardPattern=/\*/g;
var endOfLinePattern=/\\\$$/;

pattern=normaliseEncoding(pattern);

if(pattern.indexOf('*')<0&&pattern.indexOf('$')<0){
return pattern;
}

pattern=pattern.
replace(regexSpecialChars,'\\$&').
replace(wildCardPattern,'(?:.*)').
replace(endOfLinePattern,'$');

return new RegExp(pattern);
}

function parseRobots(contents,robots){
var newlineRegex=/\r\n|\r|\n/;
var lines=contents.
split(newlineRegex).
map(removeComments).
map(splitLine).
map(trimLine);

var currentUserAgents=[];
var isNoneUserAgentState=true;
for(var i=0;i<lines.length;i++){
var line=lines[i];

if(!line||!line[0]){
continue;
}

switch(line[0].toLowerCase()){
case'user-agent':
if(isNoneUserAgentState){
currentUserAgents.length=0;
}

if(line[1]){
currentUserAgents.push(formatUserAgent(line[1]));
}
break;
case'disallow':
robots.addRule(currentUserAgents,line[1],false,i+1);
break;
case'allow':
robots.addRule(currentUserAgents,line[1],true,i+1);
break;
case'crawl-delay':
robots.setCrawlDelay(currentUserAgents,line[1]);
break;
case'sitemap':
if(line[1]){
robots.addSitemap(line[1]);
}
break;
case'host':
if(line[1]){
robots.setPreferredHost(line[1].toLowerCase());
}
break;}


isNoneUserAgentState=line[0].toLowerCase()!=='user-agent';
}
}









function findRule(path,rules){
var matchingRule=null;

for(var i=0;i<rules.length;i++){
var rule=rules[i];

if(typeof rule.pattern==='string'){
if(path.indexOf(rule.pattern)!==0){
continue;
}


if(!matchingRule||rule.pattern.length>matchingRule.pattern.length){
matchingRule=rule;
}


}else if(rule.pattern.test(path)){
return rule;
}
}

return matchingRule;
}










function parseUrl(url){
try{
return new URL(url);
}catch(e){
return null;
}
}


function Robots(url,contents){
this._url=parseUrl(url)||{};
this._url.port=this._url.port||80;

this._rules={};
this._sitemaps=[];
this._preferedHost=null;

parseRobots(contents||'',this);
}










Robots.prototype.addRule=function(userAgents,pattern,allow,lineNumber){
var rules=this._rules;

userAgents.forEach(function(userAgent){
rules[userAgent]=rules[userAgent]||[];

if(!pattern){
return;
}

rules[userAgent].push({
pattern:parsePattern(pattern),
allow:allow,
lineNumber:lineNumber});

});
};







Robots.prototype.setCrawlDelay=function(userAgents,delayStr){
var rules=this._rules;
var delay=Number(delayStr);

userAgents.forEach(function(userAgent){
rules[userAgent]=rules[userAgent]||[];

if(isNaN(delay)){
return;
}

rules[userAgent].crawlDelay=delay;
});
};






Robots.prototype.addSitemap=function(url){
this._sitemaps.push(url);
};






Robots.prototype.setPreferredHost=function(url){
this._preferedHost=url;
};

Robots.prototype._getRule=function(url,ua){
var parsedUrl=parseUrl(url)||{};
var userAgent=formatUserAgent(ua||'*');

parsedUrl.port=parsedUrl.port||'80';


if(parsedUrl.protocol!==this._url.protocol||
parsedUrl.hostname!==this._url.hostname||
parsedUrl.port!==this._url.port){
return;
}

var rules=this._rules[userAgent]||this._rules['*']||[];
var path=urlEncodeToUpper(parsedUrl.pathname+parsedUrl.search);
var rule=findRule(path,rules);

return rule;
};











Robots.prototype.isAllowed=function(url,ua){
var rule=this._getRule(url,ua);

if(typeof rule==='undefined'){
return;
}

return!rule||rule.allow;
};















Robots.prototype.getMatchingLineNumber=function(url,ua){
var rule=this._getRule(url,ua);

return rule?rule.lineNumber:-1;
};








Robots.prototype.isDisallowed=function(url,ua){
return!this.isAllowed(url,ua);
};









Robots.prototype.getCrawlDelay=function(ua){
var userAgent=formatUserAgent(ua||'*');

return(this._rules[userAgent]||this._rules['*']||{}).crawlDelay;
};






Robots.prototype.getPreferredHost=function(){
return this._preferedHost;
};






Robots.prototype.getSitemaps=function(){
return this._sitemaps.slice(0);
};

module.exports=Robots;

},{"url":"url"}],189:[function(require,module,exports){
var Robots=require('./Robots');

module.exports=function(url,contents){
return new Robots(url,contents);
};
},{"./Robots":188}],190:[function(require,module,exports){

var buffer=require('buffer');
var Buffer=buffer.Buffer;


function copyProps(src,dst){
for(var key in src){
dst[key]=src[key];
}
}
if(Buffer.from&&Buffer.alloc&&Buffer.allocUnsafe&&Buffer.allocUnsafeSlow){
module.exports=buffer;
}else{

copyProps(buffer,exports);
exports.Buffer=SafeBuffer;
}

function SafeBuffer(arg,encodingOrOffset,length){
return Buffer(arg,encodingOrOffset,length);
}


copyProps(Buffer,SafeBuffer);

SafeBuffer.from=function(arg,encodingOrOffset,length){
if(typeof arg==='number'){
throw new TypeError('Argument must not be a number');
}
return Buffer(arg,encodingOrOffset,length);
};

SafeBuffer.alloc=function(size,fill,encoding){
if(typeof size!=='number'){
throw new TypeError('Argument must be a number');
}
var buf=Buffer(size);
if(fill!==undefined){
if(typeof encoding==='string'){
buf.fill(fill,encoding);
}else{
buf.fill(fill);
}
}else{
buf.fill(0);
}
return buf;
};

SafeBuffer.allocUnsafe=function(size){
if(typeof size!=='number'){
throw new TypeError('Argument must be a number');
}
return Buffer(size);
};

SafeBuffer.allocUnsafeSlow=function(size){
if(typeof size!=='number'){
throw new TypeError('Argument must be a number');
}
return buffer.SlowBuffer(size);
};

},{"buffer":114}],191:[function(require,module,exports){
(function(process){
exports=module.exports=SemVer;

var debug;

if(typeof process==='object'&&
process.env&&
process.env.NODE_DEBUG&&
/\bsemver\b/i.test(process.env.NODE_DEBUG)){
debug=function(){
var args=Array.prototype.slice.call(arguments,0);
args.unshift('SEMVER');
console.log.apply(console,args);
};
}else{
debug=function(){};
}



exports.SEMVER_SPEC_VERSION='2.0.0';

var MAX_LENGTH=256;
var MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||
9007199254740991;


var MAX_SAFE_COMPONENT_LENGTH=16;


var re=exports.re=[];
var src=exports.src=[];
var R=0;







var NUMERICIDENTIFIER=R++;
src[NUMERICIDENTIFIER]='0|[1-9]\\d*';
var NUMERICIDENTIFIERLOOSE=R++;
src[NUMERICIDENTIFIERLOOSE]='[0-9]+';





var NONNUMERICIDENTIFIER=R++;
src[NONNUMERICIDENTIFIER]='\\d*[a-zA-Z-][a-zA-Z0-9-]*';




var MAINVERSION=R++;
src[MAINVERSION]='('+src[NUMERICIDENTIFIER]+')\\.'+
'('+src[NUMERICIDENTIFIER]+')\\.'+
'('+src[NUMERICIDENTIFIER]+')';

var MAINVERSIONLOOSE=R++;
src[MAINVERSIONLOOSE]='('+src[NUMERICIDENTIFIERLOOSE]+')\\.'+
'('+src[NUMERICIDENTIFIERLOOSE]+')\\.'+
'('+src[NUMERICIDENTIFIERLOOSE]+')';




var PRERELEASEIDENTIFIER=R++;
src[PRERELEASEIDENTIFIER]='(?:'+src[NUMERICIDENTIFIER]+
'|'+src[NONNUMERICIDENTIFIER]+')';

var PRERELEASEIDENTIFIERLOOSE=R++;
src[PRERELEASEIDENTIFIERLOOSE]='(?:'+src[NUMERICIDENTIFIERLOOSE]+
'|'+src[NONNUMERICIDENTIFIER]+')';





var PRERELEASE=R++;
src[PRERELEASE]='(?:-('+src[PRERELEASEIDENTIFIER]+
'(?:\\.'+src[PRERELEASEIDENTIFIER]+')*))';

var PRERELEASELOOSE=R++;
src[PRERELEASELOOSE]='(?:-?('+src[PRERELEASEIDENTIFIERLOOSE]+
'(?:\\.'+src[PRERELEASEIDENTIFIERLOOSE]+')*))';




var BUILDIDENTIFIER=R++;
src[BUILDIDENTIFIER]='[0-9A-Za-z-]+';





var BUILD=R++;
src[BUILD]='(?:\\+('+src[BUILDIDENTIFIER]+
'(?:\\.'+src[BUILDIDENTIFIER]+')*))';










var FULL=R++;
var FULLPLAIN='v?'+src[MAINVERSION]+
src[PRERELEASE]+'?'+
src[BUILD]+'?';

src[FULL]='^'+FULLPLAIN+'$';




var LOOSEPLAIN='[v=\\s]*'+src[MAINVERSIONLOOSE]+
src[PRERELEASELOOSE]+'?'+
src[BUILD]+'?';

var LOOSE=R++;
src[LOOSE]='^'+LOOSEPLAIN+'$';

var GTLT=R++;
src[GTLT]='((?:<|>)?=?)';




var XRANGEIDENTIFIERLOOSE=R++;
src[XRANGEIDENTIFIERLOOSE]=src[NUMERICIDENTIFIERLOOSE]+'|x|X|\\*';
var XRANGEIDENTIFIER=R++;
src[XRANGEIDENTIFIER]=src[NUMERICIDENTIFIER]+'|x|X|\\*';

var XRANGEPLAIN=R++;
src[XRANGEPLAIN]='[v=\\s]*('+src[XRANGEIDENTIFIER]+')'+
'(?:\\.('+src[XRANGEIDENTIFIER]+')'+
'(?:\\.('+src[XRANGEIDENTIFIER]+')'+
'(?:'+src[PRERELEASE]+')?'+
src[BUILD]+'?'+
')?)?';

var XRANGEPLAINLOOSE=R++;
src[XRANGEPLAINLOOSE]='[v=\\s]*('+src[XRANGEIDENTIFIERLOOSE]+')'+
'(?:\\.('+src[XRANGEIDENTIFIERLOOSE]+')'+
'(?:\\.('+src[XRANGEIDENTIFIERLOOSE]+')'+
'(?:'+src[PRERELEASELOOSE]+')?'+
src[BUILD]+'?'+
')?)?';

var XRANGE=R++;
src[XRANGE]='^'+src[GTLT]+'\\s*'+src[XRANGEPLAIN]+'$';
var XRANGELOOSE=R++;
src[XRANGELOOSE]='^'+src[GTLT]+'\\s*'+src[XRANGEPLAINLOOSE]+'$';



var COERCE=R++;
src[COERCE]='(?:^|[^\\d])'+
'(\\d{1,'+MAX_SAFE_COMPONENT_LENGTH+'})'+
'(?:\\.(\\d{1,'+MAX_SAFE_COMPONENT_LENGTH+'}))?'+
'(?:\\.(\\d{1,'+MAX_SAFE_COMPONENT_LENGTH+'}))?'+
'(?:$|[^\\d])';



var LONETILDE=R++;
src[LONETILDE]='(?:~>?)';

var TILDETRIM=R++;
src[TILDETRIM]='(\\s*)'+src[LONETILDE]+'\\s+';
re[TILDETRIM]=new RegExp(src[TILDETRIM],'g');
var tildeTrimReplace='$1~';

var TILDE=R++;
src[TILDE]='^'+src[LONETILDE]+src[XRANGEPLAIN]+'$';
var TILDELOOSE=R++;
src[TILDELOOSE]='^'+src[LONETILDE]+src[XRANGEPLAINLOOSE]+'$';



var LONECARET=R++;
src[LONECARET]='(?:\\^)';

var CARETTRIM=R++;
src[CARETTRIM]='(\\s*)'+src[LONECARET]+'\\s+';
re[CARETTRIM]=new RegExp(src[CARETTRIM],'g');
var caretTrimReplace='$1^';

var CARET=R++;
src[CARET]='^'+src[LONECARET]+src[XRANGEPLAIN]+'$';
var CARETLOOSE=R++;
src[CARETLOOSE]='^'+src[LONECARET]+src[XRANGEPLAINLOOSE]+'$';


var COMPARATORLOOSE=R++;
src[COMPARATORLOOSE]='^'+src[GTLT]+'\\s*('+LOOSEPLAIN+')$|^$';
var COMPARATOR=R++;
src[COMPARATOR]='^'+src[GTLT]+'\\s*('+FULLPLAIN+')$|^$';



var COMPARATORTRIM=R++;
src[COMPARATORTRIM]='(\\s*)'+src[GTLT]+
'\\s*('+LOOSEPLAIN+'|'+src[XRANGEPLAIN]+')';


re[COMPARATORTRIM]=new RegExp(src[COMPARATORTRIM],'g');
var comparatorTrimReplace='$1$2$3';





var HYPHENRANGE=R++;
src[HYPHENRANGE]='^\\s*('+src[XRANGEPLAIN]+')'+
'\\s+-\\s+'+
'('+src[XRANGEPLAIN]+')'+
'\\s*$';

var HYPHENRANGELOOSE=R++;
src[HYPHENRANGELOOSE]='^\\s*('+src[XRANGEPLAINLOOSE]+')'+
'\\s+-\\s+'+
'('+src[XRANGEPLAINLOOSE]+')'+
'\\s*$';


var STAR=R++;
src[STAR]='(<|>)?=?\\s*\\*';



for(var i=0;i<R;i++){
debug(i,src[i]);
if(!re[i]){
re[i]=new RegExp(src[i]);
}
}

exports.parse=parse;
function parse(version,options){
if(!options||typeof options!=='object'){
options={
loose:!!options,
includePrerelease:false};

}

if(version instanceof SemVer){
return version;
}

if(typeof version!=='string'){
return null;
}

if(version.length>MAX_LENGTH){
return null;
}

var r=options.loose?re[LOOSE]:re[FULL];
if(!r.test(version)){
return null;
}

try{
return new SemVer(version,options);
}catch(er){
return null;
}
}

exports.valid=valid;
function valid(version,options){
var v=parse(version,options);
return v?v.version:null;
}

exports.clean=clean;
function clean(version,options){
var s=parse(version.trim().replace(/^[=v]+/,''),options);
return s?s.version:null;
}

exports.SemVer=SemVer;

function SemVer(version,options){
if(!options||typeof options!=='object'){
options={
loose:!!options,
includePrerelease:false};

}
if(version instanceof SemVer){
if(version.loose===options.loose){
return version;
}else{
version=version.version;
}
}else if(typeof version!=='string'){
throw new TypeError('Invalid Version: '+version);
}

if(version.length>MAX_LENGTH){
throw new TypeError('version is longer than '+MAX_LENGTH+' characters');
}

if(!(this instanceof SemVer)){
return new SemVer(version,options);
}

debug('SemVer',version,options);
this.options=options;
this.loose=!!options.loose;

var m=version.trim().match(options.loose?re[LOOSE]:re[FULL]);

if(!m){
throw new TypeError('Invalid Version: '+version);
}

this.raw=version;


this.major=+m[1];
this.minor=+m[2];
this.patch=+m[3];

if(this.major>MAX_SAFE_INTEGER||this.major<0){
throw new TypeError('Invalid major version');
}

if(this.minor>MAX_SAFE_INTEGER||this.minor<0){
throw new TypeError('Invalid minor version');
}

if(this.patch>MAX_SAFE_INTEGER||this.patch<0){
throw new TypeError('Invalid patch version');
}


if(!m[4]){
this.prerelease=[];
}else{
this.prerelease=m[4].split('.').map(function(id){
if(/^[0-9]+$/.test(id)){
var num=+id;
if(num>=0&&num<MAX_SAFE_INTEGER){
return num;
}
}
return id;
});
}

this.build=m[5]?m[5].split('.'):[];
this.format();
}

SemVer.prototype.format=function(){
this.version=this.major+'.'+this.minor+'.'+this.patch;
if(this.prerelease.length){
this.version+='-'+this.prerelease.join('.');
}
return this.version;
};

SemVer.prototype.toString=function(){
return this.version;
};

SemVer.prototype.compare=function(other){
debug('SemVer.compare',this.version,this.options,other);
if(!(other instanceof SemVer)){
other=new SemVer(other,this.options);
}

return this.compareMain(other)||this.comparePre(other);
};

SemVer.prototype.compareMain=function(other){
if(!(other instanceof SemVer)){
other=new SemVer(other,this.options);
}

return compareIdentifiers(this.major,other.major)||
compareIdentifiers(this.minor,other.minor)||
compareIdentifiers(this.patch,other.patch);
};

SemVer.prototype.comparePre=function(other){
if(!(other instanceof SemVer)){
other=new SemVer(other,this.options);
}


if(this.prerelease.length&&!other.prerelease.length){
return-1;
}else if(!this.prerelease.length&&other.prerelease.length){
return 1;
}else if(!this.prerelease.length&&!other.prerelease.length){
return 0;
}

var i=0;
do{
var a=this.prerelease[i];
var b=other.prerelease[i];
debug('prerelease compare',i,a,b);
if(a===undefined&&b===undefined){
return 0;
}else if(b===undefined){
return 1;
}else if(a===undefined){
return-1;
}else if(a===b){
continue;
}else{
return compareIdentifiers(a,b);
}
}while(++i);
};



SemVer.prototype.inc=function(release,identifier){
switch(release){
case'premajor':
this.prerelease.length=0;
this.patch=0;
this.minor=0;
this.major++;
this.inc('pre',identifier);
break;
case'preminor':
this.prerelease.length=0;
this.patch=0;
this.minor++;
this.inc('pre',identifier);
break;
case'prepatch':



this.prerelease.length=0;
this.inc('patch',identifier);
this.inc('pre',identifier);
break;


case'prerelease':
if(this.prerelease.length===0){
this.inc('patch',identifier);
}
this.inc('pre',identifier);
break;

case'major':




if(this.minor!==0||
this.patch!==0||
this.prerelease.length===0){
this.major++;
}
this.minor=0;
this.patch=0;
this.prerelease=[];
break;
case'minor':




if(this.patch!==0||this.prerelease.length===0){
this.minor++;
}
this.patch=0;
this.prerelease=[];
break;
case'patch':




if(this.prerelease.length===0){
this.patch++;
}
this.prerelease=[];
break;


case'pre':
if(this.prerelease.length===0){
this.prerelease=[0];
}else{
var i=this.prerelease.length;
while(--i>=0){
if(typeof this.prerelease[i]==='number'){
this.prerelease[i]++;
i=-2;
}
}
if(i===-1){

this.prerelease.push(0);
}
}
if(identifier){


if(this.prerelease[0]===identifier){
if(isNaN(this.prerelease[1])){
this.prerelease=[identifier,0];
}
}else{
this.prerelease=[identifier,0];
}
}
break;

default:
throw new Error('invalid increment argument: '+release);}

this.format();
this.raw=this.version;
return this;
};

exports.inc=inc;
function inc(version,release,loose,identifier){
if(typeof loose==='string'){
identifier=loose;
loose=undefined;
}

try{
return new SemVer(version,loose).inc(release,identifier).version;
}catch(er){
return null;
}
}

exports.diff=diff;
function diff(version1,version2){
if(eq(version1,version2)){
return null;
}else{
var v1=parse(version1);
var v2=parse(version2);
var prefix='';
if(v1.prerelease.length||v2.prerelease.length){
prefix='pre';
var defaultResult='prerelease';
}
for(var key in v1){
if(key==='major'||key==='minor'||key==='patch'){
if(v1[key]!==v2[key]){
return prefix+key;
}
}
}
return defaultResult;
}
}

exports.compareIdentifiers=compareIdentifiers;

var numeric=/^[0-9]+$/;
function compareIdentifiers(a,b){
var anum=numeric.test(a);
var bnum=numeric.test(b);

if(anum&&bnum){
a=+a;
b=+b;
}

return a===b?0:
anum&&!bnum?-1:
bnum&&!anum?1:
a<b?-1:
1;
}

exports.rcompareIdentifiers=rcompareIdentifiers;
function rcompareIdentifiers(a,b){
return compareIdentifiers(b,a);
}

exports.major=major;
function major(a,loose){
return new SemVer(a,loose).major;
}

exports.minor=minor;
function minor(a,loose){
return new SemVer(a,loose).minor;
}

exports.patch=patch;
function patch(a,loose){
return new SemVer(a,loose).patch;
}

exports.compare=compare;
function compare(a,b,loose){
return new SemVer(a,loose).compare(new SemVer(b,loose));
}

exports.compareLoose=compareLoose;
function compareLoose(a,b){
return compare(a,b,true);
}

exports.rcompare=rcompare;
function rcompare(a,b,loose){
return compare(b,a,loose);
}

exports.sort=sort;
function sort(list,loose){
return list.sort(function(a,b){
return exports.compare(a,b,loose);
});
}

exports.rsort=rsort;
function rsort(list,loose){
return list.sort(function(a,b){
return exports.rcompare(a,b,loose);
});
}

exports.gt=gt;
function gt(a,b,loose){
return compare(a,b,loose)>0;
}

exports.lt=lt;
function lt(a,b,loose){
return compare(a,b,loose)<0;
}

exports.eq=eq;
function eq(a,b,loose){
return compare(a,b,loose)===0;
}

exports.neq=neq;
function neq(a,b,loose){
return compare(a,b,loose)!==0;
}

exports.gte=gte;
function gte(a,b,loose){
return compare(a,b,loose)>=0;
}

exports.lte=lte;
function lte(a,b,loose){
return compare(a,b,loose)<=0;
}

exports.cmp=cmp;
function cmp(a,op,b,loose){
switch(op){
case'===':
if(typeof a==='object')
a=a.version;
if(typeof b==='object')
b=b.version;
return a===b;

case'!==':
if(typeof a==='object')
a=a.version;
if(typeof b==='object')
b=b.version;
return a!==b;

case'':
case'=':
case'==':
return eq(a,b,loose);

case'!=':
return neq(a,b,loose);

case'>':
return gt(a,b,loose);

case'>=':
return gte(a,b,loose);

case'<':
return lt(a,b,loose);

case'<=':
return lte(a,b,loose);

default:
throw new TypeError('Invalid operator: '+op);}

}

exports.Comparator=Comparator;
function Comparator(comp,options){
if(!options||typeof options!=='object'){
options={
loose:!!options,
includePrerelease:false};

}

if(comp instanceof Comparator){
if(comp.loose===!!options.loose){
return comp;
}else{
comp=comp.value;
}
}

if(!(this instanceof Comparator)){
return new Comparator(comp,options);
}

debug('comparator',comp,options);
this.options=options;
this.loose=!!options.loose;
this.parse(comp);

if(this.semver===ANY){
this.value='';
}else{
this.value=this.operator+this.semver.version;
}

debug('comp',this);
}

var ANY={};
Comparator.prototype.parse=function(comp){
var r=this.options.loose?re[COMPARATORLOOSE]:re[COMPARATOR];
var m=comp.match(r);

if(!m){
throw new TypeError('Invalid comparator: '+comp);
}

this.operator=m[1];
if(this.operator==='='){
this.operator='';
}


if(!m[2]){
this.semver=ANY;
}else{
this.semver=new SemVer(m[2],this.options.loose);
}
};

Comparator.prototype.toString=function(){
return this.value;
};

Comparator.prototype.test=function(version){
debug('Comparator.test',version,this.options.loose);

if(this.semver===ANY){
return true;
}

if(typeof version==='string'){
version=new SemVer(version,this.options);
}

return cmp(version,this.operator,this.semver,this.options);
};

Comparator.prototype.intersects=function(comp,options){
if(!(comp instanceof Comparator)){
throw new TypeError('a Comparator is required');
}

if(!options||typeof options!=='object'){
options={
loose:!!options,
includePrerelease:false};

}

var rangeTmp;

if(this.operator===''){
rangeTmp=new Range(comp.value,options);
return satisfies(this.value,rangeTmp,options);
}else if(comp.operator===''){
rangeTmp=new Range(this.value,options);
return satisfies(comp.semver,rangeTmp,options);
}

var sameDirectionIncreasing=
(this.operator==='>='||this.operator==='>')&&(
comp.operator==='>='||comp.operator==='>');
var sameDirectionDecreasing=
(this.operator==='<='||this.operator==='<')&&(
comp.operator==='<='||comp.operator==='<');
var sameSemVer=this.semver.version===comp.semver.version;
var differentDirectionsInclusive=
(this.operator==='>='||this.operator==='<=')&&(
comp.operator==='>='||comp.operator==='<=');
var oppositeDirectionsLessThan=
cmp(this.semver,'<',comp.semver,options)&&
(this.operator==='>='||this.operator==='>')&&(
comp.operator==='<='||comp.operator==='<');
var oppositeDirectionsGreaterThan=
cmp(this.semver,'>',comp.semver,options)&&
(this.operator==='<='||this.operator==='<')&&(
comp.operator==='>='||comp.operator==='>');

return sameDirectionIncreasing||sameDirectionDecreasing||
sameSemVer&&differentDirectionsInclusive||
oppositeDirectionsLessThan||oppositeDirectionsGreaterThan;
};

exports.Range=Range;
function Range(range,options){
if(!options||typeof options!=='object'){
options={
loose:!!options,
includePrerelease:false};

}

if(range instanceof Range){
if(range.loose===!!options.loose&&
range.includePrerelease===!!options.includePrerelease){
return range;
}else{
return new Range(range.raw,options);
}
}

if(range instanceof Comparator){
return new Range(range.value,options);
}

if(!(this instanceof Range)){
return new Range(range,options);
}

this.options=options;
this.loose=!!options.loose;
this.includePrerelease=!!options.includePrerelease;


this.raw=range;
this.set=range.split(/\s*\|\|\s*/).map(function(range){
return this.parseRange(range.trim());
},this).filter(function(c){

return c.length;
});

if(!this.set.length){
throw new TypeError('Invalid SemVer Range: '+range);
}

this.format();
}

Range.prototype.format=function(){
this.range=this.set.map(function(comps){
return comps.join(' ').trim();
}).join('||').trim();
return this.range;
};

Range.prototype.toString=function(){
return this.range;
};

Range.prototype.parseRange=function(range){
var loose=this.options.loose;
range=range.trim();

var hr=loose?re[HYPHENRANGELOOSE]:re[HYPHENRANGE];
range=range.replace(hr,hyphenReplace);
debug('hyphen replace',range);

range=range.replace(re[COMPARATORTRIM],comparatorTrimReplace);
debug('comparator trim',range,re[COMPARATORTRIM]);


range=range.replace(re[TILDETRIM],tildeTrimReplace);


range=range.replace(re[CARETTRIM],caretTrimReplace);


range=range.split(/\s+/).join(' ');




var compRe=loose?re[COMPARATORLOOSE]:re[COMPARATOR];
var set=range.split(' ').map(function(comp){
return parseComparator(comp,this.options);
},this).join(' ').split(/\s+/);
if(this.options.loose){

set=set.filter(function(comp){
return!!comp.match(compRe);
});
}
set=set.map(function(comp){
return new Comparator(comp,this.options);
},this);

return set;
};

Range.prototype.intersects=function(range,options){
if(!(range instanceof Range)){
throw new TypeError('a Range is required');
}

return this.set.some(function(thisComparators){
return thisComparators.every(function(thisComparator){
return range.set.some(function(rangeComparators){
return rangeComparators.every(function(rangeComparator){
return thisComparator.intersects(rangeComparator,options);
});
});
});
});
};


exports.toComparators=toComparators;
function toComparators(range,options){
return new Range(range,options).set.map(function(comp){
return comp.map(function(c){
return c.value;
}).join(' ').trim().split(' ');
});
}




function parseComparator(comp,options){
debug('comp',comp,options);
comp=replaceCarets(comp,options);
debug('caret',comp);
comp=replaceTildes(comp,options);
debug('tildes',comp);
comp=replaceXRanges(comp,options);
debug('xrange',comp);
comp=replaceStars(comp,options);
debug('stars',comp);
return comp;
}

function isX(id){
return!id||id.toLowerCase()==='x'||id==='*';
}







function replaceTildes(comp,options){
return comp.trim().split(/\s+/).map(function(comp){
return replaceTilde(comp,options);
}).join(' ');
}

function replaceTilde(comp,options){
var r=options.loose?re[TILDELOOSE]:re[TILDE];
return comp.replace(r,function(_,M,m,p,pr){
debug('tilde',comp,_,M,m,p,pr);
var ret;

if(isX(M)){
ret='';
}else if(isX(m)){
ret='>='+M+'.0.0 <'+(+M+1)+'.0.0';
}else if(isX(p)){

ret='>='+M+'.'+m+'.0 <'+M+'.'+(+m+1)+'.0';
}else if(pr){
debug('replaceTilde pr',pr);
ret='>='+M+'.'+m+'.'+p+'-'+pr+
' <'+M+'.'+(+m+1)+'.0';
}else{

ret='>='+M+'.'+m+'.'+p+
' <'+M+'.'+(+m+1)+'.0';
}

debug('tilde return',ret);
return ret;
});
}







function replaceCarets(comp,options){
return comp.trim().split(/\s+/).map(function(comp){
return replaceCaret(comp,options);
}).join(' ');
}

function replaceCaret(comp,options){
debug('caret',comp,options);
var r=options.loose?re[CARETLOOSE]:re[CARET];
return comp.replace(r,function(_,M,m,p,pr){
debug('caret',comp,_,M,m,p,pr);
var ret;

if(isX(M)){
ret='';
}else if(isX(m)){
ret='>='+M+'.0.0 <'+(+M+1)+'.0.0';
}else if(isX(p)){
if(M==='0'){
ret='>='+M+'.'+m+'.0 <'+M+'.'+(+m+1)+'.0';
}else{
ret='>='+M+'.'+m+'.0 <'+(+M+1)+'.0.0';
}
}else if(pr){
debug('replaceCaret pr',pr);
if(M==='0'){
if(m==='0'){
ret='>='+M+'.'+m+'.'+p+'-'+pr+
' <'+M+'.'+m+'.'+(+p+1);
}else{
ret='>='+M+'.'+m+'.'+p+'-'+pr+
' <'+M+'.'+(+m+1)+'.0';
}
}else{
ret='>='+M+'.'+m+'.'+p+'-'+pr+
' <'+(+M+1)+'.0.0';
}
}else{
debug('no pr');
if(M==='0'){
if(m==='0'){
ret='>='+M+'.'+m+'.'+p+
' <'+M+'.'+m+'.'+(+p+1);
}else{
ret='>='+M+'.'+m+'.'+p+
' <'+M+'.'+(+m+1)+'.0';
}
}else{
ret='>='+M+'.'+m+'.'+p+
' <'+(+M+1)+'.0.0';
}
}

debug('caret return',ret);
return ret;
});
}

function replaceXRanges(comp,options){
debug('replaceXRanges',comp,options);
return comp.split(/\s+/).map(function(comp){
return replaceXRange(comp,options);
}).join(' ');
}

function replaceXRange(comp,options){
comp=comp.trim();
var r=options.loose?re[XRANGELOOSE]:re[XRANGE];
return comp.replace(r,function(ret,gtlt,M,m,p,pr){
debug('xRange',comp,ret,gtlt,M,m,p,pr);
var xM=isX(M);
var xm=xM||isX(m);
var xp=xm||isX(p);
var anyX=xp;

if(gtlt==='='&&anyX){
gtlt='';
}

if(xM){
if(gtlt==='>'||gtlt==='<'){

ret='<0.0.0';
}else{

ret='*';
}
}else if(gtlt&&anyX){


if(xm){
m=0;
}
p=0;

if(gtlt==='>'){



gtlt='>=';
if(xm){
M=+M+1;
m=0;
p=0;
}else{
m=+m+1;
p=0;
}
}else if(gtlt==='<='){


gtlt='<';
if(xm){
M=+M+1;
}else{
m=+m+1;
}
}

ret=gtlt+M+'.'+m+'.'+p;
}else if(xm){
ret='>='+M+'.0.0 <'+(+M+1)+'.0.0';
}else if(xp){
ret='>='+M+'.'+m+'.0 <'+M+'.'+(+m+1)+'.0';
}

debug('xRange return',ret);

return ret;
});
}



function replaceStars(comp,options){
debug('replaceStars',comp,options);

return comp.trim().replace(re[STAR],'');
}






function hyphenReplace($0,
from,fM,fm,fp,fpr,fb,
to,tM,tm,tp,tpr,tb){
if(isX(fM)){
from='';
}else if(isX(fm)){
from='>='+fM+'.0.0';
}else if(isX(fp)){
from='>='+fM+'.'+fm+'.0';
}else{
from='>='+from;
}

if(isX(tM)){
to='';
}else if(isX(tm)){
to='<'+(+tM+1)+'.0.0';
}else if(isX(tp)){
to='<'+tM+'.'+(+tm+1)+'.0';
}else if(tpr){
to='<='+tM+'.'+tm+'.'+tp+'-'+tpr;
}else{
to='<='+to;
}

return(from+' '+to).trim();
}


Range.prototype.test=function(version){
if(!version){
return false;
}

if(typeof version==='string'){
version=new SemVer(version,this.options);
}

for(var i=0;i<this.set.length;i++){
if(testSet(this.set[i],version,this.options)){
return true;
}
}
return false;
};

function testSet(set,version,options){
for(var i=0;i<set.length;i++){
if(!set[i].test(version)){
return false;
}
}

if(version.prerelease.length&&!options.includePrerelease){





for(i=0;i<set.length;i++){
debug(set[i].semver);
if(set[i].semver===ANY){
continue;
}

if(set[i].semver.prerelease.length>0){
var allowed=set[i].semver;
if(allowed.major===version.major&&
allowed.minor===version.minor&&
allowed.patch===version.patch){
return true;
}
}
}


return false;
}

return true;
}

exports.satisfies=satisfies;
function satisfies(version,range,options){
try{
range=new Range(range,options);
}catch(er){
return false;
}
return range.test(version);
}

exports.maxSatisfying=maxSatisfying;
function maxSatisfying(versions,range,options){
var max=null;
var maxSV=null;
try{
var rangeObj=new Range(range,options);
}catch(er){
return null;
}
versions.forEach(function(v){
if(rangeObj.test(v)){

if(!max||maxSV.compare(v)===-1){

max=v;
maxSV=new SemVer(max,options);
}
}
});
return max;
}

exports.minSatisfying=minSatisfying;
function minSatisfying(versions,range,options){
var min=null;
var minSV=null;
try{
var rangeObj=new Range(range,options);
}catch(er){
return null;
}
versions.forEach(function(v){
if(rangeObj.test(v)){

if(!min||minSV.compare(v)===1){

min=v;
minSV=new SemVer(min,options);
}
}
});
return min;
}

exports.minVersion=minVersion;
function minVersion(range,loose){
range=new Range(range,loose);

var minver=new SemVer('0.0.0');
if(range.test(minver)){
return minver;
}

minver=new SemVer('0.0.0-0');
if(range.test(minver)){
return minver;
}

minver=null;
for(var i=0;i<range.set.length;++i){
var comparators=range.set[i];

comparators.forEach(function(comparator){

var compver=new SemVer(comparator.semver.version);
switch(comparator.operator){
case'>':
if(compver.prerelease.length===0){
compver.patch++;
}else{
compver.prerelease.push(0);
}
compver.raw=compver.format();

case'':
case'>=':
if(!minver||gt(minver,compver)){
minver=compver;
}
break;
case'<':
case'<=':

break;

default:
throw new Error('Unexpected operation: '+comparator.operator);}

});
}

if(minver&&range.test(minver)){
return minver;
}

return null;
}

exports.validRange=validRange;
function validRange(range,options){
try{


return new Range(range,options).range||'*';
}catch(er){
return null;
}
}


exports.ltr=ltr;
function ltr(version,range,options){
return outside(version,range,'<',options);
}


exports.gtr=gtr;
function gtr(version,range,options){
return outside(version,range,'>',options);
}

exports.outside=outside;
function outside(version,range,hilo,options){
version=new SemVer(version,options);
range=new Range(range,options);

var gtfn,ltefn,ltfn,comp,ecomp;
switch(hilo){
case'>':
gtfn=gt;
ltefn=lte;
ltfn=lt;
comp='>';
ecomp='>=';
break;
case'<':
gtfn=lt;
ltefn=gte;
ltfn=gt;
comp='<';
ecomp='<=';
break;
default:
throw new TypeError('Must provide a hilo val of "<" or ">"');}



if(satisfies(version,range,options)){
return false;
}




for(var i=0;i<range.set.length;++i){
var comparators=range.set[i];

var high=null;
var low=null;

comparators.forEach(function(comparator){
if(comparator.semver===ANY){
comparator=new Comparator('>=0.0.0');
}
high=high||comparator;
low=low||comparator;
if(gtfn(comparator.semver,high.semver,options)){
high=comparator;
}else if(ltfn(comparator.semver,low.semver,options)){
low=comparator;
}
});



if(high.operator===comp||high.operator===ecomp){
return false;
}



if((!low.operator||low.operator===comp)&&
ltefn(version,low.semver)){
return false;
}else if(low.operator===ecomp&&ltfn(version,low.semver)){
return false;
}
}
return true;
}

exports.prerelease=prerelease;
function prerelease(version,options){
var parsed=parse(version,options);
return parsed&&parsed.prerelease.length?parsed.prerelease:null;
}

exports.intersects=intersects;
function intersects(r1,r2,options){
r1=new Range(r1,options);
r2=new Range(r2,options);
return r1.intersects(r2);
}

exports.coerce=coerce;
function coerce(version){
if(version instanceof SemVer){
return version;
}

if(typeof version!=='string'){
return null;
}

var match=version.match(re[COERCE]);

if(match==null){
return null;
}

return parse(match[1]+
'.'+(match[2]||'0')+
'.'+(match[3]||'0'));
}

}).call(this,require('_process'));
},{"_process":170}],192:[function(require,module,exports){
(function(Buffer){
'use strict';

const fs=require('fs');
const jpeg=require('jpeg-js');
















function getPixel(x,y,channel,width,buff){
return buff[(x+y*width)*4+channel];
}






function isWhitePixel(i,j,img){
return getPixel(i,j,0,img.width,img.data)>=249&&
getPixel(i,j,1,img.width,img.data)>=249&&
getPixel(i,j,2,img.width,img.data)>=249;
}


function convertPixelsToHistogram(img){
const createHistogramArray=function(){
const ret=[];
for(let i=0;i<256;i++){
ret[i]=0;
}
return ret;
};

const width=img.width;
const height=img.height;

const histograms=[
createHistogramArray(),
createHistogramArray(),
createHistogramArray()];


for(let j=0;j<height;j++){
for(let i=0;i<width;i++){

if(isWhitePixel(i,j,img)){
continue;
}

for(let channel=0;channel<histograms.length;channel++){
const pixelValue=getPixel(i,j,channel,width,img.data);
histograms[channel][pixelValue]++;
}
}
}

return histograms;
}


function synthesizeWhiteFrame(frames){
const firstImageData=jpeg.decode(frames[0].getImage());
const width=firstImageData.width;
const height=firstImageData.height;

const frameData=Buffer.alloc(width*height*4);
let i=0;
while(i<frameData.length){
frameData[i++]=0xFF;
frameData[i++]=0xFF;
frameData[i++]=0xFF;
frameData[i++]=0xFF;
}

var jpegImageData=jpeg.encode({
data:frameData,
width:width,
height:height});

return jpegImageData.data;
}

const screenshotTraceCategory='disabled-by-default-devtools.screenshot';





function extractFramesFromTimeline(timeline,opts){
opts=opts||{};

let trace;
timeline=typeof timeline==='string'?fs.readFileSync(timeline,'utf-8'):timeline;
try{
trace=typeof timeline==='string'?JSON.parse(timeline):timeline;
}catch(e){
throw new Error('Speedline: Invalid JSON'+e.message);
}

let events=trace.traceEvents||trace;

let startTs=Number.MAX_VALUE;
let endTs=-Number.MAX_VALUE;
events.forEach(e=>{
if(e.ts===0){
return;
}

startTs=Math.min(startTs,e.ts);
endTs=Math.max(endTs,e.ts);
});

startTs=(opts.timeOrigin||startTs)/1000;
endTs/=1000;


let lastFrame=null;
const rawScreenshots=events.filter(e=>e.cat.includes(screenshotTraceCategory)&&e.ts>=startTs*1000);
rawScreenshots.sort((a,b)=>a.ts-b.ts);


const uniqueFrames=rawScreenshots.map(function(evt){
const base64img=evt.args&&evt.args.snapshot;
const timestamp=evt.ts/1000;

if(base64img===lastFrame){
return null;
}

lastFrame=base64img;
const imgBuff=Buffer.from(base64img,'base64');
return frame(imgBuff,timestamp);
}).filter(Boolean);

if(uniqueFrames.length===0){
return Promise.reject(new Error('No screenshots found in trace'));
}

const fakeWhiteFrame=frame(synthesizeWhiteFrame(uniqueFrames),startTs);
uniqueFrames.unshift(fakeWhiteFrame);

const data={
startTs,
endTs,
frames:uniqueFrames};

return Promise.resolve(data);
}






function frame(imgBuff,ts){

let _histogram=null;

let _progress=null;

let _isProgressInterpolated=null;

let _perceptualProgress=null;

let _isPerceptualProgressInterpolated=null;

let _parsedImage=null;

return{
getHistogram:function(){
if(_histogram){
return _histogram;
}

const pixels=this.getParsedImage();
_histogram=convertPixelsToHistogram(pixels);
return _histogram;
},

getTimeStamp:function(){
return ts;
},

setProgress:function(progress,isInterpolated){
_progress=progress;
_isProgressInterpolated=Boolean(isInterpolated);
},

setPerceptualProgress:function(progress,isInterpolated){
_perceptualProgress=progress;
_isPerceptualProgressInterpolated=Boolean(isInterpolated);
},

getImage:function(){
return imgBuff;
},

getParsedImage:function(){
if(!_parsedImage){
_parsedImage=jpeg.decode(imgBuff);
}
return _parsedImage;
},

getProgress:function(){
return _progress;
},

isProgressInterpolated:function(){
return _isProgressInterpolated;
},

getPerceptualProgress:function(){
return _perceptualProgress;
},

isPerceptualProgressInterpolated:function(){
return _isPerceptualProgressInterpolated;
}};

}

module.exports={
extractFramesFromTimeline,
create:frame};


}).call(this,require("buffer").Buffer);
},{"buffer":114,"fs":113,"jpeg-js":132}],193:[function(require,module,exports){
'use strict';

const frame=require('./frame');
const speedIndex=require('./speed-index');











function calculateValues(frames,data){
const indexes=speedIndex.calculateSpeedIndexes(frames,data);
const duration=Math.floor(data.endTs-data.startTs);
const first=Math.floor(indexes.firstPaintTs-data.startTs);
const complete=Math.floor(indexes.visuallyCompleteTs-data.startTs);

return{
beginning:data.startTs,
end:data.endTs,
frames,
first,
complete,
duration,
speedIndex:indexes.speedIndex,
perceptualSpeedIndex:indexes.perceptualSpeedIndex};

}


const Include={
All:'all',
pSI:'perceptualSpeedIndex',
SI:'speedIndex'};









module.exports=function(timeline,opts){
const include=opts&&opts.include||Include.All;

if(!Object.keys(Include).some(key=>Include[key]===include)){
throw new Error(`Unrecognized include option: ${include}`);
}

return frame.extractFramesFromTimeline(timeline,opts).then(function(data){
const frames=data.frames;

if(include===Include.All||include===Include.SI){
speedIndex.calculateVisualProgress(frames,opts);
}

if(include===Include.All||include===Include.pSI){
speedIndex.calculatePerceptualProgress(frames,opts);
}

return calculateValues(frames,data);
});
};

},{"./frame":192,"./speed-index":194}],194:[function(require,module,exports){
'use strict';

const imageSSIM=require('image-ssim');


const fastModeAllowableChangeMax=5;
const fastModeAllowableChangeMedian=3;
const fastModeAllowableChangeMin=-1;

const fastModeConstant=fastModeAllowableChangeMin;
const fastModeMultiplier=fastModeAllowableChangeMax-fastModeConstant;
const fastModeExponentiationCoefficient=Math.log((fastModeAllowableChangeMedian-fastModeConstant)/fastModeMultiplier);














function calculateFastModeAllowableChange(elapsedTime){
const elapsedTimeInSeconds=elapsedTime/1000;
const allowableChange=fastModeMultiplier*Math.exp(fastModeExponentiationCoefficient*elapsedTimeInSeconds)+fastModeConstant;
return allowableChange;
}






function calculateFrameProgress(current,initial,target){
let total=0;
let match=0;

const currentHist=current.getHistogram();
const initialHist=initial.getHistogram();
const targetHist=target.getHistogram();

for(let channel=0;channel<3;channel++){
for(let pixelVal=0;pixelVal<256;pixelVal++){
const currentCount=currentHist[channel][pixelVal];
const initialCount=initialHist[channel][pixelVal];
const targetCount=targetHist[channel][pixelVal];

const currentDiff=Math.abs(currentCount-initialCount);
const targetDiff=Math.abs(targetCount-initialCount);

match+=Math.min(currentDiff,targetDiff);
total+=targetDiff;
}
}

let progress;
if(match===0&&total===0){
progress=100;
}else{
progress=Math.floor(match/total*100);
}
return progress;
}









function calculateProgressBetweenFrames(frames,lowerBound,upperBound,isFastMode,getProgress,setProgress){
if(!isFastMode){
frames.forEach(frame=>setProgress(frame,getProgress(frame),false));
return;
}

const lowerFrame=frames[lowerBound];
const upperFrame=frames[upperBound];
const elapsedTime=upperFrame.getTimeStamp()-lowerFrame.getTimeStamp();

const lowerProgress=getProgress(lowerFrame);
const upperProgress=getProgress(upperFrame);

setProgress(lowerFrame,lowerProgress,false);
setProgress(upperFrame,upperProgress,false);

if(Math.abs(lowerProgress-upperProgress)<calculateFastModeAllowableChange(elapsedTime)){
for(let i=lowerBound+1;i<upperBound;i++){
setProgress(frames[i],lowerProgress,true);
}
}else if(upperBound-lowerBound>1){
const midpoint=Math.floor((lowerBound+upperBound)/2);
calculateProgressBetweenFrames(frames,lowerBound,midpoint,isFastMode,getProgress,setProgress);
calculateProgressBetweenFrames(frames,midpoint,upperBound,isFastMode,getProgress,setProgress);
}
}





function calculateVisualProgress(frames,opts){
const initial=frames[0];
const target=frames[frames.length-1];


function getProgress(frame){
if(typeof frame.getProgress()==='number'){
return frame.getProgress();
}

return calculateFrameProgress(frame,initial,target);
}






function setProgress(frame,progress,isInterpolated){
return frame.setProgress(progress,isInterpolated);
}

calculateProgressBetweenFrames(
frames,
0,
frames.length-1,
opts&&opts.fastMode,
getProgress,
setProgress);


return frames;
}






function calculateFrameSimilarity(frame,target){
const defaultImageConfig={


channels:4};


const frameData=Object.assign(frame.getParsedImage(),defaultImageConfig);
const targetData=Object.assign(target.getParsedImage(),defaultImageConfig);

const diff=imageSSIM.compare(frameData,targetData);
return diff.ssim;
}





function calculatePerceptualProgress(frames,opts){
const initial=frames[0];
const target=frames[frames.length-1];
const initialSimilarity=calculateFrameSimilarity(initial,target);


function getProgress(frame){
if(typeof frame.getPerceptualProgress()==='number'){
return frame.getPerceptualProgress();
}

const ssim=calculateFrameSimilarity(frame,target);
return Math.max(100*(ssim-initialSimilarity)/(1-initialSimilarity),0);
}






function setProgress(frame,progress,isInterpolated){
return frame.setPerceptualProgress(progress,isInterpolated);
}

calculateProgressBetweenFrames(
frames,
0,
frames.length-1,
opts&&opts.fastMode,
getProgress,
setProgress);


return frames;
}






function calculateSpeedIndexes(frames,data){
const hasVisualProgress=typeof frames[0].getProgress()==='number';
const hasPerceptualProgress=typeof frames[0].getPerceptualProgress()==='number';
const progressToUse=hasVisualProgress?'getProgress':'getPerceptualProgress';
const startTs=data.startTs;
let visuallyCompleteTs;

let firstPaintTs;


for(let i=0;i<frames.length&&!firstPaintTs;i++){
if(frames[i][progressToUse]()>0){
firstPaintTs=frames[i].getTimeStamp();
}
}


for(let i=0;i<frames.length&&!visuallyCompleteTs;i++){
if(frames[i][progressToUse]()>=100){
visuallyCompleteTs=frames[i].getTimeStamp();
}
}

let prevFrameTs=frames[0].getTimeStamp();
let prevProgress=frames[0].getProgress();
let prevPerceptualProgress=frames[0].getPerceptualProgress();




let speedIndex=firstPaintTs-startTs;

let perceptualSpeedIndex=firstPaintTs-startTs;

frames.forEach(function(frame){

if(frame.getTimeStamp()>firstPaintTs){
const elapsed=frame.getTimeStamp()-prevFrameTs;
speedIndex+=elapsed*(1-prevProgress);
perceptualSpeedIndex+=elapsed*(1-prevPerceptualProgress);
}

prevFrameTs=frame.getTimeStamp();
prevProgress=frame.getProgress()/100;
prevPerceptualProgress=frame.getPerceptualProgress()/100;
});

speedIndex=hasVisualProgress?speedIndex:undefined;
perceptualSpeedIndex=hasPerceptualProgress?perceptualSpeedIndex:undefined;

return{
firstPaintTs,
visuallyCompleteTs,
speedIndex,
perceptualSpeedIndex};

}

module.exports={
calculateFastModeAllowableChange,
calculateFrameSimilarity,
calculateVisualProgress,
calculatePerceptualProgress,
calculateSpeedIndexes};


},{"image-ssim":122}],195:[function(require,module,exports){





















module.exports=Stream;

var EE=require('events').EventEmitter;
var inherits=require('inherits');

inherits(Stream,EE);
Stream.Readable=require('readable-stream/readable.js');
Stream.Writable=require('readable-stream/writable.js');
Stream.Duplex=require('readable-stream/duplex.js');
Stream.Transform=require('readable-stream/transform.js');
Stream.PassThrough=require('readable-stream/passthrough.js');


Stream.Stream=Stream;






function Stream(){
EE.call(this);
}

Stream.prototype.pipe=function(dest,options){
var source=this;

function ondata(chunk){
if(dest.writable){
if(false===dest.write(chunk)&&source.pause){
source.pause();
}
}
}

source.on('data',ondata);

function ondrain(){
if(source.readable&&source.resume){
source.resume();
}
}

dest.on('drain',ondrain);



if(!dest._isStdio&&(!options||options.end!==false)){
source.on('end',onend);
source.on('close',onclose);
}

var didOnEnd=false;
function onend(){
if(didOnEnd)return;
didOnEnd=true;

dest.end();
}


function onclose(){
if(didOnEnd)return;
didOnEnd=true;

if(typeof dest.destroy==='function')dest.destroy();
}


function onerror(er){
cleanup();
if(EE.listenerCount(this,'error')===0){
throw er;
}
}

source.on('error',onerror);
dest.on('error',onerror);


function cleanup(){
source.removeListener('data',ondata);
dest.removeListener('drain',ondrain);

source.removeListener('end',onend);
source.removeListener('close',onclose);

source.removeListener('error',onerror);
dest.removeListener('error',onerror);

source.removeListener('end',cleanup);
source.removeListener('close',cleanup);

dest.removeListener('close',cleanup);
}

source.on('end',cleanup);
source.on('close',cleanup);

dest.on('close',cleanup);

dest.emit('pipe',source);


return dest;
};

},{"events":118,"inherits":123,"readable-stream/duplex.js":174,"readable-stream/passthrough.js":184,"readable-stream/readable.js":185,"readable-stream/transform.js":186,"readable-stream/writable.js":187}],196:[function(require,module,exports){





















'use strict';



var Buffer=require('safe-buffer').Buffer;


var isEncoding=Buffer.isEncoding||function(encoding){
encoding=''+encoding;
switch(encoding&&encoding.toLowerCase()){
case'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':
return true;
default:
return false;}

};

function _normalizeEncoding(enc){
if(!enc)return'utf8';
var retried;
while(true){
switch(enc){
case'utf8':
case'utf-8':
return'utf8';
case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return'utf16le';
case'latin1':
case'binary':
return'latin1';
case'base64':
case'ascii':
case'hex':
return enc;
default:
if(retried)return;
enc=(''+enc).toLowerCase();
retried=true;}

}
};



function normalizeEncoding(enc){
var nenc=_normalizeEncoding(enc);
if(typeof nenc!=='string'&&(Buffer.isEncoding===isEncoding||!isEncoding(enc)))throw new Error('Unknown encoding: '+enc);
return nenc||enc;
}




exports.StringDecoder=StringDecoder;
function StringDecoder(encoding){
this.encoding=normalizeEncoding(encoding);
var nb;
switch(this.encoding){
case'utf16le':
this.text=utf16Text;
this.end=utf16End;
nb=4;
break;
case'utf8':
this.fillLast=utf8FillLast;
nb=4;
break;
case'base64':
this.text=base64Text;
this.end=base64End;
nb=3;
break;
default:
this.write=simpleWrite;
this.end=simpleEnd;
return;}

this.lastNeed=0;
this.lastTotal=0;
this.lastChar=Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write=function(buf){
if(buf.length===0)return'';
var r;
var i;
if(this.lastNeed){
r=this.fillLast(buf);
if(r===undefined)return'';
i=this.lastNeed;
this.lastNeed=0;
}else{
i=0;
}
if(i<buf.length)return r?r+this.text(buf,i):this.text(buf,i);
return r||'';
};

StringDecoder.prototype.end=utf8End;


StringDecoder.prototype.text=utf8Text;


StringDecoder.prototype.fillLast=function(buf){
if(this.lastNeed<=buf.length){
buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);
return this.lastChar.toString(this.encoding,0,this.lastTotal);
}
buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);
this.lastNeed-=buf.length;
};



function utf8CheckByte(byte){
if(byte<=0x7F)return 0;else if(byte>>5===0x06)return 2;else if(byte>>4===0x0E)return 3;else if(byte>>3===0x1E)return 4;
return byte>>6===0x02?-1:-2;
}




function utf8CheckIncomplete(self,buf,i){
var j=buf.length-1;
if(j<i)return 0;
var nb=utf8CheckByte(buf[j]);
if(nb>=0){
if(nb>0)self.lastNeed=nb-1;
return nb;
}
if(--j<i||nb===-2)return 0;
nb=utf8CheckByte(buf[j]);
if(nb>=0){
if(nb>0)self.lastNeed=nb-2;
return nb;
}
if(--j<i||nb===-2)return 0;
nb=utf8CheckByte(buf[j]);
if(nb>=0){
if(nb>0){
if(nb===2)nb=0;else self.lastNeed=nb-3;
}
return nb;
}
return 0;
}









function utf8CheckExtraBytes(self,buf,p){
if((buf[0]&0xC0)!==0x80){
self.lastNeed=0;
return'\ufffd';
}
if(self.lastNeed>1&&buf.length>1){
if((buf[1]&0xC0)!==0x80){
self.lastNeed=1;
return'\ufffd';
}
if(self.lastNeed>2&&buf.length>2){
if((buf[2]&0xC0)!==0x80){
self.lastNeed=2;
return'\ufffd';
}
}
}
}


function utf8FillLast(buf){
var p=this.lastTotal-this.lastNeed;
var r=utf8CheckExtraBytes(this,buf,p);
if(r!==undefined)return r;
if(this.lastNeed<=buf.length){
buf.copy(this.lastChar,p,0,this.lastNeed);
return this.lastChar.toString(this.encoding,0,this.lastTotal);
}
buf.copy(this.lastChar,p,0,buf.length);
this.lastNeed-=buf.length;
}




function utf8Text(buf,i){
var total=utf8CheckIncomplete(this,buf,i);
if(!this.lastNeed)return buf.toString('utf8',i);
this.lastTotal=total;
var end=buf.length-(total-this.lastNeed);
buf.copy(this.lastChar,0,end);
return buf.toString('utf8',i,end);
}



function utf8End(buf){
var r=buf&&buf.length?this.write(buf):'';
if(this.lastNeed)return r+'\ufffd';
return r;
}





function utf16Text(buf,i){
if((buf.length-i)%2===0){
var r=buf.toString('utf16le',i);
if(r){
var c=r.charCodeAt(r.length-1);
if(c>=0xD800&&c<=0xDBFF){
this.lastNeed=2;
this.lastTotal=4;
this.lastChar[0]=buf[buf.length-2];
this.lastChar[1]=buf[buf.length-1];
return r.slice(0,-1);
}
}
return r;
}
this.lastNeed=1;
this.lastTotal=2;
this.lastChar[0]=buf[buf.length-1];
return buf.toString('utf16le',i,buf.length-1);
}



function utf16End(buf){
var r=buf&&buf.length?this.write(buf):'';
if(this.lastNeed){
var end=this.lastTotal-this.lastNeed;
return r+this.lastChar.toString('utf16le',0,end);
}
return r;
}

function base64Text(buf,i){
var n=(buf.length-i)%3;
if(n===0)return buf.toString('base64',i);
this.lastNeed=3-n;
this.lastTotal=3;
if(n===1){
this.lastChar[0]=buf[buf.length-1];
}else{
this.lastChar[0]=buf[buf.length-2];
this.lastChar[1]=buf[buf.length-1];
}
return buf.toString('base64',i,buf.length-n);
}

function base64End(buf){
var r=buf&&buf.length?this.write(buf):'';
if(this.lastNeed)return r+this.lastChar.toString('base64',0,3-this.lastNeed);
return r;
}


function simpleWrite(buf){
return buf.toString(this.encoding);
}

function simpleEnd(buf){
return buf&&buf.length?this.write(buf):'';
}
},{"safe-buffer":190}],197:[function(require,module,exports){
module.exports=[{"name":"Facebook","homepage":"https://www.facebook.com","categories":["social"],"domains":["*.atlassbx.com","*.facebook.com","*.fbsbx.com","fbcdn-photos-e-a.akamaihd.net","*.facebook.net","*.fbcdn.net"],"examples":["www.facebook.com","connect.facebook.net","staticxx.facebook.com","static.xx.fbcdn.net","m.facebook.com","an.facebook.com","platform-lookaside.fbsbx.com"]},{"name":"Google Analytics","company":"Google","homepage":"https://www.google.com/analytics/analytics/","categories":["analytics"],"domains":["*.google-analytics.com","*.urchin.com"],"examples":["www.google-analytics.com","ssl.google-analytics.com"]},{"name":"Google CDN","company":"Google","homepage":"https://developers.google.com/speed/libraries/","categories":["cdn"],"domains":["ajax.googleapis.com","commondatastorage.googleapis.com","www.gstatic.com"]},{"name":"Google/Doubleclick Ads","company":"Google","homepage":"https://www.doubleclickbygoogle.com/","categories":["ad"],"domains":["adservice.google.com","adservice.google.com.au","adservice.google.com.sg","adservice.google.com.br","adservice.google.com.ua","adservice.google.co.uk","adservice.google.co.jp","adservice.google.co.in","adservice.google.co.kr","adservice.google.co.id","adservice.google.co.nz","adservice.google.ie","adservice.google.se","adservice.google.de","adservice.google.ca","adservice.google.be","adservice.google.es","adservice.google.ch","adservice.google.fr","adservice.google.nl","*.googleadservices.com","*.googlesyndication.com","*.googletagservices.com","*.2mdn.net","*.doubleclick.net"],"examples":["pagead2.googlesyndication.com","tpc.googlesyndication.com","ade.googlesyndication.com","googleads.g.doubleclick.net","googleads4.g.doubleclick.net","securepubads.g.doubleclick.net","pubads.g.doubleclick.net","static.doubleclick.net","cm.g.doubleclick.net","bid.g.doubleclick.net","s0.2mdn.net","stats.g.doubleclick.net","survey.g.doubleclick.net","fls.doubleclick.net","ad.doubleclick.net","www.googleadservices.com","https://www.googletagservices.com/tag/js/gpt.js"]},{"name":"Google Tag Manager","company":"Google","homepage":"https://marketingplatform.google.com/about/tag-manager/","categories":["tag-manager"],"domains":["*.googletagmanager.com"],"examples":["www.googletagmanager.com"]},{"name":"Other Google APIs/SDKs","company":"Google","homepage":"https://developers.google.com/apis-explorer/#p/","categories":["utility"],"domains":["accounts.google.com","apis.google.com","calendar.google.com","clients2.google.com","cse.google.com","news.google.com","pay.google.com","payments.google.com","play.google.com","smartlock.google.com","www.google.com","www.google.de","www.google.co.jp","www.google.com.au","www.google.co.uk","www.google.ie","www.google.com.sg","www.google.co.in","www.google.com.br","www.google.ca","www.google.co.kr","www.google.co.nz","www.google.co.id","www.google.fr","www.google.be","www.google.com.ua","www.google.nl","www.google.ru","www.google.se","imasdk.googleapis.com","storage.googleapis.com","translate.googleapis.com","lh3.googleusercontent.com","csi.gstatic.com"]},{"name":"YouTube","homepage":"https://youtube.com","categories":["video"],"domains":["*.ggpht.com","*.youtube-nocookie.com","*.youtube.com","*.ytimg.com"],"examples":["www.youtube.com","s.ytimg.com","yt3.ggpht.com","img.youtube.com","fcmatch.youtube.com"]},{"name":"Yandex Metrica","company":"Yandex","homepage":"https://metrica.yandex.com/about?","categories":["analytics"],"domains":["d31j93rd8oukbv.cloudfront.net","mc.yandex.ru"]},{"name":"Google Maps","company":"Google","homepage":"https://www.google.com/maps","categories":["utility"],"domains":["maps.google.com","maps-api-ssl.google.com","maps.googleapis.com","mts.googleapis.com","maps.gstatic.com"]},{"name":"Twitter","homepage":"https://twitter.com","categories":["social"],"domains":["*.vine.co","*.twimg.com","*.twitpic.com","platform.twitter.com","syndication.twitter.com"],"examples":["cdn.syndication.twimg.com","abs.twimg.com","pbs.twimg.com"]},{"name":"jQuery CDN","homepage":"https://code.jquery.com/","categories":["cdn"],"domains":["*.jquery.com"],"examples":["code.jquery.com"]},{"name":"Hotjar","homepage":"https://www.hotjar.com/","categories":["analytics"],"domains":["*.hotjar.com","*.hotjar.io"],"examples":["script.hotjar.com","static.hotjar.com","in.hotjar.com","vc.hotjar.io","vars.hotjar.com"]},{"name":"WordPress","company":"Automattic","homepage":"https://wp.com/","categories":["hosting"],"domains":["*.wordpress.com","s0.wp.com","s2.wp.com","*.w.org","c0.wp.com","s1.wp.com","widgets.wp.com"],"examples":["s.w.org"]},{"name":"AddThis","homepage":"http://www.addthis.com/","categories":["social"],"domains":["*.addthis.com","*.addthiscdn.com","*.addthisedge.com"],"examples":["s7.addthis.com","r.dlx.addthis.com","su.addthis.com","x.dlx.addthis.com"]},{"name":"Cloudflare CDN","homepage":"https://cdnjs.com/","categories":["cdn"],"domains":["amp.cloudflare.com","cdnjs.cloudflare.com"]},{"name":"Shopify","homepage":"https://www.shopify.com/","categories":["hosting"],"domains":["*.shopify.com","*.shopifyapps.com","*.shopifycdn.com"],"examples":["cdn.shopify.com","productreviews.shopifycdn.com"]},{"name":"Criteo","homepage":"https://www.criteo.com/","categories":["ad"],"domains":["*.criteo.com","*.emailretargeting.com","*.criteo.net"],"examples":["static.criteo.net","bidder.criteo.com","dis.criteo.com","gum.criteo.com","sslwidget.criteo.com","dis.us.criteo.com"]},{"name":"ZenDesk","homepage":"https://zendesk.com/","categories":["customer-success"],"domains":["*.zdassets.com","*.zendesk.com","*.zopim.com"],"examples":["assets.zendesk.com","static.zdassets.com","v2.zopim.com"]},{"name":"Pubmatic","homepage":"https://pubmatic.com/","categories":["ad"],"domains":["*.pubmatic.com"],"examples":["image6.pubmatic.com","ads.pubmatic.com","image2.pubmatic.com","simage2.pubmatic.com","image4.pubmatic.com","simage4.pubmatic.com","image5.pubmatic.com","hbopenbid.pubmatic.com"]},{"name":"AMP","homepage":"https://amp.dev/","categories":["content"],"domains":["*.ampproject.org"],"examples":["cdn.ampproject.org"]},{"name":"Tawk.to","homepage":"https://www.tawk.to/","categories":["customer-success"],"domains":["*.tawk.to"],"examples":["embed.tawk.to"]},{"name":"Wix","homepage":"https://www.wix.com/","categories":["hosting"],"domains":["*.parastorage.com","*.wix.com","*.wixstatic.com","*.wixapps.net"],"examples":["static.parastorage.com","static.wixstatic.com","www.wix.com","instagram.codev.wixapps.net"]},{"name":"Amazon Web Services","homepage":"https://aws.amazon.com/s3/","categories":["other"],"domains":["*.amazon.com","*.amazonaws.com","*.amazonwebapps.com","*.amazonwebservices.com","*.elasticbeanstalk.com","*.images-amazon.com","*.amazon.co.uk"],"examples":["s3.amazonaws.com","us-east-1.amazonaws.com","api-cdn.amazon.com","ecx.images-amazon.com","ws.amazon.co.uk"]},{"name":"Jivochat","homepage":"https://www.jivochat.com/","categories":["customer-success"],"domains":["*.jivosite.com"],"examples":["cdn-ca.jivosite.com","code.jivosite.com"]},{"name":"Squarespace","homepage":"https://www.squarespace.com/","categories":["hosting"],"domains":["*.squarespace.com"],"examples":["static.squarespace.com","static1.squarespace.com"]},{"name":"FontAwesome CDN","homepage":"https://fontawesome.com/","categories":["cdn"],"domains":["*.fontawesome.com"],"examples":["use.fontawesome.com"]},{"name":"JSDelivr CDN","homepage":"https://www.jsdelivr.com/","categories":["cdn"],"domains":["*.jsdelivr.net"],"examples":["cdn.jsdelivr.net"]},{"name":"ShareThis","homepage":"https://www.sharethis.com/","categories":["social"],"domains":["*.sharethis.com"],"examples":["w.sharethis.com","ws.sharethis.com","t.sharethis.com"]},{"name":"Cloudflare","homepage":"https://www.cloudflare.com/website-optimization/","categories":["utility"],"domains":["ajax.cloudflare.com"]},{"name":"Rubicon Project","homepage":"https://rubiconproject.com/","categories":["ad"],"domains":["*.chango.com","*.fimserve.com","*.rubiconproject.com"],"examples":["pixel.rubiconproject.com","fastlane.rubiconproject.com","secure-assets.rubiconproject.com","eus.rubiconproject.com","pixel-us-east.rubiconproject.com","token.rubiconproject.com","ads.rubiconproject.com"]},{"name":"Adobe Tag Manager","company":"Adobe","homepage":"https://www.adobe.com/experience-platform/","categories":["tag-manager"],"domains":["*.adobedtm.com","*.demdex.net","*.everesttech.net"],"examples":["assets.adobedtm.com","sync-tm.everesttech.net","cm.everesttech.net"]},{"name":"Yandex Share","company":"Yandex","homepage":"https://yastatic.net/share2/share.js","categories":["social"],"domains":["*.yastatic.net"]},{"name":"Scorecard Research","homepage":"https://www.scorecardresearch.com/","categories":["ad"],"domains":["*.scorecardresearch.com"],"examples":["sb.scorecardresearch.com","sa.scorecardresearch.com","b.scorecardresearch.com"]},{"name":"Hubspot","homepage":"https://hubspot.com/","categories":["marketing"],"domains":["*.hs-scripts.com","*.hubspot.com","*.leadin.com","*.hs-analytics.net","*.hscollectedforms.net","*.hscta.net","*.hsforms.net","*.hsleadflows.net","*.hsstatic.net","*.hubspot.net"],"examples":["forms.hubspot.com","js.hsforms.net","js.hs-analytics.net","js.leadin.com"]},{"name":"Integral Ad Science","homepage":"https://integralads.com/uk/","categories":["ad"],"domains":["*.adsafeprotected.com","*.iasds01.com"],"examples":["pixel.adsafeprotected.com","static.adsafeprotected.com","fw.adsafeprotected.com","cdn.adsafeprotected.com","dt.adsafeprotected.com"]},{"name":"Media.net","homepage":"https://www.media.net/","categories":["ad"],"domains":["*.media.net","*.mnet-ad.net"],"examples":["contextual.media.net","cdnwest-xch.media.net","hbx.media.net","cs.media.net","hblg.media.net"]},{"name":"Yandex Ads","company":"Yandex","homepage":"https://yandex.com/adv/","categories":["ad"],"domains":["an.yandex.ru"]},{"name":"AddToAny","homepage":"https://www.addtoany.com/","categories":["social"],"domains":["*.addtoany.com"],"examples":["static.addtoany.com"]},{"name":"Tynt","company":"33 Across","categories":["ad"],"domains":["*.tynt.com"]},{"name":"PIXNET","homepage":"https://www.pixnet.net/","categories":["social"],"domains":["*.pixfs.net","*.pixnet.net"],"examples":["front.pixfs.net","falcon-asset.pixfs.net","pixgame-asset.pixfs.net"]},{"name":"Taboola","homepage":"https://www.taboola.com/","categories":["ad"],"domains":["*.taboola.com","*.taboolasyndication.com"],"examples":["cdn.taboola.com","trc.taboola.com","vidstat.taboola.com","images.taboola.com"]},{"name":"Yandex APIs","company":"Yandex","homepage":"https://yandex.ru/","categories":["utility"],"domains":["api-maps.yandex.ru","money.yandex.ru"]},{"name":"Blogger","homepage":"http://www.blogger.com/","categories":["hosting"],"domains":["*.blogblog.com","*.blogger.com","*.blogspot.com","images-blogger-opensocial.googleusercontent.com"],"examples":["1.bp.blogspot.com","www.blogger.com"]},{"name":"Bridgewell DSP","homepage":"https://www.bridgewell.com/","categories":["ad"],"domains":["*.scupio.com"],"examples":["img.scupio.com"]},{"name":"WordAds","company":"Automattic","homepage":"https://wordads.co/","categories":["ad"],"domains":["*.pubmine.com"],"examples":["s.pubmine.com"]},{"name":"Mailchimp","homepage":"https://mailchimp.com/","categories":["marketing"],"domains":["*.chimpstatic.com","*.list-manage.com","*.mailchimp.com"],"examples":["downloads.mailchimp.com"]},{"name":"Amazon Ads","homepage":"https://ad.amazon.com/","categories":["ad"],"domains":["*.amazon-adsystem.com"],"examples":["s.amazon-adsystem.com","c.amazon-adsystem.com","aax.amazon-adsystem.com","z-na.amazon-adsystem.com","fls-na.amazon-adsystem.com","aax-us-east.amazon-adsystem.com","ir-na.amazon-adsystem.com"]},{"name":"Skimbit","categories":["ad"],"domains":["*.redirectingat.com","*.skimresources.com","*.skimresources.net"]},{"name":"Moat","homepage":"https://moat.com/","categories":["ad"],"domains":["*.moatads.com","*.moatpixel.com"],"examples":["z.moatads.com","px.moatads.com","geo.moatads.com","sejs.moatads.com","mb.moatads.com","v4.moatads.com"]},{"name":"Sumo","homepage":"https://sumo.com/","categories":["marketing"],"domains":["*.sumo.com","*.sumome.com","sumo.b-cdn.net"],"examples":["sumo.b-cdn.net","load.sumo.com","load.sumome.com"]},{"name":"Salesforce","homepage":"https://www.salesforce.com/products/marketing-cloud/","categories":["analytics"],"domains":["*.krxd.net"],"examples":["cdn.krxd.net","beacon.krxd.net","consumer.krxd.net","usermatch.krxd.net"]},{"name":"Crazy Egg","homepage":"https://www.crazyegg.com/","categories":["analytics"],"domains":["*.cetrk.com","*.crazyegg.com","*.hellobar.com","dnn506yrbagrg.cloudfront.net"]},{"name":"Stripe","homepage":"https://stripe.com","categories":["utility"],"domains":["*.stripe.com","*.stripecdn.com","*.stripe.network"],"examples":["m.stripe.network","js.stripe.com"]},{"name":"LiveChat","homepage":"https://www.livechatinc.com/","categories":["customer-success"],"domains":["*.livechatinc.com"],"examples":["cdn.livechatinc.com","secure.livechatinc.com"]},{"name":"Hatena Blog","homepage":"https://hatenablog.com/","categories":["hosting"],"domains":["*.st-hatena.com","*.hatena.ne.jp"],"examples":["cdn.blog.st-hatena.com","cdn.pool.st-hatena.com","cdn7.www.st-hatena.com","s.hatena.ne.jp","b.st-hatena.com"]},{"name":"Pinterest","homepage":"https://pinterest.com/","categories":["social"],"domains":["*.pinimg.com","*.pinterest.com"],"examples":["assets.pinterest.com","ct.pinterest.com","log.pinterest.com"]},{"name":"Bing Ads","homepage":"https://bingads.microsoft.com","categories":["ad"],"domains":["*.bing.com","*.microsoft.com","*.msn.com","*.s-msft.com","*.s-msn.com","*.msads.net","*.msecnd.net","*.windows.net"],"examples":["bat.bing.com","c.bing.com","bat.r.msn.com","ajax.microsoft.com"]},{"name":"LinkedIn","homepage":"https://www.linkedin.com/","categories":["social"],"domains":["*.bizographics.com","platform.linkedin.com","*.slideshare.com","*.slidesharecdn.com"]},{"name":"VK","homepage":"https://vk.com/","categories":["social"],"domains":["*.vk.com"]},{"name":"Weebly","homepage":"https://www.weebly.com/","categories":["hosting"],"domains":["*.editmysite.com"]},{"name":"POWr","homepage":"https://www.powr.io","categories":["utility"],"domains":["*.powr.io"],"examples":["www.powr.io"]},{"name":"Intercom","homepage":"https://www.intercom.com","categories":["customer-success"],"domains":["*.intercomcdn.com","*.intercom.io"],"examples":["js.intercomcdn.com","api-iam.intercom.io","widget.intercom.io","nexus-websocket-a.intercom.io"]},{"name":"Vimeo","homepage":"http://vimeo.com/","categories":["video"],"domains":["*.vimeo.com","*.vimeocdn.com"],"examples":["f.vimeocdn.com","player.vimeo.com","i.vimeocdn.com"]},{"name":"Smartsupp","company":"Smartsupp.com","homepage":"https://www.smartsupp.com","categories":["customer-success"],"domains":["*.smartsuppchat.com","*.smartsupp.com","smartsupp-widget-161959.c.cdn77.org"]},{"name":"Trust Pilot","categories":["analytics"],"domains":["*.trustpilot.com"]},{"name":"Tealium","homepage":"https://tealium.com/","categories":["tag-manager"],"domains":["*.aniview.com","*.delvenetworks.com","*.limelight.com","*.tiqcdn.com","*.llnwd.net","*.tealiumiq.com"],"examples":["tags.tiqcdn.com","tealium.hs.llnwd.net","link.videoplatform.limelight.com","datacloud.tealiumiq.com"]},{"name":"iubenda","categories":["utility"],"domains":["*.iubenda.com"],"examples":["www.iubenda.com"]},{"name":"Yotpo","homepage":"https://www.yotpo.com/","categories":["marketing"],"domains":["*.yotpo.com"]},{"name":"Wistia","homepage":"https://wistia.com/","categories":["video"],"domains":["*.wistia.com","embedwistia-a.akamaihd.net","*.wistia.net"],"examples":["fast.wistia.com","fast.wistia.net","distillery.wistia.com","pipedream.wistia.com"]},{"name":"Kakao","categories":["social"],"domains":["*.daum.net","*.daumcdn.net"]},{"name":"mPulse","homepage":"https://developer.akamai.com/akamai-mpulse","categories":["analytics"],"domains":["*.akstat.io","*.go-mpulse.net","*.mpulse.net","*.mpstat.us"],"examples":["c.go-mpulse.net","0211c83c.akstat.io"]},{"name":"PayPal","homepage":"https://paypal.com","categories":["utility"],"domains":["*.paypal.com","*.paypalobjects.com"],"examples":["www.paypalobjects.com"]},{"name":"Baidu Analytics","homepage":"https://tongji.baidu.com/web/welcome/login","categories":["analytics"],"domains":["*.baidu.com"],"examples":["hm.baidu.com"]},{"name":"Nielsen NetRatings SiteCensus","company":"The Nielsen Company","homepage":"http://www.nielsen-online.com/intlpage.html","categories":["analytics"],"domains":["*.imrworldwide.com"]},{"name":"Klaviyo","categories":["ad"],"domains":["*.klaviyo.com"]},{"name":"Privy","categories":["ad"],"domains":["*.privy.com","*.privymktg.com"]},{"name":"DoubleVerify","homepage":"https://www.doubleverify.com/","categories":["ad"],"domains":["*.doubleverify.com","*.dvtps.com","*.iqfp1.com"],"examples":["cdn.doubleverify.com","cdn3.doubleverify.com","tps.doubleverify.com","tps712.doubleverify.com","tps714.doubleverify.com","tps706.doubleverify.com","tps700.doubleverify.com","tps707.doubleverify.com","rtb2.doubleverify.com","rtb0.doubleverify.com","rtbcdn.doubleverify.com","tps11020.doubleverify.com","tm.iqfp1.com"]},{"name":"Adobe TypeKit","company":"Adobe","homepage":"https://fonts.adobe.com/","categories":["cdn"],"domains":["*.typekit.com","*.typekit.net"],"examples":["use.typekit.net","p.typekit.net"]},{"name":"Parking Crew","homepage":"http://parkingcrew.net/","categories":["other"],"domains":["d1lxhc4jvstzrp.cloudfront.net","*.parkingcrew.net"]},{"name":"Optimizely","homepage":"https://www.optimizely.com/","categories":["analytics"],"domains":["*.optimizely.com"],"examples":["cdn.optimizely.com","cdn-pci.optimizely.com","logx.optimizely.com","cdn3.optimizely.com"]},{"name":"Snapchat","homepage":"https://www.snapchat.com","categories":["analytics"],"domains":["*.snapchat.com","*.sc-static.net"],"examples":["tr.snapchat.com"]},{"name":"Bold Commerce","categories":["utility"],"domains":["*.shappify-cdn.com","*.shappify.com","*.boldapps.net"]},{"name":"Sentry","homepage":"https://sentry.io/","categories":["utility"],"domains":["*.getsentry.com","*.ravenjs.com","*.sentry-cdn.com"],"examples":["cdn.ravenjs.com","browser.sentry-cdn.com"]},{"name":"Histats","homepage":"http://histats.com/","categories":["analytics"],"domains":["*.histats.com"],"examples":["s10.histats.com"]},{"name":"Akamai","homepage":"https://www.akamai.com/","categories":["cdn"],"domains":["23.62.3.183","*.akamaitechnologies.com","*.akamaitechnologies.fr","*.akamai.net","*.akamaiedge.net","*.akamaihd.net","*.akamaized.net","*.edgefcs.net","*.edgekey.net","edgesuite.net","*.srip.net"]},{"name":"StatCounter","categories":["analytics"],"domains":["*.statcounter.com"]},{"name":"Distil Networks","homepage":"https://www.distilnetworks.com/","categories":["utility"],"domains":["*.areyouahuman.com"],"examples":["n-cdn.areyouahuman.com"]},{"name":"Segment","homepage":"https://segment.com/","categories":["analytics"],"domains":["*.segment.com","*.segment.io"],"examples":["cdn.segment.com","api.segment.io"]},{"name":"Bigcommerce","categories":["marketing"],"domains":["*.bigcommerce.com"]},{"name":"Instagram","homepage":"https://www.instagram.com","categories":["social"],"domains":["*.cdninstagram.com","*.instagram.com"],"examples":["scontent.cdninstagram.com"]},{"name":"Yahoo!","homepage":"https://www.yahoo.com/","categories":["ad"],"domains":["*.bluelithium.com","*.hostingprod.com","*.lexity.com","*.yahoo.com","*.yahooapis.com","*.yimg.com","*.yimg.jp","*.zenfs.com","*.yahoo.net"],"examples":["ads.yahoo.com","analytics.yahoo.com","geo.yahoo.com","udc.yahoo.com","ganon.yahoo.com","ads.yap.yahoo.com"]},{"name":"Rambler","company":"Rambler & Co","categories":["utility"],"domains":["*.rambler.ru"]},{"name":"Cookiebot","homepage":"https://www.cookiebot.com/","categories":["utility"],"domains":["*.cookiebot.com"],"examples":["consent.cookiebot.com"]},{"name":"Tidio Live Chat","company":"Tidio","homepage":"https://www.tidiochat.com/en/","categories":["customer-success"],"domains":["*.tidiochat.com"]},{"name":"OptinMonster","homepage":"https://optinmonster.com/","categories":["marketing"],"domains":["*.opmnstr.com","*.optmnstr.com","*.optmstr.com"],"examples":["a.optmstr.com","api.opmnstr.com","a.optmnstr.com"]},{"name":"Dealer","homepage":"https://www.dealer.com/","categories":["hosting"],"domains":["*.dealer.com"],"examples":["static.dealer.com"]},{"name":"CreateJS CDN","homepage":"http://code.createjs.com/","categories":["cdn"],"domains":["*.createjs.com"],"examples":["code.createjs.com"]},{"name":"Tumblr","homepage":"https://tumblr.com/","categories":["social"],"domains":["*.tumblr.com"],"examples":["assets.tumblr.com","static.tumblr.com"]},{"name":"Azure Web Services","company":"Microsoft","categories":["cdn"],"domains":["*.azurewebsites.net","*.azureedge.net","*.msedge.net"]},{"name":"Adform","categories":["ad"],"domains":["*.adform.net","*.adformdsp.net"]},{"name":"VigLink","categories":["ad"],"domains":["*.viglink.com"]},{"name":"Lucky Orange","homepage":"https://www.luckyorange.com/","categories":["analytics"],"domains":["*.luckyorange.com","d10lpsik1i8c69.cloudfront.net","*.luckyorange.net"]},{"name":"BrightTag / Signal","company":"Signal","homepage":"https://www.signal.co","categories":["tag-manager"],"domains":["*.btstatic.com","*.thebrighttag.com"]},{"name":"CallRail","categories":["analytics"],"domains":["*.callrail.com"]},{"name":"Gemius","categories":["ad"],"domains":["*.gemius.pl"]},{"name":"Olark","homepage":"https://www.olark.com/","categories":["customer-success"],"domains":["*.olark.com"],"examples":["static.olark.com"]},{"name":"MGID","homepage":"https://www.mgid.com/","categories":["ad"],"domains":["*.mgid.com","*.dt07.net"],"examples":["servicer.mgid.com"]},{"name":"Snowplow","homepage":"https://snowplowanalytics.com/","categories":["analytics"],"domains":["d32hwlnfiv2gyn.cloudfront.net"]},{"name":"Intent Media","homepage":"https://intent.com/","categories":["ad"],"domains":["*.intentmedia.net"]},{"name":"New Relic","homepage":"https://newrelic.com/","categories":["utility"],"domains":["*.newrelic.com","*.nr-data.net"],"examples":["js-agent.newrelic.com","bam.nr-data.net"]},{"name":"FullStory","categories":["analytics"],"domains":["*.fullstory.com"],"examples":["rs.fullstory.com"]},{"name":"District M","categories":["ad"],"domains":["*.districtm.io"]},{"name":"Brightcove","homepage":"https://www.brightcove.com/en/","categories":["video"],"domains":["*.brightcove.com","*.brightcove.net","*.zencdn.net"],"examples":["vjs.zencdn.net","players.brightcove.net"]},{"name":"Mixpanel","homepage":"https://mixpanel.com/","categories":["analytics"],"domains":["*.mixpanel.com","*.mxpnl.com"],"examples":["cdn.mxpnl.com"]},{"name":"Drift","homepage":"https://www.drift.com/","categories":["marketing"],"domains":["*.drift.com","*.driftt.com"],"examples":["js.driftt.com","api.drift.com"]},{"name":"GoDaddy","homepage":"https://www.godaddy.com/","categories":["utility"],"domains":["*.godaddy.com","*.wsimg.com"],"examples":["ocsp.godaddy.com","seal.godaddy.com"]},{"name":"Evidon","categories":["analytics"],"domains":["*.evidon.com"]},{"name":"Gigya","categories":["analytics"],"domains":["*.gigya.com"]},{"name":"Inspectlet","categories":["analytics"],"domains":["*.inspectlet.com"]},{"name":"MediaVine","homepage":"https://www.mediavine.com/","categories":["ad"],"domains":["*.mediavine.com"],"examples":["scripts.mediavine.com","video.mediavine.com"]},{"name":"Ensighten","homepage":"https://www.ensighten.com/","categories":["tag-manager"],"domains":["*.ensighten.com"],"examples":["nexus.ensighten.com"]},{"name":"Adroll","homepage":"https://www.adroll.com/","categories":["ad"],"domains":["*.adroll.com"],"examples":["d.adroll.com","s.adroll.com"]},{"name":"Mapbox","categories":["utility"],"domains":["*.mapbox.com"]},{"name":"Amazon Pay","homepage":"https://pay.amazon.com","categories":["utility"],"domains":["payments.amazon.com","*.payments-amazon.com"]},{"name":"Microsoft Hosted Libs","company":"Microsoft","categories":["cdn"],"domains":["*.aspnetcdn.com"],"examples":["ajax.aspnetcdn.com"]},{"name":"Fastly","categories":["utility"],"domains":["*.fastly.net"]},{"name":"Adloox","categories":["ad"],"domains":["*.adlooxtracking.com"]},{"name":"Index Exchange","company":"WPP","categories":["ad"],"domains":["*.casalemedia.com","*.indexww.com"]},{"name":"Monotype","categories":["cdn"],"domains":["*.fonts.com","*.fonts.net"]},{"name":"Chartbeat","categories":["analytics"],"domains":["*.chartbeat.com","*.chartbeat.net"]},{"name":"Unpkg","homepage":"https://unpkg.com","categories":["cdn"],"domains":["*.unpkg.com"]},{"name":"Teads","categories":["ad"],"domains":["*.teads.tv"]},{"name":"TrustArc","homepage":"https://www.trustarc.com/","categories":["utility"],"domains":["*.trustarc.com"],"examples":["choices.trustarc.com","consent.trustarc.com"]},{"name":"Cxense","categories":["ad"],"domains":["*.cxense.com","*.cxpublic.com","*.emediate.dk","*.emediate.eu"]},{"name":"Outbrain","homepage":"https://www.outbrain.com/","categories":["ad"],"domains":["*.outbrain.com","*.outbrainimg.com","*.visualrevenue.com"]},{"name":"MailMunch","categories":["ad"],"domains":["*.mailmunch.co"]},{"name":"RevJet","homepage":"https://www.revjet.com/","categories":["ad"],"domains":["*.revjet.com"],"examples":["pix.revjet.com","ads.revjet.com"]},{"name":"i-mobile","company":"i-mobile","categories":["ad"],"domains":["*.i-mobile.co.jp"],"examples":["ssp-sync.i-mobile.co.jp"]},{"name":"Treasure Data","categories":["analytics"],"domains":["*.treasuredata.com"]},{"name":"DTSCOUT","categories":["ad"],"domains":["*.dtscout.com"]},{"name":"LivePerson","categories":["customer-success"],"homepage":"https://www.liveperson.com/","domains":["*.liveperson.com","*.look.io","*.liveperson.net","*.lpsnmedia.net"]},{"name":"Marchex","categories":["analytics"],"domains":["*.voicestar.com","*.marchex.io"]},{"name":"VWO","homepage":"https://vwo.com","categories":["analytics"],"domains":["*.visualwebsiteoptimizer.com"],"examples":["dev.visualwebsiteoptimizer.com"]},{"name":"LINE Corporation","categories":["ad"],"domains":["*.line-scdn.net","*.line.me"],"examples":["d.line-scdn.net","tr.line.me"]},{"name":"SoundCloud","homepage":"https://www.soundcloud.com/","categories":["content"],"domains":["*.sndcdn.com","*.soundcloud.com","*.stratus.sc"],"examples":["widget.sndcdn.com"]},{"name":"Ezoic","categories":["analytics"],"domains":["*.ezoic.net"]},{"name":"RD Station","homepage":"https://www.rdstation.com/en/","categories":["marketing"],"domains":["d335luupugsy2.cloudfront.net"]},{"name":"BlueKai","company":"Oracle","categories":["ad"],"domains":["*.bkrtx.com","*.bluekai.com"]},{"name":"Adobe Business Catalyst","homepage":"https://www.businesscatalyst.com/","categories":["hosting"],"domains":["*.businesscatalyst.com"]},{"name":"Sizmek","homepage":"https://www.sizmek.com/","categories":["ad"],"domains":["*.serving-sys.com","*.peer39.net"],"examples":["secure-ds.serving-sys.com","ds.serving-sys.com","bs.serving-sys.com"]},{"name":"FreakOut","categories":["ad"],"domains":["*.fout.jp"]},{"name":"Embedly","categories":["content"],"domains":["*.embedly.com","*.embed.ly"]},{"name":"Celtra","categories":["ad"],"domains":["*.celtra.com"]},{"name":"Infolinks","categories":["ad"],"domains":["*.infolinks.com"]},{"name":"PushCrew","categories":["ad"],"domains":["*.pushcrew.com"]},{"name":"Pure Chat","categories":["customer-success"],"domains":["*.purechat.com"]},{"name":"CDK Dealer Management","company":"CDK Global","homepage":"https://www.cdkglobal.com/us","categories":["hosting"],"domains":["*.assets-cdk.com"],"examples":["media-cf.assets-cdk.com"]},{"name":"AppNexus","homepage":"https://www.appnexus.com/","categories":["ad"],"domains":["*.adnxs.com","*.ctasnet.com"],"examples":["acdn.adnxs.com","secure.adnxs.com","ib.adnxs.com","sharethrough.adnxs.com","cdn.adnxs.com","vcdn.adnxs.com"]},{"name":"LiveJournal","categories":["social"],"domains":["*.livejournal.com","*.livejournal.net"]},{"name":"ContactAtOnce","homepage":"https://www.contactatonce.com/","categories":["customer-success"],"domains":["*.contactatonce.com"],"examples":["tag.contactatonce.com","agentpresence.contactatonce.com"]},{"name":"Shareaholic","homepage":"https://www.shareaholic.com/","categories":["social"],"domains":["*.shareaholic.com","dsms0mj1bbhn4.cloudfront.net"]},{"name":"SmartAdServer","categories":["ad"],"domains":["*.01net.com","*.sascdn.com"],"examples":["securite.01net.com"]},{"name":"Beeketing","homepage":"https://beeketing.com/","categories":["marketing"],"domains":["*.beeketing.com"],"examples":["sdk-cdn.beeketing.com","sdk.beeketing.com"]},{"name":"AB Tasty","categories":["analytics"],"domains":["*.abtasty.com","d1447tq2m68ekg.cloudfront.net"]},{"name":"Dataxu","categories":["marketing"],"domains":["*.w55c.net"]},{"name":"LongTail Ad Solutions","categories":["ad"],"domains":["*.jwpcdn.com","*.jwplatform.com","*.jwplayer.com","*.jwpltx.com","*.jwpsrv.com","*.longtailvideo.com"]},{"name":"LightWidget","categories":["utility"],"domains":["*.lightwidget.com"]},{"name":"Parse.ly","categories":["analytics"],"domains":["*.parsely.com","d1z2jf7jlzjs58.cloudfront.net"]},{"name":"SnapWidget","categories":["content"],"domains":["*.snapwidget.com"]},{"name":"Simplicity Marketing","categories":["ad"],"domains":["*.flashtalking.com"]},{"name":"Quantcast","homepage":"https://www.quantcast.com","categories":["analytics"],"domains":["*.brtstats.com","*.quantcount.com","*.quantserve.com","*.semantictec.com","*.ntv.io"],"examples":["pixel.quantserve.com","secure.quantserve.com","cms.quantserve.com","rules.quantcount.com"]},{"name":"Popads","homepage":"https://www.popads.net/","categories":["ad"],"domains":["*.popads.net"],"examples":["serve.popads.net","c1.popads.net"]},{"name":"Spotify","homepage":"https://www.spotify.com/","categories":["content"],"domains":["*.scdn.co","*.spotify.com"],"examples":["open.spotify.com","open.scdn.co","i.scdn.co"]},{"name":"sovrn","categories":["ad"],"domains":["*.lijit.com"]},{"name":"Heap","categories":["analytics"],"domains":["*.heapanalytics.com"]},{"name":"Ve","company":"Ve Interactive","categories":["marketing"],"domains":["*.veinteractive.com"]},{"name":"Searchanise","categories":["analytics"],"domains":["*.searchanise.com"],"examples":["www.searchanise.com"]},{"name":"TrafficStars","categories":["ad"],"domains":["*.trafficstars.com","*.tsyndicate.com"]},{"name":"Unbounce","categories":["ad"],"domains":["*.ubembed.com","*.unbounce.com","d2xxq4ijfwetlm.cloudfront.net","d9hhrg4mnvzow.cloudfront.net"]},{"name":"PureCars","homepage":"https://www.purecars.com/","categories":["marketing"],"domains":["*.purecars.com"],"examples":["cdn.purecars.com"]},{"name":"Salesforce Commerce Cloud","homepage":"https://www.salesforce.com/products/commerce-cloud/overview/","categories":["hosting"],"domains":["*.cquotient.com","*.demandware.net","demandware.edgesuite.net"]},{"name":"Keen","company":"Keen","homepage":"https://keen.io/","categories":["analytics"],"domains":["*.keen.io","d26b395fwzu5fz.cloudfront.net"]},{"name":"STINGRAY","company":"FlexOne","categories":["ad"],"domains":["*.impact-ad.jp"],"examples":["y.one.impact-ad.jp"]},{"name":"Booking.com","categories":["content"],"domains":["*.bstatic.com"]},{"name":"Net Reviews","categories":["analytics"],"domains":["*.avis-verifies.com"],"examples":["www.avis-verifies.com"]},{"name":"OpenTable","company":"Priceline Group","categories":["content"],"domains":["*.opentable.com","*.opentable.co.uk","*.toptable.co.uk"],"examples":["www.toptable.co.uk"]},{"name":"Smart AdServer","categories":["ad"],"domains":["*.sasqos.com","*.smartadserver.com"]},{"name":"Dailymotion","categories":["content"],"domains":["*.dailymotion.com","*.dmxleo.com","*.dm.gg","*.pxlad.io","*.dmcdn.net","*.sublimevideo.net"],"examples":["ad.pxlad.io","www.dailymotion.com"]},{"name":"Tray Commerce","homepage":"https://www.tray.com.br/","categories":["marketing"],"domains":["*.tcdn.com.br"],"examples":["images.tcdn.com.br"]},{"name":"uLogin","categories":["other"],"domains":["*.ulogin.ru"]},{"name":"Trusted Shops","categories":["utility"],"domains":["*.trustedshops.com"]},{"name":"iPerceptions","categories":["customer-success"],"domains":["*.iperceptions.com"]},{"name":"WordPress Site Stats","company":"Automattic","homepage":"https://wp.com/","categories":["analytics"],"domains":["pixel.wp.com","stats.wp.com"]},{"name":"fam","company":"Fing Co Ltd.","homepage":"http://admin.fam-ad.com/report/","categories":["ad"],"domains":["*.fam-ad.com"],"examples":["img.fam-ad.com"]},{"name":"Roxr Software","categories":["analytics"],"domains":["*.getclicky.com"]},{"name":"MaxCDN Enterprise","company":"MaxCDN","categories":["utility"],"domains":["*.netdna-cdn.com","*.netdna-ssl.com"]},{"name":"Media Math","homepage":"http://www.mediamath.com/","categories":["ad"],"domains":["*.mathads.com","*.mathtag.com"],"examples":["mathid.mathtag.com","sync.mathtag.com","pixel.mathtag.com"]},{"name":"AOL / Oath / Verizon Media","homepage":"https://www.oath.com/","categories":["ad"],"domains":["*.advertising.com","*.aol.com","*.aolcdn.com","*.blogsmithmedia.com","*.oath.com","*.aol.net","*.tacoda.net","*.aol.co.uk"],"examples":["pixel.advertising.com","dtm.advertising.com","tag.sp.advertising.com","service.sp.advertising.com","adtech.advertising.com","adaptv.advertising.com","mighty.aol.net","consent.cmp.oath.com"]},{"name":"issuu","categories":["content"],"domains":["*.issuu.com","*.isu.pub"]},{"name":"Sharethrough","categories":["ad"],"domains":["*.sharethrough.com"]},{"name":"Nosto","categories":["analytics"],"domains":["*.nosto.com"]},{"name":"Yandex CDN","company":"Yandex","homepage":"https://yandex.ru/","categories":["cdn"],"domains":["*.yandex.st"]},{"name":"JuicyAds","categories":["ad"],"domains":["*.juicyads.com"]},{"name":"Siteimprove","categories":["utility"],"domains":["*.siteimprove.com","*.siteimproveanalytics.com"]},{"name":"Help Scout","homepage":"https://www.helpscout.net/","categories":["customer-success"],"domains":["djtflbt20bdde.cloudfront.net","*.helpscout.net"],"examples":["beacon-v2.helpscout.net"]},{"name":"Affirm","categories":["utility"],"domains":["*.affirm.com"]},{"name":"Albacross","homepage":"https://albacross.com/","categories":["marketing"],"domains":["*.albacross.com"],"examples":["serve.albacross.com"]},{"name":"TRUSTe","categories":["utility"],"domains":["*.truste.com"]},{"name":"Seznam","categories":["utility"],"domains":["*.imedia.cz"]},{"name":"Disqus","homepage":"http://disqus.com/","categories":["social"],"domains":["*.disqus.com","*.disquscdn.com"],"examples":["c.disquscdn.com"]},{"name":"Amplitude Mobile Analytics","company":"Amplitude","categories":["analytics"],"domains":["*.amplitude.com","d24n15hnbwhuhn.cloudfront.net"]},{"name":"ExoClick","categories":["ad"],"domains":["*.exoclick.com"]},{"name":"OpenX","homepage":"https://www.openx.com/","categories":["ad"],"domains":["*.deliverimp.com","*.openxadexchange.com","*.servedbyopenx.com","*.jump-time.net","*.openx.net"],"examples":["uk-ads.openx.net","us-ads.openx.net","33across-d.openx.net","rtb.openx.net","us-u.openx.net","eu-u.openx.net","u.openx.net"]},{"name":"LKQD","categories":["ad"],"domains":["*.lkqd.net"]},{"name":"Mouseflow","categories":["analytics"],"domains":["*.mouseflow.com"]},{"name":"Bazaarvoice","categories":["analytics"],"domains":["*.bazaarvoice.com","*.feedmagnet.com"]},{"name":"etracker","categories":["analytics"],"domains":["*.etracker.com","*.etracker.de"],"examples":["www.etracker.com"]},{"name":"DigiTrust","homepage":"http://www.digitru.st/","categories":["analytics"],"domains":["*.digitru.st"],"examples":["cdn.digitru.st"]},{"name":"Optanon","homepage":"https://www.cookielaw.org/","categories":["utility"],"domains":["*.onetrust.com","*.cookielaw.org"],"examples":["cdn.cookielaw.org","geolocation.onetrust.com"]},{"name":"Feefo.com","company":"Feefo","categories":["analytics"],"domains":["*.feefo.com"]},{"name":"AppDynamics","homepage":"https://www.appdynamics.com/","categories":["utility"],"domains":["*.appdynamics.com","*.eum-appdynamics.com","d3tjaysgumg9lf.cloudfront.net"],"examples":["cdn.appdynamics.com"]},{"name":"Accuweather","categories":["content"],"domains":["*.accuweather.com"]},{"name":"GetSiteControl","company":"GetWebCraft","categories":["utility"],"domains":["*.getsitecontrol.com"]},{"name":"Secomapp","categories":["utility"],"domains":["*.secomapp.com"]},{"name":"Adyoulike","categories":["ad"],"domains":["*.adyoulike.com","*.omnitagjs.com","*.adyoulike.net"]},{"name":"Rakuten Marketing","company":"Rakuten","categories":["ad"],"domains":["*.rakuten-static.com","*.rmtag.com"]},{"name":"Sortable","categories":["ad"],"domains":["*.deployads.com"]},{"name":"Vidible","categories":["ad"],"domains":["*.vidible.tv"]},{"name":"Constant Contact","categories":["ad"],"domains":["*.ctctcdn.com"]},{"name":"UserReport","categories":["analytics"],"domains":["*.userreport.com"]},{"name":"Swiftype","categories":["utility"],"domains":["*.swiftype.com","*.swiftypecdn.com"]},{"name":"ContentSquare","categories":["analytics"],"domains":["d1m6l9dfulcyw7.cloudfront.net","*.content-square.net","*.contentsquare.net"]},{"name":"SocialShopWave","categories":["social"],"domains":["*.socialshopwave.com"]},{"name":"Pardot","categories":["marketing"],"domains":["*.pardot.com"]},{"name":"Esri ArcGIS","company":"Esri","categories":["utility"],"domains":["*.arcgis.com","*.arcgisonline.com"]},{"name":"SpringServer","categories":["ad"],"domains":["*.springserve.com"]},{"name":"OptiMonk","categories":["ad"],"domains":["*.optimonk.com"]},{"name":"Refersion","categories":["ad"],"domains":["*.refersion.com"]},{"name":"AddEvent","categories":["utility"],"domains":["*.addevent.com"],"examples":["www.addevent.com"]},{"name":"Marketo","homepage":"https://www.marketo.com","categories":["analytics"],"domains":["*.marketo.com","*.mktoresp.com","*.marketo.net"],"examples":["munchkin.marketo.net"]},{"name":"Bugsnag","categories":["utility"],"domains":["*.bugsnag.com","d2wy8f7a9ursnm.cloudfront.net"],"examples":["notify.bugsnag.com"]},{"name":"Comm100","categories":["customer-success"],"domains":["*.comm100.com"]},{"name":"Foursixty","categories":["customer-success"],"domains":["*.foursixty.com"]},{"name":"BounceX","categories":["analytics"],"homepage":"https://www.bouncex.com/","domains":["*.bounceexchange.com","*.bouncex.net"],"examples":["events.bouncex.net"]},{"name":"Research Online","company":"Skills Development Scotland","categories":["content"],"domains":["*.researchonline.org.uk"],"examples":["www.researchonline.org.uk"]},{"name":"Bizible","categories":["ad"],"domains":["*.bizible.com","*.bizibly.com"]},{"name":"Tencent","categories":["content"],"domains":["*.qq.com","*.ywxi.net"]},{"name":"Nend","categories":["ad"],"domains":["*.nend.net"]},{"name":"Medium","categories":["content"],"domains":["*.medium.com"]},{"name":"SublimeSkinz","categories":["ad"],"domains":["*.ayads.co"]},{"name":"SnapEngage","categories":["customer-success"],"domains":["*.snapengage.com"]},{"name":"TagCommander","categories":["tag-manager"],"domains":["*.commander1.com","*.tagcommander.com"]},{"name":"GitHub","categories":["utility"],"domains":["*.rawgit.com"],"examples":["cdn.rawgit.com"]},{"name":"IPONWEB","categories":["ad"],"domains":["*.company-target.com","*.liadm.com","*.iponweb.net","*.p161.net"],"examples":["pool.udsp.iponweb.net"]},{"name":"Perfect Market","categories":["ad"],"domains":["*.perfectmarket.com"]},{"name":"Admixer for Publishers","company":"Admixer","categories":["ad"],"domains":["*.admixer.net"]},{"name":"iovation","categories":["utility"],"domains":["*.iesnare.com"]},{"name":"Listrak","homepage":"https://www.listrak.com/","categories":["marketing"],"domains":["*.listrak.com","*.listrakbi.com"],"examples":["cdn.listrakbi.com","s1.listrakbi.com"]},{"name":"Nativo","categories":["ad"],"domains":["*.postrelease.com"]},{"name":"piano","categories":["ad"],"domains":["*.npttech.com","*.tinypass.com"],"examples":["www.npttech.com"]},{"name":"Alexa","homepage":"https://www.alexa.com/","categories":["analytics"],"domains":["*.alexametrics.com","d31qbv1cthcecs.cloudfront.net"],"examples":["certify.alexametrics.com"]},{"name":"Revolver Maps","categories":["analytics"],"domains":["*.revolvermaps.com"]},{"name":"LoyaltyLion","categories":["ad"],"domains":["*.loyaltylion.com","*.loyaltylion.net","dg1f2pfrgjxdq.cloudfront.net"]},{"name":"Digioh","categories":["ad"],"domains":["*.lightboxcdn.com"]},{"name":"Permutive","categories":["ad"],"domains":["*.permutive.com","d3alqb8vzo7fun.cloudfront.net"]},{"name":"ForeSee","company":"Answers","categories":["analytics"],"domains":["*.4seeresults.com","*.answerscloud.com","*.foresee.com","*.foreseeresults.com"]},{"name":"Clicktale","categories":["analytics"],"domains":["*.cdngc.net","*.clicktale.net"],"examples":["clicktalecdn.sslcs.cdngc.net"]},{"name":"IBM Digital Analytics","company":"IBM","categories":["analytics"],"domains":["*.cmcore.com","coremetrics.com","data.coremetrics.com","data.de.coremetrics.com","libs.de.coremetrics.com","tmscdn.de.coremetrics.com","iocdn.coremetrics.com","libs.coremetrics.com","tmscdn.coremetrics.com","*.s81c.com","*.unica.com","*.coremetrics.eu"],"examples":["data.coremetrics.eu"]},{"name":"iZooto","homepage":"https://www.izooto.com","categories":["marketing"],"domains":["*.izooto.com"],"examples":["cdn.izooto.com"]},{"name":"Adverline Board","company":"Adverline","categories":["ad"],"domains":["*.adverline.com","*.adnext.fr"]},{"name":"Branch Metrics","categories":["ad"],"domains":["*.branch.io","*.app.link"]},{"name":"Sift Science","categories":["utility"],"domains":["*.siftscience.com"]},{"name":"ResponsiveVoice","categories":["other"],"domains":["*.responsivevoice.org"]},{"name":"iAdvize SAS","categories":["customer-success"],"domains":["*.iadvize.com"]},{"name":"iBillboard","categories":["ad"],"domains":["*.ibillboard.com"]},{"name":"Intercept Interactive","categories":["ad"],"domains":["*.undertone.com"]},{"name":"AdMatic","categories":["ad"],"domains":["*.admatic.com.tr"]},{"name":"Symantec","categories":["utility"],"domains":["*.norton.com","*.symantec.com","*.symcb.com","*.symcd.com"],"examples":["extended-validation-ssl.websecurity.symantec.com"]},{"name":"Convert Insights","categories":["analytics"],"domains":["*.convertexperiments.com"]},{"name":"Ecwid","categories":["hosting"],"domains":["*.ecwid.com","*.shopsettings.com","d3fi9i0jj23cau.cloudfront.net","d3j0zfs7paavns.cloudfront.net"]},{"name":"Bronto Software","categories":["marketing"],"domains":["*.bm23.com","*.bronto.com","*.brontops.com"]},{"name":"Heroku","categories":["other"],"domains":["*.herokuapp.com"]},{"name":"Dynamic Yield","categories":["customer-success"],"domains":["*.dynamicyield.com"]},{"name":"Bootstrap CDN","homepage":"https://www.bootstrapcdn.com/","categories":["cdn"],"domains":["*.bootstrapcdn.com"],"examples":["maxcdn.bootstrapcdn.com","stackpath.bootstrapcdn.com"]},{"name":"Tribal Fusion","company":"Exponential Interactive","categories":["ad"],"domains":["*.tribalfusion.com"]},{"name":"Affiliate Window","company":"Digital Window","categories":["ad"],"domains":["*.dwin1.com"]},{"name":"PowerReviews","categories":["analytics"],"domains":["*.powerreviews.com"]},{"name":"PageSense","homepage":"https://www.zoho.com/pagesense/","categories":["analytics"],"domains":["*.pagesense.io"],"examples":["cdn.pagesense.io"]},{"name":"Geniee","categories":["ad"],"domains":["*.href.asia","*.genieessp.jp","*.genieesspv.jp","*.gssprt.jp"],"examples":["cs.gssprt.jp"]},{"name":"Maxymiser","categories":["analytics"],"domains":["*.maxymiser.net"]},{"name":"Smart Insight Tracking","company":"Emarsys","categories":["analytics"],"domains":["*.scarabresearch.com"]},{"name":"Auto Link Maker","company":"Apple","categories":["ad"],"domains":["*.apple.com"],"examples":["autolinkmaker.itunes.apple.com"]},{"name":"SessionCam","company":"ServiceTick","categories":["analytics"],"domains":["*.sessioncam.com","d2oh4tlt9mrke9.cloudfront.net"]},{"name":"GetResponse","categories":["ad"],"domains":["*.getresponse.com"]},{"name":"Clerk.io ApS","categories":["analytics"],"domains":["*.clerk.io"]},{"name":"Kampyle","categories":["analytics"],"domains":["*.kampyle.com"]},{"name":"Monetate","categories":["analytics"],"domains":["*.monetate.net"]},{"name":"Opentag","company":"Qubit","categories":["tag-manager"],"domains":["*.qutics.com","d3c3cq33003psk.cloudfront.net"],"examples":["opentag-stats.qutics.com"]},{"name":"StickyADS.tv","categories":["ad"],"domains":["*.stickyadstv.com"]},{"name":"Usabilla","homepage":"https://usabilla.com","categories":["analytics"],"domains":["*.usabilla.com","d6tizftlrpuof.cloudfront.net"],"examples":["w.usabilla.com"]},{"name":"Polar","homepage":"https://polar.me/","categories":["ad"],"domains":["*.polarmobile.ca","*.mediaeverywhere.com","*.mediavoice.com","*.plrsrvcs.com","*.polarcdn-engine.com","*.polarcdn-meraxes.com","*.polarcdn-pentos.com","*.polarcdn-static.com","*.polarcdn-terrax.com","*.polarcdn.com","*.polarmobile.com","*.poweredbypolar.com","*.mediaconductor.me","*.polaracademy.me"]},{"name":"TrackJS","categories":["analytics"],"domains":["*.trackjs.com","d2zah9y47r7bi2.cloudfront.net"],"examples":["usage.trackjs.com"]},{"name":"BannerFlow","company":"Nordic Factory Solutions","categories":["ad"],"domains":["*.bannerflow.com"]},{"name":"Fort Awesome","categories":["cdn"],"domains":["*.fortawesome.com"]},{"name":"Twitch","homepage":"https://twitch.tv/","categories":["video"],"domains":["*.twitch.tv"],"examples":["player.twitch.tv"]},{"name":"eBay","categories":["ad"],"domains":["*.ebay.com","*.ebayimg.com","*.fetchback.com"]},{"name":"Adocean","company":"Gemius","categories":["ad"],"domains":["*.adocean.pl"]},{"name":"Po.st","company":"RadiumOne","categories":["utility"],"domains":["*.po.st"]},{"name":"Github","categories":["utility"],"domains":["*.github.com","*.githubusercontent.com","*.github.io"],"examples":["raw.githubusercontent.com"]},{"name":"Rackspace","categories":["hosting"],"domains":["*.rackcdn.com","*.rackspacecloud.com","*.raxcdn.com","*.websitetestlink.com"]},{"name":"Meetrics","categories":["ad"],"domains":["*.de.com","*.meetrics.net","*.mxcdn.net"],"examples":["research.de.com"]},{"name":"Wufoo","categories":["utility"],"domains":["*.wufoo.com"]},{"name":"Pagely","categories":["other"],"domains":["*.optnmstr.com"]},{"name":"LiveTex","categories":["customer-success"],"domains":["*.livetex.ru"]},{"name":"Yieldmo","categories":["ad"],"domains":["*.yieldmo.com"]},{"name":"fluct","categories":["ad"],"domains":["*.adingo.jp"]},{"name":"33 Across","homepage":"https://33across.com/","categories":["ad"],"domains":["*.33across.com"],"examples":["sic.33across.com","cdn-sic.33across.com"]},{"name":"Freshdesk","homepage":"https://freshdesk.com/","categories":["customer-success"],"domains":["d36mpcpuzc4ztk.cloudfront.net"]},{"name":"Market GID","homepage":"https://www.marketgid.com/","categories":["ad"],"domains":["*.marketgid.com"],"examples":["jsc.marketgid.com"]},{"name":"plista","categories":["ad"],"domains":["*.plista.com"]},{"name":"Mather Economics","categories":["analytics"],"domains":["*.matheranalytics.com"]},{"name":"Skype","categories":["other"],"domains":["*.skype.com"]},{"name":"Supership","homepage":"https://supership.jp/","categories":["ad"],"domains":["*.socdm.com"]},{"name":"AIR.TV","categories":["ad"],"domains":["*.air.tv"]},{"name":"Blindado","categories":["utility"],"domains":["*.siteblindado.com"]},{"name":"WebsiteBuilder.com","homepage":"https://www.websitebuilder.com","categories":["hosting"],"domains":["*.mywebsitebuilder.com"]},{"name":"Wishpond Technologies","categories":["marketing"],"domains":["*.wishpond.com","*.wishpond.net"]},{"name":"ClickDesk","categories":["customer-success"],"domains":["*.clickdesk.com","d1gwclp1pmzk26.cloudfront.net"]},{"name":"Media Management Technologies","categories":["ad"],"domains":["*.speedshiftmedia.com"]},{"name":"Wicked Reports","homepage":"https://www.wickedreports.com/","categories":["marketing"],"domains":["*.wickedreports.com"],"examples":["widget.wickedreports.com"]},{"name":"Attentive","homepage":"https://attentivemobile.com/","categories":["ad"],"domains":["*.attn.tv","*.attentivemobile.com"]},{"name":"WisePops","categories":["utility"],"domains":["*.wisepops.com"]},{"name":"Snacktools","categories":["ad"],"domains":["*.bannersnack.com"]},{"name":"Technorati","company":"Synacor","categories":["ad"],"domains":["*.technoratimedia.com"]},{"name":"Fraudlogix","categories":["utility"],"domains":["*.yabidos.com"]},{"name":"Reviews.co.uk","categories":["analytics"],"domains":["*.reviews.co.uk"]},{"name":"Okas Concepts","categories":["utility"],"domains":["*.okasconcepts.com"]},{"name":"Lytics","categories":["ad"],"domains":["*.lytics.io"]},{"name":"Radar","company":"Cedexis","homepage":"https://www.cedexis.com/radar/","categories":["analytics"],"domains":["*.cedexis-test.com","*.cedexis.com","*.cmdolb.com","cedexis.leasewebcdn.com","*.cedexis-radar.net","*.cedexis.net","cedexis-test01.insnw.net","cedexisakamaitest.azureedge.net","cedexispub.cdnetworks.net","cs600.wac.alphacdn.net","cs600.wpc.edgecastdns.net","global2.cmdolb.com","img-cedexis.mncdn.com","a-cedexis.msedge.net","zn3vgszfh.fastestcdn.net"],"examples":["radar.cedexis.com","rpt.cedexis.com","2-01-49cd-0002.cdx.cedexis.net","bench.cedexis-test.com"]},{"name":"TripAdvisor","categories":["content"],"domains":["*.jscache.com","*.tacdn.com","*.tamgrt.com","*.tripadvisor.com","*.viator.com","*.tripadvisor.co.uk"],"examples":["www.jscache.com","www.tamgrt.com"]},{"name":"WebEngage","categories":["customer-success"],"domains":["*.webengage.co","*.webengage.com","d23nd6ymopvz52.cloudfront.net","d3701cc9l7v9a6.cloudfront.net"]},{"name":"Crowd Control","company":"Lotame","categories":["ad"],"domains":["*.crwdcntrl.net"]},{"name":"SaleCycle","categories":["ad"],"domains":["*.salecycle.com","d16fk4ms6rqz1v.cloudfront.net","d22j4fzzszoii2.cloudfront.net","d30ke5tqu2tkyx.cloudfront.net","dn1i8v75r669j.cloudfront.net"]},{"name":"Browsealoud","homepage":"https://www.texthelp.com/en-gb/products/browsealoud/","categories":["other"],"domains":["*.browsealoud.com","*.texthelp.com"],"examples":["www.browsealoud.com"]},{"name":"Decibel Insight","categories":["analytics"],"domains":["*.decibelinsight.net"]},{"name":"Yieldify","categories":["ad"],"domains":["*.yieldify.com","*.yieldifylabs.com","d33wq5gej88ld6.cloudfront.net","dwmvwp56lzq5t.cloudfront.net"],"examples":["geo.yieldifylabs.com"]},{"name":"Fastly Insights","homepage":"https://insights.fastlylabs.com","categories":["analytics"],"domains":["*.fastly-insights.com"],"examples":["www.fastly-insights.com"]},{"name":"Autopilot","categories":["ad"],"domains":["*.autopilothq.com"]},{"name":"Riskified","categories":["utility"],"domains":["*.riskified.com"]},{"name":"AudienceSearch","company":"Intimate Merger","categories":["ad"],"domains":["*.im-apps.net"]},{"name":"SpotXchange","categories":["ad"],"domains":["*.spotxcdn.com","*.spotxchange.com","*.spotx.tv"]},{"name":"Quantum Metric","homepage":"https://www.quantummetric.com/","categories":["analytics"],"domains":["*.quantummetric.com"]},{"name":"Adobe Scene7","company":"Adobe Systems","categories":["content"],"domains":["wwwimages.adobe.com","*.scene7.com","*.everestads.net","*.everestjs.net"]},{"name":"GumGum","categories":["ad"],"domains":["*.gumgum.com"]},{"name":"Forensiq","categories":["utility"],"domains":["*.fqtag.com"]},{"name":"IBM Acoustic Campaign","company":"IBM","categories":["analytics"],"domains":["www.sc.pages01.net","www.sc.pages02.net","www.sc.pages03.net","www.sc.pages04.net","www.sc.pages05.net","www.sc.pages06.net","www.sc.pages07.net","www.sc.pages08.net","www.sc.pages09.net","www.sc.pagesA.net"],"examples":["https://www.sc.pages01.net/lp/static/js/iMAWebCookie.js"]},{"name":"Tail Target","company":"Tail","categories":["ad"],"domains":["*.tailtarget.com"]},{"name":"Between Digital","categories":["ad"],"domains":["*.betweendigital.com"]},{"name":"Pendo","homepage":"https://www.pendo.io","categories":["analytics"],"domains":["*.pendo.io"],"examples":["app.pendo.io"]},{"name":"Picreel","categories":["analytics"],"domains":["*.pcrl.co","*.picreel.com"]},{"name":"LoopMe","categories":["ad"],"domains":["*.loopme.biz","*.loopme.com","*.vntsm.com","*.loopme.me"]},{"name":"Weborama","categories":["ad"],"domains":["*.weborama.com","*.weborama.fr"]},{"name":"Google Plus","company":"Google","categories":["social"],"domains":["plus.google.com"]},{"name":"Evergage","categories":["analytics"],"domains":["*.evergage.com","*.evgnet.com"],"examples":["cdn.evgnet.com"]},{"name":"rewardStyle.com","categories":["ad"],"domains":["*.rewardstyle.com"]},{"name":"Kaltura Video Platform","company":"Kaltura","categories":["content"],"domains":["*.kaltura.com"],"examples":["cdnsecakmi.kaltura.com"]},{"name":"Sooqr Search","company":"Sooqr","categories":["utility"],"domains":["*.sooqr.com"]},{"name":"Revcontent","categories":["content"],"domains":["*.revcontent.com"]},{"name":"Appier","categories":["ad"],"domains":["*.appier.net"]},{"name":"Forter","categories":["utility"],"domains":["*.forter.com"]},{"name":"AddShoppers","categories":["social"],"domains":["*.addshoppers.com","d3rr3d0n31t48m.cloudfront.net","*.shop.pe"]},{"name":"Madison Logic","categories":["marketing"],"domains":["*.ml314.com"]},{"name":"FirstImpression","categories":["ad"],"domains":["*.firstimpression.io"]},{"name":"Salesforce.com","categories":["ad"],"domains":["*.force.com","*.salesforce.com"],"examples":["secure.force.com"]},{"name":"Effective Measure","categories":["ad"],"domains":["*.effectivemeasure.net"]},{"name":"BoldChat","company":"LogMeIn","categories":["customer-success"],"domains":["*.boldchat.com"]},{"name":"Tradelab","categories":["ad"],"domains":["*.tradelab.fr"]},{"name":"Rocket Fuel","categories":["ad"],"domains":["*.rfihub.com","*.ru4.com","*.rfihub.net","*.ad1x.com"]},{"name":"Unruly Media","categories":["ad"],"domains":["*.unrulymedia.com"]},{"name":"Interpublic Group","categories":["ad"],"domains":["*.mbww.com"]},{"name":"Pixlee","categories":["social"],"domains":["*.pixlee.com"]},{"name":"The Trade Desk","homepage":"https://www.thetradedesk.com/","categories":["ad"],"domains":["d1eoo1tco6rr5e.cloudfront.net","*.adsrvr.org"],"examples":["js.adsrvr.org","match.adsrvr.org","insight.adsrvr.org","usw-lax.adsrvr.org","data.adsrvr.org","snap.adsrvr.org"]},{"name":"Keywee","categories":["ad"],"domains":["*.keywee.co"]},{"name":"Audience 360","company":"Datapoint Media","categories":["ad"],"domains":["*.dpmsrv.com"]},{"name":"Fresh Relevance","categories":["analytics"],"domains":["*.freshrelevance.com","*.cloudfront.ne","d1y9qtn9cuc3xw.cloudfront.net","d81mfvml8p5ml.cloudfront.net","dkpklk99llpj0.cloudfront.net"],"examples":["d1y9qtn9cuc3xw.cloudfront.ne"]},{"name":"OneSignal","homepage":"https://onesignal.com/","categories":["utility"],"domains":["*.onesignal.com"],"examples":["cdn.onesignal.com","https://onesignal.com/api/v1/sync/"]},{"name":"ZEDO","categories":["ad"],"domains":["*.zedo.com"]},{"name":"Vidyard","homepage":"https://www.vidyard.com/","categories":["utility"],"domains":["*.vidyard.com"]},{"name":"Opta","company":"Perform Group","categories":["content"],"domains":["*.opta.net"]},{"name":"WebpageFX","categories":["ad"],"domains":["*.leadmanagerfx.com"]},{"name":"Gleam","categories":["marketing"],"domains":["*.gleam.io"]},{"name":"LinkedIn Ads","categories":["ad"],"domains":["*.licdn.com","ads.linkedin.com","www.linkedin.com"],"examples":["snap.licdn.com"]},{"name":"Dynatrace","categories":["analytics"],"domains":["*.ruxit.com","js-cdn.dynatrace.com"]},{"name":"KISSmetrics","categories":["analytics"],"domains":["*.kissmetrics.com","doug1izaerwt3.cloudfront.net","dsyszv14g9ymi.cloudfront.net"]},{"name":"Flowplayer","categories":["content"],"domains":["*.flowplayer.org"]},{"name":"Cloudinary","categories":["content"],"domains":["*.cloudinary.com"]},{"name":"SearchSpring","categories":["utility"],"domains":["*.searchspring.net"]},{"name":"Talkable","categories":["ad"],"domains":["*.talkable.com","d2jjzw81hqbuqv.cloudfront.net"],"examples":["www.talkable.com"]},{"name":"ReadSpeaker","homepage":"https://www.readspeaker.com","categories":["other"],"domains":["*.readspeaker.com"],"examples":["sf1-eu.readspeaker.com"]},{"name":"Curalate","categories":["marketing"],"domains":["*.curalate.com","d116tqlcqfmz3v.cloudfront.net"]},{"name":"Covert Pics","categories":["content"],"domains":["*.covet.pics"]},{"name":"Bootstrap Chinese network","categories":["cdn"],"domains":["*.bootcss.com"]},{"name":"Apester","categories":["analytics"],"domains":["*.apester.com","*.qmerce.com"]},{"name":"JustPremium Ads","company":"JustPremium","categories":["ad"],"domains":["*.justpremium.com"]},{"name":"Ooyala","categories":["ad"],"domains":["*.ooyala.com"]},{"name":"Qualaroo","categories":["analytics"],"domains":["*.qualaroo.com"]},{"name":"Clicktripz","categories":["content"],"domains":["*.clicktripz.com"],"examples":["static.clicktripz.com","www.clicktripz.com"]},{"name":"Arbor","company":"LiveRamp","categories":["other"],"domains":["*.pippio.com"]},{"name":"Concert","homepage":"https://concert.io/","categories":["ad"],"domains":["*.concert.io"],"examples":["cdn.concert.io"]},{"name":"Vox Media","homepage":"https://www.voxmedia.com/","categories":["content"],"domains":["*.vox-cdn.com","*.voxmedia.com"],"examples":["cdn.vox-cdn.com"]},{"name":"Highcharts","categories":["utility"],"domains":["*.highcharts.com"]},{"name":"LiveHelpNow","categories":["customer-success"],"domains":["*.livehelpnow.net"]},{"name":"mParticle","homepage":"https://www.mparticle.com/","categories":["utility"],"domains":["*.mparticle.com"],"examples":["jssdks.mparticle.com","identity.mparticle.com"]},{"name":"Simpli.fi","categories":["ad"],"domains":["*.simpli.fi"]},{"name":"DemandBase","categories":["marketing"],"domains":["*.demandbase.com"]},{"name":"Typepad","categories":["hosting"],"domains":["*.typepad.com"]},{"name":"Omniconvert","categories":["analytics"],"domains":["*.omniconvert.com","d2tgfbvjf3q6hn.cloudfront.net","d3vbj265bmdenw.cloudfront.net"]},{"name":"Adscale","categories":["ad"],"domains":["*.adscale.de"]},{"name":"MaxMind","categories":["utility"],"domains":["*.maxmind.com"]},{"name":"FoxyCart","categories":["utility"],"domains":["*.foxycart.com"]},{"name":"Shopgate","categories":["utility"],"domains":["*.shopgate.com"]},{"name":"DMD Marketing","homepage":"https://www.dmdconnects.com/","categories":["ad"],"domains":["*.medtargetsystem.com"]},{"name":"Qubit Deliver","company":"Qubit","categories":["analytics"],"domains":["d1m54pdnjzjnhe.cloudfront.net","d22rutvoghj3db.cloudfront.net","dd6zx4ibq538k.cloudfront.net"]},{"name":"linkpulse","categories":["analytics"],"domains":["*.lp4.io"]},{"name":"Braze","homepage":"https://www.braze.com","categories":["analytics"],"domains":["*.appboycdn.com"],"examples":["js.appboycdn.com"]},{"name":"Zanox","categories":["ad"],"domains":["*.zanox.com","*.zanox.ws"]},{"name":"Ipify","homepage":"https://www.ipify.org","categories":["utility"],"domains":["*.ipify.org"],"examples":["api.ipify.org","geo.ipify.org"]},{"name":"Turn","categories":["ad"],"domains":["*.turn.com"]},{"name":"Underdog Media","categories":["ad"],"domains":["*.underdog.media","*.udmserve.net"]},{"name":"Adition","homepage":"https://www.adition.com","categories":["ad"],"domains":["*.adition.com"],"examples":["dsp.adfarm1.adition.com"]},{"name":"Stackla PTY","categories":["social"],"domains":["*.stackla.com"]},{"name":"Sekindo","categories":["content"],"domains":["*.sekindo.com"]},{"name":"unpkg","categories":["utility"],"domains":["*.npmcdn.com"]},{"name":"Delta Projects AB","categories":["ad"],"domains":["*.de17a.com"]},{"name":"Snack Media","categories":["content"],"domains":["*.snack-media.com"]},{"name":"Civic","categories":["hosting"],"domains":["*.civiccomputing.com"]},{"name":"Global-e","categories":["hosting"],"domains":["*.global-e.com"]},{"name":"Feedbackify","company":"InsideMetrics","categories":["analytics"],"domains":["*.feedbackify.com"]},{"name":"TINT","categories":["content"],"domains":["*.71n7.com","d33w9bm0n1egwm.cloudfront.net","d36hc0p18k1aoc.cloudfront.net","d3l7tj34e9fc43.cloudfront.net"],"examples":["www.71n7.com"]},{"name":"Key CDN","categories":["utility"],"domains":["*.kxcdn.com"]},{"name":"VoiceFive","categories":["analytics"],"domains":["*.voicefive.com"]},{"name":"Signyfyd","categories":["utility"],"domains":["*.signifyd.com"]},{"name":"CPEx","categories":["content"],"domains":["*.cpex.cz"]},{"name":"Marketplace Web Service","company":"Amazon","categories":["other"],"domains":["*.ssl-images-amazon.com"]},{"name":"Verizon Digital Media CDN","homepage":"https://www.verizondigitalmedia.com/","categories":["cdn"],"domains":["*.edgecastcdn.net","*.edgecastdns.net"]},{"name":"Vibrant Media","categories":["ad"],"domains":["*.intellitxt.com","*.picadmedia.com"]},{"name":"Edge Web Fonts","company":"Adobe Systems","categories":["cdn"],"domains":["*.edgefonts.net"],"examples":["use.edgefonts.net"]},{"name":"Steelhouse","categories":["ad"],"domains":["*.steelhousemedia.com"]},{"name":"Click Guardian","homepage":"https://www.clickguardian.co.uk/","categories":["advertising"],"domains":["*.clickguardian.app","*.clickguardian.co.uk"],"examples":["v2.clickguardian.app","protection.clickguardian.co.uk"]},{"name":"Yottaa","categories":["hosting"],"domains":["*.yottaa.com","*.yottaa.net"]},{"name":"Profitshare","categories":["ad"],"domains":["*.profitshare.ro"]},{"name":"Drip","company":"The Numa Group","categories":["ad"],"domains":["*.getdrip.com"]},{"name":"Infinity Tracking","categories":["analytics"],"domains":["*.infinity-tracking.net"]},{"name":"SurveyMonkey","categories":["analytics"],"domains":["*.surveymonkey.com"]},{"name":"MonetizeMore","categories":["ad"],"domains":["*.m2.ai"]},{"name":"Sidecar","categories":["other"],"domains":["*.getsidecar.com","d3v27wwd40f0xu.cloudfront.net"]},{"name":"ThreatMetrix","categories":["utility"],"domains":["*.online-metrix.net"]},{"name":"Auth0","homepage":"https://auth0.com/","categories":["utility"],"domains":["*.auth0.com"],"examples":["cdn.auth0.com"]},{"name":"Hupso Website Analyzer","company":"Hupso","categories":["analytics"],"domains":["*.hupso.com"]},{"name":"Sirv","categories":["other"],"domains":["*.sirv.com"]},{"name":"PerimeterX Bot Defender","company":"PerimeterX","categories":["utility"],"domains":["*.perimeterx.net","*.pxi.pub"]},{"name":"ResponseTap","categories":["analytics"],"domains":["*.adinsight.com","*.responsetap.com"]},{"name":"Petametrics","categories":["analytics"],"domains":["*.petametrics.com"]},{"name":"Sajari Pty","categories":["utility"],"domains":["*.sajari.com"]},{"name":"Flickr","categories":["content"],"domains":["*.flickr.com","*.staticflickr.com"]},{"name":"Hotmart","homepage":"https://www.hotmart.com/","categories":["content"],"domains":["*.hotmart.com"],"examples":["launchermodule.hotmart.com"]},{"name":"Adkontekst","categories":["ad"],"domains":["*.adkontekst.pl"]},{"name":"Livefyre","categories":["content"],"domains":["*.fyre.co","*.livefyre.com"]},{"name":"The Hut Group","categories":["content"],"domains":["*.thcdn.com"]},{"name":"Survicate","categories":["analytics"],"domains":["*.survicate.com"]},{"name":"Sweet Tooth","categories":["ad"],"domains":["*.sweettooth.io"]},{"name":"Adnium","categories":["ad"],"domains":["*.adnium.com"]},{"name":"CleverTap","categories":["analytics"],"domains":["d2r1yp2w7bby2u.cloudfront.net"]},{"name":"Luigi’s Box","company":"Luigi’s Box","homepage":"https://www.luigisbox.com/","categories":["utility"],"domains":["*.luigisbox.com"]},{"name":"Conversio","categories":["ad"],"domains":["*.conversio.com"]},{"name":"Connatix","categories":["ad"],"domains":["*.connatix.com"]},{"name":"StreamRail","categories":["ad"],"domains":["*.streamrail.com","*.streamrail.net"]},{"name":"Klevu Search","company":"Klevu","categories":["utility"],"domains":["*.klevu.com"]},{"name":"Reviews.io","categories":["analytics"],"domains":["*.reviews.io"]},{"name":"TruConversion","categories":["analytics"],"domains":["*.truconversion.com"]},{"name":"Sparkflow","company":"Intercept Interactive","categories":["ad"],"domains":["*.sparkflow.net"]},{"name":"DialogTech","categories":["ad"],"domains":["*.dialogtech.com"]},{"name":"Fanplayr","categories":["analytics"],"domains":["*.fanplayr.com","d38nbbai6u794i.cloudfront.net"]},{"name":"The ADEX","categories":["ad"],"domains":["*.theadex.com"]},{"name":"Reklama","categories":["ad"],"domains":["*.o2.pl","*.wp.pl"],"examples":["dot.wp.pl","px.o2.pl","px.wp.pl"]},{"name":"Impact Radius","categories":["ad"],"domains":["*.impactradius-event.com","*.impactradius-go.com","*.7eer.net","d3cxv97fi8q177.cloudfront.net","*.evyy.net","*.ojrq.net"],"examples":["a.impactradius-go.com","microsoft-uk.evyy.net"]},{"name":"Accordant Media","categories":["ad"],"domains":["*.a3cloud.net"],"examples":["segment.a3cloud.net"]},{"name":"Ambassador","categories":["ad"],"domains":["*.getambassador.com"]},{"name":"Socialphotos","categories":["social"],"domains":["*.slpht.com"]},{"name":"reEmbed","categories":["other"],"domains":["*.reembed.com"]},{"name":"Customer.io","categories":["ad"],"domains":["*.customer.io"]},{"name":"WebSpectator","categories":["ad"],"domains":["*.webspectator.com"]},{"name":"Best Of Media S.A.","categories":["content"],"domains":["*.servebom.com"]},{"name":"Hola Networks","categories":["other"],"domains":["*.h-cdn.com"]},{"name":"AdRiver","categories":["ad"],"domains":["*.adriver.ru"]},{"name":"Kaizen Platform","categories":["analytics"],"domains":["*.kaizenplatform.net"],"examples":["cdn.kaizenplatform.net","log-v4.kaizenplatform.net"]},{"name":"Calendly","categories":["other"],"domains":["*.calendly.com"]},{"name":"Reevoo","categories":["analytics"],"domains":["*.reevoo.com"]},{"name":"Playbuzz","categories":["hosting"],"domains":["*.playbuzz.com"]},{"name":"Navegg","categories":["ad"],"domains":["*.navdmp.com"]},{"name":"Advance Magazine Group","categories":["content"],"domains":["*.condenastdigital.com","*.condenet.com","*.condenast.co.uk"]},{"name":"GIPHY","categories":["content"],"domains":["*.giphy.com"]},{"name":"GoSquared","homepage":"https://www.gosquared.com","categories":["analytics"],"domains":["*.gosquared.com","d1l6p2sc9645hc.cloudfront.net"],"examples":["data.gosquared.com","data2.gosquared.com"]},{"name":"AdsWizz","categories":["ad"],"domains":["*.adswizz.com"]},{"name":"Kameleoon","categories":["analytics"],"domains":["*.kameleoon.com"]},{"name":"AvantLink","categories":["ad"],"domains":["*.avmws.com"]},{"name":"epoq internet services","categories":["analytics"],"domains":["*.epoq.de"]},{"name":"Elastic Ad","categories":["ad"],"domains":["*.elasticad.net"]},{"name":"NetAffiliation","company":"Kwanco","categories":["ad"],"domains":["*.metaffiliation.com"]},{"name":"GetIntent RTBSuite","company":"GetIntent","categories":["ad"],"domains":["*.adhigh.net"]},{"name":"Zarget","categories":["analytics"],"domains":["*.zarget.com"]},{"name":"Knight Lab","company":"Northwestern University","categories":["utility"],"domains":["*.knightlab.com"]},{"name":"Exponential Interactive","categories":["ad"],"domains":["*.exponential.com"]},{"name":"Viacom","categories":["content"],"domains":["*.mtvnservices.com"]},{"name":"AWeber","categories":["ad"],"domains":["*.aweber.com"]},{"name":"CyberSource (Visa)","categories":["utility"],"domains":["*.authorize.net"]},{"name":"Republer","categories":["ad"],"domains":["*.republer.com"],"examples":["sync.republer.com"]},{"name":"Netlify","homepage":"https://www.netlify.com/","categories":["utility"],"domains":["*.netlify.com","*.netlifyusercontent.com"],"examples":["cloud.netlifyusercontent.com"]},{"name":"Cookie-Script.com","categories":["utility"],"domains":["*.cookie-script.com"]},{"name":"bRealTime","categories":["ad"],"domains":["*.brealtime.com"]},{"name":"AdSniper","categories":["ad"],"domains":["*.adsniper.ru","*.sniperlog.ru"]},{"name":"Bluecore","categories":["analytics"],"domains":["*.bluecore.com"],"examples":["www.bluecore.com"]},{"name":"Zmags","categories":["marketing"],"domains":["*.zmags.com"]},{"name":"Postcode Anywhere (Holdings)","categories":["utility"],"domains":["*.postcodeanywhere.co.uk"]},{"name":"Vivocha S.p.A","categories":["customer-success"],"domains":["*.vivocha.com"]},{"name":"Touch Commerce","categories":["customer-success"],"domains":["*.inq.com","*.touchcommerce.com"]},{"name":"Cachefly","categories":["utility"],"domains":["*.cachefly.net"]},{"name":"JustUno","categories":["ad"],"domains":["*.justuno.com"]},{"name":"OwnerIQ","categories":["ad"],"domains":["*.owneriq.net"]},{"name":"Opinion Stage","categories":["analytics"],"domains":["*.opinionstage.com"],"examples":["www.opinionstage.com"]},{"name":"Woopra","categories":["analytics"],"domains":["*.woopra.com"]},{"name":"Onet","categories":["ad"],"domains":["*.onet.pl"]},{"name":"Adobe Marketing Cloud","company":"Adobe Systems","categories":["ad"],"domains":["*.adobetag.com"]},{"name":"Rakuten LinkShare","company":"Rakuten","categories":["ad"],"domains":["*.linksynergy.com"]},{"name":"Acceptable Ads","homepage":"https://acceptableads.com/","categories":["ad"],"domains":["*.aaxads.com","*.aaxdetect.com"]},{"name":"WalkMe","categories":["customer-success"],"domains":["*.walkme.com"]},{"name":"FLXone","company":"Teradata","categories":["ad"],"domains":["*.pangolin.blue","*.flx1.com","d2hlpp31teaww3.cloudfront.net"]},{"name":"Bookatable","categories":["content"],"domains":["*.bookatable.com","*.livebookings.com"]},{"name":"Conversant Tag Manager","company":"Conversant","categories":["tag-manager"],"domains":["*.mplxtms.com"]},{"name":"Exponea","categories":["analytics"],"domains":["*.exponea.com"]},{"name":"Storygize","categories":["ad"],"domains":["*.storygize.net"],"examples":["www.storygize.net"]},{"name":"Ad6Media","categories":["ad"],"domains":["*.ad6media.fr"]},{"name":"Widespace","homepage":"https://www.widespace.com","categories":["ad"],"domains":["*.widespace.com"],"examples":["sync.widespace.com"]},{"name":"OnScroll","categories":["ad"],"domains":["*.onscroll.com"]},{"name":"Experian Cross-Channel Marketing Platform","company":"Experian","categories":["marketing"],"domains":["*.eccmp.com","*.ccmp.eu"]},{"name":"Mopinion","categories":["analytics"],"domains":["*.mopinion.com"]},{"name":"Netmining","company":"Ignition One","categories":["ad"],"domains":["*.netmng.com"]},{"name":"Tagboard","categories":["social"],"domains":["*.tagboard.com"]},{"name":"[24]7","categories":["customer-success"],"domains":["*.247-inc.net","*.247inc.net","d1af033869koo7.cloudfront.net"]},{"name":"Expedia","categories":["content"],"domains":["*.travel-assets.com","*.trvl-media.com","*.trvl-px.com","*.uciservice.com"],"examples":["www.trvl-px.com","www.uciservice.com"]},{"name":"SlimCut Media Outstream","company":"SlimCut Media","categories":["ad"],"domains":["*.freeskreen.com"]},{"name":"Reflektion","categories":["analytics"],"domains":["*.reflektion.com","d26opx5dl8t69i.cloudfront.net"]},{"name":"Pusher","homepage":"https://pusher.com/","categories":["utility"],"domains":["*.pusher.com","*.pusherapp.com"],"examples":["stats.pusher.com"]},{"name":"Usersnap","homepage":"https://usersnap.com","categories":["customer-success"],"domains":["*.usersnap.com"],"examples":["api.usersnap.com","cdn.usersnap.com"]},{"name":"Datonics","categories":["ad"],"domains":["*.pro-market.net"],"examples":["pbid.pro-market.net"]},{"name":"Transifex","categories":["utility"],"domains":["*.transifex.com"]},{"name":"Barilliance","categories":["analytics"],"domains":["*.barilliance.net","dn3y71tq7jf07.cloudfront.net"]},{"name":"SkyScanner","categories":["content"],"domains":["*.skyscanner.net"],"examples":["api.skyscanner.net"]},{"name":"Site24x7 Real User Monitoring","company":"Site24x7","categories":["analytics"],"domains":["*.site24x7rum.com"]},{"name":"Proper Media","categories":["content"],"domains":["*.proper.io"]},{"name":"News","categories":["social"],"domains":["*.news.com.au","*.newsanalytics.com.au","*.newsapi.com.au","*.newscdn.com.au","*.newsdata.com.au","*.newsdiscover.com.au","*.news-static.com"]},{"name":"Janrain","categories":["analytics"],"domains":["*.janrain.com","*.janrainbackplane.com","*.rpxnow.com","d3hmp0045zy3cs.cloudfront.net"]},{"name":"Resonance Insights","categories":["analytics"],"domains":["*.res-x.com"]},{"name":"Polldaddy","company":"Automattic","categories":["analytics"],"domains":["polldaddy.com"]},{"name":"Mobify","categories":["utility"],"domains":["*.mobify.com","*.mobify.net"]},{"name":"Moxie","homepage":"https://www.gomoxie.com/","categories":["utility"],"domains":["*.gomoxie.solutions"]},{"name":"Cookie Reports","categories":["utility"],"domains":["*.cookiereports.com"]},{"name":"Wow Analytics","categories":["analytics"],"domains":["*.wowanalytics.co.uk"]},{"name":"reddit","categories":["social"],"domains":["*.reddit.com","*.redditstatic.com"],"examples":["www.redditstatic.com"]},{"name":"cloudIQ","categories":["analytics"],"domains":["*.cloud-iq.com"]},{"name":"Friendbuy","categories":["ad"],"domains":["*.friendbuy.com","djnf6e5yyirys.cloudfront.net"]},{"name":"SecuredVisit","company":"4Cite Marketing","categories":["ad"],"domains":["*.securedvisit.com"]},{"name":"Microad","categories":["ad"],"domains":["*.microad.jp"]},{"name":"Ekm Systems","categories":["analytics"],"domains":["*.ekmsecure.com","*.ekmpinpoint.co.uk"],"examples":["globalstats.ekmsecure.com"]},{"name":"Spot.IM","categories":["social"],"domains":["*.spot.im"]},{"name":"Attribution","categories":["ad"],"domains":["*.attributionapp.com"]},{"name":"Qualtrics","categories":["analytics"],"domains":["*.qualtrics.com"]},{"name":"PlayAd Media Group","categories":["ad"],"domains":["*.youplay.se"]},{"name":"Betgenius","company":"Genius Sports","categories":["content"],"domains":["*.connextra.com"]},{"name":"Swoop","categories":["ad"],"domains":["*.swoop.com"]},{"name":"Vergic AB","categories":["customer-success"],"domains":["*.psplugin.com"]},{"name":"Flockler","categories":["ad"],"domains":["*.flockler.com"]},{"name":"Userzoom","categories":["analytics"],"domains":["*.userzoom.com"]},{"name":"AI Media Group","categories":["ad"],"domains":["*.aimediagroup.com"]},{"name":"Optimove","company":"Mobius Solutions","categories":["analytics"],"domains":["*.optimove.net"]},{"name":"Ziff Davis Tech","categories":["ad"],"domains":["*.adziff.com","*.zdbb.net"]},{"name":"Tag Inspector","company":"InfoTrust","categories":["analytics"],"domains":["d22xmn10vbouk4.cloudfront.net"]},{"name":"Triblio","categories":["marketing"],"domains":["*.tribl.io"]},{"name":"ShopRunner","categories":["content"],"domains":["*.shoprunner.com","*.s-9.us"]},{"name":"Oracle Recommendations On Demand","company":"Oracle","categories":["analytics"],"domains":["*.atgsvcs.com"]},{"name":"Twitter Online Conversion Tracking","company":"Twitter","categories":["ad"],"domains":["*.ads-twitter.com","analytics.twitter.com"],"examples":["static.ads-twitter.com"]},{"name":"Sojern","categories":["marketing"],"domains":["*.sojern.com"]},{"name":"emetriq","homepage":"https://www.emetriq.com/","categories":["ad"],"domains":["*.emetriq.de","*.xplosion.de"]},{"name":"Hull.js","categories":["utility"],"domains":["*.hull.io","*.hullapp.io"]},{"name":"Adobe Test & Target","company":"Adobe Systems","categories":["analytics"],"domains":["*.omtrdc.net"],"examples":["tt.omtrdc.net"]},{"name":"Remintrex","company":"SmartUp Venture","categories":["ad"],"domains":["*.remintrex.com"]},{"name":"Polyfill service","company":"Polyfill.io","categories":["other"],"domains":["*.polyfill.io"]},{"name":"Realytics","categories":["analytics"],"domains":["dcniko1cv0rz.cloudfront.net","*.realytics.net"]},{"name":"Council ad Network","categories":["ad"],"domains":["*.counciladvertising.net"]},{"name":"MaxPoint Interactive","categories":["ad"],"domains":["*.mxptint.net"]},{"name":"CleverDATA","categories":["ad"],"domains":["*.1dmp.io"]},{"name":"Mediahawk","categories":["analytics"],"domains":["*.mediahawk.co.uk"]},{"name":"Dynamic Converter","categories":["utility"],"domains":["*.dynamicconverter.com"]},{"name":"Meltwater Group","categories":["customer-success"],"domains":["*.meltwaternews.com"]},{"name":"Raygun","categories":["utility"],"domains":["*.raygun.io"]},{"name":"LoginRadius","categories":["social"],"domains":["*.loginradius.com"]},{"name":"Reactful","categories":["analytics"],"domains":["*.reactful.com"]},{"name":"InSkin Media","categories":["ad"],"domains":["*.inskinad.com","*.inskinmedia.com"]},{"name":"Pingdom RUM","homepage":"https://www.pingdom.com/product/performance-monitoring/","categories":["analytics"],"domains":["*.pingdom.net"],"examples":["rum-static.pingdom.net","rum-collector-2.pingdom.net"]},{"name":"Alchemy","company":"AndBeyond.Media","categories":["ad"],"domains":["*.andbeyond.media"]},{"name":"TripleLift","categories":["ad"],"domains":["*.3lift.com"]},{"name":"CANDDi","company":"Campaign and Digital Intelligence","categories":["ad"],"domains":["*.canddi.com"]},{"name":"Vergic Engage Platform","company":"Vergic","categories":["customer-success"],"domains":["*.vergic.com"]},{"name":"MailPlus","categories":["ad"],"domains":["*.mailplus.nl"]},{"name":"Pixalate","categories":["utility"],"domains":["*.adrta.com"]},{"name":"Exactag","categories":["ad"],"domains":["*.exactag.com"]},{"name":"VidPulse","categories":["analytics"],"domains":["*.vidpulse.com"]},{"name":"CNET Content Solutions","company":"CBS Interactive","categories":["content"],"domains":["*.cnetcontent.com"],"examples":["cdn.cnetcontent.com","ws.cnetcontent.com"]},{"name":"Braintree Payments","company":"Paypal","categories":["utility"],"domains":["*.braintreegateway.com"]},{"name":"Adthink","company":"Adthink Media","categories":["ad"],"domains":["*.adxcore.com","*.dcoengine.com"],"examples":["d.adxcore.com"]},{"name":"Freespee","categories":["customer-success"],"domains":["*.freespee.com"],"examples":["analytics.freespee.com"]},{"name":"Sailthru","categories":["analytics"],"domains":["*.sail-horizon.com","*.sail-personalize.com","*.sail-track.com"]},{"name":"DialogTech SourceTrak","company":"DialogTech","categories":["ad"],"domains":["d31y97ze264gaa.cloudfront.net"]},{"name":"Sonobi","categories":["ad"],"domains":["*.sonobi.com"]},{"name":"Investis","categories":["utility"],"domains":["*.investis.com"]},{"name":"MLveda","categories":["utility"],"domains":["*.mlveda.com"],"examples":["www.mlveda.com"]},{"name":"Fonecall","categories":["analytics"],"domains":["*.web-call-analytics.com"]},{"name":"Vee24","categories":["customer-success"],"domains":["*.vee24.com"]},{"name":"ShopStorm","categories":["utility"],"domains":["*.shopstorm.com"]},{"name":"AdvertServe","categories":["ad"],"domains":["*.advertserve.com"]},{"name":"OneSoon","categories":["analytics"],"domains":["*.adalyser.com"]},{"name":"Ghostery Enterprise","company":"Ghostery","categories":["marketing"],"domains":["*.betrad.com"]},{"name":"AnswerDash","categories":["customer-success"],"domains":["*.answerdash.com"],"examples":["p1.answerdash.com"]},{"name":"Holimetrix","homepage":"https://u360.d-bi.fr/","categories":["marketing"],"domains":["*.d-bi.fr"],"examples":["u360.d-bi.fr"]},{"name":"Neodata","categories":["ad"],"domains":["*.neodatagroup.com"]},{"name":"Iterate","homepage":"https://iteratehq.com/","categories":["analytics"],"domains":["*.iteratehq.com"]},{"name":"ReCollect","categories":["utility"],"domains":["*.recollect.net"]},{"name":"Vertical Mass","categories":["ad"],"domains":["*.vmweb.net"]},{"name":"HotelsCombined","categories":["content"],"domains":["*.datahc.com"]},{"name":"Rakuten MediaForge","company":"Rakuten","categories":["ad"],"domains":["*.mediaforge.com"]},{"name":"Filestack","categories":["content"],"domains":["*.filepicker.io"],"examples":["api.filepicker.io","dialog.filepicker.io","www.filepicker.io"]},{"name":"Web Dissector","company":"Beijing Gridsum Technologies","categories":["analytics"],"domains":["*.gridsumdissector.com","*.webdissector.com"],"examples":["www.webdissector.com"]},{"name":"User Replay","categories":["analytics"],"domains":["*.userreplay.net"]},{"name":"Reach Group","categories":["ad"],"domains":["*.redintelligence.net"]},{"name":"infogr.am","categories":["utility"],"domains":["*.infogr.am","*.jifo.co"]},{"name":"Gfycat","company":"Gycat","categories":["utility"],"domains":["*.gfycat.com"]},{"name":"Video Media Groep","categories":["ad"],"domains":["*.vmg.host","*.inpagevideo.nl"]},{"name":"Aggregate Knowledge","company":"Neustar","categories":["ad"],"domains":["*.agkn.com"]},{"name":"PebblePost","categories":["ad"],"domains":["*.pbbl.co"]},{"name":"UPS i-parcel","company":"UPS","categories":["other"],"domains":["*.i-parcel.com"]},{"name":"RichRelevance","categories":["analytics"],"domains":["*.richrelevance.com"]},{"name":"Datacamp","categories":["utility"],"domains":["*.cdn77.org"]},{"name":"UpSellit","categories":["analytics"],"domains":["*.upsellit.com"],"examples":["www.upsellit.com"]},{"name":"AdTrue","company":"FPT AdTrue","categories":["ad"],"domains":["*.adtrue.com"]},{"name":"NaviStone","categories":["ad"],"domains":["*.murdoog.com"]},{"name":"Boomtrain","categories":["ad"],"domains":["*.boomtrain.com","*.boomtrain.net"]},{"name":"Hawk Search","categories":["utility"],"domains":["*.hawksearch.com"]},{"name":"Intilery","categories":["customer-success"],"domains":["*.intilery-analytics.com"]},{"name":"Byside","homepage":"http://www.byside.com","categories":["analytics"],"domains":["*.byside.com"],"examples":["byce2.byside.com","wce2.byside.com"]},{"name":"StackAdapt","categories":["ad"],"domains":["*.stackadapt.com"]},{"name":"Alliance for Audited Media","categories":["ad"],"domains":["*.aamsitecertifier.com"]},{"name":"Cardosa Enterprises","categories":["analytics"],"domains":["*.y-track.com"]},{"name":"Extole","categories":["ad"],"domains":["*.extole.com","*.extole.io"],"examples":["origin.extole.io"]},{"name":"Mux","categories":["analytics"],"domains":["*.litix.io"]},{"name":"RightNow Service Cloud","company":"Oracle","categories":["customer-success"],"domains":["*.rightnowtech.com","*.rnengage.com"]},{"name":"TurnTo","homepage":"https://www.turntonetworks.com/","categories":["utility"],"domains":["*.turnto.com"]},{"name":"Prezi","categories":["utility"],"domains":["*.prezi.com"]},{"name":"Moovweb","categories":["utility"],"domains":["*.moovweb.net"]},{"name":"TechTarget","categories":["content"],"domains":["*.techtarget.com","*.ttgtmedia.com"]},{"name":"JingDong","categories":["content"],"domains":["*.3.com","*.jd.com"]},{"name":"Borderfree","company":"pitney bowes","categories":["utility"],"domains":["*.borderfree.com","*.fiftyone.com"]},{"name":"Klarna","categories":["utility"],"domains":["*.klarna.com"]},{"name":"Catchpoint","homepage":"https://www.catchpoint.com/","categories":["analytics"],"domains":["*.3gl.net"]},{"name":"ReachForce","categories":["ad"],"domains":["*.reachforce.com"]},{"name":"Adyen","categories":["utility"],"domains":["*.adyen.com"]},{"name":"Salesforce Live Agent","company":"Salesforce.com","categories":["customer-success"],"domains":["*.salesforceliveagent.com"]},{"name":"Elecard StreamEye","company":"Elecard","categories":["other"],"domains":["*.streameye.net"]},{"name":"The Publisher Desk","categories":["ad"],"domains":["*.206ads.com","*.publisherdesk.com"]},{"name":"Perfect Audience","company":"Marin Software","categories":["ad"],"domains":["*.prfct.co","*.marinsm.com","*.perfectaudience.com"]},{"name":"Fastest Forward","categories":["analytics"],"domains":["*.gaug.es"]},{"name":"Kargo","categories":["marketing"],"domains":["*.kargo.com"]},{"name":"ZergNet","categories":["content"],"domains":["*.zergnet.com"]},{"name":"Xaxis","homepage":"https://www.xaxis.com/","categories":["ad"],"domains":["*.247realmedia.com","*.mookie1.com","*.gmads.net"],"examples":["t.mookie1.com","odr.mookie1.com"]},{"name":"DistroScale","categories":["ad"],"domains":["*.jsrdn.com"]},{"name":"Dropbox","categories":["utility"],"domains":["*.dropboxusercontent.com"]},{"name":"PowerFront","categories":["hosting"],"domains":["*.inside-graph.com"]},{"name":"Gravatar","homepage":"http://en.gravatar.com/","categories":["social"],"domains":["*.gravatar.com"],"examples":["secure.gravatar.com","www.gravatar.com"]},{"name":"AdSupply","categories":["ad"],"domains":["*.doublepimp.com"]},{"name":"One by AOL","company":"AOL","categories":["ad"],"domains":["*.adtechjp.com","*.adtech.de"]},{"name":"Smartlook","company":"Smartsupp.com","homepage":"https://www.smartlook.com/","categories":["analytics"],"domains":["*.smartlook.com"]},{"name":"RebelMouse","categories":["ad"],"domains":["*.rebelmouse.com","*.rbl.ms"],"examples":["www.rebelmouse.com"]},{"name":"Now Interact","categories":["analytics"],"domains":["*.nowinteract.com"]},{"name":"Better Business Bureau","categories":["analytics"],"domains":["*.bbb.org"]},{"name":"content.ad","categories":["ad"],"domains":["*.content.ad"]},{"name":"Movable Ink","categories":["analytics"],"domains":["*.micpn.com"]},{"name":"DemandJump","categories":["analytics"],"domains":["*.demandjump.com"]},{"name":"Flipboard","categories":["social"],"domains":["*.flipboard.com"]},{"name":"Trialfire","categories":["analytics"],"domains":["*.trialfire.com"]},{"name":"trueAnthem","categories":["social"],"domains":["*.tru.am"]},{"name":"Improve Digital","categories":["ad"],"domains":["*.360yield.com"]},{"name":"JotForm","categories":["utility"],"domains":["*.jotformpro.com"]},{"name":"2AdPro Media Solutions","categories":["ad"],"domains":["*.2adpro.com"]},{"name":"MathJax","categories":["utility"],"domains":["*.mathjax.org"]},{"name":"Soundest","categories":["ad"],"domains":["*.soundestlink.com","*.soundest.net"]},{"name":"BlueCava","categories":["ad"],"domains":["*.bluecava.com"]},{"name":"Stamped.io","categories":["analytics"],"domains":["*.stamped.io"]},{"name":"Webtrends","categories":["analytics"],"domains":["*.webtrends.com","*.webtrendslive.com","d1q62gfb8siqnm.cloudfront.net"]},{"name":"SPX","company":"Smaato","categories":["ad"],"domains":["*.smaato.net"]},{"name":"StumbleUpon","categories":["content"],"domains":["*.stumble-upon.com","*.stumbleupon.com"]},{"name":"Ceros","categories":["other"],"domains":["ceros.com","view.ceros.com"]},{"name":"Online republic","categories":["content"],"domains":["*.imallcdn.net"]},{"name":"Ambient","company":"Ericcson","categories":["other"],"domains":["*.adnetwork.vn","*.ambientplatform.vn"]},{"name":"Imgur","categories":["utility"],"domains":["*.imgur.com"]},{"name":"SreamAMG","company":"StreamAMG","categories":["other"],"domains":["*.streamamg.com"]},{"name":"eGain","categories":["analytics"],"domains":["*.analytics-egain.com","*.egain.com"]},{"name":"BuySellAds","categories":["ad"],"domains":["*.buysellads.com"]},{"name":"Loop11","categories":["analytics"],"domains":["*.loop11.com"]},{"name":"Click4Assistance","categories":["customer-success"],"domains":["*.click4assistance.co.uk"]},{"name":"Bidtellect","categories":["ad"],"domains":["*.bttrack.com"]},{"name":"Browser-Update.org","categories":["other"],"domains":["*.browser-update.org"]},{"name":"ARM","categories":["analytics"],"domains":["*.tag4arm.com"]},{"name":"Multiview","categories":["content"],"domains":["*.multiview.com","*.track-mv.com"]},{"name":"StackExchange","categories":["social"],"domains":["*.sstatic.net"]},{"name":"ContextWeb","categories":["ad"],"domains":["*.contextweb.com"]},{"name":"YoYo","categories":["utility"],"domains":["*.goadservices.com"]},{"name":"Conversant","categories":["analytics"],"domains":["*.dotomi.com","*.dtmpub.com","*.emjcd.com","mediaplex.com","*.tqlkg.com","*.fastclick.net"],"examples":["www.tqlkg.com"]},{"name":"Sociomantic Labs","company":"DunnHumby","categories":["ad"],"domains":["*.sociomantic.com"]},{"name":"Trustev","company":"TransUnion","categories":["utility"],"domains":["*.trustev.com"]},{"name":"Quora Ads","homepage":"https://www.quora.com/business/","categories":["ad"],"domains":["*.quora.com"],"examples":["q.quora.com"]},{"name":"Peaks & Pies","categories":["analytics"],"domains":["*.bunchbox.co"]},{"name":"Trust Guard","categories":["utility"],"domains":["*.trust-guard.com"]},{"name":"Euroland","categories":["utility"],"domains":["*.euroland.com"]},{"name":"EmailCenter","categories":["ad"],"domains":["*.emailcenteruk.com"]},{"name":"HP Optimost","company":"Hewlett-Packard Development Company","categories":["marketing"],"domains":["*.hp.com","d2uncb19xzxhzx.cloudfront.net"],"examples":["by.marketinghub.hp.com","marketinghub.hp.com"]},{"name":"Retention Science","categories":["ad"],"domains":["*.retentionscience.com","d1stxfv94hrhia.cloudfront.net"]},{"name":"C3 Metrics","categories":["analytics"],"domains":["*.c3tag.com"]},{"name":"Virtual Earth","company":"Microsoft","categories":["utility"],"domains":["*.virtualearth.net"]},{"name":"AliveChat","company":"AYU Technology Solutions","categories":["customer-success"],"domains":["*.websitealive.com","*.websitealive7.com"]},{"name":"Fidelity Media","categories":["ad"],"domains":["*.fidelity-media.com"],"examples":["x.fidelity-media.com"]},{"name":"Clickagy Audience Lab","company":"Clickagy","categories":["ad"],"domains":["*.clickagy.com"],"examples":["aorta.clickagy.com"]},{"name":"Adtech (AOL)","categories":["ad"],"domains":["*.adtechus.com"]},{"name":"smartclip","categories":["ad"],"domains":["*.smartclip.net"]},{"name":"SpeedCurve LUX","homepage":"https://speedcurve.com/features/lux/","categories":["analytics"],"domains":["*.speedcurve.com"],"examples":["cdn.speedcurve.com","lux.speedcurve.com"]},{"name":"Conversion Logic","categories":["ad"],"domains":["*.conversionlogic.net"]},{"name":"ESV Digital","categories":["analytics"],"domains":["*.esearchvision.com"]},{"name":"Tradedoubler","categories":["ad"],"domains":["*.pvnsolutions.com","*.tradedoubler.com"]},{"name":"StrÃ¶er Digital Media","categories":["ad"],"domains":["*.stroeerdigitalmedia.de"]},{"name":"Ruler Analytics","company":"Ruler","categories":["analytics"],"domains":["*.nyltx.com","*.ruleranalytics.com"],"examples":["www.ruleranalytics.com"]},{"name":"RecoBell","categories":["analytics"],"domains":["*.recobell.io"]},{"name":"EmpathyBroker Site Search","company":"EmpathyBroker","categories":["utility"],"domains":["*.empathybroker.com"]},{"name":"Foxentry","company":"AVANTRO","homepage":"https://foxentry.cz/","categories":["utility"],"domains":["*.foxentry.cz"]},{"name":"Glassdoor","categories":["content"],"domains":["*.glassdoor.com"]},{"name":"TrafficJunky","homepage":"https://www.trafficjunky.com/","categories":["ad"],"domains":["*.contentabc.com","*.trafficjunky.net"],"examples":["ads2.contentabc.com","hw-cdn.contentabc.com","media.trafficjunky.net","ads.trafficjunky.net","hw-cdn.trafficjunky.net"]},{"name":"Sub2 Technologies","categories":["analytics"],"domains":["*.sub2tech.com"]},{"name":"SAS Institute","categories":["ad"],"domains":["*.aimatch.com","*.sas.com"]},{"name":"Webtrekk","categories":["analytics"],"domains":["*.wbtrk.net","*.webtrekk-asia.net","*.webtrekk.net","*.wt-eu02.net"]},{"name":"Okta","categories":["analytics"],"domains":["*.okta.com"]},{"name":"MouseStats","categories":["analytics"],"domains":["*.mousestats.com"]},{"name":"Certona","categories":["analytics"],"domains":["*.certona.net"]},{"name":"my6sense","categories":["ad"],"domains":["*.mynativeplatform.com"]},{"name":"MyBuys","categories":["analytics"],"domains":["*.mybuys.com"]},{"name":"eXTReMe digital","categories":["analytics"],"domains":["*.extreme-dm.com"]},{"name":"AdCurve","categories":["ad"],"domains":["*.shop2market.com"]},{"name":"Oracle","categories":["marketing"],"domains":["*.custhelp.com","*.eloqua.com","*.en25.com","*.estara.com","*.instantservice.com"]},{"name":"Burt","categories":["analytics"],"domains":["*.richmetrics.com","*.burt.io"]},{"name":"Silverpop","company":"IBM","categories":["ad"],"domains":["*.mkt912.com","*.mkt922.com","*.mkt932.com","*.mkt941.com","*.mkt51.net","*.mkt61.net","*.pages01.net","*.pages02.net","*.pages03.net","*.pages04.net","*.pages05.net"]},{"name":"AcuityAds","categories":["ad"],"domains":["*.acuityplatform.com"]},{"name":"Performio","categories":["ad"],"domains":["*.performax.cz"],"examples":["ut.performax.cz"]},{"name":"Visual IQ","homepage":"https://www.visualiq.com","categories":["analytics"],"domains":["*.myvisualiq.net"],"examples":["t.myvisualiq.net"]},{"name":"SmarterHQ","categories":["analytics"],"domains":["*.smarterhq.io","d1n00d49gkbray.cloudfront.net","*.smarterremarketer.net"]},{"name":"NetSeer","categories":["ad"],"domains":["*.netseer.com","*.ns-cdn.com"]},{"name":"OneTag","categories":["ad"],"domains":["*.onetag-sys.com"]},{"name":"Jivox","categories":["ad"],"domains":["*.jivox.com"]},{"name":"Expedia USA","company":"Expedia","categories":["content"],"domains":["*.expedia.com"],"examples":["www.expedia.com"]},{"name":"LiveRamp IdentityLink","homepage":"https://liveramp.com/discover-identitylink/","categories":["analytics"],"domains":["*.circulate.com","*.rlcdn.com"],"examples":["idsync.rlcdn.com","id.rlcdn.com","api.rlcdn.com","cdn.rlcdn.com"]},{"name":"Amplience","categories":["marketing"],"domains":["*.10cms.com","*.amplience.com","*.bigcontent.io","*.adis.ws"]},{"name":"ToneMedia","categories":["ad"],"domains":["*.clickfuse.com"]},{"name":"Acquisio","categories":["ad"],"domains":["*.acq.io"]},{"name":"PrintFriendly","categories":["utility"],"domains":["*.printfriendly.com"]},{"name":"Divido","categories":["utility"],"domains":["*.divido.com"]},{"name":"MyRegistry","categories":["other"],"domains":["*.myregistry.com"]},{"name":"Pagefair","categories":["ad"],"domains":["*.pagefair.com","*.pagefair.net"]},{"name":"Heatmap","categories":["analytics"],"domains":["*.heatmap.it"]},{"name":"Uniqodo","categories":["ad"],"domains":["*.uniqodo.com"]},{"name":"Recite Me","categories":["other"],"domains":["*.reciteme.com"]},{"name":"Carbon Ads","homepage":"https://www.carbonads.net/","categories":["ad"],"domains":["*.carbonads.net","*.carbonads.com"]},{"name":"Ahalogy","categories":["social"],"domains":["*.ahalogy.com"]},{"name":"AdultWebmasterEmpire.Com","categories":["ad"],"domains":["*.awempire.com"]},{"name":"Developer Media","categories":["ad"],"domains":["*.developermedia.com"]},{"name":"Adap.tv","categories":["ad"],"domains":["*.adap.tv"]},{"name":"Sokrati","categories":["marketing"],"domains":["*.sokrati.com"]},{"name":"Vizzit","homepage":"http://www.vizzit.se","categories":["analytics"],"domains":["*.vizzit.se"],"examples":["www.vizzit.se","tag.vizzit.se"]},{"name":"Ada","homepage":"https://www.ada.support/","categories":["customer-success"],"domains":["*.ada.support"],"examples":["static.ada.support"]},{"name":"LeasdBoxer","company":"LeadBoxer","categories":["ad"],"domains":["*.leadboxer.com"]},{"name":"FuelX","categories":["ad"],"domains":["*.fuelx.com"]},{"name":"BidTheatre","categories":["ad"],"domains":["*.bidtheatre.com"]},{"name":"Adzerk","categories":["ad"],"domains":["*.adzerk.net"]},{"name":"Account Kit","categories":["other"],"domains":["*.accountkit.com"]},{"name":"Segmento","categories":["ad"],"domains":["*.rutarget.ru"]},{"name":"Mark and Mini","categories":["ad"],"domains":["*.markandmini.com"],"examples":["www.markandmini.com"]},{"name":"Datalicious","categories":["tag-manager"],"domains":["*.supert.ag","*.optimahub.com"]},{"name":"Admedo","categories":["ad"],"domains":["*.a8723.com","*.adizio.com","*.admedo.com"],"examples":["pool.a8723.com"]},{"name":"HyperInzerce","homepage":"https://hyperinzerce.cz","categories":["ad"],"domains":["*.hyperinzerce.cz"],"examples":["motorky.hyperinzerce.cz"]},{"name":"Adwise","categories":["ad"],"domains":["*.adwise.bg"]},{"name":"Numberly","company":"1000mercis","categories":["ad"],"domains":["*.mmtro.com","*.nzaza.com"]},{"name":"Yummley","categories":["other"],"domains":["*.yummly.com"]},{"name":"Sophus3","categories":["analytics"],"domains":["*.s3ae.com","*.sophus3.com"]},{"name":"EMX Digital","homepage":"https://emxdigital.com","categories":["ad"],"domains":["*.emxdgt.com"]},{"name":"WebInsight","company":"dotMailer","categories":["analytics"],"domains":["*.trackedlink.net","*.trackedweb.net"]},{"name":"F@N Communications","homepage":"https://www.fancs.com/","categories":["ad"],"domains":["*.ladsp.com"],"examples":["px.ladsp.com"]},{"name":"Eyeota","categories":["ad"],"domains":["*.eyeota.net"]},{"name":"template-help.com","categories":["hosting"],"domains":["*.template-help.com"]},{"name":"HitsLink","categories":["analytics"],"domains":["*.hitslink.com"]},{"name":"Ometria","categories":["analytics"],"domains":["*.ometria.com"]},{"name":"Luminate","categories":["ad"],"domains":["*.luminate.com"]},{"name":"SLI Systems","categories":["utility"],"domains":["*.resultslist.com","*.resultspage.com","*.sli-spark.com"]},{"name":"j2 Cloud Services","categories":["ad"],"domains":["*.campaigner.com"]},{"name":"Intent IQ","categories":["ad"],"domains":["*.intentiq.com"]},{"name":"freewheel.tv","categories":["content"],"domains":["*.fwmrm.net"]},{"name":"eXelate","categories":["ad"],"domains":["*.exelator.com"]},{"name":"Webmarked","categories":["utility"],"domains":["*.webmarked.net"]},{"name":"Leaflet","categories":["utility"],"domains":["*.leafletjs.com"]},{"name":"Segmint","categories":["analytics"],"domains":["*.segmint.net"]},{"name":"360 picnic platform","company":"MediaV","categories":["ad"],"domains":["*.mediav.com"]},{"name":"adnanny","categories":["ad"],"domains":["*.adserver01.de"]},{"name":"Loggly","categories":["utility"],"domains":["d9jmv9u00p0mv.cloudfront.net"]},{"name":"Firebase","homepage":"https://developers.google.com/apis-explorer/#p/","categories":["utility"],"domains":["firebasestorage.googleapis.com","firestore.googleapis.com"]},{"name":"Connexity","homepage":"http://connexity.com/","categories":["analytics"],"domains":["*.connexity.net"]},{"name":"NEORY Marketing Cloud","company":"NEORY","categories":["marketing"],"domains":["*.ad-srv.net"]},{"name":"CoolaData","categories":["analytics"],"domains":["*.cooladata.com"]},{"name":"ChannelAdvisor","categories":["ad"],"domains":["*.channeladvisor.com","*.searchmarketing.com"]},{"name":"Ido","categories":["customer-success"],"domains":["*.idio.co"]},{"name":"Crimtan","categories":["ad"],"domains":["*.ctnsnet.com"]},{"name":"CogoCast","company":"Cogo Labs","categories":["ad"],"domains":["*.cogocast.net"]},{"name":"AdRecover","categories":["ad"],"domains":["*.adrecover.com"]},{"name":"Piwik","categories":["analytics"],"domains":["*.drtvtracker.com","*.piwikpro.com","*.raac33.net"]},{"name":"Airship","categories":["marketing"],"domains":["*.urbanairship.com","*.aswpsdkus.com"]},{"name":"Vero","company":"Semblance","categories":["ad"],"domains":["*.getvero.com","d3qxef4rp70elm.cloudfront.net"]},{"name":"bd4travel","categories":["analytics"],"domains":["*.bd4travel.com"]},{"name":"Korrelate","company":"JD Power","categories":["analytics"],"domains":["*.korrelate.net"]},{"name":"SourceKnowledge","homepage":"http://www.sourceknowledge.com","categories":["ad"],"domains":["*.provenpixel.com"]},{"name":"Adtegrity","categories":["ad"],"domains":["*.adtpix.com"]},{"name":"LockerDome","categories":["analytics"],"domains":["*.lockerdome.com"]},{"name":"Macropod BugHerd","company":"Macropod","categories":["utility"],"domains":["*.bugherd.com"],"examples":["www.bugherd.com"]},{"name":"Brandmetrics","homepage":"https://www.brandmetrics.com","categories":["analytics"],"domains":["*.brandmetrics.com"],"examples":["collector.brandmetrics.com","cdn.brandmetrics.com"]},{"name":"Admitad","categories":["ad"],"domains":["*.lenmit.com"]},{"name":"Provide Support","categories":["customer-success"],"domains":["*.providesupport.com"]},{"name":"Conversion Labs","categories":["ad"],"domains":["*.net.pl"],"examples":["conversionlabs.net.pl"]},{"name":"Yieldlab","categories":["ad"],"domains":["*.yieldlab.net"]},{"name":"Internet Brands","categories":["content"],"domains":["*.ibpxl.com"]},{"name":"Force24","categories":["ad"],"domains":["*.force24.co.uk"]},{"name":"ipinfo.io","categories":["utility"],"domains":["*.ipinfo.io"]},{"name":"Boxever","categories":["analytics"],"domains":["*.boxever.com"]},{"name":"mbr targeting","categories":["ad"],"domains":["*.m6r.eu"]},{"name":"Bet365","categories":["ad"],"domains":["*.bet365affiliates.com"]},{"name":"Worldpay","categories":["utility"],"domains":["*.worldpay.com"]},{"name":"eDigitalResearch","categories":["customer-success"],"domains":["*.edigitalresearch.com","*.edigitalsurvey.com","*.edrcdn.com"]},{"name":"Reflow","company":"Scenestealer","categories":["ad"],"domains":["*.reflow.tv"]},{"name":"audioBoom","categories":["social"],"domains":["*.audioboom.com","*.audioboo.fm"]},{"name":"Terminus","homepage":"https://terminus.com/","categories":["ad"],"domains":["*.terminus.services"]},{"name":"Thinglink","categories":["utility"],"domains":["*.thinglink.com"]},{"name":"Captify Media","categories":["ad"],"domains":["*.cpx.to"]},{"name":"Bizrate","categories":["analytics"],"domains":["*.bizrate.com"]},{"name":"APSIS Profile Cloud","company":"APSIS","categories":["analytics"],"domains":["*.innomdc.com"]},{"name":"Webkul","company":"Webkul Software","categories":["utility"],"domains":["*.webkul.com"]},{"name":"Vizury","categories":["ad"],"domains":["*.vizury.com"]},{"name":"AirPR","categories":["analytics"],"domains":["*.airpr.com"]},{"name":"Queue-it","categories":["other"],"domains":["*.queue-it.net"]},{"name":"Imagini Holdings","categories":["ad"],"domains":["*.vdna-assets.com"]},{"name":"Mention Me","categories":["ad"],"domains":["*.mention-me.com"],"examples":["tag.mention-me.com"]},{"name":"BloomReach","categories":["ad"],"domains":["*.brcdn.com","*.brsrvr.com","*.brsvr.com"]},{"name":"Infoline","categories":["analytics"],"domains":["*.ioam.de"]},{"name":"RTB House AdPilot","company":"RTB House","categories":["ad"],"domains":["*.erne.co","*.creativecdn.com"]},{"name":"MotionPoint","categories":["other"],"domains":["*.convertlanguage.com"]},{"name":"rss2json","categories":["utility"],"domains":["*.rss2json.com"]},{"name":"Business Week","company":"Bloomberg","categories":["social"],"domains":["*.bwbx.io"]},{"name":"MyFonts","categories":["cdn"],"domains":["*.myfonts.net"]},{"name":"Kenshoo","categories":["marketing"],"domains":["*.xg4ken.com"]},{"name":"Fospha","categories":["analytics"],"domains":["*.fospha.com"],"examples":["router.fospha.com"]},{"name":"PollDaddy (Automattic)","categories":["ad"],"domains":["static.polldaddy.com","*.poll.fm"]},{"name":"Lifestreet Media","categories":["social"],"domains":["*.lfstmedia.com"]},{"name":"AdSpeed","categories":["ad"],"domains":["*.adspeed.net"]},{"name":"Mynewsdesk","categories":["utility"],"domains":["*.mynewsdesk.com"]},{"name":"eyeReturn Marketing","categories":["marketing"],"domains":["*.eyereturn.com"]},{"name":"eKomi","categories":["analytics"],"domains":["*.ekomi.com","*.ekomi.de"]},{"name":"Yellow Robot","categories":["ad"],"domains":["*.backinstock.org"]},{"name":"Effiliation sa","categories":["ad"],"domains":["*.effiliation.com"]},{"name":"dotMailer Surveys","company":"dotMailer","categories":["analytics"],"domains":["*.dotmailer-surveys.com"]},{"name":"EpiServer","homepage":"https://www.episerver.com","categories":["content"],"domains":["*.episerver.net"],"examples":["dl.episerver.net"]},{"name":"Agility","categories":["hosting"],"domains":["*.agilitycms.com"]},{"name":"VisScore","categories":["analytics"],"domains":["*.visscore.com","d2hkbi3gan6yg6.cloudfront.net"]},{"name":"Apptus eSales","company":"Apptus","categories":["analytics"],"domains":["*.apptus.com"]},{"name":"SiteScout","company":"Centro","categories":["ad"],"domains":["*.pixel.ad","*.sitescout.com"]},{"name":"Adblade","categories":["ad"],"domains":["*.adblade.com"]},{"name":"Scroll","homepage":"https://scroll.com/","categories":["utility"],"domains":["*.scroll.com"],"examples":["static.scroll.com","connect.scroll.com"]},{"name":"ClickDimensions","categories":["ad"],"domains":["*.clickdimensions.com"]},{"name":"Comodo","categories":["utility"],"domains":["*.comodo.com","*.trust-provider.com","*.trustlogo.com","usertrust.com","*.comodo.net"],"examples":["ocsp.trust-provider.com"]},{"name":"Targito","company":"VIVmail.cz","homepage":"https://www.targito.com","categories":["marketing"],"domains":["*.targito.com"]},{"name":"Justuno","categories":["ad"],"domains":["d2j3qa5nc37287.cloudfront.net"]},{"name":"Emerse","homepage":"https://www.emerse.com/","categories":["ad"],"domains":["*.emerse.com"],"examples":["tracking.emerse.com"]},{"name":"A-FIS PTE","categories":["analytics"],"domains":["*.websta.me"]},{"name":"SFR","categories":["other"],"domains":["*.sfr.fr"],"examples":["elr.sfr.fr"]},{"name":"WizRocket Technologies","categories":["analytics"],"domains":["*.wzrkt.com"]},{"name":"Affiliatly","categories":["ad"],"domains":["*.affiliatly.com"],"examples":["www.affiliatly.com"]},{"name":"VertaMedia","categories":["ad"],"domains":["*.vertamedia.com"]},{"name":"Spiceworks","homepage":"https://www.spiceworks.com","categories":["analytics"],"domains":["*.spiceworks.com"],"examples":["px.spiceworks.com"]},{"name":"Google reCAPTCHA","company":"Google","categories":["utility"],"domains":["*.recaptcha.net"],"examples":["api.recaptcha.net"]},{"name":"Statuspage","company":"Atlassian","homepage":"https://www.statuspage.io","categories":["utility"],"domains":["*.statuspage.io"],"examples":["1k6wzpspjf99.statuspage.io"]},{"name":"Nanigans","categories":["ad"],"domains":["*.nanigans.com"]},{"name":"Box","categories":["hosting"],"domains":["*.box.com"]},{"name":"PhotoBucket","categories":["content"],"domains":["*.photobucket.com"]},{"name":"Adara Media","categories":["ad"],"domains":["*.yieldoptimizer.com"]},{"name":"Lengow","categories":["hosting"],"domains":["*.lengow.com"]},{"name":"AdGear","company":"Samsung Electronics","categories":["ad"],"domains":["*.adgear.com","*.adgrx.com"]},{"name":"Adelphic","categories":["ad"],"domains":["*.ipredictive.com"]},{"name":"Indeed","categories":["content"],"domains":["*.indeed.com"]},{"name":"Freetobook","categories":["content"],"domains":["*.freetobook.com"],"examples":["www.freetobook.com"]},{"name":"QuinStreet","categories":["ad"],"domains":["*.Quinstreet.com","*.b2btechleadform.com","*.qnsr.com","*.qsstats.com"],"examples":["www.qsstats.com"]},{"name":"AgilOne","categories":["marketing"],"domains":["*.agilone.com"]},{"name":"Purch","categories":["ad"],"domains":["*.bestofmedia.com","*.purch.com"],"examples":["ramp.purch.com"]},{"name":"LeadLander","categories":["analytics"],"domains":["*.formalyzer.com","*.trackalyzer.com"]},{"name":"BeamPulse","categories":["analytics"],"domains":["*.beampulse.com"]},{"name":"Beachfront Media","categories":["ad"],"domains":["*.bfmio.com"]},{"name":"VisualVisitor","categories":["ad"],"domains":["*.id-visitors.com"],"examples":["frontend.id-visitors.com"]},{"name":"SecurityMetrics","categories":["utility"],"domains":["*.securitymetrics.com"]},{"name":"EyeView","categories":["ad"],"domains":["*.eyeviewads.com"]},{"name":"IS Group","categories":["hosting"],"domains":["*.creative-serving.com"]},{"name":"dianomi","categories":["ad"],"domains":["*.dianomi.com","*.dianomioffers.co.uk"]},{"name":"ADventori","categories":["ad"],"domains":["*.adventori.com"]},{"name":"Volvelle","company":"Optomaton","categories":["ad"],"domains":["*.volvelle.tech"]},{"name":"Azure Traffic Manager","company":"Microsoft","categories":["other"],"domains":["*.gateway.net","*.trafficmanager.net"],"examples":["analytics.gateway.net"]},{"name":"feedoptimise","categories":["hosting"],"domains":["*.feedoptimise.com","d1w78njrm56n7g.cloudfront.net"]},{"name":"Samba TV","company":"Samba","categories":["content"],"domains":["*.samba.tv"]},{"name":"GeoTrust","categories":["utility"],"domains":["*.geotrust.com"]},{"name":"Confirmit","categories":["analytics"],"domains":["*.confirmit.com"]},{"name":"PERFORM","categories":["content"],"domains":["*.performgroup.com"]},{"name":"TinyURL","categories":["utility"],"domains":["*.tinyurl.com"]},{"name":"Psyma","categories":["ad"],"domains":["*.psyma.com"]},{"name":"Blogg.se","categories":["hosting"],"domains":["*.cdnme.se","*.publishme.se"]},{"name":"Digital Millennium Copyright Act Services","categories":["utility"],"domains":["*.dmca.com"]},{"name":"Smarter Click","categories":["ad"],"domains":["*.smct.co","*.smarterclick.co.uk"]},{"name":"GlobalSign","categories":["utility"],"domains":["*.globalsign.com","*.globalsign.net"]},{"name":"Vextras","categories":["other"],"domains":["*.vextras.com"]},{"name":"eWAY","company":"Web Active Pty","categories":["utility"],"domains":["*.eway.com.au"],"examples":["www.eway.com.au"]},{"name":"Bidswitch","homepage":"https://www.bidswitch.com/","categories":["ad"],"domains":["*.bidswitch.net"],"examples":["x.bidswitch.net"]},{"name":"Cludo","categories":["utility"],"domains":["*.cludo.com"]},{"name":"ShopiMind","company":"ShopIMind","categories":["ad"],"domains":["*.shopimind.com"]},{"name":"Cross Pixel Media","categories":["ad"],"domains":["*.crsspxl.com"]},{"name":"Flipp","categories":["analytics"],"domains":["*.wishabi.com","d2e0sxz09bo7k2.cloudfront.net","*.wishabi.net"]},{"name":"DigiCert","categories":["utility"],"domains":["*.digicert.com"],"examples":["ocsp.digicert.com"]},{"name":"addtocalendar","categories":["utility"],"domains":["*.addtocalendar.com"]},{"name":"Nano Interactive","categories":["ad"],"domains":["*.audiencemanager.de"]},{"name":"NextPerf","company":"Rakuten Marketing","categories":["ad"],"domains":["*.nxtck.com"]},{"name":"Digital Window","categories":["ad"],"domains":["*.awin1.com","*.zenaps.com"]},{"name":"Google Fonts","company":"Google","homepage":"https://fonts.google.com/","categories":["cdn"],"domains":["fonts.googleapis.com","fonts.gstatic.com"]},{"name":"PriceRunner","categories":["content"],"domains":["*.pricerunner.com"]},{"name":"Sectigo","homepage":"https://sectigo.com/","categories":["utility"],"domains":["*.sectigo.com"]},{"name":"APSIS Forms","company":"APSIS","categories":["other"],"domains":["*.apsisforms.com"],"examples":["forms.apsisforms.com"]},{"name":"Net Applications","categories":["analytics"],"domains":["*.hitsprocessor.com"]},{"name":"Glimr","homepage":"https://glimr.io/","categories":["analytics"],"domains":["*.glimr.io"],"examples":["pixel.glimr.io"]},{"name":"Freshchat","homepage":"https://www.freshworks.com/live-chat-software/","categories":["utility"],"domains":["*.freshchat.com"]},{"name":"Lead Forensics","categories":["ad"],"domains":["*.200summit.com","*.baw5tracker.com","*.business-path-55.com","*.bux1le001.com","*.central-core-7.com","*.direct-azr-78.com","*.explore-123.com","*.forensics1000.com","*.gldsta-02-or.com","*.green-bloc9.com","*.lansrv040.com","*.lead-123.com","*.leadforensics.com","*.mavic852.com","*.mon-com-net.com","*.peak-ip-54.com","*.snta0034.com","*.svr-prc-01.com","*.syntace-094.com","*.tghbn12.com","*.trail-web.com","*.web-01-gbl.com","*.web-cntr-07.com","*.trackdiscovery.net"],"examples":["www.baw5tracker.com","www.lansrv040.com","www.mon-com-net.com","www.peak-ip-54.com","www.tghbn12.com","www.web-01-gbl.com"]},{"name":"Rollbar","categories":["utility"],"domains":["*.rollbar.com","d37gvrvc0wt4s1.cloudfront.net"],"examples":["api.rollbar.com"]},{"name":"S4M","categories":["ad"],"domains":["*.sam4m.com"]},{"name":"AlphaSSL","categories":["utility"],"domains":["*.alphassl.com"]},{"name":"AdTheorent","categories":["ad"],"domains":["*.adentifi.com"]},{"name":"Qeryz","categories":["analytics"],"domains":["*.qeryz.com"]},{"name":"United Internet Media AG","categories":["hosting"],"domains":["*.tifbs.net","*.uicdn.net","*.uimserv.net"]},{"name":"Commission Factory","categories":["ad"],"domains":["*.cfjump.com"]},{"name":"Qode Interactive","categories":["hosting"],"domains":["*.qodeinteractive.com"]},{"name":"Atlas Solutions","homepage":"https://atlassolutions.com","categories":["analytics"],"domains":["*.atdmt.com"],"examples":["ad.atdmt.com","cx.atdmt.com"]},{"name":"codigo","homepage":"http://www.codigo.se","categories":["analytics"],"domains":["*.codigo.se"],"examples":["analytics.codigo.se"]},{"name":"Avocet Systems","categories":["ad"],"domains":["*.avocet.io"]},{"name":"Pulse Insights","categories":["analytics"],"domains":["*.pulseinsights.com"]},{"name":"InAuth","categories":["utility"],"homepage":"https://www.inauth.com/","domains":["*.cdn-net.com"],"examples":["uk.cdn-net.com"]},{"name":"Expedia Australia","company":"Expedia","categories":["content"],"domains":["*.expedia.com.au"],"examples":["www.expedia.com.au"]},{"name":"Travelocity USA","company":"Travelocity","categories":["content"],"domains":["*.travelocity.com"],"examples":["www.travelocity.com"]}];
},{}],198:[function(require,module,exports){
module.exports=require("./lib/subsets/httparchive-nostats.js");

},{"./lib/subsets/httparchive-nostats.js":200}],199:[function(require,module,exports){
const DOMAIN_IN_URL_REGEX=/:\/\/(\S*?)(:\d+)?(\/|$)/;
const DOMAIN_CHARACTERS=/([a-z0-9.-]+\.[a-z0-9]+|localhost)/i;
const IP_REGEX=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
const ROOT_DOMAIN_REGEX=/[^.]+\.([^.]+|(gov|com|co|ne)\.\w{2})$/i;

function getDomainFromOriginOrURL(originOrURL){
if(typeof originOrURL!=='string')return null;
if(originOrURL.length>10000||originOrURL.startsWith('data:'))return null;
if(DOMAIN_IN_URL_REGEX.test(originOrURL))return originOrURL.match(DOMAIN_IN_URL_REGEX)[1];
if(DOMAIN_CHARACTERS.test(originOrURL))return originOrURL.match(DOMAIN_CHARACTERS)[0];
throw new Error(`Unable to find domain in "${originOrURL}"`);
}

function getRootDomain(originOrURL){
const domain=getDomainFromOriginOrURL(originOrURL);
if(!domain)return null;
if(IP_REGEX.test(domain))return domain;
const match=domain.match(ROOT_DOMAIN_REGEX);
return match&&match[0]||domain;
}

function getEntityInDataset(entityByDomain,entityByRootDomain,originOrURL){
const domain=getDomainFromOriginOrURL(originOrURL);
const rootDomain=getRootDomain(domain);
if(!domain||!rootDomain)return undefined;
if(entityByDomain.has(domain))return entityByDomain.get(domain);
if(entityByRootDomain.has(rootDomain))return entityByRootDomain.get(rootDomain);
return undefined;
}

function createAPIFromDataset(entities_){
const entities=JSON.parse(JSON.stringify(entities_));
const entityByDomain=new Map();
const entityByRootDomain=new Map();

for(const entity of entities){
if(!entity.company)entity.company=entity.name;
entity.totalExecutionTime=Number(entity.totalExecutionTime)||0;
entity.totalOccurrences=Number(entity.totalOccurrences)||0;
entity.averageExecutionTime=entity.totalExecutionTime/entity.totalOccurrences;

for(const domain of entity.domains){
if(entityByDomain.has(domain)){
const duplicate=entityByDomain.get(domain);
throw new Error(`Duplicate domain ${domain} (${entity.name} and ${duplicate.name})`);
}

entityByDomain.set(domain,entity);

const rootDomain=getRootDomain(domain);
if(domain.startsWith('*.')){
entityByRootDomain.set(rootDomain,entity);
}
}
}

for(const[rootDomain,entity]of entityByRootDomain.entries()){
if(!entity)entityByRootDomain.delete(rootDomain);
}

const getEntity=getEntityInDataset.bind(null,entityByDomain,entityByRootDomain);
return{getEntity,getRootDomain,entities};
}

module.exports={createAPIFromDataset};

},{}],200:[function(require,module,exports){
const{createAPIFromDataset}=require('../create-entity-finder-api.js');
const entities=require('../../dist/entities-httparchive-nostats.json');
module.exports=createAPIFromDataset(entities);

},{"../../dist/entities-httparchive-nostats.json":197,"../create-entity-finder-api.js":199}],201:[function(require,module,exports){
(function(setImmediate,clearImmediate){
var nextTick=require('process/browser.js').nextTick;
var apply=Function.prototype.apply;
var slice=Array.prototype.slice;
var immediateIds={};
var nextImmediateId=0;



exports.setTimeout=function(){
return new Timeout(apply.call(setTimeout,window,arguments),clearTimeout);
};
exports.setInterval=function(){
return new Timeout(apply.call(setInterval,window,arguments),clearInterval);
};
exports.clearTimeout=
exports.clearInterval=function(timeout){timeout.close();};

function Timeout(id,clearFn){
this._id=id;
this._clearFn=clearFn;
}
Timeout.prototype.unref=Timeout.prototype.ref=function(){};
Timeout.prototype.close=function(){
this._clearFn.call(window,this._id);
};


exports.enroll=function(item,msecs){
clearTimeout(item._idleTimeoutId);
item._idleTimeout=msecs;
};

exports.unenroll=function(item){
clearTimeout(item._idleTimeoutId);
item._idleTimeout=-1;
};

exports._unrefActive=exports.active=function(item){
clearTimeout(item._idleTimeoutId);

var msecs=item._idleTimeout;
if(msecs>=0){
item._idleTimeoutId=setTimeout(function onTimeout(){
if(item._onTimeout)
item._onTimeout();
},msecs);
}
};


exports.setImmediate=typeof setImmediate==="function"?setImmediate:function(fn){
var id=nextImmediateId++;
var args=arguments.length<2?false:slice.call(arguments,1);

immediateIds[id]=true;

nextTick(function onNextTick(){
if(immediateIds[id]){


if(args){
fn.apply(null,args);
}else{
fn.call(null);
}

exports.clearImmediate(id);
}
});

return id;
};

exports.clearImmediate=typeof clearImmediate==="function"?clearImmediate:function(id){
delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate);
},{"process/browser.js":170,"timers":201}],202:[function(require,module,exports){
(function(global){





module.exports=deprecate;



















function deprecate(fn,msg){
if(config('noDeprecation')){
return fn;
}

var warned=false;
function deprecated(){
if(!warned){
if(config('throwDeprecation')){
throw new Error(msg);
}else if(config('traceDeprecation')){
console.trace(msg);
}else{
console.warn(msg);
}
warned=true;
}
return fn.apply(this,arguments);
}

return deprecated;
}









function config(name){

try{
if(!global.localStorage)return false;
}catch(_){
return false;
}
var val=global.localStorage[name];
if(null==val)return false;
return String(val).toLowerCase()==='true';
}

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],203:[function(require,module,exports){
arguments[4][106][0].apply(exports,arguments);
},{"dup":106}],204:[function(require,module,exports){
arguments[4][107][0].apply(exports,arguments);
},{"./support/isBuffer":203,"_process":170,"dup":107,"inherits":123}],205:[function(require,module,exports){
module.exports={
"version":"6.0.0"};

},{}],206:[function(require,module,exports){






'use strict';


const stackPacks=[
require('./packs/wordpress.js'),
require('./packs/react.js'),
require('./packs/angular.js'),
require('./packs/amp.js'),
require('./packs/magento.js')];


module.exports=stackPacks;

},{"./packs/amp.js":207,"./packs/angular.js":208,"./packs/magento.js":209,"./packs/react.js":210,"./packs/wordpress.js":211}],207:[function(require,module,exports){
(function(__filename){







'use strict';

const i18n=require('../../lighthouse-core/lib/i18n/i18n.js');

const ampIcon=`data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256"%3E%3Cpath d="M171.887 116.28l-53.696 89.36h-9.728l9.617-58.227-30.2.047a4.852 4.852 0 01-4.855-4.855c0-1.152 1.07-3.102 1.07-3.102l53.52-89.254 9.9.043-9.86 58.317 30.413-.043a4.852 4.852 0 014.855 4.855c0 1.088-.427 2.044-1.033 2.854l.004.004zM128 0C57.306 0 0 57.3 0 128s57.306 128 128 128 128-57.306 128-128S198.7 0 128 0z" fill="%230379c4" fill-rule="evenodd"/%3E%3C/svg%3E`;

const UIStrings={

uses_webp_images:'Consider displaying all your `amp-img` components in WebP formats while specifying an appropriate fallback for other browsers. [Learn more](https://amp.dev/documentation/components/amp-img/#example:-specifying-a-fallback-image).',

offscreen_images:'Ensure that you are you using valid `amp-img` tags for your images which automatically lazy-load outside the first viewport. [Learn more](https://amp.dev/documentation/guides-and-tutorials/develop/media_iframes_3p/?format=websites#images).',

render_blocking_resources:'Use tools such as [AMP Optimizer](https://github.com/ampproject/amp-toolbox/tree/master/packages/optimizer) to [server-side render AMP layouts](https://amp.dev/documentation/guides-and-tutorials/optimize-and-measure/server-side-rendering/).',

unminified_css:'Refer to the [AMP documentation](https://amp.dev/documentation/guides-and-tutorials/develop/style_and_layout/style_pages/) to ensure all your styles are supported.',

efficient_animated_content:'For animated content, use [amp-anim](https://amp.dev/documentation/components/amp-anim/) to minimize CPU usage while the content remains offscreen.',

uses_responsive_images:'The `amp-img` element supports the `srcset` attribute to specify which image assets to use based on the screen size.  [Learn more](https://amp.dev/documentation/guides-and-tutorials/develop/style_and_layout/art_direction/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

module.exports={
id:'amp',
iconDataURL:ampIcon,
title:'AMP',
descriptions:{
'uses-webp-images':str_(UIStrings.uses_webp_images),
'offscreen-images':str_(UIStrings.offscreen_images),
'render-blocking-resources':str_(UIStrings.render_blocking_resources),
'unminified-css':str_(UIStrings.unminified_css),
'efficient-animated-content':str_(UIStrings.efficient_animated_content),
'uses-responsive-images':str_(UIStrings.uses_responsive_images)}};


module.exports.UIStrings=UIStrings;

}).call(this,"/stack-packs/packs/amp.js");
},{"../../lighthouse-core/lib/i18n/i18n.js":77}],208:[function(require,module,exports){
(function(__filename){







'use strict';

const i18n=require('../../lighthouse-core/lib/i18n/i18n.js');

const angularIcon=`data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 250 250"%3E%3Cpath fill="%23dd0031" d="M125 30L31.9 63.2l14.2 123.1L125 230l78.9-43.7 14.2-123.1z"/%3E%3Cpath fill="%23c3002f" d="M125 30v22.2-.1V230l78.9-43.7 14.2-123.1L125 30z"/%3E%3Cpath d="M125 52.1L66.8 182.6h21.7l11.7-29.2h49.4l11.7 29.2H183L125 52.1zm17 83.3h-34l17-40.9 17 40.9z" fill="%23fff"/%3E%3C/svg%3E`;

const UIStrings={

total_byte_weight:'Apply [route-level code-splitting](https://web.dev/route-level-code-splitting-in-angular/) to minimize the size of your JavaScript bundles. Also, consider precaching assets with the [Angular service worker](https://web.dev/precaching-with-the-angular-service-worker/).',

unminified_warning:'If you are using Angular CLI, ensure that builds are generated in production mode. [Learn more](https://angular.io/guide/deployment#enable-runtime-production-mode).',

unused_javascript:'If you are using Angular CLI, include source maps into your production build to inspect your bundles. [Learn more](https://angular.io/guide/deployment#inspect-the-bundles).',

uses_responsive_images:'Consider using the `BreakpointObserver` utility in the Component Dev Kit (CDK) to manage image breakpoints. [Learn more](https://material.angular.io/cdk/layout/overview).',

uses_rel_preload:'Preload routes ahead of time to speed up navigation. [Learn more](https://web.dev/route-preloading-in-angular/).',

dom_size:'Consider virtual scrolling with the Component Dev Kit (CDK) if very large lists are being rendered. [Learn more](https://web.dev/virtualize-lists-with-angular-cdk/).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

module.exports={
id:'angular',
iconDataURL:angularIcon,
title:'Angular',
descriptions:{
'total-byte-weight':str_(UIStrings.total_byte_weight),
'unminified-css':str_(UIStrings.unminified_warning),
'unminified-javascript':str_(UIStrings.unminified_warning),
'unused-javascript':str_(UIStrings.unused_javascript),
'uses-responsive-images':str_(UIStrings.uses_responsive_images),
'uses-rel-preload':str_(UIStrings.uses_rel_preload),
'dom-size':str_(UIStrings.dom_size)}};


module.exports.UIStrings=UIStrings;

}).call(this,"/stack-packs/packs/angular.js");
},{"../../lighthouse-core/lib/i18n/i18n.js":77}],209:[function(require,module,exports){
(function(__filename){







'use strict';

const i18n=require('../../lighthouse-core/lib/i18n/i18n.js');

const magentoIcon=`data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" fill="%23f26322" viewBox="0 0 1000 1000"%3E%3Cpath d="M916.9 267.4v465.3l-111.3 67.4V331.4l-1.5-.9-303.9-189-304.6 189.2-1.2.8V799L83.1 732.6V267.4l.7-.4L500.3 10l416 257 .6.4zM560.7 468.5v383.3L500.3 890l-61-38.2V306.7l-136 84.3v476.6l197 122.5 196.4-122.5V391l-136-84.3v161.8z"/%3E%3C/svg%3E`;

const UIStrings={

uses_webp_images:'Consider searching the [Magento Marketplace](https://marketplace.magento.com/catalogsearch/result/?q=webp) for a variety of third-party extensions to leverage newer image formats.',

offscreen_images:'Consider modifying your product and catalog templates to make use of the web platform\'s [lazy loading](https://web.dev/native-lazy-loading) feature.',

disable_bundling:'Disable Magento\'s built-in [JavaScript bundling and minification](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/themes/js-bundling.html), and consider using [baler](https://github.com/magento/baler/) instead.',

unminified_css:'Enable the "Minify CSS Files" option in your store\'s Developer settings. [Learn more](https://devdocs.magento.com/guides/v2.3/performance-best-practices/configuration.html?itm_source=devdocs&itm_medium=search_page&itm_campaign=federated_search&itm_term=minify%20css%20files).',

unminified_javascript:'Use [Terser](https://www.npmjs.com/package/terser) to minify all JavaScript assets outfrom from static content deployment, and disable the built-in minification feature.',

unused_javascript:'Disable Magento\'s built-in [JavaScript bundling](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/themes/js-bundling.html).',

uses_optimized_images:'Consider searching the [Magento Marketplace](https://marketplace.magento.com/catalogsearch/result/?q=optimize%20image) for a variety of third party extensions to optimize images.',

server_response_time:'Use Magento\'s [Varnish integration](https://devdocs.magento.com/guides/v2.3/config-guide/varnish/config-varnish.html).',

uses_rel_preconnect:'Preconnect or dns-prefetch resource hints can be added by [modifying a themes\'s layout](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/layouts/xml-manage.html).',

uses_rel_preload:'`<link rel=preload>` tags can be added by [modifying a themes\'s layout](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/layouts/xml-manage.html).',

critical_request_chains:'If you are not bundling your JavaScript assets, consider using [baler](https://github.com/magento/baler).',

font_display:'Specify `@font-display` when [defining custom fonts](https://devdocs.magento.com/guides/v2.3/frontend-dev-guide/css-topics/using-fonts.html).'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

module.exports={
id:'magento',
iconDataURL:magentoIcon,
title:'Magento',
descriptions:{
'uses-webp-images':str_(UIStrings.uses_webp_images),
'offscreen-images':str_(UIStrings.offscreen_images),
'total-byte-weight':str_(UIStrings.disable_bundling),
'render-blocking-resources':str_(UIStrings.disable_bundling),
'unminified-css':str_(UIStrings.unminified_css),
'unminified-javascript':str_(UIStrings.unminified_javascript),
'unused-javascript':str_(UIStrings.unused_javascript),
'uses-optimized-images':str_(UIStrings.uses_optimized_images),
'server-response-time':str_(UIStrings.server_response_time),
'uses-rel-preconnect':str_(UIStrings.uses_rel_preconnect),
'uses-rel-preload':str_(UIStrings.uses_rel_preload),
'critical-request-chains':str_(UIStrings.critical_request_chains),
'font-display':str_(UIStrings.font_display)}};


module.exports.UIStrings=UIStrings;

}).call(this,"/stack-packs/packs/magento.js");
},{"../../lighthouse-core/lib/i18n/i18n.js":77}],210:[function(require,module,exports){
(function(__filename){







'use strict';

const i18n=require('../../lighthouse-core/lib/i18n/i18n.js');

const reactIcon=`data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"%3E %3Cg fill="%2361DAFB"%3E%3Cpath d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/%3E %3Ccircle cx="420.9" cy="296.5" r="45.7"/%3E %3Cpath d="M520.5 78.1z"/%3E%3C/g%3E%3C/svg%3E`;

const UIStrings={

unminified_css:'If your build system minifies your CSS files automatically, ensure that you are deploying the production build of your application. You can check this with the React Developer Tools extension. [Learn more](https://reactjs.org/docs/optimizing-performance.html#use-the-production-build).',

unminified_javascript:'If your build system minifies your JS files automatically, ensure that you are deploying the production build of your application. You can check this with the React Developer Tools extension. [Learn more](https://reactjs.org/docs/optimizing-performance.html#use-the-production-build).',

unused_javascript:'If you are not server-side rendering, [split your JavaScript bundles](https://web.dev/code-splitting-suspense/) with `React.lazy()`. Otherwise, code-split using a third-party library such as [loadable-components](https://www.smooth-code.com/open-source/loadable-components/docs/getting-started/).',

server_response_time:'If you are server-side rendering any React components, consider using `renderToNodeStream()` or `renderToStaticNodeStream()` to allow the client to receive and hydrate different parts of the markup instead of all at once. [Learn more](https://reactjs.org/docs/react-dom-server.html#rendertonodestream).',

redirects:'If you are using React Router, minimize usage of the `<Redirect>` component for [route navigations](https://reacttraining.com/react-router/web/api/Redirect).',

user_timings:'Use the React DevTools Profiler, which makes use of the Profiler API, to measure the rendering performance of your components. [Learn more.](https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html)',

dom_size:'Consider using a “windowing” library like `react-window` to minimize the number of DOM nodes created if you are rendering many repeated elements on the page. [Learn more](https://web.dev/virtualize-long-lists-react-window/). Also, minimize unecessary re-renders using [shouldComponentUpdate](https://reactjs.org/docs/optimizing-performance.html#shouldcomponentupdate-in-action), [PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent), or [React.memo](https://reactjs.org/docs/react-api.html#reactmemo) and [skip effects](https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects) only until certain dependencies have changed if you are using the Effect hook to improve runtime performance.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

module.exports={
id:'react',
iconDataURL:reactIcon,
title:'React',
descriptions:{
'unminified-css':str_(UIStrings.unminified_css),
'unminified-javascript':str_(UIStrings.unminified_javascript),
'unused-javascript':str_(UIStrings.unused_javascript),
'server-response-time':str_(UIStrings.server_response_time),
'redirects':str_(UIStrings.redirects),
'user-timings':str_(UIStrings.user_timings),
'dom-size':str_(UIStrings.dom_size)}};


module.exports.UIStrings=UIStrings;

}).call(this,"/stack-packs/packs/react.js");
},{"../../lighthouse-core/lib/i18n/i18n.js":77}],211:[function(require,module,exports){
(function(__filename){







'use strict';

const i18n=require('../../lighthouse-core/lib/i18n/i18n.js');

const wordpressIcon=`data:image/svg+xml,%3Csvg viewBox='0 0 122.5 122.5' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%232f3439'%3E%3Cpath d='M8.7 61.3c0 20.8 12.1 38.7 29.6 47.3l-25-68.7c-3 6.5-4.6 13.7-4.6 21.4zM96.7 58.6c0-6.5-2.3-11-4.3-14.5-2.7-4.3-5.2-8-5.2-12.3 0-4.8 3.7-9.3 8.9-9.3h.7a52.4 52.4 0 0 0-79.4 9.9h3.3c5.5 0 14-.6 14-.6 2.9-.2 3.2 4 .4 4.3 0 0-2.9.4-6 .5l19.1 57L59.7 59l-8.2-22.5c-2.8-.1-5.5-.5-5.5-.5-2.8-.1-2.5-4.5.3-4.3 0 0 8.7.7 13.9.7 5.5 0 14-.7 14-.7 2.8-.2 3.2 4 .3 4.3 0 0-2.8.4-6 .5l19 56.5 5.2-17.5c2.3-7.3 4-12.5 4-17z'/%3E%3Cpath d='M62.2 65.9l-15.8 45.8a52.6 52.6 0 0 0 32.3-.9l-.4-.7zM107.4 36a49.6 49.6 0 0 1-3.6 24.2l-16.1 46.5A52.5 52.5 0 0 0 107.4 36z'/%3E%3Cpath d='M61.3 0a61.3 61.3 0 1 0 .1 122.7A61.3 61.3 0 0 0 61.3 0zm0 119.7a58.5 58.5 0 1 1 .1-117 58.5 58.5 0 0 1-.1 117z'/%3E%3C/g%3E%3C/svg%3E`;

const UIStrings={

unused_css_rules:'Consider reducing, or switching, the number of [WordPress plugins](https://wordpress.org/plugins/) loading unused CSS in your page. To identify plugins that are adding extraneous CSS, try running [code coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) in Chrome DevTools. You can identify the theme/plugin responsible from the URL of the stylesheet. Look out for plugins that have many stylesheets in the list which have a lot of red in code coverage. A plugin should only enqueue a stylesheet if it is actually used on the page.',

uses_webp_images:'Consider using a [plugin](https://wordpress.org/plugins/search/convert+webp/) or service that will automatically convert your uploaded images to the optimal formats.',

offscreen_images:'Install a [lazy-load WordPress plugin](https://wordpress.org/plugins/search/lazy+load/) that provides the ability to defer any offscreen images, or switch to a theme that provides that functionality. Also consider using [the AMP plugin](https://wordpress.org/plugins/amp/).',

total_byte_weight:'Consider showing excerpts in your post lists (e.g. via the more tag), reducing the number of posts shown on a given page, breaking your long posts into multiple pages, or using a plugin to lazy-load comments.',

render_blocking_resources:'There are a number of WordPress plugins that can help you [inline critical assets](https://wordpress.org/plugins/search/critical+css/) or [defer less important resources](https://wordpress.org/plugins/search/defer+css+javascript/). Beware that optimizations provided by these plugins may break features of your theme or plugins, so you will likely need to make code changes.',

unminified_css:'A number of [WordPress plugins](https://wordpress.org/plugins/search/minify+css/) can speed up your site by concatenating, minifying, and compressing your styles. You may also want to use a build process to do this minification up-front if possible.',

unminified_javascript:'A number of [WordPress plugins](https://wordpress.org/plugins/search/minify+javascript/) can speed up your site by concatenating, minifying, and compressing your scripts. You may also want to use a build process to do this minification up front if possible.',

efficient_animated_content:'Consider uploading your GIF to a service which will make it available to embed as an HTML5 video.',

unused_javascript:'Consider reducing, or switching, the number of [WordPress plugins](https://wordpress.org/plugins/) loading unused JavaScript in your page. To identify plugins that are adding extraneous JS, try running [code coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) in Chrome DevTools. You can identify the theme/plugin responsible from the URL of the script. Look out for plugins that have many scripts in the list which have a lot of red in code coverage. A plugin should only enqueue a script if it is actually used on the page.',

uses_long_cache_ttl:'Read about [Browser Caching in WordPress](https://wordpress.org/support/article/optimization/#browser-caching).',

uses_optimized_images:'Consider using an [image optimization WordPress plugin](https://wordpress.org/plugins/search/optimize+images/) that compresses your images while retaining quality.',

uses_text_compression:'You can enable text compression in your web server configuration.',

uses_responsive_images:'Upload images directly through the [media library](https://wordpress.org/support/article/media-library-screen/) to ensure that the required image sizes are available, and then insert them from the media library or use the image widget to ensure the optimal image sizes are used (including those for the responsive breakpoints). Avoid using `Full Size` images unless the dimensions are adequate for their usage. [Learn More](https://wordpress.org/support/article/inserting-images-into-posts-and-pages/).',

server_response_time:'Themes, plugins, and server specifications all contribute to server response time. Consider finding a more optimized theme, carefully selecting an optimization plugin, and/or upgrading your server.'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

module.exports={
id:'wordpress',
iconDataURL:wordpressIcon,
title:'WordPress',
descriptions:{
'unused-css-rules':str_(UIStrings.unused_css_rules),
'uses-webp-images':str_(UIStrings.uses_webp_images),
'offscreen-images':str_(UIStrings.offscreen_images),
'total-byte-weight':str_(UIStrings.total_byte_weight),
'render-blocking-resources':str_(UIStrings.render_blocking_resources),
'unminified-css':str_(UIStrings.unminified_css),
'unminified-javascript':str_(UIStrings.unminified_javascript),
'efficient-animated-content':str_(UIStrings.efficient_animated_content),
'unused-javascript':str_(UIStrings.unused_javascript),
'uses-long-cache-ttl':str_(UIStrings.uses_long_cache_ttl),
'uses-optimized-images':str_(UIStrings.uses_optimized_images),
'uses-text-compression':str_(UIStrings.uses_text_compression),
'uses-responsive-images':str_(UIStrings.uses_responsive_images),
'server-response-time':str_(UIStrings.server_response_time)}};


module.exports.UIStrings=UIStrings;

}).call(this,"/stack-packs/packs/wordpress.js");
},{"../../lighthouse-core/lib/i18n/i18n.js":77}],212:[function(require,module,exports){
module.exports={
"npm":{
"angular":[
{"id":"SNYK-JS-ANGULAR-534884","severity":"high","semver":{"vulnerable":[">=1.4.0-beta.6 <1.7.9"]}},
{"id":"SNYK-JS-ANGULAR-471885","severity":"medium","semver":{"vulnerable":["<1.6.3"]}},
{"id":"SNYK-JS-ANGULAR-471882","severity":"medium","semver":{"vulnerable":["<1.6.5"]}},
{"id":"SNYK-JS-ANGULAR-471879","severity":"medium","semver":{"vulnerable":["<1.6.0-rc.0"]}},
{"id":"npm:angular:20180202","severity":"medium","semver":{"vulnerable":["<1.6.9"]}},
{"id":"npm:angular:20171018","severity":"medium","semver":{"vulnerable":["<1.6.7"]}},
{"id":"npm:angular:20160527","severity":"medium","semver":{"vulnerable":[">=1.0.0 <1.2.30"]}},
{"id":"npm:angular:20160122","severity":"medium","semver":{"vulnerable":[">=1.3.0 <1.5.0-rc.2"]}},
{"id":"npm:angular:20140608","severity":"low","semver":{"vulnerable":["<1.3.0"]}},
{"id":"npm:angular:20131113","severity":"high","semver":{"vulnerable":["<1.2.2"]}},
{"id":"npm:angular:20140908","severity":"medium","semver":{"vulnerable":["<1.3.0-rc.4"]}},
{"id":"npm:angular:20161101","severity":"medium","semver":{"vulnerable":[">=1.5.0 <1.5.9"]}},
{"id":"npm:angular:20150909","severity":"high","semver":{"vulnerable":["<1.5.0-beta.2"]}},
{"id":"npm:angular:20151205","severity":"medium","semver":{"vulnerable":["<1.5.0-rc.0"]}},
{"id":"npm:angular:20151130","severity":"medium","semver":{"vulnerable":["<1.4.10"]}},
{"id":"npm:angular:20130622","severity":"medium","semver":{"vulnerable":[">=1.0.0 <1.2.0"]}},
{"id":"npm:angular:20150807-1","severity":"medium","semver":{"vulnerable":[">=1.3.1 <1.5.0-beta.0"]}},
{"id":"npm:angular:20150807","severity":"high","semver":{"vulnerable":[">=1.0.0 <1.5.0-beta.0"]}},
{"id":"npm:angular:20150315","severity":"medium","semver":{"vulnerable":["<1.6.1"]}},
{"id":"npm:angular:20150310","severity":"high","semver":{"vulnerable":["<1.4.0-beta.6"]}},
{"id":"npm:angular:20141104","severity":"medium","semver":{"vulnerable":["<1.3.2"]}},
{"id":"npm:angular:20130621","severity":"medium","semver":{"vulnerable":["<1.2.0"]}},
{"id":"npm:angular:20140909","severity":"high","semver":{"vulnerable":[">=1.2.19 <1.2.24"]}},
{"id":"npm:angular:20130625","severity":"high","semver":{"vulnerable":["<1.1.5"]}}],

"backbone":[
{"id":"npm:backbone:20160523","severity":"medium","semver":{"vulnerable":["<0.1.2"]}},
{"id":"npm:backbone:20110701","severity":"medium","semver":{"vulnerable":["<0.5.0"]}}],

"bootstrap":[
{"id":"SNYK-JS-BOOTSTRAP-173700","severity":"medium","semver":{"vulnerable":["<3.4.1",">=4.0.0 <4.3.1"]}},
{"id":"SNYK-JS-BOOTSTRAP-73560","severity":"medium","semver":{"vulnerable":[">=4.0.0 <4.1.2"]}},
{"id":"SNYK-JS-BOOTSTRAP-72890","severity":"medium","semver":{"vulnerable":["<3.4.0"]}},
{"id":"SNYK-JS-BOOTSTRAP-72889","severity":"medium","semver":{"vulnerable":["<3.4.0"]}},
{"id":"npm:bootstrap:20180529","severity":"medium","semver":{"vulnerable":["<3.4.0",">=4.0.0 <4.1.2"]}},
{"id":"npm:bootstrap:20160627","severity":"medium","semver":{"vulnerable":["<3.4.0",">=4.0.0-alpha <4.0.0-beta.2"]}},
{"id":"npm:bootstrap:20120510","severity":"medium","semver":{"vulnerable":["<2.1.0"]}}],

"dojo":[
{"id":"SNYK-JS-DOJO-559224","severity":"medium","semver":{"vulnerable":["<1.11.10",">=1.12.0 <1.12.8",">=1.13.0 <1.13.7",">=1.14.0 <1.14.6",">=1.15.0 <1.15.3",">=1.16.0 <1.16.2"]}},
{"id":"SNYK-JS-DOJO-174934","severity":"medium","semver":{"vulnerable":[">=1.0.0 <1.0.3",">=1.1.0 <1.1.2",">=1.2.0 <1.2.4",">=1.3.0 <1.3.3",">=1.4.0 <1.4.2"]}},
{"id":"SNYK-JS-DOJO-174933","severity":"medium","semver":{"vulnerable":["<1.2.0"]}},
{"id":"SNYK-JS-DOJO-72305","severity":"medium","semver":{"vulnerable":["<1.14"]}},
{"id":"npm:dojo:20180818","severity":"medium","semver":{"vulnerable":["<1.10.10",">=1.11.0 <1.11.6",">=1.12.0 <1.12.4",">=1.13.0 <1.13.1"]}},
{"id":"npm:dojo:20160523","severity":"medium","semver":{"vulnerable":["<1.1.0"]}},
{"id":"npm:dojo:20100614-6","severity":"medium","semver":{"vulnerable":["<1.4.2"]}},
{"id":"npm:dojo:20100614","severity":"high","semver":{"vulnerable":[">=0.4 <0.4.4",">=1.0 <1.0.3",">=1.1 <1.1.2",">=1.2 <1.2.4",">=1.3 <1.3.3",">=1.4 <1.4.2"]}},
{"id":"npm:dojo:20090409","severity":"medium","semver":{"vulnerable":["<1.1"]}}],

"foundation-sites":[
{"id":"npm:foundation-sites:20170802","severity":"medium","semver":{"vulnerable":["<6.0.0"]}},
{"id":"npm:foundation-sites:20150619","severity":"medium","semver":{"vulnerable":["<5.5.3"]}},
{"id":"npm:foundation-sites:20120717","severity":"medium","semver":{"vulnerable":[">=3.0.0 <3.0.6"]}}],

"google-closure-library":[
{"id":"SNYK-JS-GOOGLECLOSURELIBRARY-561341","severity":"medium","semver":{"vulnerable":["<20200315.0.0"]}},
{"id":"SNYK-JS-GOOGLECLOSURELIBRARY-174519","severity":"medium","semver":{"vulnerable":[">=20190121.0.0 <20190301.0.0"]}}],

"handlebars":[
{"id":"SNYK-JS-HANDLEBARS-567742","severity":"medium","semver":{"vulnerable":["<4.6.0"]}},
{"id":"SNYK-JS-HANDLEBARS-534988","severity":"high","semver":{"vulnerable":[">=4.0.0 <4.5.3","<3.0.8"]}},
{"id":"SNYK-JS-HANDLEBARS-534478","severity":"high","semver":{"vulnerable":[">=4.0.0 <4.5.3","<3.0.8"]}},
{"id":"SNYK-JS-HANDLEBARS-480388","severity":"high","semver":{"vulnerable":[">=4.0.0 <4.4.5"]}},
{"id":"SNYK-JS-HANDLEBARS-469063","severity":"high","semver":{"vulnerable":[">=4.0.0 <4.3.0","<3.8.0"]}},
{"id":"SNYK-JS-HANDLEBARS-174183","severity":"high","semver":{"vulnerable":[">=3.0.0 <3.0.7",">=4.1.0 <4.1.2",">=4.0.0 <4.0.14"]}},
{"id":"SNYK-JS-HANDLEBARS-173692","severity":"high","semver":{"vulnerable":["<4.0.14",">=4.1.0 <4.1.2"]}},
{"id":"npm:handlebars:20151207","severity":"medium","semver":{"vulnerable":["<4.0.0"]}},
{"id":"npm:handlebars:20110425","severity":"medium","semver":{"vulnerable":["<=1.0.0-beta.3"]}}],

"highcharts":[
{"id":"npm:highcharts:20180225","severity":"high","semver":{"vulnerable":["<6.1.0"]}}],

"jquery":[
{"id":"SNYK-JS-JQUERY-567880","severity":"medium","semver":{"vulnerable":[">=1.2.0 <3.5.0"]}},
{"id":"SNYK-JS-JQUERY-565129","severity":"medium","semver":{"vulnerable":[">=1.0.3 <3.5.0"]}},
{"id":"SNYK-JS-JQUERY-174006","severity":"medium","semver":{"vulnerable":["<3.4.0"]}},
{"id":"npm:jquery:20160529","severity":"low","semver":{"vulnerable":[">=3.0.0-rc1 <3.0.0"]}},
{"id":"npm:jquery:20150627","severity":"medium","semver":{"vulnerable":["<1.12.2",">=1.12.3 <2.2.2",">=2.2.3 <3.0.0"]}},
{"id":"npm:jquery:20140902","severity":"medium","semver":{"vulnerable":[">=1.4.2 <1.6.2"]}},
{"id":"npm:jquery:20120206","severity":"medium","semver":{"vulnerable":[">=1.7.1 <1.9.0"]}},
{"id":"npm:jquery:20110606","severity":"medium","semver":{"vulnerable":["<1.6.3"]}}],

"jquery-mobile":[
{"id":"SNYK-JS-JQUERYMOBILE-174599","severity":"medium","semver":{"vulnerable":["<=1.5.0-alpha.1"]}},
{"id":"npm:jquery-mobile:20120802","severity":"medium","semver":{"vulnerable":["<1.2.0"]}}],

"jquery-ui":[
{"id":"npm:jquery-ui:20121127","severity":"medium","semver":{"vulnerable":["<1.10.0"]}},
{"id":"npm:jquery-ui:20100903","severity":"medium","semver":{"vulnerable":["<1.10.0"]}},
{"id":"npm:jquery-ui:20160721","severity":"high","semver":{"vulnerable":["<1.12.0"]}}],

"knockout":[
{"id":"npm:knockout:20180213","severity":"medium","semver":{"vulnerable":["<3.5.0-beta"]}},
{"id":"npm:knockout:20130701","severity":"medium","semver":{"vulnerable":[">=2.1.0-pre <3.0.0"]}}],

"lodash":[
{"id":"SNYK-JS-LODASH-567746","severity":"medium","semver":{"vulnerable":["<=4.17.15"]}},
{"id":"SNYK-JS-LODASH-450202","severity":"high","semver":{"vulnerable":["<4.17.12"]}},
{"id":"SNYK-JS-LODASH-73639","severity":"medium","semver":{"vulnerable":["<4.17.11"]}},
{"id":"SNYK-JS-LODASH-73638","severity":"high","semver":{"vulnerable":["<4.17.11"]}},
{"id":"npm:lodash:20180130","severity":"medium","semver":{"vulnerable":["<4.17.5"]}}],

"moment":[
{"id":"npm:moment:20170905","severity":"low","semver":{"vulnerable":["<2.19.3"]}},
{"id":"npm:moment:20161019","severity":"medium","semver":{"vulnerable":["<2.15.2"]}},
{"id":"npm:moment:20160126","severity":"medium","semver":{"vulnerable":["<2.11.2"]}}],

"mustache":[
{"id":"npm:mustache:20151207","severity":"medium","semver":{"vulnerable":["<2.2.1"]}},
{"id":"npm:mustache:20110814","severity":"medium","semver":{"vulnerable":["< 0.3.1"]}}],

"next":[
{"id":"SNYK-JS-NEXT-561584","severity":"medium","semver":{"vulnerable":["<9.3.2"]}},
{"id":"SNYK-JS-NEXT-174590","severity":"high","semver":{"vulnerable":["<2.4.1"]}},
{"id":"SNYK-JS-NEXT-72454","severity":"medium","semver":{"vulnerable":[">=7.0.0 <7.0.2"]}},
{"id":"npm:next:20180124","severity":"high","semver":{"vulnerable":["<4.2.3"]}},
{"id":"npm:next:20170607","severity":"medium","semver":{"vulnerable":["<2.4.3"]}},
{"id":"npm:next:20170601","severity":"high","semver":{"vulnerable":["<2.4.1",">=3.0.0-beta1 <3.0.0-beta7"]}}],

"react":[
{"id":"npm:react:20150318","severity":"high","semver":{"vulnerable":[">=0.0.1 <0.14.0"]}},
{"id":"npm:react:20131217","severity":"medium","semver":{"vulnerable":[">=0.5.0 <0.5.2",">=0.4.0 <0.4.2"]}}],

"riot":[
{"id":"npm:riot:20131114","severity":"medium","semver":{"vulnerable":["<0.9.6"]}}],

"socket.io":[
{"id":"npm:socket.io:20120417","severity":"medium","semver":{"vulnerable":["<0.9.6"]}},
{"id":"npm:socket.io:20120323","severity":"medium","semver":{"vulnerable":["<0.9.7"]}}],

"vue":[
{"id":"npm:vue:20170829","severity":"medium","semver":{"vulnerable":["<2.4.3"]}},
{"id":"npm:vue:20170401","severity":"medium","semver":{"vulnerable":["<2.3.0-beta.1"]}},
{"id":"npm:vue:20180802","severity":"medium","semver":{"vulnerable":["<2.5.17"]}},
{"id":"npm:vue:20180222","severity":"low","semver":{"vulnerable":["<2.5.14"]}}],

"yui":[
{"id":"npm:yui:20130604","severity":"medium","semver":{"vulnerable":[">=3.0.0 <3.10.1","=3.10.2"]}},
{"id":"npm:yui:20130515","severity":"medium","semver":{"vulnerable":["<3.10.0 >=3.0.0"]}},
{"id":"npm:yui:20121030","severity":"medium","semver":{"vulnerable":["<3.0.0 >=2.4.0"]}},
{"id":"npm:yui:20120428","severity":"medium","semver":{"vulnerable":["<3.5.1 >=3.5.0-PR1"]}},
{"id":"npm:yui:20101025","severity":"medium","semver":{"vulnerable":["<2.8.2 >=2.4.0"]}}]}};



},{}],"lighthouse-plugin-publisher-ads/audits/ad-blocking-tasks":[function(require,module,exports){
(function(__filename){









const AdRequestTime=require('../computed/ad-request-time');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const LongTasks=require('../computed/long-tasks');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{getAttributableUrl}=require('../utils/tasks');
const{isAdScript}=require('../utils/resource-classification');
const{URL}=require('url');

const UIStrings={

title:'No long tasks blocking ad-related network requests',
failureTitle:'Avoid long tasks that block ad-related network requests',
description:'Tasks blocking the main thread can delay ad requests and cause '+
'a poor user experience. Consider removing long blocking tasks or moving '+
'them off of the main thread. These tasks can be especially detrimental to '+
'performance on less powerful devices. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/ad-blocking-tasks'+
').',
failureDisplayValue:'{timeInMs, number, seconds} s blocked',
columnScript:'Attributable URL',
columnStartTime:'Start',
columnDuration:'Duration'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);














const HEADINGS=[
{
key:'script',
itemType:'url',
text:str_(UIStrings.columnScript)},

{
key:'startTime',
itemType:'ms',
text:str_(UIStrings.columnStartTime),
granularity:1},

{
key:'duration',
itemType:'ms',
text:str_(UIStrings.columnDuration),
granularity:1}];




class AdBlockingTasks extends Audit{




static get meta(){
return{
id:'ad-blocking-tasks',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['traces','devtoolsLogs']};

}







static async audit(artifacts,context){




const LONG_TASK_DUR_MS=
context.settings.throttlingMethod=='simulate'?200:100;
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricData={trace,devtoolsLog,settings:context.settings};
let longTasks=[];
try{
longTasks=await LongTasks.request(metricData,context);
}catch(e){
return auditNotApplicable.InvalidTiming;
}

if(!longTasks.length){
return auditNotApplicable.NoTasks;
}

const{timing:endTime}=
await AdRequestTime.request(metricData,context);

if(!(endTime>0)){
return auditNotApplicable.NoAdRelatedReq;
}

const blocking=[];
for(const longTask of longTasks){
if(longTask.startTime>endTime||
longTask.duration<LONG_TASK_DUR_MS){
continue;
}
const scriptUrl=getAttributableUrl(longTask);
if(scriptUrl&&isAdScript(new URL(scriptUrl))){
continue;
}

const url=scriptUrl&&new URL(scriptUrl);
const displayUrl=url&&url.origin+url.pathname||'Other';

blocking.push({

script:displayUrl,
rawUrl:scriptUrl,
startTime:longTask.startTime,
endTime:longTask.endTime,
duration:longTask.duration,
isTopLevel:!longTask.parent});

}

let filteredBlocking=Array.from(blocking);
const taskLimit=10;
if(filteredBlocking.length>taskLimit){



filteredBlocking=blocking.
filter(b=>b.script!=='Other'&&b.isTopLevel).

sort((a,b)=>b.duration-a.duration).
splice(0,taskLimit).
sort((a,b)=>a.startTime-b.startTime);
}

const blockedTime=filteredBlocking.reduce(
(sum,t)=>t.isTopLevel?sum+t.duration:sum,0);
const failed=filteredBlocking.length>0;
return{
score:failed?0:1,
numericValue:blockedTime,
numericUnit:'millisecond',
displayValue:failed?
str_(UIStrings.failureDisplayValue,{timeInMs:blockedTime}):
'',
details:AdBlockingTasks.makeTableDetails(HEADINGS,filteredBlocking),
extendedInfo:{
rawBlocking:blocking}};


}}


module.exports=AdBlockingTasks;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/ad-blocking-tasks.js");
},{"../computed/ad-request-time":140,"../computed/long-tasks":142,"../messages/common-strings":144,"../utils/resource-classification":152,"../utils/tasks":153,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77,"url":"url"}],"lighthouse-plugin-publisher-ads/audits/ad-render-blocking-resources":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');

const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{getTimingsByRecord}=require('../utils/network-timing');
const{isAdTag}=require('../utils/resource-classification');
const{URL}=require('url');

const UIStrings={
title:'Minimal render-blocking resources found',
failureTitle:'Avoid render-blocking resources',
description:'Render-blocking resources slow down tag load times. Consider '+
'loading critical JS/CSS inline or loading scripts asynchronously or '+
'loading the tag earlier in the head. [Learn more]('+
'https://developers.google.com/web/tools/lighthouse/audits/blocking-resources'+
').',
failureDisplayValue:'Up to {timeInMs, number, seconds} s tag load time '+
'improvement',
columnUrl:'Resource',
columnStartTime:'Start',
columnDuration:'Duration'};





const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const THRESHOLD_MS=100;





const HEADINGS=[
{
key:'url',
itemType:'url',
text:str_(UIStrings.columnUrl)},

{
key:'startTime',
itemType:'ms',
text:str_(UIStrings.columnStartTime),
granularity:1},

{
key:'duration',
itemType:'ms',
text:str_(UIStrings.columnDuration),
granularity:1}];




class AdRenderBlockingResources extends Audit{




static get meta(){
return{
id:'ad-render-blocking-resources',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
scoreDisplayMode:'binary',
description:str_(UIStrings.description),
requiredArtifacts:
['LinkElements','ScriptElements','devtoolsLogs','traces']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const tag=networkRecords.find(req=>isAdTag(new URL(req.url)));
if(!tag){
return auditNotApplicable.NoTag;
}


const timingsByRecord=
await getTimingsByRecord(trace,devtoolsLog,context);




const blockingElementUrls=new Set();
for(const link of artifacts.LinkElements){


if(link.href&&link.rel=='stylesheet'){

blockingElementUrls.add(link.href);
}
}
for(const script of artifacts.ScriptElements){
if(script.src&&!script.defer&&!script.async){
blockingElementUrls.add(script.src);
}
}

const blockingNetworkRecords=networkRecords.


filter(r=>r.endTime<tag.startTime).
filter(r=>r!=tag.initiatorRequest).



filter(r=>r.initiator.type='parser').
filter(r=>blockingElementUrls.has(r.url));

const tableView=blockingNetworkRecords.
map(r=>Object.assign({url:r.url},timingsByRecord.get(r)));

tableView.sort((a,b)=>a.endTime-b.endTime);

const tagTime=timingsByRecord.get(tag)||{startTime:Infinity};

const startTimes=tableView.map(r=>r.startTime);

const endTimes=tableView.map(r=>r.endTime);

const blockingStart=Math.min(...startTimes);
const blockingEnd=Math.min(Math.max(...endTimes),tagTime.startTime);
const opportunity=blockingEnd-blockingStart;
let displayValue='';
if(tableView.length>0&&opportunity>0){
displayValue=str_(
UIStrings.failureDisplayValue,{timeInMs:opportunity});
}

const failed=tableView.length>0&&opportunity>THRESHOLD_MS;
return{
score:failed?0:1,
numericValue:tableView.length,
numericUnit:'unitless',
displayValue,
details:{
opportunity,
...AdRenderBlockingResources.makeTableDetails(HEADINGS,tableView)}};


}}


module.exports=AdRenderBlockingResources;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/ad-render-blocking-resources.js");
},{"../messages/common-strings":144,"../utils/network-timing":150,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/lib/i18n/i18n":77,"url":"url"}],"lighthouse-plugin-publisher-ads/audits/ad-request-critical-path":[function(require,module,exports){
(function(__filename){














const ComputedAdRequestTime=require('../computed/ad-request-time');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{computeAdRequestWaterfall}=require('../utils/graph');




const UIStrings={
title:'Ad request waterfall',
failureTitle:'Reduce critical path for ad loading',
description:'Consider reducing the number of resources, loading multiple '+
'resources simultaneously, or loading resources earlier to improve ad '+
'speed. Requests that block ad loading can be found below. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/ad-request-critical-path'+
').',
displayValue:'{serialResources, plural, =1 {1 serial resource} other {# serial resources}}',
columnUrl:'Request',
columnType:'Type',
columnStartTime:'Start',
columnEndTime:'End'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





const HEADINGS=[
{
key:'url',
itemType:'url',
text:str_(UIStrings.columnUrl)},

{
key:'type',
itemType:'text',
text:str_(UIStrings.columnType)},

{
key:'startTime',
itemType:'ms',
text:str_(UIStrings.columnStartTime),
granularity:1},

{
key:'endTime',
itemType:'ms',
text:str_(UIStrings.columnEndTime),
granularity:1}];








function computeDepth(requests){
let prevEnd=0;
let hops=0;
for(const{startTime,endTime}of requests){
if(startTime>prevEnd){
++hops;
prevEnd=endTime;
}else{
prevEnd=Math.min(prevEnd,endTime);
}
}
return hops;
}

const MINIMUM_NOTEWORTHY_IDLE_GAP_MS=150;







function computeIdleTimes(blockingRequests){
let maxEndSoFar=Infinity;
const idleTimes=[];
for(let i=0;i<blockingRequests.length;){
const{startTime,endTime}=blockingRequests[i];
if(startTime-maxEndSoFar>MINIMUM_NOTEWORTHY_IDLE_GAP_MS){
idleTimes.push(startTime-maxEndSoFar);
}

maxEndSoFar=endTime;
while(++i<blockingRequests.length&&
blockingRequests[i].startTime<maxEndSoFar){
maxEndSoFar=Math.max(maxEndSoFar,blockingRequests[i].endTime);
}
}
return idleTimes;
}





class AdRequestCriticalPath extends Audit{




static get meta(){
return{
id:'ad-request-critical-path',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
scoreDisplayMode:'informative',
requiredArtifacts:['devtoolsLogs','traces']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricData={trace,devtoolsLog,settings:context.settings};

const adRequestTime=
await ComputedAdRequestTime.request(metricData,context);

const tableView=
(await computeAdRequestWaterfall(trace,devtoolsLog,context)).
filter(r=>r.startTime>0&&r.startTime<r.endTime&&
r.endTime<adRequestTime.timing);

if(!tableView.length){
return auditNotApplicable.NoAds;
}
const depth=computeDepth(tableView);
const failed=depth>3;

for(const row of tableView){
delete row.record;
}

const idleTimes=computeIdleTimes(tableView);
const maxIdleTime=Math.max(...idleTimes);
const totalIdleTime=idleTimes.reduce((total,time)=>total+time,0);

return{
numericValue:depth,
numericUnit:'unitless',
score:failed?0:1,
displayValue:str_(UIStrings.displayValue,{serialResources:depth}),
details:{
size:tableView.length,
depth,
maxIdleTime,
totalIdleTime,
...AdRequestCriticalPath.makeTableDetails(HEADINGS,tableView)}};


}}


module.exports=AdRequestCriticalPath;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/ad-request-critical-path.js");
},{"../computed/ad-request-time":140,"../messages/common-strings":144,"../utils/graph":149,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/ad-request-from-page-start":[function(require,module,exports){
(function(__filename){














const ComputedAdRequestTime=require('../computed/ad-request-time');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{auditNotApplicable,runWarning}=require('../messages/common-strings');
const{Audit}=require('lighthouse');

const UIStrings={
title:'First ad request time',
failureTitle:'Reduce time to send the first ad request',
description:'This metric measures the elapsed time from the start of page '+
'load until the first ad request is made. Delayed ad requests will '+
'decrease impressions and viewability, and have a negative impact on ad '+
'revenue. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/ad-request-from-page-start'+
').',
displayValue:'{timeInMs, number, seconds} s'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




class AdRequestFromPageStart extends Audit{




static get meta(){
return{
id:'ad-request-from-page-start',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),

scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['devtoolsLogs','traces']};

}





static get defaultOptions(){
return{
simulate:{
p10:4350,
median:8000},

provided:{
p10:1900,
median:3500}};


}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricData={trace,devtoolsLog,settings:context.settings};
const scoreOptions=context.options[
context.settings.throttlingMethod=='provided'?
'provided':
'simulate'];


const{timing}=await ComputedAdRequestTime.request(metricData,context);
if(!(timing>0)){
const naAuditProduct=auditNotApplicable.NoAds;
naAuditProduct.runWarnings=[runWarning.NoAds];
return naAuditProduct;
}

return{
numericValue:timing*1e-3,
numericUnit:'millisecond',
score:Audit.computeLogNormalScore(
scoreOptions,
timing),

displayValue:str_(UIStrings.displayValue,{timeInMs:timing})};

}}


module.exports=AdRequestFromPageStart;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/ad-request-from-page-start.js");
},{"../computed/ad-request-time":140,"../messages/common-strings":144,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/ad-top-of-viewport":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{isAdIframe}=require('../utils/resource-classification');

const UIStrings={
title:'No ad found at the very top of the viewport',
failureTitle:'Move the top ad further down the page',
description:'Over 10% of ads are never viewed because users scroll past '+
'them before they become viewable. By moving ad slots away from the very '+
'top of the viewport, users are more likely to see ads before scrolling '+
'away. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/ad-top-of-viewport'+
').',
failureDisplayValue:'A scroll of {valueInPx, number} px would hide half of your topmost ad',
columnSlot:'Top Slot ID'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


const SCROLL_PX_THRESHOLD=100;





const HEADINGS=[
{key:'slot',itemType:'text',text:str_(UIStrings.columnSlot)}];




class AdTopOfViewport extends Audit{




static get meta(){
return{
id:'ad-top-of-viewport',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ViewportDimensions','IFrameElements']};

}






static audit(artifacts){
const viewport=artifacts.ViewportDimensions;
const slots=artifacts.IFrameElements.filter(isAdIframe).
filter(slot=>
slot.clientRect.width*slot.clientRect.height>1&&
!slot.isPositionFixed).
map(slot=>({
midpoint:slot.clientRect.top+slot.clientRect.height/2,
id:slot.id}));


if(!slots.length){
return auditNotApplicable.NoVisibleSlots;
}

const topSlot=slots.reduce((a,b)=>a.midpoint<b.midpoint?a:b);

const inViewport=topSlot.midpoint<viewport.innerHeight;

if(!inViewport){
return auditNotApplicable.NoAdsViewport;
}

const score=inViewport&&topSlot.midpoint<SCROLL_PX_THRESHOLD?0:1;

return{
score,
numericValue:topSlot.midpoint,
numericUnit:'unitless',

displayValue:score?'':
str_(UIStrings.failureDisplayValue,{valueInPx:topSlot.midpoint}),
details:AdTopOfViewport.makeTableDetails(
HEADINGS,
score?[]:[{slot:topSlot.id}])};


}}


module.exports=AdTopOfViewport;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/ad-top-of-viewport.js");
},{"../messages/common-strings":144,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/ads-in-viewport":[function(require,module,exports){
(function(__filename){














const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');

const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{isBoxInViewport}=require('../utils/geometry');
const{isGptIframe}=require('../utils/resource-classification');

const UIStrings={
title:'Few or no ads loaded outside viewport',
failureTitle:'Avoid loading ads until they are nearly on-screen',
description:'Too many ads loaded outside the viewport lowers viewability '+
'rates and impacts user experience. Consider loading ads below the fold '+
'lazily as the user scrolls down. Consider using GPT\'s [Lazy Loading API]('+
'https://developers.google.com/doubleclick-gpt/reference#googletag.PubAdsService_enableLazyLoad'+
'). [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/ads-in-viewport'+
').',
failureDisplayValue:'{hiddenAds, plural, =1 {1 ad} '+
'other {# ads}} out of view',
columnSlot:'Slots Outside Viewport'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





const HEADINGS=[
{key:'slot',itemType:'text',text:str_(UIStrings.columnSlot)}];



class AdsInViewport extends Audit{




static get meta(){
return{
id:'ads-in-viewport',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ViewportDimensions','IFrameElements']};

}





static audit(artifacts){
const viewport=artifacts.ViewportDimensions;
const slots=artifacts.IFrameElements.
filter(iframe=>isGptIframe(iframe)&&
iframe.clientRect.height*iframe.clientRect.width>1);

if(!slots.length){
return auditNotApplicable.NoVisibleSlots;
}


const nonvisible=slots.
filter(slot=>!isBoxInViewport(slot.clientRect,viewport)).
map(slot=>({slot:slot.id})).
sort((a,b)=>a.slot.localeCompare(b.slot));

const visibleCount=slots.length-nonvisible.length;

return{
numericValue:visibleCount/slots.length,
numericUnit:'unitless',
score:nonvisible.length>3?0:1,
displayValue:nonvisible.length?
str_(UIStrings.failureDisplayValue,{hiddenAds:nonvisible.length}):
'',
details:AdsInViewport.makeTableDetails(HEADINGS,nonvisible)};

}}


module.exports=AdsInViewport;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/ads-in-viewport.js");
},{"../messages/common-strings":144,"../utils/geometry":148,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/async-ad-tags":[function(require,module,exports){
(function(__filename){














const array=require('../utils/array.js');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');

const MainResource=require('lighthouse/lighthouse-core/computed/main-resource');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{isAdTag,isStaticRequest}=require('../utils/resource-classification');
const{URL}=require('url');

const UIStrings={
title:'Ad tag is loaded asynchronously',
failureTitle:'Load ad tag asynchronously',
description:'Loading the ad tag synchronously blocks content rendering '+
'until the tag is fetched and loaded. Consider using the `async` attribute '+
'to load gpt.js and/or adsbygoogle.js asynchronously. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/async-ad-tags'+
').'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




function isAsync(tagReq){




return tagReq.priority=='Low'||isStaticRequest(tagReq);
}


class AsyncAdTags extends Audit{




static get meta(){
return{
id:'async-ad-tags',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','URL']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const mainResource=
await MainResource.request({URL:artifacts.URL,devtoolsLog},context);
const tagReqs=networkRecords.
filter(req=>isAdTag(new URL(req.url))).
filter(req=>req.frameId===mainResource.frameId);

if(!tagReqs.length){
return auditNotApplicable.NoTag;
}

const numSync=array.count(tagReqs,isAsync)-tagReqs.length;
const passed=numSync===0;
return{
score:Number(passed),
numericValue:numSync,
numericUnit:'unitless'};

}}


module.exports=AsyncAdTags;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/async-ad-tags.js");
},{"../messages/common-strings":144,"../utils/array.js":145,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/computed/main-resource":12,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/lib/i18n/i18n":77,"url":"url"}],"lighthouse-plugin-publisher-ads/audits/bid-request-from-page-start":[function(require,module,exports){
(function(__filename){














const ComputedBidRequestTime=require('../computed/bid-request-time');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');

const UIStrings={
title:'First bid request time',
failureTitle:'Reduce time to send the first bid request',
description:'This metric measures the elapsed time from the start of page '+
'load until the first bid request is made. Delayed bid requests will '+
'decrease impressions and viewability, and have a negative impact on ad '+
'revenue. [Learn More]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/bid-request-from-page-start'+
').',
displayValue:'{timeInMs, number, seconds} s'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




class BidRequestFromPageStart extends Audit{




static get meta(){
return{
id:'bid-request-from-page-start',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),

scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['devtoolsLogs','traces']};

}






static get defaultOptions(){
return{
simulate:{
p10:8900,
median:15500},

provided:{
p10:1900,
median:3500}};


}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricData={trace,devtoolsLog,settings:context.settings};
const scoreOptions=context.options[
context.settings.throttlingMethod=='provided'?
'provided':
'simulate'];


const{timing}=await ComputedBidRequestTime.request(metricData,context);
if(!(timing>0)){
return auditNotApplicable.NoBids;
}

return{
numericValue:timing*1e-3,
numericUnit:'millisecond',
score:Audit.computeLogNormalScore(
scoreOptions,
timing),

displayValue:str_(UIStrings.displayValue,{timeInMs:timing})};

}}


module.exports=BidRequestFromPageStart;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/bid-request-from-page-start.js");
},{"../computed/bid-request-time":141,"../messages/common-strings":144,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/blocking-load-events":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');

const TraceOfTab=require('lighthouse/lighthouse-core/computed/trace-of-tab');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{computeAdRequestWaterfall}=require('../utils/graph');
const{getTimingsByRecord}=require('../utils/network-timing');




const UIStrings={
title:'Ads not blocked by load events',
failureTitle:'Avoid waiting on load events',
description:'Waiting on load events increases ad latency. '+
'To speed up ads, eliminate the following load event handlers. '+
'[Learn More]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/blocking-load-events'+
').',
displayValue:'{timeInMs, number, seconds} s blocked',
columnEvent:'Event Name',
columnTime:'Event Time',
columnScript:'Script',
columnBlockedUrl:'Blocked URL',
columnFunctionName:'Function'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





const HEADINGS=[
{key:'eventName',itemType:'text',text:str_(UIStrings.columnEvent)},
{key:'time',itemType:'ms',text:str_(UIStrings.columnTime),granularity:1},
{key:'url',itemType:'url',text:str_(UIStrings.columnScript)},
{key:'functionName',itemType:'text',text:str_(UIStrings.columnFunctionName)}];








function findOriginalCallFrame(request){
const{record}=request;
let stack=record&&record.initiator&&record.initiator.stack;
if(!stack){
return undefined;
}
while(stack.parent){
stack=stack.parent;
}
return stack.callFrames[stack.callFrames.length-1];
}





function findTraceEventOfCallFrame(callFrame,traceEvents){
return traceEvents.find(e=>e.name=='FunctionCall'&&
e.args.data&&

e.args.data.functionName==callFrame.functionName&&

e.args.data.scriptId==callFrame.scriptId&&

e.args.data.url==callFrame.url&&


Math.abs(e.args.data.lineNumber==callFrame.lineNumber)<2&&

Math.abs(e.args.data.columnNumber==callFrame.columnNumber)<2);
}















function findEventIntervals(eventName,traceEvents){
let openInterval={};
const intervals=[];
for(const e of traceEvents){
if(e.name==`${eventName}EventStart`){
openInterval={start:e.ts,end:Infinity,eventName};
}else if(e.name==`${eventName}EventEnd`){
openInterval.end=e.ts;
intervals.push(openInterval);
}
}
return intervals;
}















function quantifyBlockedTime(blockingEvent,networkRecords,timingsByRecord){
const eventScript=networkRecords.find(
r=>r.url==blockingEvent.url);
const blockedRequest=networkRecords.find(
r=>r.url==blockingEvent.blockedUrl);
if(!eventScript||!blockedRequest){
return 0;
}
const scriptLoadTime=timingsByRecord.get(eventScript);
const blockedRequestLoadTime=timingsByRecord.get(blockedRequest);
if(!scriptLoadTime||!blockedRequestLoadTime){
return 0;
}
return blockedRequestLoadTime.startTime-scriptLoadTime.endTime;
}





class BlockingLoadEvents extends Audit{




static get meta(){
return{
id:'blocking-load-events',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','traces']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const{timings,processEvents}=await TraceOfTab.request(trace,context);

const timingsByRecord=
await getTimingsByRecord(trace,devtoolsLog,context);

const criticalRequests=
(await computeAdRequestWaterfall(trace,devtoolsLog,context)).

sort((a,b)=>a.startTime-b.startTime);

if(!criticalRequests.length){
return auditNotApplicable.NoAdRelatedReq;
}

const eventTimes=[
...findEventIntervals('domContentLoaded',processEvents),
...findEventIntervals('load',processEvents)];

const blockingEvents=[];
const seen=new Set();
for(const r of criticalRequests){
const callFrame=findOriginalCallFrame(r);
if(!callFrame){


continue;
}
const json=JSON.stringify(callFrame);
if(seen.has(json)){

continue;
}
seen.add(json);
const traceEvent=findTraceEventOfCallFrame(callFrame,processEvents);
if(!traceEvent){
continue;
}
const interval=eventTimes.find(interval=>
interval.start<=traceEvent.ts&&traceEvent.ts<=interval.end);
if(interval){

const blockingEvent=Object.assign({
eventName:interval.eventName,
blockedUrl:r.url,
time:timings[interval.eventName],
blockedTime:Infinity},
callFrame);
blockingEvent.blockedTime=quantifyBlockedTime(
blockingEvent,networkRecords,timingsByRecord);
blockingEvents.push(blockingEvent);
}
}

const failed=blockingEvents.length>0;
let blockedTime=0;
if(failed){
blockedTime=Math.min(...blockingEvents.map(e=>e.blockedTime));
}
return{
numericValue:blockingEvents.length,
numericUnit:'unitless',
score:failed?0:1,
displayValue:failed&&blockedTime?
str_(UIStrings.displayValue,{timeInMs:blockedTime}):
'',
details:BlockingLoadEvents.makeTableDetails(HEADINGS,blockingEvents)};

}}


module.exports=BlockingLoadEvents;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/blocking-load-events.js");
},{"../messages/common-strings":144,"../utils/graph":149,"../utils/network-timing":150,"lighthouse":62,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/computed/trace-of-tab":44,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/bottleneck-requests":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{computeAdRequestWaterfall}=require('../utils/graph');




const UIStrings={
title:'No bottleneck requests found',
failureTitle:'Avoid bottleneck requests',
description:'Speed up, load earlier, parallelize, or eliminate the '+
'following requests and their dependencies in order to speed up ad '+
'loading. [Learn More]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/bottleneck-requests'+
').',
displayValue:'{blockedTime, number, seconds} s spent blocked on requests',
columnUrl:'Blocking Request',
columnInitiatorUrl:'Initiator Request',
columnStartTime:'Start',
columnSelfTime:'Exclusive Time',
columnDuration:'Total Time'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);






const HEADINGS=[
{
key:'url',
itemType:'url',
text:str_(UIStrings.columnUrl)},

{
key:'selfTime',
itemType:'ms',
text:str_(UIStrings.columnSelfTime),
granularity:1},

{
key:'duration',
itemType:'ms',
text:str_(UIStrings.columnDuration),
granularity:1}];







class BottleneckRequests extends Audit{




static get meta(){
return{
id:'bottleneck-requests',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','traces']};

}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];

const waterfall=
(await computeAdRequestWaterfall(trace,devtoolsLog,context)).
filter(r=>r.startTime>0);
if(!waterfall.length){
return auditNotApplicable.NoAdRelatedReq;
}
const CRITICAL_SELF_TIME_MS=250;
const CRITICAL_DURATION_MS=1000;

const isBottleneck=r=>
r.selfTime>CRITICAL_SELF_TIME_MS||r.duration>CRITICAL_DURATION_MS;


const cost=r=>r.selfTime*3+r.duration;
const criticalRequests=waterfall.
filter(isBottleneck).
sort((a,b)=>cost(b)-cost(a)).

slice(0,5);
const blockedTime=

criticalRequests.reduce((sum,r)=>sum+r.selfTime,0)/1000;
const failed=blockedTime*1e3>CRITICAL_SELF_TIME_MS*4;

for(const row of criticalRequests){
delete row.record;
}
return{
numericValue:criticalRequests.length,
numericUnit:'unitless',
score:failed?0:1,
displayValue:failed?str_(UIStrings.displayValue,{blockedTime}):'',
details:
BottleneckRequests.makeTableDetails(HEADINGS,criticalRequests)};

}}


module.exports=BottleneckRequests;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/bottleneck-requests.js");
},{"../messages/common-strings":144,"../utils/graph":149,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/duplicate-tags":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');

const MainResource=require('lighthouse/lighthouse-core/computed/main-resource');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const NetworkRequest=require('lighthouse/lighthouse-core/lib/network-request');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{containsAnySubstring}=require('../utils/resource-classification');
const{URL}=require('url');

const UIStrings={
title:'No duplicate tags found',
failureTitle:'Load tags only once',
description:'Loading a tag more than once in the same page is redundant '+
'and adds overhead without benefit. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/duplicate-tags'+
').',
failureDisplayValue:'{duplicateTags, plural, =1 {1 duplicate tag} other {# duplicate tags}}',
columnScript:'Script',
columnNumReqs:'Duplicate Requests',
columnFrameId:'Frame ID'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);

const tags=[
'googletagservices.com/tag/js/gpt.js',
'securepubads.g.doubleclick.net/tag/js/gpt.js',
'pagead2.googlesyndication.com/pagead/js/adsbygoogle.js',
'pagead2.googlesyndication.com/pagead/js/show_ads.js'];






const HEADINGS=[
{key:'script',itemType:'url',text:str_(UIStrings.columnScript)},
{key:'numReqs',itemType:'text',text:str_(UIStrings.columnNumReqs)}];





class DuplicateTags extends Audit{




static get meta(){
return{
id:'duplicate-tags',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','URL']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const mainResource=
await MainResource.request({URL:artifacts.URL,devtoolsLog},context);
const tagReqs=networkRecords.
filter(r=>r.frameId===mainResource.frameId).
filter(r=>containsAnySubstring(r.url,tags)).
filter(r=>r.resourceType===NetworkRequest.TYPES.Script);

if(!tagReqs.length){
return auditNotApplicable.NoTags;
}

const tagCounts=new Map();
for(const record of tagReqs){

const script=new URL(record.url).pathname;
const count=tagCounts.get(script)||0;
tagCounts.set(script,count+1);
}

const dups=[];
for(const[script,numReqs]of tagCounts){
if(numReqs>1){
dups.push({script,numReqs});
}
}

return{
numericValue:dups.length,
numericUnit:'unitless',
score:dups.length?0:1,
details:DuplicateTags.makeTableDetails(HEADINGS,dups),
displayValue:dups.length?
str_(UIStrings.failureDisplayValue,{duplicateTags:dups.length}):
''};

}}


module.exports=DuplicateTags;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/duplicate-tags.js");
},{"../messages/common-strings":144,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/computed/main-resource":12,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/lib/i18n/i18n":77,"lighthouse/lighthouse-core/lib/network-request":86,"url":"url"}],"lighthouse-plugin-publisher-ads/audits/first-ad-render":[function(require,module,exports){
(function(__filename){














const ComputedAdRenderTime=require('../computed/ad-render-time');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{auditNotApplicable,runWarning}=require('../messages/common-strings');
const{Audit}=require('lighthouse');

const UIStrings={
title:'Latency of first ad render',
failureTitle:'Reduce time to render first ad',
description:'This metric measures the time for the first ad iframe to '+
'render from page navigation. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/first-ad-render'+
').',
displayValue:'{timeInMs, number, seconds} s'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




class FirstAdRender extends Audit{




static get meta(){

return{
id:'first-ad-render',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),

scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,

requiredArtifacts:['devtoolsLogs','traces']};

}







static get defaultOptions(){
return{
simulate:{
p10:12900,
median:22000},

provided:{
p10:2750,
median:3700}};



}





static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricData={
devtoolsLog,
trace,
settings:context.settings};

const{timing}=await ComputedAdRenderTime.request(metricData,context);

if(!(timing>0)){
const naAuditProduct=auditNotApplicable.NoAdRendered;
naAuditProduct.runWarnings=[runWarning.NoAdRendered];
return naAuditProduct;
}

const scoreOptions=context.options[
context.settings.throttlingMethod=='provided'?
'provided':
'simulate'];


return{
numericValue:timing*1e-3,
numericUnit:'millisecond',
score:Audit.computeLogNormalScore(
scoreOptions,
timing),

displayValue:
str_(UIStrings.displayValue,{timeInMs:timing})};

}}

module.exports=FirstAdRender;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/first-ad-render.js");
},{"../computed/ad-render-time":139,"../messages/common-strings":144,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/full-width-slots":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{isAdRequest}=require('../utils/resource-classification');
const{URL}=require('url');

const UIStrings={
title:'Ad slots effectively use horizontal space',
failureTitle:'Increase the width of ad slots',
description:'Ad slots that utilize most of the page width generally '+
'experience increased click-through rate over smaller ad sizes. We '+
'recommend leaving no more than 25% of the viewport width unutilized on '+
'mobile devices.',
failureDisplayValue:'{percentUnused, number, percent} of viewport width '+
'is underutilized'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


class FullWidthSlots extends Audit{




static get meta(){
return{
id:'full-width-slots',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ViewportDimensions','devtoolsLogs']};

}






static async audit(artifacts,context){
const devtoolsLogs=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLogs,context);
const viewport=artifacts.ViewportDimensions;
const vpWidth=viewport.innerWidth;


const adRequestUrls=networkRecords.
filter(isAdRequest).
map(record=>new URL(record.url));

if(!adRequestUrls.length){
return auditNotApplicable.NoAds;
}

const sizeArrs=adRequestUrls.map(url=>
url.searchParams.get('prev_iu_szs')||url.searchParams.get('sz'));



const sizes=sizeArrs.join('|').split(/[|,]/);

const widths=sizes.map(size=>parseInt(size.split('x')[0])).
filter(w=>w<=vpWidth&&w>1);

if(!widths.length){
return auditNotApplicable.NoValidAdWidths;
}

const maxWidth=Math.max(...widths);

const pctUnoccupied=1-maxWidth/vpWidth;

const score=pctUnoccupied>.25?0:1;


return{
score,
numericValue:pctUnoccupied,
numericUnit:'unitless',

displayValue:score?
'':
str_(UIStrings.failureDisplayValue,{percentUnused:pctUnoccupied})};

}}


module.exports=FullWidthSlots;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/full-width-slots.js");
},{"../messages/common-strings":144,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/lib/i18n/i18n":77,"url":"url"}],"lighthouse-plugin-publisher-ads/audits/gpt-bids-parallel":[function(require,module,exports){














const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const{assert}=require('../utils/asserts');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{getCriticalGraph}=require('../utils/graph');
const{getTimingsByRecord}=require('../utils/network-timing');
const{isGptImplTag,isBidRequest,getAbbreviatedUrl,getHeaderBidder}=require('../utils/resource-classification');




const id='gpt-bids-parallel';
const UIStrings={
title:'GPT and bids loaded in parallel',
failureTitle:'Load GPT and bids in parallel',
description:'To optimize ad loading, bid requests should not wait on GPT '+
'to load. This issue can often be fixed by making sure that bid requests '+
'do not wait on `googletag.pubadsReady` or `googletag.cmd.push`. '+
'[Learn More]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/gpt-bids-parallel'+
').',
columnBidder:'Bidder',
columnUrl:'URL',
columnStartTime:'Start',
columnDuration:'Duration'};






const HEADINGS=[
{key:'bidder',itemType:'text',text:UIStrings.columnBidder},
{key:'url',itemType:'url',text:UIStrings.columnUrl},
{key:'startTime',itemType:'ms',text:UIStrings.columnStartTime},
{key:'duration',itemType:'ms',text:UIStrings.columnDuration}];





class GptBidsInParallel extends Audit{




static get meta(){
return{
id,
title:UIStrings.title,
failureTitle:UIStrings.failureTitle,
description:UIStrings.description,
requiredArtifacts:['devtoolsLogs','traces']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const network=await NetworkRecords.request(devtoolsLog,context);

const pubadsImpl=network.find(r=>isGptImplTag(r.url));
if(!pubadsImpl){
return auditNotApplicable.NoGpt;
}

const bids=network.filter(isBidRequest).
filter(b=>b.frameId==pubadsImpl.frameId);
if(!bids.length){
return auditNotApplicable.NoBids;
}


const timingsByRecord=await getTimingsByRecord(
trace,devtoolsLog,context);
const tableView=[];
const seen=new Set();
for(const bid of bids){
if(getCriticalGraph(network,trace.traceEvents,bid).has(pubadsImpl)){
const{startTime,endTime}=timingsByRecord.get(bid)||bid;
const bidder=assert(getHeaderBidder(bid.url));
if(seen.has(bidder)){


continue;
}
seen.add(bidder);
tableView.push({
bidder,
url:getAbbreviatedUrl(bid.url),
startTime,
duration:endTime-startTime});

}
}
const failed=tableView.length>0;
return{
numericValue:tableView.length,
numericUnit:'unitless',
score:failed?0:1,
details:failed?
GptBidsInParallel.makeTableDetails(HEADINGS,tableView):undefined};

}}


module.exports=GptBidsInParallel;
module.exports.UIStrings=UIStrings;

},{"../messages/common-strings":144,"../utils/asserts":146,"../utils/graph":149,"../utils/network-timing":150,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/computed/network-records":39}],"lighthouse-plugin-publisher-ads/audits/loads-ad-tag-over-https":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{isAdTag}=require('../utils/resource-classification');
const{URL}=require('url');

const UIStrings={
title:'Ad tag is loaded over HTTPS',
failureTitle:'Load ad tag over HTTPS',
description:'For privacy and security, always load GPT/AdSense over '+
'HTTPS. Insecure pages should explicitly request the ad script securely. '+
'GPT Example: `<script async '+
'src=\"https://securepubads.g.doubleclick.net/tag/js/gpt.js\">` '+
'AdSense Example: `<script async '+
'src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\">`'+
'. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/loads-ad-tag-over-https'+
').'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);







class LoadsAdTagOverHttps extends Audit{




static get meta(){
return{
id:'loads-ad-tag-over-https',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs']};

}






static async audit(artifacts,context){
const devtoolsLogs=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLogs,context);

const pageReq=networkRecords.find(record=>record.statusCode==200);
if(!pageReq){
return auditNotApplicable.NoRecords;
}

const adRequests=networkRecords.
filter(record=>isAdTag(new URL(record.url)));

const secureAdRequests=adRequests.filter(request=>request.isSecure);


const details={
type:'debugdata',
numAdTagHttpReqs:adRequests.length-secureAdRequests.length,
numAdTagHttpsReqs:secureAdRequests.length};


if(!adRequests.length){
const returnVal=auditNotApplicable.NoTag;
returnVal.details=details;
return returnVal;
}



return{
numericValue:details.numAdTagHttpReqs,
score:details.numAdTagHttpReqs?0:1,
details};

}}


module.exports=LoadsAdTagOverHttps;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/loads-ad-tag-over-https.js");
},{"../messages/common-strings":144,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/lib/i18n/i18n":77,"url":"url"}],"lighthouse-plugin-publisher-ads/audits/loads-gpt-from-sgdn":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{isGptTag}=require('../utils/resource-classification');
const{URL}=require('url');

const UIStrings={
title:'GPT tag is loaded from recommended host',
failureTitle:'Load GPT from recommended host',
description:'Load GPT from \'securepubads.g.doubleclick.net\' to reduce '+
'GPT load time. By loading GPT from the same host as ad requests, browsers '+
'can avoid an additional DNS lookup and HTTP connection. Example:`'+
'<script async src=\"https://securepubads.g.doubleclick.net/tag/js/gpt.js\">'+
'`. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/loads-gpt-from-sgdn'+
').'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




class LoadsGptFromSgdn extends Audit{




static get meta(){
return{
id:'loads-gpt-from-sgdn',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const networkRecords=await NetworkRecords.request(devtoolsLog,context);
const gptUrl=networkRecords.map(r=>new URL(r.url)).find(isGptTag);
if(!gptUrl){
return auditNotApplicable.NoGpt;
}
const passed=gptUrl.host==='securepubads.g.doubleclick.net';
return{
score:Number(passed),
numericValue:Number(!passed),
numericUnit:'unitless'};

}}


module.exports=LoadsGptFromSgdn;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/loads-gpt-from-sgdn.js");
},{"../messages/common-strings":144,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/lib/i18n/i18n":77,"url":"url"}],"lighthouse-plugin-publisher-ads/audits/script-injected-tags":[function(require,module,exports){
(function(__filename){














const array=require('../utils/array.js');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const PageDependencyGraph=require('lighthouse/lighthouse-core/computed/page-dependency-graph');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{computeAdRequestWaterfall}=require('../utils/graph');
const{getScriptEvaluationTimes}=require('../utils/network-timing');






const MINIMUM_LOAD_TIME_MS=400;

const UIStrings={
title:'Ad scripts are loaded statically',
failureTitle:'Load ad scripts statically',
description:'Load the following scripts directly with '+
'`<script async src=...>` instead of injecting scripts with JavaScript. '+
'Doing so allows the browser to preload scripts sooner. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/script-injected-tags'+
').',
failureDisplayValue:'Load {tags, plural, =1 {1 script} other {# scripts}} statically',
columnUrl:'Script',
columnLoadTime:'Load Time'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);





const HEADINGS=[
{
key:'url',
itemType:'url',
text:str_(UIStrings.columnUrl)},

{
key:'loadTime',
itemType:'ms',
granularity:1,
text:str_(UIStrings.columnLoadTime)}];



const STATICALLY_LOADABLE_TAGS=[
/amazon-adsystem\.com\/aax2\/apstag.js/,
/js-sec\.indexww\.com\/ht\/p\/.*\.js/,
/pubads\.g\.doubleclick\.net\/tag\/js\/gpt\.js/,
/static\.criteo\.net\/js\/.*\/publishertag\.js/,
/www\.googletagservices\.com\/tag\/js\/gpt\.js/,
/pagead2\.googlesyndication\.com\/pagead\/js\/adsbygoogle\.js/];










function initiatedByInlineScript(record){
if(record.initiator.type!=='script'){

return false;
}
const initiators=PageDependencyGraph.getNetworkInitiators(record);
if(initiators.length!==1||initiators[0]!==record.documentURL){

return false;
}
return true;
}







async function findStaticallyLoadableTags(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const trace=artifacts.traces[Audit.DEFAULT_PASS];

const tagReqs=[];



const criticalRequests=
await computeAdRequestWaterfall(trace,devtoolsLog,context);
for(const{record}of criticalRequests){
if(record.resourceType!=='Script'){

continue;
}
if(initiatedByInlineScript(record)||
STATICALLY_LOADABLE_TAGS.find(t=>record.url.match(t))){
tagReqs.push(record);
}
}
return tagReqs;
}


class StaticAdTags extends Audit{




static get meta(){
return{
id:'script-injected-tags',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','traces']};

}






static async audit(artifacts,context){
const tagReqs=await findStaticallyLoadableTags(artifacts,context);
if(!tagReqs.length){
return auditNotApplicable.NoTag;
}

const seenUrls=new Set();
const tableView=[];

const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const scriptTimes=
await getScriptEvaluationTimes(trace,devtoolsLog,context);
for(const tag of tagReqs){
if(seenUrls.has(tag.url))continue;
seenUrls.add(tag.url);
const relatedTags=tagReqs.filter(t=>t.url===tag.url);

const numStatic=array.count(
relatedTags,t=>t.initiator.type==='parser'&&!t.isLinkPreload);
if(numStatic===0){
const loadTime=scriptTimes.get(tag.url)||0;
if(loadTime<MINIMUM_LOAD_TIME_MS){
continue;
}
tableView.push({
url:tag.url,
loadTime});

}
}
tableView.sort((a,b)=>a.loadTime-b.loadTime);

const failed=tableView.length>0;
return{
displayValue:failed?
str_(UIStrings.failureDisplayValue,{tags:tableView.length}):'',
score:Number(!failed),
numericValue:tableView.length,
numericUnit:'unitless',
details:StaticAdTags.makeTableDetails(HEADINGS,tableView)};

}}


module.exports=StaticAdTags;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/script-injected-tags.js");
},{"../messages/common-strings":144,"../utils/array.js":145,"../utils/graph":149,"../utils/network-timing":150,"lighthouse":62,"lighthouse/lighthouse-core/computed/page-dependency-graph":40,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/serial-header-bidding":[function(require,module,exports){
(function(__filename){














const ComputedAdRequestTime=require('../computed/ad-request-time');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');

const MainResource=require('lighthouse/lighthouse-core/computed/main-resource');
const NetworkRecords=require('lighthouse/lighthouse-core/computed/network-records');
const{auditNotApplicable}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{bucket}=require('../utils/array');
const{getTimingsByRecord}=require('../utils/network-timing');
const{isCacheable}=require('../utils/network');
const{isGoogleAds,getHeaderBidder,getAbbreviatedUrl}=require('../utils/resource-classification');
const{URL}=require('url');




const UIStrings={
title:'Header bidding is parallelized',
failureTitle:'Parallelize bid requests',
description:'Send header bidding requests simultaneously, rather than '+
'serially, to retrieve bids more quickly. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/serial-header-bidding'+
').',
columnBidder:'Bidder',
columnUrl:'URL',
columnStartTime:'Start',
columnDuration:'Duration'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


const MIN_BID_DURATION=.05;














const HEADINGS=[
{key:'bidder',itemType:'text',text:str_(UIStrings.columnBidder)},
{key:'url',itemType:'url',text:str_(UIStrings.columnUrl)},
{key:'startTime',itemType:'ms',text:str_(UIStrings.columnStartTime)},
{key:'duration',itemType:'ms',text:str_(UIStrings.columnDuration)}];







const RequestType={
AD:'ad',
BID:'bid',
UNKNOWN:'unknown'};









function constructRecords(records,recordType,timings){

const results=[];
for(const record of records){
const timing=timings.get(record);
if(!timing)continue;
results.push(Object.assign({},timing,{
url:getAbbreviatedUrl(record.url),
type:recordType}));

}
return results;
}






function checkRecordType(record){
if(isGoogleAds(new URL(record.url))){
return RequestType.AD;
}else if(getHeaderBidder(record.url)){
return RequestType.BID;
}else{
return RequestType.UNKNOWN;
}
}







function isPossibleBid(rec){
return(rec.resourceSize==null||rec.resourceSize>0)&&
rec.resourceType!='Image'&&
rec.endTime-rec.startTime>=MIN_BID_DURATION&&
!isCacheable(rec);
}






function clearQueryString(url){
const u=new URL(url);
delete u.search;
return u.toString();
}





class SerialHeaderBidding extends Audit{




static get meta(){
return{
id:'serial-header-bidding',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['devtoolsLogs','traces','URL']};

}






static async audit(artifacts,context){
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const unfilteredNetworkRecords=
await NetworkRecords.request(devtoolsLog,context);
if(!unfilteredNetworkRecords.length){
return auditNotApplicable.NoRecords;
}

const mainResource=
await MainResource.request({URL:artifacts.URL,devtoolsLog},context);



const networkRecords=unfilteredNetworkRecords.
filter(isPossibleBid).
filter(r=>r.frameId==mainResource.frameId);







const recordsByType=bucket(networkRecords,checkRecordType);

if(!recordsByType.has(RequestType.BID)){
return auditNotApplicable.NoBids;
}

const metricData={trace,devtoolsLog,settings:context.settings};
const{timing:adRequestTime}=
await ComputedAdRequestTime.request(metricData,context);


const timingsByRecord=await getTimingsByRecord(
trace,devtoolsLog,context);

const headerBiddingRecords=constructRecords(
recordsByType.get(RequestType.BID)||[],RequestType.BID,
timingsByRecord);

let serialBids=[];
let previousBid;


for(const record of headerBiddingRecords){


if(adRequestTime>0&&record.endTime>adRequestTime){
continue;
}
record.bidder=getHeaderBidder(record.url);
record.url=clearQueryString(record.url);

if(previousBid&&record.startTime>=previousBid.endTime){
serialBids.push(previousBid);
serialBids.push(record);
}

if(!previousBid||record.endTime<previousBid.endTime||

record.startTime>=previousBid.endTime){
previousBid=record;
}
}


serialBids=Array.from(new Set(serialBids));


const hasSerialHeaderBidding=serialBids.length>1;
return{
numericValue:Number(hasSerialHeaderBidding),
numericUnit:'unitless',
score:hasSerialHeaderBidding?0:1,
details:hasSerialHeaderBidding?
SerialHeaderBidding.makeTableDetails(HEADINGS,serialBids):undefined};

}}


module.exports=SerialHeaderBidding;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/serial-header-bidding.js");
},{"../computed/ad-request-time":140,"../messages/common-strings":144,"../utils/array":145,"../utils/network":151,"../utils/network-timing":150,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/computed/main-resource":12,"lighthouse/lighthouse-core/computed/network-records":39,"lighthouse/lighthouse-core/lib/i18n/i18n":77,"url":"url"}],"lighthouse-plugin-publisher-ads/audits/tag-load-time":[function(require,module,exports){
(function(__filename){














const ComputedTagLoadTime=require('../computed/tag-load-time');
const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{auditNotApplicable,runWarning}=require('../messages/common-strings');
const{Audit}=require('lighthouse');

const UIStrings={
title:'Tag load time',
failureTitle:'Reduce tag load time',
description:'This metric measures the time for the ad tag\'s '+
'implementation script (pubads_impl.js for GPT; adsbygoogle.js for '+
'AdSense) to load after the page loads. [Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/tag-load-time'+
').',
displayValue:'{timeInMs, number, seconds} s'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);




class TagLoadTime extends Audit{




static get meta(){
return{
id:'tag-load-time',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),

scoreDisplayMode:Audit.SCORING_MODES.NUMERIC,
requiredArtifacts:['devtoolsLogs','traces']};

}






static get defaultOptions(){
return{
simulate:{
p10:6500,
median:10000},

provided:{
p10:1200,
median:2000}};


}






static async audit(artifacts,context){
const trace=artifacts.traces[Audit.DEFAULT_PASS];
const devtoolsLog=artifacts.devtoolsLogs[Audit.DEFAULT_PASS];
const metricData={trace,devtoolsLog,settings:context.settings};
const scoreOptions=context.options[
context.settings.throttlingMethod=='provided'?
'provided':
'simulate'];


const{timing}=await ComputedTagLoadTime.request(metricData,context);
if(!(timing>0)){
const naAuditProduct=auditNotApplicable.NoTag;
naAuditProduct.runWarnings=[runWarning.NoTag];
return naAuditProduct;
}



return{
numericValue:timing*1e-3,
numericUnit:'millisecond',
score:Audit.computeLogNormalScore(
scoreOptions,
timing),

displayValue:str_(UIStrings.displayValue,{timeInMs:timing})};

}}

module.exports=TagLoadTime;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/tag-load-time.js");
},{"../computed/tag-load-time":143,"../messages/common-strings":144,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads/audits/viewport-ad-density":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{auditNotApplicable,auditError}=require('../messages/common-strings');
const{Audit}=require('lighthouse');
const{boxViewableArea}=require('../utils/geometry');
const{isAdIframe}=require('../utils/resource-classification');

const UIStrings={
title:'Ad density in initial viewport is within recommended range',
failureTitle:'Reduce ad density in initial viewport',
description:'The ads-to-content ratio inside the viewport can have an '+
'impact on user experience and ultimately user retention. The Better Ads '+
'Standard [recommends having an ad density below 30%]'+
'(https://www.betterads.org/mobile-ad-density-higher-than-30/). '+
'[Learn more]('+
'https://developers.google.com/publisher-ads-audits/reference/audits/viewport-ad-density'+
').',
displayValue:'{adDensity, number, percent} covered by ads'};


const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


class ViewportAdDensity extends Audit{




static get meta(){
return{
id:'viewport-ad-density',
title:str_(UIStrings.title),
failureTitle:str_(UIStrings.failureTitle),
description:str_(UIStrings.description),
requiredArtifacts:['ViewportDimensions','IFrameElements']};

}






static audit(artifacts){
const viewport=artifacts.ViewportDimensions;
const slots=artifacts.IFrameElements.filter(
slot=>isAdIframe(slot)&&
slot.clientRect.width*slot.clientRect.height>1);

if(!slots.length){
return auditNotApplicable.NoVisibleSlots;
}

const adArea=slots.reduce((sum,slot)=>
sum+boxViewableArea(slot.clientRect,viewport),0);

const viewArea=viewport.innerWidth*viewport.innerHeight;

if(viewArea<=0){
throw new Error(auditError.ViewportAreaZero);
}
if(adArea>viewArea){
throw new Error(auditError.AreaLargerThanViewport);
}
const adDensity=adArea/viewArea;
const score=adDensity>0.3?0:1;
return{
score,
numericValue:adArea/viewArea,
numericUnit:'unitless',
displayValue:str_(UIStrings.displayValue,{adDensity})};

}}


module.exports=ViewportAdDensity;
module.exports.UIStrings=UIStrings;

}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/audits/viewport-ad-density.js");
},{"../messages/common-strings":144,"../utils/geometry":148,"../utils/resource-classification":152,"lighthouse":62,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"lighthouse-plugin-publisher-ads":[function(require,module,exports){
(function(__filename){














const i18n=require('lighthouse/lighthouse-core/lib/i18n/i18n');
const{group}=require('./messages/common-strings');

const PLUGIN_PATH='lighthouse-plugin-publisher-ads';

const UIStrings={
categoryDescription:'A Lighthouse plugin to improve ad speed and overall quality that is targeted at sites using GPT or AdSense tag. '+
'[Learn more](https://developers.google.com/publisher-ads-audits/reference)'};

const str_=i18n.createMessageInstanceIdFn(__filename,UIStrings);


module.exports={
audits:[
{path:`${PLUGIN_PATH}/audits/ad-blocking-tasks`},
{path:`${PLUGIN_PATH}/audits/ad-render-blocking-resources`},
{path:`${PLUGIN_PATH}/audits/ad-request-critical-path`},
{path:`${PLUGIN_PATH}/audits/bid-request-from-page-start`},
{path:`${PLUGIN_PATH}/audits/ad-request-from-page-start`},
{path:`${PLUGIN_PATH}/audits/ad-top-of-viewport`},
{path:`${PLUGIN_PATH}/audits/ads-in-viewport`},
{path:`${PLUGIN_PATH}/audits/async-ad-tags`},
{path:`${PLUGIN_PATH}/audits/blocking-load-events`},
{path:`${PLUGIN_PATH}/audits/bottleneck-requests`},
{path:`${PLUGIN_PATH}/audits/duplicate-tags`},
{path:`${PLUGIN_PATH}/audits/first-ad-render`},
{path:`${PLUGIN_PATH}/audits/full-width-slots`},
{path:`${PLUGIN_PATH}/audits/gpt-bids-parallel`},
{path:`${PLUGIN_PATH}/audits/loads-gpt-from-sgdn`},
{path:`${PLUGIN_PATH}/audits/loads-ad-tag-over-https`},
{path:`${PLUGIN_PATH}/audits/script-injected-tags`},
{path:`${PLUGIN_PATH}/audits/serial-header-bidding`},
{path:`${PLUGIN_PATH}/audits/tag-load-time`},
{path:`${PLUGIN_PATH}/audits/viewport-ad-density`}],

groups:{
'metrics':{
title:group.Metrics},

'ads-performance':{
title:group.AdsPerformance},

'ads-best-practices':{
title:group.AdsBestPractices}},


category:{
title:'Publisher Ads',
description:str_(UIStrings.categoryDescription),
auditRefs:[

{id:'tag-load-time',weight:4,group:'metrics'},
{id:'bid-request-from-page-start',weight:4,group:'metrics'},
{id:'ad-request-from-page-start',weight:20,group:'metrics'},
{id:'first-ad-render',weight:10,group:'metrics'},

{id:'gpt-bids-parallel',weight:1,group:'ads-performance'},
{id:'serial-header-bidding',weight:1,group:'ads-performance'},
{id:'bottleneck-requests',weight:1,group:'ads-performance'},
{id:'script-injected-tags',weight:1,group:'ads-performance'},
{id:'blocking-load-events',weight:1,group:'ads-performance'},
{id:'ad-render-blocking-resources',weight:1,group:'ads-performance'},
{id:'ad-blocking-tasks',weight:1,group:'ads-performance'},
{id:'ad-request-critical-path',weight:1,group:'ads-performance'},

{id:'ads-in-viewport',weight:4,group:'ads-best-practices'},
{id:'async-ad-tags',weight:2,group:'ads-best-practices'},
{id:'loads-ad-tag-over-https',weight:1,group:'ads-best-practices'},
{id:'loads-gpt-from-sgdn',weight:4,group:'ads-best-practices'},
{id:'viewport-ad-density',weight:2,group:'ads-best-practices'},
{id:'ad-top-of-viewport',weight:2,group:'ads-best-practices'},
{id:'duplicate-tags',weight:1,group:'ads-best-practices'}]}};







Object.defineProperty(module.exports,'UIStrings',{
enumerable:false,
get:()=>UIStrings});


}).call(this,"/node_modules/lighthouse-plugin-publisher-ads/plugin.js");
},{"./messages/common-strings":144,"lighthouse/lighthouse-core/lib/i18n/i18n":77}],"url":[function(require,module,exports){





'use strict';







const Util=require('../report/html/renderer/util.js');

const allowedProtocols=[
'https:','http:','chrome:','chrome-extension:'];









function rewriteChromeInternalUrl(url){
if(!url||!url.startsWith('chrome://'))return url;


if(url.endsWith('/'))url=url.replace(/\/$/,'');
return url.replace(/^chrome:\/\/chrome\//,'chrome://');
}


class URLShim extends URL{




static isValid(url){
try{
new URL(url);
return true;
}catch(e){
return false;
}
}






static hostsMatch(urlA,urlB){
try{
return new URL(urlA).host===new URL(urlB).host;
}catch(e){
return false;
}
}






static originsMatch(urlA,urlB){
try{
return new URL(urlA).origin===new URL(urlB).origin;
}catch(e){
return false;
}
}





static getOrigin(url){
try{
const urlInfo=new URL(url);


return urlInfo.host&&urlInfo.origin||null;
}catch(e){
return null;
}
}







static rootDomainsMatch(urlA,urlB){
let urlAInfo;
let urlBInfo;
try{
urlAInfo=Util.createOrReturnURL(urlA);
urlBInfo=Util.createOrReturnURL(urlB);
}catch(err){
return false;
}

if(!urlAInfo.hostname||!urlBInfo.hostname){
return false;
}


const urlARootDomain=Util.getRootDomain(urlAInfo);
const urlBRootDomain=Util.getRootDomain(urlBInfo);

return urlARootDomain===urlBRootDomain;
}






static getURLDisplayName(url,options){
return Util.getURLDisplayName(new URL(url),options);
}






static elideDataURI(url){
try{
const parsed=new URL(url);
return parsed.protocol==='data:'?url.slice(0,100):url;
}catch(e){
return url;
}
}







static equalWithExcludedFragments(url1,url2){
[url1,url2]=[url1,url2].map(rewriteChromeInternalUrl);
try{
const urla=new URL(url1);
urla.hash='';

const urlb=new URL(url2);
urlb.hash='';

return urla.href===urlb.href;
}catch(e){
return false;
}
}






static isProtocolAllowed(url){
try{
const parsed=new URL(url);
return allowedProtocols.includes(parsed.protocol);
}catch(e){
return false;
}
}}


URLShim.URL=URL;

URLShim.NON_NETWORK_PROTOCOLS=['blob','data','intent'];

URLShim.INVALID_URL_DEBUG_STRING=
'Lighthouse was unable to determine the URL of some script executions. '+
'It\'s possible a Chrome extension or other eval\'d code is the source.';

module.exports=URLShim;

},{"../report/html/renderer/util.js":99}]},{},[1]);