ns               Testing dirac.tests.tasks.suite01.version-checks
extension        reset extension state
extension        set extension options:{:target-url "http://localhost:<port>"}
extension        set extension options:{:open-as "window"}
automate         open-scenario! ["old-runtime"]
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #1
devtools #1      implant initialized
devtools #1      setCurrentPanel: elements
devtools #1      devtools ready
automate #1      switch-to-console-panel!
devtools #1      setCurrentPanel: console
devtools #1      console initialized
devtools #1      adopt-prompt-element use-parinfer? true
devtools #1      setDiracPromptMode('status')
devtools #1      ConsoleView constructed
devtools #1      displayWelcomeMessage
automate #1      switch-prompt-to-dirac!
devtools #1      switched console prompt to 'dirac'
devtools #1      init-repl!
devtools #1      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #1      setDiracPromptStatusStyle('info')
scenario out     WARN: ("Version mismatch: Dirac Runtime installed in your app has different version **VERSION** than Dirac Chrome Extension **VERSION**.\nTo avoid compatibility issues, please upgrade all Dirac components to the same version: https://github.com/binaryage/dirac/blob/master/docs/upgrading.md.")
devtools #1      setDiracPromptStatusContent('Dirac Agent connected. Bootstrapping ClojureScript REPL...')
devtools #1      setDiracPromptNS('cljs.user')
devtools #1      setDiracPromptMode('edit')
automate #1      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #1
automate         close-scenario! ["scenario-tab#1"]
automate         open-scenario! ["future-runtime"]
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #2
devtools #2      implant initialized
devtools #2      setCurrentPanel: elements
devtools #2      devtools ready
automate #2      switch-to-console-panel!
devtools #2      setCurrentPanel: console
devtools #2      console initialized
devtools #2      adopt-prompt-element use-parinfer? true
devtools #2      setDiracPromptMode('status')
devtools #2      ConsoleView constructed
devtools #2      displayWelcomeMessage
automate #2      switch-prompt-to-dirac!
devtools #2      switched console prompt to 'dirac'
devtools #2      init-repl!
devtools #2      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #2      setDiracPromptStatusStyle('info')
scenario out     WARN: ("Version mismatch: Dirac Runtime installed in your app has different version **VERSION** than Dirac Chrome Extension **VERSION**.\nTo avoid compatibility issues, please upgrade all Dirac components to the same version: https://github.com/binaryage/dirac/blob/master/docs/upgrading.md.")
devtools #2      setDiracPromptStatusContent('Dirac Agent connected. Bootstrapping ClojureScript REPL...')
devtools #2      setDiracPromptNS('cljs.user')
devtools #2      setDiracPromptMode('edit')
automate #2      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #2
automate         close-scenario! ["scenario-tab#2"]
automate         open-scenario! ["normal-with-feedback"]
automate         open-devtools! [{"mock_old_extension_version" 1}]
extension        handling command: open-dirac-devtools
extension        register devtools #3
devtools #3      implant initialized
devtools #3      setCurrentPanel: elements
devtools #3      devtools ready
automate #3      switch-to-console-panel!
devtools #3      setCurrentPanel: console
devtools #3      console initialized
devtools #3      adopt-prompt-element use-parinfer? true
devtools #3      setDiracPromptMode('status')
devtools #3      ConsoleView constructed
devtools #3      displayWelcomeMessage
automate #3      switch-prompt-to-dirac!
devtools #3      switched console prompt to 'dirac'
devtools #3      init-repl!
devtools #3      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #3      setDiracPromptStatusStyle('info')
scenario out     WARN: ("Version mismatch: Dirac Runtime installed in your app has different version **VERSION** than Dirac Chrome Extension **VERSION**.\nTo avoid compatibility issues, please upgrade all Dirac components to the same version: https://github.com/binaryage/dirac/blob/master/docs/upgrading.md.")
devtools #3      setDiracPromptStatusContent('Dirac Agent connected. Bootstrapping ClojureScript REPL...')
scenario out     WARN: ("Version mismatch: Dirac Agent has a different version **VERSION** than Dirac Chrome Extension **VERSION**.\nTo avoid compatibility issues, please upgrade all Dirac components to the same version: https://github.com/binaryage/dirac/blob/master/docs/upgrading.md.")
devtools #3      setDiracPromptNS('cljs.user')
devtools #3      setDiracPromptMode('edit')
automate #3      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #3
automate         close-scenario! ["scenario-tab#3"]
automate         open-scenario! ["normal-with-feedback"]
automate         open-devtools! [{"mock_future_extension_version" 1}]
extension        handling command: open-dirac-devtools
extension        register devtools #4
devtools #4      implant initialized
devtools #4      setCurrentPanel: elements
devtools #4      devtools ready
automate #4      switch-to-console-panel!
devtools #4      setCurrentPanel: console
devtools #4      console initialized
devtools #4      adopt-prompt-element use-parinfer? true
devtools #4      setDiracPromptMode('status')
devtools #4      ConsoleView constructed
devtools #4      displayWelcomeMessage
automate #4      switch-prompt-to-dirac!
devtools #4      switched console prompt to 'dirac'
devtools #4      init-repl!
devtools #4      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #4      setDiracPromptStatusStyle('info')
scenario out     WARN: ("Version mismatch: Dirac Runtime installed in your app has different version **VERSION** than Dirac Chrome Extension **VERSION**.\nTo avoid compatibility issues, please upgrade all Dirac components to the same version: https://github.com/binaryage/dirac/blob/master/docs/upgrading.md.")
devtools #4      setDiracPromptStatusContent('Dirac Agent connected. Bootstrapping ClojureScript REPL...')
scenario out     WARN: ("Version mismatch: Dirac Agent has a different version **VERSION** than Dirac Chrome Extension **VERSION**.\nTo avoid compatibility issues, please upgrade all Dirac components to the same version: https://github.com/binaryage/dirac/blob/master/docs/upgrading.md.")
devtools #4      setDiracPromptNS('cljs.user')
devtools #4      setDiracPromptMode('edit')
automate #4      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #4
automate         close-scenario! ["scenario-tab#4"]
automate         open-scenario! ["old-repl-api"]
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #5
devtools #5      implant initialized
devtools #5      setCurrentPanel: elements
devtools #5      devtools ready
automate #5      switch-to-console-panel!
devtools #5      setCurrentPanel: console
devtools #5      console initialized
devtools #5      adopt-prompt-element use-parinfer? true
devtools #5      setDiracPromptMode('status')
devtools #5      ConsoleView constructed
devtools #5      displayWelcomeMessage
automate #5      switch-prompt-to-dirac!
devtools #5      switched console prompt to 'dirac'
devtools #5      init-repl!
devtools #5      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #5      setDiracPromptStatusStyle('info')
devtools #5      setDiracPromptStatusContent('Dirac REPL API version mismatch detected.
                 Dirac DevTools requires Dirac Runtime REPL API v9, but your version is v0.
                 Please <a href="https://github.com/binaryage/dirac/blob/master/docs/upgrading.md">upgrade Dirac Runtime</a> in your app.')
devtools #5      setDiracPromptStatusStyle('error')
automate #5      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #5
automate         close-scenario! ["scenario-tab#5"]
automate         open-scenario! ["future-repl-api"]
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #6
devtools #6      implant initialized
devtools #6      setCurrentPanel: elements
devtools #6      devtools ready
automate #6      switch-to-console-panel!
devtools #6      setCurrentPanel: console
devtools #6      console initialized
devtools #6      adopt-prompt-element use-parinfer? true
devtools #6      setDiracPromptMode('status')
devtools #6      ConsoleView constructed
devtools #6      displayWelcomeMessage
automate #6      switch-prompt-to-dirac!
devtools #6      switched console prompt to 'dirac'
devtools #6      init-repl!
devtools #6      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #6      setDiracPromptStatusStyle('info')
devtools #6      setDiracPromptStatusContent('Dirac REPL API version mismatch detected.
                 Dirac DevTools requires Dirac Runtime REPL API v9, but your version is v1000.
                 Please <a href="https://github.com/binaryage/dirac/blob/master/docs/upgrading.md">upgrade Dirac Runtime</a> in your app.')
devtools #6      setDiracPromptStatusStyle('error')
automate #6      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #6
automate         close-scenario! ["scenario-tab#6"]
automate         open-scenario! ["no-runtime"]
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #7
devtools #7      implant initialized
devtools #7      setCurrentPanel: elements
devtools #7      devtools ready
automate #7      switch-to-console-panel!
devtools #7      setCurrentPanel: console
devtools #7      console initialized
devtools #7      adopt-prompt-element use-parinfer? true
devtools #7      setDiracPromptMode('status')
devtools #7      ConsoleView constructed
devtools #7      displayWelcomeMessage
automate #7      switch-prompt-to-dirac!
devtools #7      switched console prompt to 'dirac'
devtools #7      init-repl!
devtools #7      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #7      setDiracPromptStatusStyle('info')
devtools #7      setDiracPromptStatusContent('Dirac requires runtime support from your app.
                 Please <a href="https://github.com/binaryage/dirac#installation">install Dirac Runtime</a> into your app and <a href="https://github.com/binaryage/dirac#install-dirac-runtime">enable the :repl feature</a>.')
devtools #7      setDiracPromptStatusStyle('error')
automate #7      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #7
automate         close-scenario! ["scenario-tab#7"]
automate         open-scenario! ["no-repl"]
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #8
devtools #8      implant initialized
devtools #8      setCurrentPanel: elements
devtools #8      devtools ready
automate #8      switch-to-console-panel!
devtools #8      setCurrentPanel: console
devtools #8      console initialized
devtools #8      adopt-prompt-element use-parinfer? true
devtools #8      setDiracPromptMode('status')
devtools #8      ConsoleView constructed
devtools #8      displayWelcomeMessage
automate #8      switch-prompt-to-dirac!
devtools #8      switched console prompt to 'dirac'
devtools #8      init-repl!
devtools #8      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #8      setDiracPromptStatusStyle('info')
devtools #8      setDiracPromptStatusContent('Dirac Runtime is present in your app but the :repl feature hasn't been enabled. Please <a href="https://github.com/binaryage/dirac/blob/master/docs/installation.md#install-the-dirac-runtime">install Dirac Runtime with REPL support</a>.')
devtools #8      setDiracPromptStatusStyle('error')
automate #8      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #8
automate         close-scenario! ["scenario-tab#8"]
summary          Automated 48 actions with 20 check-points containing 0 assertions.
                 0 failures, 0 errors.
