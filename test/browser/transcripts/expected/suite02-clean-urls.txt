ns               Testing dirac.tests.tasks.suite02.clean-urls
extension        reset extension state
extension        set extension options:{:target-url "http://localhost:<port>"}
extension        set extension options:{:open-as "window"}
automate         open-scenario! ["breakpoint"]
testing          enabled :clean-urls feature
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #1
devtools #1      implant initialized
devtools #1      setCurrentPanel: elements
devtools #1      devtools ready
devtools #1      namespacesCache is cool now
automate         trigger! [:pause-on-breakpoint]
devtools #1      setCurrentPanel: sources
automate #1      scrape! [:callstack-pane-locations]
stdout           displayed 34 items:
                  * core.cljs:<line> / core.cljs:<line>
                  * core.cljs:<line> / core.cljs:<line>
                  * breakpoint.cljs:<line> / breakpoint.cljs:<line>
                  * core.cljs:<line> / core.cljs:<line>
                  * core.cljs:<line> / core.cljs:<line>
                  * core.cljs:<line> / core.cljs:<line>
                  * scenario.cljs:<line> / scenario.cljs:<line>
                  * scenario.cljs:<line> / scenario.cljs:<line>
                  * notifications.cljs:<line> / notifications.cljs:<line>
                  * notifications.cljs:<line> / notifications.cljs:<line>
                  * page.cljs:<line> / page.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * ioc_helpers.cljs:<line> / ioc_helpers.cljs:<line>
                  * ioc_helpers.cljs:<line> / ioc_helpers.cljs:<line>
                  * ioc_helpers.cljs:<line> / ioc_helpers.cljs:<line>
                  * channels.cljs:<line> / channels.cljs:<line>
                  * dispatch.cljs:<line> / dispatch.cljs:<line>
                  * content_script.js.map:<line> / content_script.js.map:<line>
                  * content_script.js.map:<line> / content_script.js.map:<line>
                  * content_script.js.map:<line> / content_script.js.map:<line>
                  * dispatch.cljs:<line> / dispatch.cljs:<line>
                  * dispatch.cljs:<line> / dispatch.cljs:<line>
                  * channels.cljs:<line> / channels.cljs:<line>
                  * protocols.cljs:<line> / protocols.cljs:<line>
                  * async.cljs:<line> / async.cljs:<line>
                  * async.cljs:<line> / async.cljs:<line>
                  * chrome_port.cljs:<line> / chrome_port.cljs:<line>
                  * chrome_port_state.cljs:<line> / chrome_port_state.cljs:<line>
                  * defaults.cljs:<line> / defaults.cljs:<line>
automate #1      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #1
∎
automate         close-scenario! ["scenario-tab#1"]
automate         open-scenario! ["breakpoint"]
testing          disabled :clean-urls feature
automate         store-options!
automate         set-options! [{:clean-urls false}]
extension        set extension options:{:clean-urls false}
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #2
devtools #2      implant initialized
devtools #2      setCurrentPanel: elements
devtools #2      devtools ready
devtools #2      namespacesCache is cool now
automate         trigger! [:pause-on-breakpoint]
devtools #2      setCurrentPanel: sources
automate #2      scrape! [:callstack-pane-locations]
stdout           displayed 34 items:
                  * core.cljs?rel=*** / core.cljs?rel=***
                  * core.cljs?rel=*** / core.cljs?rel=***
                  * breakpoint.cljs…*** / breakpoint.cljs?rel=***
                  * core.cljs:<line> / core.cljs:<line>
                  * core.cljs:<line> / core.cljs:<line>
                  * core.cljs:<line> / core.cljs:<line>
                  * scenario.cljs?r…*** / scenario.cljs?rel=***
                  * scenario.cljs?r…*** / scenario.cljs?rel=***
                  * notifications.c…*** / notifications.cljs?rel=***
                  * notifications.c…*** / notifications.cljs?rel=***
                  * page.cljs:<line> / page.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * background.cljs:<line> / background.cljs:<line>
                  * ioc_helpers.cljs:<line> / ioc_helpers.cljs:<line>
                  * ioc_helpers.cljs:<line> / ioc_helpers.cljs:<line>
                  * ioc_helpers.cljs:<line> / ioc_helpers.cljs:<line>
                  * channels.cljs:<line> / channels.cljs:<line>
                  * dispatch.cljs:<line> / dispatch.cljs:<line>
                  * content_script.js.map:<line> / content_script.js.map:<line>
                  * content_script.js.map:<line> / content_script.js.map:<line>
                  * content_script.js.map:<line> / content_script.js.map:<line>
                  * dispatch.cljs:<line> / dispatch.cljs:<line>
                  * dispatch.cljs:<line> / dispatch.cljs:<line>
                  * channels.cljs:<line> / channels.cljs:<line>
                  * protocols.cljs:<line> / protocols.cljs:<line>
                  * async.cljs:<line> / async.cljs:<line>
                  * async.cljs:<line> / async.cljs:<line>
                  * chrome_port.cljs:<line> / chrome_port.cljs:<line>
                  * chrome_port_state.cljs:<line> / chrome_port_state.cljs:<line>
                  * defaults.cljs:<line> / defaults.cljs:<line>
automate #2      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #2
automate         restore-options!
extension        reset extension options:{:enable-clustered-locals true, :inline-custom-formatters true, :enable-parinfer true, :beautify-function-names true, :enable-friendly-locals true, :user-frontend-url-params nil, :clean-urls true, :enable-repl true, :welcome-message true, :open-as "window", :target-url "http://localhost:<port>", :link-actions true}
∎
automate         close-scenario! ["scenario-tab#2"]
summary          Automated 15 actions with 4 check-points containing 0 assertions.
                 0 failures, 0 errors.
