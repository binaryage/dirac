// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// There is way too much stuff Closure Compiler currently doesn't understand
// in JavaScript bindings auto-generated by wasm-bindgen, so we exclude them
// from compilation and redefine types manually here.

// This file is heavily inspired by the auto-generated wasm_source_map.d.ts,
// but needs to be updated manually when Rust is recompiled.

/* tslint:disable */
/* eslint-disable */
import { SourceMapEntry } from '../../SourceMap.js';

/**
*/
export class Resolver {
  free() {}
/**
* @param {Uint8Array} src
*/
  constructor(src) {}
/**
* @returns {!Array<string>}
*/
  listFiles() {}
/**
* @returns {!Array<SourceMapEntry>}
*/
  listMappings() {}
/**
* @param {number} addr
* @returns {?SourceMapEntry}
*/
  resolve(addr) {}
/**
* @param {string} file
* @param {number} line
* @param {number} column
* @returns {?SourceMapEntry}
*/
  resolveReverse(file, line, column) {}
}

/**
* If `module_or_path` is {RequestInfo} or {URL}, makes a request and
* for everything else, calls `WebAssembly.instantiate` directly.
*
* @param {*} module_or_path
*
* @returns {Promise<*>}
*/
export default function init (module_or_path) {}
