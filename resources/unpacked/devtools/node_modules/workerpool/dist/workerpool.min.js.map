{"version":3,"sources":["webpack://workerpool/webpack/universalModuleDefinition","webpack://workerpool/webpack/bootstrap","webpack://workerpool/./src/environment.js","webpack://workerpool/./src/Promise.js","webpack://workerpool/./src/requireFoolWebpack.js","webpack://workerpool/./src/index.js","webpack://workerpool/./src/Pool.js","webpack://workerpool/./src/WorkerHandler.js","webpack://workerpool/./src/generated/embeddedWorker.js","webpack://workerpool/./src/debug-port-allocator.js","webpack://workerpool/./src/worker.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requireFoolWebpack","isNode","nodeProcess","versions","node","platform","process","worker_threads","err","tryRequireFoolWebpack","isMainThread","connected","Window","cpus","navigator","hardwareConcurrency","length","Promise","handler","parent","me","SyntaxError","_onSuccess","_onFail","resolved","rejected","pending","_process","onSuccess","onFail","push","then","resolve","reject","_then","f","_resolve","result","forEach","fn","_reject","error","cancel","CancellationError","timeout","delay","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","message","stack","Error","all","promises","remaining","results","defer","resolver","promise","constructor","eval","environment","pool","script","options","worker","methods","add","WorkerHandler","DEBUG_PORT_ALLOCATOR","Pool","workers","tasks","forkArgs","forkOpts","debugPortStart","nodeWorker","workerType","maxQueueSize","Infinity","maxWorkers","isNumber","isInteger","TypeError","validateMaxWorkers","Math","max","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","ensureWorkerThreads","round","exec","method","params","Array","isArray","task","originalTimeout","indexOf","String","proxy","arguments","slice","_getWorker","shift","catch","terminated","_removeWorker","busy","_createWorkerHandler","releasePort","debugPort","terminate","_removeWorkerFromList","index","splice","force","removeWorker","termPromise","terminateAndNotify","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","nextAvailableStartingAt","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","code","setupBrowserWorker","isBrowserWorker","on","event","addEventListener","data","send","postMessage","setupWorkerThreadWorker","stdout","stderr","isWorkerThread","kill","disconnect","setupProcessWorker","child_process","fork","isChildProcess","resolveForkOptions","opts","processExecArgv","execArgv","join","inspectorActive","debugBrk","arg","assign","concat","_options","onError","id","terminating","terminationHandler","processing","undefined","Blob","window","URL","createObjectURL","blob","type","__dirname","getDefaultWorker","setupWorker","ready","requestQueue","response","obj","temp","props","keys","objectToError","exitCode","signalCode","spawnargs","spawnfile","lastId","request","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","DebugPortAllocator","ports","starting","port","parentPort","exit","convertError","getOwnPropertyNames","reduce","product","isPromise","run","args","apply","register"],"mappings":"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","file":"workerpool.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"workerpool\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"workerpool\"] = factory();\n\telse\n\t\troot[\"workerpool\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","var requireFoolWebpack = require('./requireFoolWebpack');\n\n// source: https://github.com/flexdinesh/browser-or-node\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = tryRequireFoolWebpack('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : requireFoolWebpack('os').cpus().length;\n\nfunction tryRequireFoolWebpack (module) {\n  try {\n    return requireFoolWebpack(module);\n  } catch(err) {\n    return null\n  }\n}\n","'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n *\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  this.resolved = false;\n  this.rejected = false;\n  this.pending = true;\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolve, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @param {Function} onSuccess\n   * @param {Function} [onFail]\n   * @returns {Promise} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel te promise. This will reject the promise with a CancellationError\n   * @returns {Promise} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {Promise} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @param {Function} onFail\n * @returns {Promise} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @param {Function} fn\n * @returns {Promise} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nmodule.exports = Promise;\n","// source of inspiration: https://github.com/sindresorhus/require-fool-webpack\nvar requireFoolWebpack = eval(\n    'typeof require !== \\'undefined\\' ' +\n    '? require ' +\n    ': function (module) { throw new Error(\\'Module \" + module + \" not found.\\') }'\n);\n\nmodule.exports = requireFoolWebpack;\n","var environment = require('./environment');\n\n/**\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nexports.pool = function pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {Object} [methods]\n */\nexports.worker = function worker(methods) {\n  var worker = require('./worker');\n  worker.add(methods);\n};\n\n/**\n * Create a promise.\n * @type {Promise} promise\n */\nexports.Promise = require('./Promise');\n\nexports.platform = environment.platform;\nexports.isMainThread = environment.isMainThread;\nexports.cpus = environment.cpus;","var Promise = require('./Promise');\nvar WorkerHandler = require('./WorkerHandler');\nvar environment = require('./environment');\nvar DebugPortAllocator = require('./debug-port-allocator');\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers\n * @param {String} [script]   Optional worker script\n * @param {WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    this.script = script || null;\n  }\n  else {\n    this.script = null;\n    options = script;\n  }\n\n  this.workers = [];  // queue with all workers\n  this.tasks = [];    // queue with tasks awaiting execution\n\n  options = options || {};\n\n  this.forkArgs = options.forkArgs || [];\n  this.forkOpts = options.forkOpts || {};\n  this.debugPortStart = (options.debugPortStart || 43210);\n  this.nodeWorker = options.nodeWorker;\n  this.workerType = options.workerType || options.nodeWorker || 'auto'\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n\n  // configuration\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    this.maxWorkers = options.maxWorkers;\n  }\n  else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if(options.minWorkers === 'max') {\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers);     // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  this._boundNext = this._next.bind(this);\n\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n *\n * @param {String | Function} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Array} [params]  Function arguments applied when calling the function\n * @return {Promise.<*, Error>} result\n */\nPool.prototype.exec = function (method, params) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    }\n\n    // add a new task to the queue\n    var tasks = this.tasks;\n    var task = {\n      method:  method,\n      params:  params,\n      resolver: resolver,\n      timeout: null\n    };\n    tasks.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    var originalTimeout = resolver.promise.timeout;\n    resolver.promise.timeout = function timeout (delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      }\n      else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  }\n  else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params]);\n  }\n  else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. The methods always return a promise.\n *\n * @return {Promise.<Object, Error>} proxy\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods')\n      .then(function (methods) {\n        var proxy = {};\n\n        methods.forEach(function (method) {\n          proxy[method] = function () {\n            return pool.exec(method, Array.prototype.slice.call(arguments));\n          }\n        });\n\n        return proxy;\n      });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @protected\n */\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              me._removeWorker(worker);\n              // If minWorkers set, spin up new workers to replace the crashed ones\n              me._ensureMinWorkers();\n            }\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function() {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool. For example after a worker terminated for\n * whatever reason\n * @param {WorkerHandler} worker\n * @protected\n */\nPool.prototype._removeWorker = function(worker) {\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort)\n  // terminate the worker (if not already terminated)\n  worker.terminate();\n  this._removeWorkerFromList(worker);\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @protected\n */\nPool.prototype._removeWorkerFromList = function(worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function (worker) {\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout)\n      .then(removeWorker);\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers:  totalWorkers,\n    busyWorkers:   busyWorkers,\n    idleWorkers:   totalWorkers - busyWorkers,\n\n    pendingTasks:  this.tasks.length,\n    activeTasks:   busyWorkers\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @protected\n */\nPool.prototype._ensureMinWorkers = function() {\n  if (this.minWorkers) {\n    for(var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  return new WorkerHandler(this.script, {\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType\n  });\n}\n\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","'use strict';\n\nvar Promise = require('./Promise');\nvar environment = require('./environment');\nvar requireFoolWebpack = require('./requireFoolWebpack');\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return requireFoolWebpack('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), requireFoolWebpack('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), requireFoolWebpack('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, Worker) {\n  // create the web worker\n  var worker = new Worker(script);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message) {\n    this.postMessage(message);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads) {\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: false, // automatically pipe worker.STDOUT to process.STDOUT\n    stderr: false  // automatically pipe worker.STDERR to process.STDERR\n  });\n  worker.isWorkerThread = true;\n  // make the worker mimic a child_process\n  worker.send = function(message) {\n    this.postMessage(message);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv)\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {WorkerPoolOptions} _options See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n  this.worker.on('message', function (response) {\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n        // remove the task from the queue\n        delete me.processing[id];\n\n        // test if we need to terminate\n        if (me.terminating === true) {\n          // complete worker termination if all tasks are finished\n          me.terminate();\n        }\n\n        // resolve the task's promise\n        if (response.error) {\n          task.resolver.reject(objectToError(response.error));\n        }\n        else {\n          task.resolver.resolve(response.result);\n        }\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n    if (me.terminating && me.terminationHandler) {\n      me.terminationHandler(me);\n    }\n    me.terminating = false;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    me.requestQueue.forEach(me.worker.send.bind(me.worker));\n    me.requestQueue = [];\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error', onError);\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new Error(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n\n  this.terminating = false;\n  this.terminated = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    id: id,\n    method: method,\n    params: params\n  };\n\n  if (this.terminated) {\n    resolver.reject(new Error('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  resolver.promise\n    .catch(function (error) {\n      if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n        // remove this task from the queue. It is already rejected (hence this\n        // catch event), and else it will be rejected again when terminating\n        delete me.processing[id];\n\n        // terminate worker\n        me.terminate(true);\n      } else {\n        throw error;\n      }\n    });\n\n  return resolver.promise;\n};\n\n/**\n * Test whether the worker is working or not\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n    this.processing = Object.create(null);\n  }\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        this.worker.kill();  // child process\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n      this.worker = null;\n    }\n    this.terminating = false;\n    this.terminated = true;\n    if (this.terminationHandler) {\n      this.terminationHandler(this);\n    }\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout = timeout;\n  }\n  this.terminate(force, function(worker) {\n    resolver.resolve(worker);\n  });\n  return resolver.promise;\n};\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\n","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(o){var n={};function t(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return o[e].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=o,t.c=n,t.d=function(e,r,o){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:o})},t.r=function(e){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},t.t=function(r,e){if(1&e&&(r=t(r)),8&e)return r;if(4&e&&\\\"object\\\"==typeof r&&r&&r.__esModule)return r;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,\\\"default\\\",{enumerable:!0,value:r}),2&e&&\\\"string\\\"!=typeof r)for(var n in r)t.d(o,n,function(e){return r[e]}.bind(null,n));return o},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\\\"a\\\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\\\"\\\",t(t.s=0)}([function(module,exports,__webpack_require__){var requireFoolWebpack=eval(\\\"typeof require !== 'undefined' ? require : function (module) { throw new Error('Module \\\\\\\" + module + \\\\\\\" not found.') }\\\"),worker={},WorkerThreads,parentPort;if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)worker.on=function(e,r){addEventListener(e,function(e){r(e.data)})},worker.send=function(e){postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");try{WorkerThreads=requireFoolWebpack(\\\"worker_threads\\\")}catch(e){if(\\\"object\\\"!=typeof e||null===e||\\\"MODULE_NOT_FOUND\\\"!==e.code)throw e}WorkerThreads&&null!==WorkerThreads.parentPort?(parentPort=WorkerThreads.parentPort,worker.send=parentPort.postMessage.bind(parentPort),worker.on=parentPort.on.bind(parentPort)):(worker.on=process.on.bind(process),worker.send=process.send.bind(process),worker.on(\\\"disconnect\\\",function(){process.exit(1)}))}function convertError(o){return Object.getOwnPropertyNames(o).reduce(function(e,r){return Object.defineProperty(e,r,{value:o[r],enumerable:!0})},{})}function isPromise(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}worker.methods={},worker.methods.run=function run(fn,args){var f=eval(\\\"(\\\"+fn+\\\")\\\");return f.apply(f,args)},worker.methods.methods=function(){return Object.keys(worker.methods)},worker.on(\\\"message\\\",function(r){try{var e=worker.methods[r.method];if(!e)throw new Error('Unknown method \\\"'+r.method+'\\\"');var o=e.apply(e,r.params);isPromise(o)?o.then(function(e){worker.send({id:r.id,result:e,error:null})}).catch(function(e){worker.send({id:r.id,result:null,error:convertError(e)})}):worker.send({id:r.id,result:o,error:null})}catch(e){worker.send({id:r.id,result:null,error:convertError(e)})}}),worker.register=function(e){if(e)for(var r in e)e.hasOwnProperty(r)&&(worker.methods[r]=e[r]);worker.send(\\\"ready\\\")},exports.add=worker.register}]);\";\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\n\n// source of inspiration: https://github.com/sindresorhus/require-fool-webpack\nvar requireFoolWebpack = eval(\n    'typeof require !== \\'undefined\\'' +\n    ' ? require' +\n    ' : function (module) { throw new Error(\\'Module \" + module + \" not found.\\') }'\n);\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {};\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message) {\n    postMessage(message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = requireFoolWebpack('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n  } else {\n    worker.on = process.on.bind(process);\n    worker.send = process.send.bind(process);\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  return Object.getOwnPropertyNames(error).reduce(function(product, name) {\n    return Object.defineProperty(product, name, {\n\tvalue: error[name],\n\tenumerable: true\n    });\n  }, {});\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = eval('(' + fn + ')');\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\nworker.on('message', function (request) {\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              worker.send({\n                id: request.id,\n                result: result,\n                error: null\n              });\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err)\n              });\n            });\n      }\n      else {\n        // immediate result\n        worker.send({\n          id: request.id,\n          result: result,\n          error: null\n        });\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} methods\n */\nworker.register = function (methods) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n      }\n    }\n  }\n\n  worker.send('ready');\n\n};\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n}\n"],"sourceRoot":""}