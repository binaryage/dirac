/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
declare type Platform = 'linux' | 'mac' | 'win32' | 'win64';
export interface BrowserFetcherOptions {
    platform?: Platform;
    product?: string;
    path?: string;
    host?: string;
}
interface BrowserFetcherRevisionInfo {
    folderPath: string;
    executablePath: string;
    url: string;
    local: boolean;
    revision: string;
    product: string;
}
/**
 */
export declare class BrowserFetcher {
    private _product;
    private _downloadsFolder;
    private _downloadHost;
    private _platform;
    constructor(projectRoot: string, options?: BrowserFetcherOptions);
    private setPlatform;
    platform(): string;
    product(): string;
    host(): string;
    canDownload(revision: string): Promise<boolean>;
    /**
     * @param {string} revision
     * @param {?function(number, number):void} progressCallback
     * @returns {!Promise<!BrowserFetcher.RevisionInfo>}
     */
    download(revision: string, progressCallback: (x: number, y: number) => void): Promise<BrowserFetcherRevisionInfo>;
    localRevisions(): Promise<string[]>;
    remove(revision: string): Promise<void>;
    revisionInfo(revision: string): BrowserFetcherRevisionInfo;
    /**
     * @param {string} revision
     * @returns {string}
     */
    _getFolderPath(revision: string): string;
}
export {};
//# sourceMappingURL=BrowserFetcher.d.ts.map