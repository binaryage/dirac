/**
 * Copyright 2019 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Page } from './Page';
import { WebWorker } from './WebWorker';
import { CDPSession } from './Connection';
import { Browser, BrowserContext } from './Browser';
import { Viewport } from './PuppeteerViewport';
import Protocol from './protocol';
export declare class Target {
    _targetInfo: Protocol.Target.TargetInfo;
    _browserContext: BrowserContext;
    _targetId: string;
    _sessionFactory: () => Promise<CDPSession>;
    _ignoreHTTPSErrors: boolean;
    _defaultViewport?: Viewport;
    _pagePromise?: Promise<Page>;
    _workerPromise?: Promise<WebWorker>;
    _initializedPromise: Promise<boolean>;
    _initializedCallback: (x: boolean) => void;
    _isClosedPromise: Promise<boolean>;
    _closedCallback: () => void;
    _isInitialized: boolean;
    constructor(targetInfo: Protocol.Target.TargetInfo, browserContext: BrowserContext, sessionFactory: () => Promise<CDPSession>, ignoreHTTPSErrors: boolean, defaultViewport: Viewport | null);
    createCDPSession(): Promise<CDPSession>;
    page(): Promise<Page | null>;
    worker(): Promise<WebWorker | null>;
    url(): string;
    type(): 'page' | 'background_page' | 'service_worker' | 'shared_worker' | 'other' | 'browser' | 'webview';
    browser(): Browser;
    browserContext(): BrowserContext;
    opener(): Target | null;
    _targetInfoChanged(targetInfo: Protocol.Target.TargetInfo): void;
}
//# sourceMappingURL=Target.d.ts.map